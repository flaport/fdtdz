//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31833905
// Cuda compilation tools, release 11.8, V11.8.89
// Based on NVVM 7.0.1
//

.version 7.8
.target sm_75
.address_size 64

	// .globl	_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE
.global .align 4 .b8 _ZZN4cuda3std3__48__detail21__stronger_order_cudaEiiE7__xform[16] = {3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE[24] = {254, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllJE[20] = {254, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllKE[8] = {0, 0, 0, 0, 1, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond6AllEhcE[12] = {0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond6AllXyzE[12] = {0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.extern .shared .align 16 .b8 _ZN6kernel5shmemE[];

.visible .entry _ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE(
	.param .align 8 .b8 _ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0[168]
)
{
	.reg .pred 	%p<410>;
	.reg .f32 	%f<412>;
	.reg .b32 	%r<2691>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<549>;


	mov.b64 	%rd43, _ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0;
	mov.u64 	%rd1, %rd43;
	ld.param.v2.u32 	{%r912, %r913}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0];
	ld.param.v2.u32 	{%r914, %r915}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+8];
	ld.param.v2.u32 	{%r916, %r917}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+16];
	ld.param.v2.u32 	{%r918, %r919}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+24];
	ld.param.v2.u32 	{%r920, %r921}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+32];
	ld.param.v2.u32 	{%r922, %r923}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+40];
	ld.param.v2.u32 	{%r924, %r925}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+48];
	ld.param.v2.u32 	{%r926, %r927}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+56];
	ld.param.v2.u32 	{%r928, %r929}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+64];
	ld.param.v2.u32 	{%r930, %r931}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+72];
	mov.u32 	%r34, %tid.y;
	mov.u32 	%r35, %tid.z;
	mov.u32 	%r36, %ctaid.y;
	mov.u32 	%r37, %ctaid.z;
	mov.u32 	%r932, 32;
	sub.s32 	%r38, %r932, %r919;
	mov.u32 	%r39, %tid.x;
	setp.le.s32 	%p17, %r38, %r39;
	add.s32 	%r933, %r925, -1;
	add.s32 	%r934, %r923, %r917;
	add.s32 	%r935, %r934, %r918;
	add.s32 	%r936, %r935, 1;
	mad.lo.s32 	%r937, %r933, %r924, %r936;
	mul.lo.s32 	%r938, %r912, %r914;
	shl.b32 	%r40, %r938, 1;
	shl.b32 	%r939, %r938, 2;
	div.s32 	%r940, %r937, %r939;
	add.s32 	%r941, %r940, 1;
	mul.lo.s32 	%r942, %r941, %r918;
	mul.lo.s32 	%r943, %r913, %r915;
	shl.b32 	%r41, %r943, 1;
	div.s32 	%r944, %r942, %r41;
	add.s32 	%r945, %r944, 1;
	mul.lo.s32 	%r42, %r945, %r917;
	ld.param.u64 	%rd44, [%rd1+160];
	cvta.to.global.u64 	%rd2, %rd44;
	mad.lo.s32 	%r948, %r914, %r37, %r36;
	mad.lo.s32 	%r949, %r948, %r913, %r35;
	mad.lo.s32 	%r950, %r949, %r912, %r34;
	shl.b32 	%r43, %r950, 5;
	add.s32 	%r2315, %r43, %r39;
	mul.lo.s32 	%r951, %r943, %r938;
	shl.b32 	%r47, %r951, 5;
	sub.s32 	%r48, %r927, %r926;
	mul.lo.s32 	%r952, %r925, %r48;
	sub.s32 	%r49, %r929, %r928;
	mul.lo.s32 	%r953, %r952, %r49;
	sub.s32 	%r50, %r931, %r930;
	mul.lo.s32 	%r954, %r953, %r50;
	mul.lo.s32 	%r51, %r954, 3;
	setp.ge.s32 	%p18, %r2315, %r51;
	@%p18 bra 	$L__BB0_9;

	not.b32 	%r955, %r39;
	add.s32 	%r956, %r51, %r955;
	sub.s32 	%r957, %r956, %r43;
	mul.lo.s32 	%r958, %r943, %r912;
	mul.lo.s32 	%r959, %r958, %r914;
	shl.b32 	%r960, %r959, 5;
	div.u32 	%r52, %r957, %r960;
	add.s32 	%r961, %r52, 1;
	and.b32  	%r2312, %r961, 3;
	setp.eq.s32 	%p19, %r2312, 0;
	mov.u32 	%r2313, %r2315;
	@%p19 bra 	$L__BB0_6;

	mov.u32 	%r2313, %r2315;

$L__BB0_5:
	.pragma "nounroll";
	mul.wide.s32 	%rd45, %r2313, 4;
	add.s64 	%rd46, %rd2, %rd45;
	mov.u32 	%r962, 0;
	st.global.u32 	[%rd46], %r962;
	add.s32 	%r2313, %r2313, %r47;
	add.s32 	%r2312, %r2312, -1;
	setp.ne.s32 	%p20, %r2312, 0;
	@%p20 bra 	$L__BB0_5;

$L__BB0_6:
	setp.lt.u32 	%p21, %r52, 3;
	@%p21 bra 	$L__BB0_9;

	mul.wide.s32 	%rd49, %r47, 4;

$L__BB0_8:
	mul.wide.s32 	%rd47, %r2313, 4;
	add.s64 	%rd48, %rd2, %rd47;
	mov.u32 	%r963, 0;
	st.global.u32 	[%rd48], %r963;
	add.s64 	%rd50, %rd48, %rd49;
	st.global.u32 	[%rd50], %r963;
	add.s32 	%r964, %r2313, %r47;
	add.s32 	%r965, %r964, %r47;
	add.s64 	%rd51, %rd50, %rd49;
	st.global.u32 	[%rd51], %r963;
	add.s32 	%r966, %r965, %r47;
	add.s64 	%rd52, %rd51, %rd49;
	st.global.u32 	[%rd52], %r963;
	add.s32 	%r2313, %r966, %r47;
	setp.lt.s32 	%p22, %r2313, %r51;
	@%p22 bra 	$L__BB0_8;

$L__BB0_9:
	ld.param.u64 	%rd53, [%rd1+80];
	cvta.to.global.u64 	%rd3, %rd53;
	sub.s32 	%r967, %r918, %r40;
	div.s32 	%r968, %r967, %r41;
	mul.lo.s32 	%r969, %r968, %r917;
	sub.s32 	%r61, %r969, %r40;
	sub.s32 	%r970, %r917, %r41;
	mul.lo.s32 	%r971, %r970, %r914;
	mul.lo.s32 	%r62, %r912, 384;
	add.s32 	%r972, %r62, %r62;
	add.s32 	%r973, %r972, 128;
	mul.lo.s32 	%r975, %r943, 768;
	mul.lo.s32 	%r976, %r971, %r973;
	mad.lo.s32 	%r63, %r975, %r61, %r976;
	bra.uni 	$L__BB0_10;

$L__BB0_631:
	mov.f32 	%f411, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f411;
  cvt.rn.f16.f32 high, %f411;
  mov.b32 %r2285, {low,high};}

	// end inline asm
	mul.wide.s32 	%rd538, %r2315, 4;
	add.s64 	%rd539, %rd3, %rd538;
	st.global.u32 	[%rd539], %r2285;
	add.s32 	%r2315, %r2315, %r47;

$L__BB0_10:
	setp.lt.s32 	%p23, %r2315, %r63;
	@%p23 bra 	$L__BB0_631;

	ld.param.u64 	%rd54, [%rd1+120];
	cvta.to.global.u64 	%rd5, %rd54;
	ld.param.u64 	%rd55, [%rd1+88];
	cvta.to.global.u64 	%rd6, %rd55;
	mad.lo.s32 	%r2353, %r912, %r36, %r34;
	mul.lo.s32 	%r68, %r913, %r37;
	add.s32 	%r69, %r68, %r35;
	setp.ge.s32 	%p24, %r2353, %r917;
	@%p24 bra 	$L__BB0_49;

	setp.gt.s32 	%p25, %r38, %r39;
	add.s32 	%r70, %r917, -4;
	add.s32 	%r71, %r918, -4;
	mov.u32 	%r977, 31;
	sub.s32 	%r978, %r977, %r39;
	selp.b32 	%r979, %r39, %r978, %p25;
	shl.b32 	%r980, %r979, 2;
	mov.u32 	%r981, 2;
	sub.s32 	%r72, %r980, %r920;
	shl.b32 	%r982, %r919, 2;
	mov.u32 	%r983, 128;
	sub.s32 	%r73, %r983, %r982;
	add.s32 	%r74, %r927, -1;
	add.s32 	%r75, %r929, -1;
	add.s32 	%r76, %r931, -1;
	sub.s32 	%r984, %r981, %r920;
	add.s32 	%r77, %r984, %r980;
	mul.lo.s32 	%r985, %r918, %r917;
	shl.b32 	%r78, %r985, 6;
	add.s32 	%r79, %r917, -1;
	shl.b32 	%r80, %r39, 1;
	or.b32  	%r81, %r80, 1;
	add.s32 	%r82, %r72, 1;
	add.s32 	%r83, %r77, 1;
	shr.u32 	%r986, %r81, 31;
	add.s32 	%r987, %r81, %r986;
	shr.s32 	%r85, %r987, 1;
	and.b32  	%r988, %r987, -2;
	sub.s32 	%r989, %r81, %r988;
	add.s32 	%r84, %r989, %r78;
	mov.u32 	%r2316, %r2353;

$L__BB0_13:
	setp.ge.s32 	%p26, %r69, %r918;
	@%p26 bra 	$L__BB0_48;

	setp.lt.s32 	%p27, %r2316, 4;
	setp.ge.s32 	%p28, %r2316, %r70;
	or.pred  	%p1, %p27, %p28;
	setp.gt.s32 	%p29, %r927, %r2316;
	selp.b32 	%r990, %r2316, %r74, %p29;
	setp.gt.s32 	%p30, %r926, %r2316;
	selp.b32 	%r991, %r926, %r990, %p30;
	sub.s32 	%r992, %r991, %r926;
	add.s32 	%r87, %r79, %r2316;
	mul.lo.s32 	%r88, %r992, %r49;
	add.s32 	%r993, %r992, %r48;
	mul.lo.s32 	%r89, %r993, %r49;
	add.s32 	%r994, %r993, %r48;
	mul.lo.s32 	%r90, %r994, %r49;
	mov.u32 	%r2317, %r69;

$L__BB0_15:
	setp.lt.s32 	%p31, %r2317, 4;
	or.pred  	%p32, %p1, %p31;
	setp.ge.s32 	%p33, %r2317, %r71;
	or.pred  	%p2, %p33, %p32;
	setp.gt.s32 	%p34, %r929, %r2317;
	selp.b32 	%r995, %r2317, %r75, %p34;
	setp.gt.s32 	%p35, %r928, %r2317;
	selp.b32 	%r996, %r928, %r995, %p35;
	mul.lo.s32 	%r92, %r2317, %r917;
	add.s32 	%r93, %r92, %r2316;
	shl.b32 	%r94, %r93, 6;
	sub.s32 	%r95, %r996, %r928;
	shl.b32 	%r997, %r93, 5;
	add.s32 	%r998, %r997, %r39;
	shl.b32 	%r999, %r998, 2;
	add.s32 	%r1000, %r78, %r999;
	mul.wide.s32 	%rd56, %r1000, 4;
	add.s64 	%rd7, %rd6, %rd56;
	@%p2 bra 	$L__BB0_19;
	bra.uni 	$L__BB0_16;

$L__BB0_19:
	mov.f32 	%f43, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f43;
  cvt.rn.f16.f32 high, %f43;
  mov.b32 %r1018, {low,high};}

	// end inline asm
	st.global.u32 	[%rd7], %r1018;
	bra.uni 	$L__BB0_20;

$L__BB0_16:
	@%p25 bra 	$L__BB0_18;
	bra.uni 	$L__BB0_17;

$L__BB0_18:
	rem.s32 	%r1003, %r72, %r73;
	add.s32 	%r1004, %r1003, %r73;
	rem.s32 	%r1005, %r1004, %r73;
	rem.s32 	%r1006, %r77, %r73;
	add.s32 	%r1007, %r1006, %r73;
	rem.s32 	%r1008, %r1007, %r73;
	add.s32 	%r1009, %r95, %r88;
	mul.lo.s32 	%r1010, %r1009, %r50;
	sub.s32 	%r1011, %r1010, %r930;
	setp.gt.s32 	%p37, %r931, %r1005;
	selp.b32 	%r1012, %r1005, %r76, %p37;
	setp.gt.s32 	%p38, %r930, %r1005;
	selp.b32 	%r1013, %r930, %r1012, %p38;
	add.s32 	%r1014, %r1011, %r1013;
	mul.wide.s32 	%rd57, %r1014, 4;
	add.s64 	%rd58, %rd5, %rd57;
	ld.global.f32 	%f40, [%rd58];
	setp.gt.s32 	%p39, %r931, %r1008;
	selp.b32 	%r1015, %r1008, %r76, %p39;
	setp.gt.s32 	%p40, %r930, %r1008;
	selp.b32 	%r1016, %r930, %r1015, %p40;
	add.s32 	%r1017, %r1011, %r1016;
	mul.wide.s32 	%rd59, %r1017, 4;
	add.s64 	%rd60, %rd5, %rd59;
	ld.global.f32 	%f41, [%rd60];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f40;
  cvt.rn.f16.f32 high, %f41;
  mov.b32 %r1002, {low,high};}

	// end inline asm
	st.global.u32 	[%rd7], %r1002;
	bra.uni 	$L__BB0_20;

$L__BB0_17:
	mov.f32 	%f39, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f39;
  cvt.rn.f16.f32 high, %f39;
  mov.b32 %r1001, {low,high};}

	// end inline asm
	st.global.u32 	[%rd7], %r1001;

$L__BB0_20:
	add.s32 	%r1019, %r80, %r94;
	mul.wide.s32 	%rd61, %r1019, 4;
	add.s64 	%rd8, %rd6, %rd61;
	@%p2 bra 	$L__BB0_24;
	bra.uni 	$L__BB0_21;

$L__BB0_24:
	mov.f32 	%f49, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f49;
  cvt.rn.f16.f32 high, %f49;
  mov.b32 %r1037, {low,high};}

	// end inline asm
	st.global.u32 	[%rd8], %r1037;
	bra.uni 	$L__BB0_25;

$L__BB0_21:
	@%p25 bra 	$L__BB0_23;
	bra.uni 	$L__BB0_22;

$L__BB0_23:
	rem.s32 	%r1022, %r72, %r73;
	add.s32 	%r1023, %r1022, %r73;
	rem.s32 	%r1024, %r1023, %r73;
	rem.s32 	%r1025, %r77, %r73;
	add.s32 	%r1026, %r1025, %r73;
	rem.s32 	%r1027, %r1026, %r73;
	add.s32 	%r1028, %r95, %r89;
	mul.lo.s32 	%r1029, %r1028, %r50;
	sub.s32 	%r1030, %r1029, %r930;
	setp.gt.s32 	%p42, %r931, %r1024;
	selp.b32 	%r1031, %r1024, %r76, %p42;
	setp.gt.s32 	%p43, %r930, %r1024;
	selp.b32 	%r1032, %r930, %r1031, %p43;
	add.s32 	%r1033, %r1030, %r1032;
	mul.wide.s32 	%rd62, %r1033, 4;
	add.s64 	%rd63, %rd5, %rd62;
	ld.global.f32 	%f46, [%rd63];
	setp.gt.s32 	%p44, %r931, %r1027;
	selp.b32 	%r1034, %r1027, %r76, %p44;
	setp.gt.s32 	%p45, %r930, %r1027;
	selp.b32 	%r1035, %r930, %r1034, %p45;
	add.s32 	%r1036, %r1030, %r1035;
	mul.wide.s32 	%rd64, %r1036, 4;
	add.s64 	%rd65, %rd5, %rd64;
	ld.global.f32 	%f47, [%rd65];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f46;
  cvt.rn.f16.f32 high, %f47;
  mov.b32 %r1021, {low,high};}

	// end inline asm
	st.global.u32 	[%rd8], %r1021;
	bra.uni 	$L__BB0_25;

$L__BB0_22:
	mov.f32 	%f45, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f45;
  cvt.rn.f16.f32 high, %f45;
  mov.b32 %r1020, {low,high};}

	// end inline asm
	st.global.u32 	[%rd8], %r1020;

$L__BB0_25:
	@%p2 bra 	$L__BB0_30;
	bra.uni 	$L__BB0_26;

$L__BB0_30:
	mov.f32 	%f55, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f55;
  cvt.rn.f16.f32 high, %f55;
  mov.b32 %r1062, {low,high};}

	// end inline asm
	rem.s32 	%r1063, %r87, %r917;
	add.s32 	%r1064, %r1063, %r92;
	shl.b32 	%r1065, %r1064, 5;
	add.s32 	%r1066, %r1065, %r39;
	shl.b32 	%r1067, %r1066, 2;
	add.s32 	%r1068, %r78, %r1067;
	add.s32 	%r1069, %r1068, 2;
	mul.wide.s32 	%rd72, %r1069, 4;
	add.s64 	%rd73, %rd6, %rd72;
	st.global.u32 	[%rd73], %r1062;
	bra.uni 	$L__BB0_31;

$L__BB0_26:
	@%p25 bra 	$L__BB0_28;
	bra.uni 	$L__BB0_27;

$L__BB0_28:
	rem.s32 	%r1040, %r72, %r73;
	add.s32 	%r1041, %r1040, %r73;
	rem.s32 	%r1042, %r1041, %r73;
	rem.s32 	%r1043, %r77, %r73;
	add.s32 	%r1044, %r1043, %r73;
	rem.s32 	%r1045, %r1044, %r73;
	add.s32 	%r1046, %r95, %r90;
	mul.lo.s32 	%r1047, %r1046, %r50;
	sub.s32 	%r1048, %r1047, %r930;
	setp.gt.s32 	%p47, %r931, %r1042;
	selp.b32 	%r1049, %r1042, %r76, %p47;
	setp.gt.s32 	%p48, %r930, %r1042;
	selp.b32 	%r1050, %r930, %r1049, %p48;
	add.s32 	%r1051, %r1048, %r1050;
	mul.wide.s32 	%rd66, %r1051, 4;
	add.s64 	%rd67, %rd5, %rd66;
	ld.global.f32 	%f52, [%rd67];
	setp.gt.s32 	%p49, %r931, %r1045;
	selp.b32 	%r1052, %r1045, %r76, %p49;
	setp.gt.s32 	%p50, %r930, %r1045;
	selp.b32 	%r1053, %r930, %r1052, %p50;
	add.s32 	%r1054, %r1048, %r1053;
	mul.wide.s32 	%rd68, %r1054, 4;
	add.s64 	%rd69, %rd5, %rd68;
	ld.global.f32 	%f53, [%rd69];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f52;
  cvt.rn.f16.f32 high, %f53;
  mov.b32 %r2318, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_29;

$L__BB0_27:
	mov.f32 	%f51, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f51;
  cvt.rn.f16.f32 high, %f51;
  mov.b32 %r2318, {low,high};}

	// end inline asm

$L__BB0_29:
	rem.s32 	%r1055, %r87, %r917;
	add.s32 	%r1056, %r1055, %r92;
	shl.b32 	%r1057, %r1056, 5;
	add.s32 	%r1058, %r1057, %r39;
	shl.b32 	%r1059, %r1058, 2;
	add.s32 	%r1060, %r78, %r1059;
	add.s32 	%r1061, %r1060, 2;
	mul.wide.s32 	%rd70, %r1061, 4;
	add.s64 	%rd71, %rd6, %rd70;
	st.global.u32 	[%rd71], %r2318;

$L__BB0_31:
	add.s32 	%r1071, %r997, %r85;
	shl.b32 	%r1072, %r1071, 2;
	add.s32 	%r1073, %r84, %r1072;
	mul.wide.s32 	%rd74, %r1073, 4;
	add.s64 	%rd9, %rd6, %rd74;
	@%p2 bra 	$L__BB0_35;
	bra.uni 	$L__BB0_32;

$L__BB0_35:
	mov.f32 	%f61, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f61;
  cvt.rn.f16.f32 high, %f61;
  mov.b32 %r1091, {low,high};}

	// end inline asm
	st.global.u32 	[%rd9], %r1091;
	bra.uni 	$L__BB0_36;

$L__BB0_32:
	@%p25 bra 	$L__BB0_34;
	bra.uni 	$L__BB0_33;

$L__BB0_34:
	rem.s32 	%r1076, %r82, %r73;
	add.s32 	%r1077, %r1076, %r73;
	rem.s32 	%r1078, %r1077, %r73;
	rem.s32 	%r1079, %r83, %r73;
	add.s32 	%r1080, %r1079, %r73;
	rem.s32 	%r1081, %r1080, %r73;
	add.s32 	%r1082, %r95, %r88;
	mul.lo.s32 	%r1083, %r1082, %r50;
	sub.s32 	%r1084, %r1083, %r930;
	setp.gt.s32 	%p52, %r931, %r1078;
	selp.b32 	%r1085, %r1078, %r76, %p52;
	setp.gt.s32 	%p53, %r930, %r1078;
	selp.b32 	%r1086, %r930, %r1085, %p53;
	add.s32 	%r1087, %r1084, %r1086;
	mul.wide.s32 	%rd75, %r1087, 4;
	add.s64 	%rd76, %rd5, %rd75;
	ld.global.f32 	%f58, [%rd76];
	setp.gt.s32 	%p54, %r931, %r1081;
	selp.b32 	%r1088, %r1081, %r76, %p54;
	setp.gt.s32 	%p55, %r930, %r1081;
	selp.b32 	%r1089, %r930, %r1088, %p55;
	add.s32 	%r1090, %r1084, %r1089;
	mul.wide.s32 	%rd77, %r1090, 4;
	add.s64 	%rd78, %rd5, %rd77;
	ld.global.f32 	%f59, [%rd78];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f58;
  cvt.rn.f16.f32 high, %f59;
  mov.b32 %r1075, {low,high};}

	// end inline asm
	st.global.u32 	[%rd9], %r1075;
	bra.uni 	$L__BB0_36;

$L__BB0_33:
	mov.f32 	%f57, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f57;
  cvt.rn.f16.f32 high, %f57;
  mov.b32 %r1074, {low,high};}

	// end inline asm
	st.global.u32 	[%rd9], %r1074;

$L__BB0_36:
	add.s32 	%r1092, %r81, %r94;
	mul.wide.s32 	%rd79, %r1092, 4;
	add.s64 	%rd10, %rd6, %rd79;
	@%p2 bra 	$L__BB0_40;
	bra.uni 	$L__BB0_37;

$L__BB0_40:
	mov.f32 	%f67, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f67;
  cvt.rn.f16.f32 high, %f67;
  mov.b32 %r1110, {low,high};}

	// end inline asm
	st.global.u32 	[%rd10], %r1110;
	bra.uni 	$L__BB0_41;

$L__BB0_37:
	@%p25 bra 	$L__BB0_39;
	bra.uni 	$L__BB0_38;

$L__BB0_39:
	rem.s32 	%r1095, %r82, %r73;
	add.s32 	%r1096, %r1095, %r73;
	rem.s32 	%r1097, %r1096, %r73;
	rem.s32 	%r1098, %r83, %r73;
	add.s32 	%r1099, %r1098, %r73;
	rem.s32 	%r1100, %r1099, %r73;
	add.s32 	%r1101, %r95, %r89;
	mul.lo.s32 	%r1102, %r1101, %r50;
	sub.s32 	%r1103, %r1102, %r930;
	setp.gt.s32 	%p57, %r931, %r1097;
	selp.b32 	%r1104, %r1097, %r76, %p57;
	setp.gt.s32 	%p58, %r930, %r1097;
	selp.b32 	%r1105, %r930, %r1104, %p58;
	add.s32 	%r1106, %r1103, %r1105;
	mul.wide.s32 	%rd80, %r1106, 4;
	add.s64 	%rd81, %rd5, %rd80;
	ld.global.f32 	%f64, [%rd81];
	setp.gt.s32 	%p59, %r931, %r1100;
	selp.b32 	%r1107, %r1100, %r76, %p59;
	setp.gt.s32 	%p60, %r930, %r1100;
	selp.b32 	%r1108, %r930, %r1107, %p60;
	add.s32 	%r1109, %r1103, %r1108;
	mul.wide.s32 	%rd82, %r1109, 4;
	add.s64 	%rd83, %rd5, %rd82;
	ld.global.f32 	%f65, [%rd83];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f64;
  cvt.rn.f16.f32 high, %f65;
  mov.b32 %r1094, {low,high};}

	// end inline asm
	st.global.u32 	[%rd10], %r1094;
	bra.uni 	$L__BB0_41;

$L__BB0_38:
	mov.f32 	%f63, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f63;
  cvt.rn.f16.f32 high, %f63;
  mov.b32 %r1093, {low,high};}

	// end inline asm
	st.global.u32 	[%rd10], %r1093;

$L__BB0_41:
	@%p2 bra 	$L__BB0_46;
	bra.uni 	$L__BB0_42;

$L__BB0_46:
	mov.f32 	%f73, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f73;
  cvt.rn.f16.f32 high, %f73;
  mov.b32 %r1135, {low,high};}

	// end inline asm
	rem.s32 	%r1136, %r87, %r917;
	add.s32 	%r1137, %r1136, %r92;
	shl.b32 	%r1138, %r1137, 5;
	add.s32 	%r1139, %r1138, %r85;
	shl.b32 	%r1140, %r1139, 2;
	add.s32 	%r1141, %r84, %r1140;
	add.s32 	%r1142, %r1141, 2;
	mul.wide.s32 	%rd90, %r1142, 4;
	add.s64 	%rd91, %rd6, %rd90;
	st.global.u32 	[%rd91], %r1135;
	bra.uni 	$L__BB0_47;

$L__BB0_42:
	@%p25 bra 	$L__BB0_44;
	bra.uni 	$L__BB0_43;

$L__BB0_44:
	rem.s32 	%r1113, %r82, %r73;
	add.s32 	%r1114, %r1113, %r73;
	rem.s32 	%r1115, %r1114, %r73;
	rem.s32 	%r1116, %r83, %r73;
	add.s32 	%r1117, %r1116, %r73;
	rem.s32 	%r1118, %r1117, %r73;
	add.s32 	%r1119, %r95, %r90;
	mul.lo.s32 	%r1120, %r1119, %r50;
	sub.s32 	%r1121, %r1120, %r930;
	setp.gt.s32 	%p62, %r931, %r1115;
	selp.b32 	%r1122, %r1115, %r76, %p62;
	setp.gt.s32 	%p63, %r930, %r1115;
	selp.b32 	%r1123, %r930, %r1122, %p63;
	add.s32 	%r1124, %r1121, %r1123;
	mul.wide.s32 	%rd84, %r1124, 4;
	add.s64 	%rd85, %rd5, %rd84;
	ld.global.f32 	%f70, [%rd85];
	setp.gt.s32 	%p64, %r931, %r1118;
	selp.b32 	%r1125, %r1118, %r76, %p64;
	setp.gt.s32 	%p65, %r930, %r1118;
	selp.b32 	%r1126, %r930, %r1125, %p65;
	add.s32 	%r1127, %r1121, %r1126;
	mul.wide.s32 	%rd86, %r1127, 4;
	add.s64 	%rd87, %rd5, %rd86;
	ld.global.f32 	%f71, [%rd87];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f70;
  cvt.rn.f16.f32 high, %f71;
  mov.b32 %r2319, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_45;

$L__BB0_43:
	mov.f32 	%f69, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f69;
  cvt.rn.f16.f32 high, %f69;
  mov.b32 %r2319, {low,high};}

	// end inline asm

$L__BB0_45:
	rem.s32 	%r1128, %r87, %r917;
	add.s32 	%r1129, %r1128, %r92;
	shl.b32 	%r1130, %r1129, 5;
	add.s32 	%r1131, %r1130, %r85;
	shl.b32 	%r1132, %r1131, 2;
	add.s32 	%r1133, %r84, %r1132;
	add.s32 	%r1134, %r1133, 2;
	mul.wide.s32 	%rd88, %r1134, 4;
	add.s64 	%rd89, %rd6, %rd88;
	st.global.u32 	[%rd89], %r2319;

$L__BB0_47:
	add.s32 	%r2317, %r2317, %r943;
	setp.lt.s32 	%p66, %r2317, %r918;
	@%p66 bra 	$L__BB0_15;

$L__BB0_48:
	add.s32 	%r2316, %r2316, %r938;
	setp.lt.s32 	%p67, %r2316, %r917;
	@%p67 bra 	$L__BB0_13;

$L__BB0_49:
	ld.param.u64 	%rd92, [%rd1+128];
	cvta.to.global.u64 	%rd11, %rd92;
	ld.param.u64 	%rd93, [%rd1+96];
	cvta.to.global.u64 	%rd12, %rd93;
	@%p24 bra 	$L__BB0_133;

	shl.b32 	%r116, %r69, 1;
	mov.u64 	%rd94, _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE;
	mov.u32 	%r2320, %r2353;

$L__BB0_51:
	setp.ge.s32 	%p69, %r116, %r918;
	@%p69 bra 	$L__BB0_132;

	mov.u32 	%r2321, %r116;

$L__BB0_53:
	setp.ne.s32 	%p70, %r39, 0;
	@%p70 bra 	$L__BB0_131;

	shr.u32 	%r1144, %r2321, 31;
	add.s32 	%r1145, %r2321, %r1144;
	shr.s32 	%r1146, %r1145, 1;
	mad.lo.s32 	%r1147, %r1146, %r917, %r2320;
	shl.b32 	%r120, %r1147, 5;
	add.s32 	%r121, %r2321, -2;
	mul.lo.s32 	%r122, %r121, %r917;
	add.s32 	%r1148, %r918, %r121;
	mul.lo.s32 	%r123, %r1148, %r917;
	add.s32 	%r1149, %r1148, %r918;
	mul.lo.s32 	%r124, %r1149, %r917;
	add.s32 	%r125, %r122, %r917;
	add.s32 	%r126, %r2321, -1;
	add.s32 	%r1150, %r918, %r126;
	mul.lo.s32 	%r127, %r1150, %r917;
	add.s32 	%r1151, %r1150, %r918;
	mul.lo.s32 	%r128, %r1151, %r917;
	add.s32 	%r1152, %r918, %r2321;
	mul.lo.s32 	%r129, %r1152, %r917;
	add.s32 	%r1153, %r1152, %r918;
	mul.lo.s32 	%r130, %r1153, %r917;
	mul.lo.s32 	%r131, %r2321, %r917;
	add.s32 	%r132, %r131, %r917;
	add.s32 	%r133, %r2321, 1;
	add.s32 	%r1154, %r918, %r133;
	mul.lo.s32 	%r134, %r1154, %r917;
	add.s32 	%r1155, %r1154, %r918;
	mul.lo.s32 	%r135, %r1155, %r917;
	add.s32 	%r136, %r132, %r917;
	add.s32 	%r137, %r2321, 2;
	add.s32 	%r1156, %r918, %r137;
	mul.lo.s32 	%r138, %r1156, %r917;
	add.s32 	%r1157, %r1156, %r918;
	mul.lo.s32 	%r139, %r1157, %r917;
	mov.u32 	%r2324, 0;
	mov.u64 	%rd546, %rd94;

$L__BB0_55:
	ld.global.nc.u32 	%r1158, [%rd546];
	cvt.rn.f64.s32 	%fd1, %r1158;
	add.f64 	%fd3, %fd1, 0d3FE0000000000000;
	add.s32 	%r141, %r1158, %r2320;
	setp.lt.s32 	%p71, %r141, %r917;
	or.b32  	%r1159, %r121, %r141;
	setp.gt.s32 	%p72, %r1159, -1;
	and.pred  	%p73, %p71, %p72;
	setp.lt.s32 	%p74, %r121, %r918;
	and.pred  	%p3, %p74, %p73;
	cvt.rn.f32.f64 	%f74, %fd3;
	add.f32 	%f75, %f74, 0f3E800000;
	abs.f32 	%f1, %f75;
	add.f32 	%f76, %f1, 0f40200000;
	setp.geu.f32 	%p75, %f76, 0f40000000;
	@%p75 bra 	$L__BB0_60;

	@%p3 bra 	$L__BB0_58;
	bra.uni 	$L__BB0_57;

$L__BB0_58:
	add.s32 	%r1162, %r122, %r141;
	mul.wide.s32 	%rd95, %r1162, 4;
	add.s64 	%rd96, %rd11, %rd95;
	ld.global.f32 	%f79, [%rd96];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f79;
  mov.b32 %r2323, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_59;

$L__BB0_57:
	mov.f32 	%f78, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f78;
  cvt.rn.f16.f32 high, %f78;
  mov.b32 %r2323, {low,high};}

	// end inline asm

$L__BB0_59:
	add.s32 	%r1163, %r2324, %r120;
	mul.wide.s32 	%rd97, %r1163, 4;
	add.s64 	%rd98, %rd12, %rd97;
	st.global.u32 	[%rd98], %r2323;
	add.s32 	%r2324, %r2324, 1;

$L__BB0_60:
	cvt.rn.f32.f64 	%f80, %fd1;
	add.f32 	%f81, %f80, 0f3E800000;
	abs.f32 	%f2, %f81;
	add.f32 	%f3, %f2, 0f40000000;
	setp.geu.f32 	%p76, %f3, 0f40000000;
	@%p76 bra 	$L__BB0_65;

	@%p3 bra 	$L__BB0_63;
	bra.uni 	$L__BB0_62;

$L__BB0_63:
	add.s32 	%r1166, %r123, %r141;
	mul.wide.s32 	%rd99, %r1166, 4;
	add.s64 	%rd100, %rd11, %rd99;
	ld.global.f32 	%f84, [%rd100];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f84;
  mov.b32 %r2325, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_64;

$L__BB0_62:
	mov.f32 	%f83, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f83;
  cvt.rn.f16.f32 high, %f83;
  mov.b32 %r2325, {low,high};}

	// end inline asm

$L__BB0_64:
	add.s32 	%r1167, %r2324, %r120;
	mul.wide.s32 	%rd101, %r1167, 4;
	add.s64 	%rd102, %rd12, %rd101;
	st.global.u32 	[%rd102], %r2325;
	add.s32 	%r2324, %r2324, 1;

$L__BB0_65:
	add.f32 	%f85, %f2, 0f40200000;
	setp.geu.f32 	%p77, %f85, 0f40000000;
	@%p77 bra 	$L__BB0_70;

	@%p3 bra 	$L__BB0_68;
	bra.uni 	$L__BB0_67;

$L__BB0_68:
	add.s32 	%r1170, %r124, %r141;
	mul.wide.s32 	%rd103, %r1170, 4;
	add.s64 	%rd104, %rd11, %rd103;
	ld.global.f32 	%f88, [%rd104];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f88;
  mov.b32 %r2327, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_69;

$L__BB0_67:
	mov.f32 	%f87, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f87;
  cvt.rn.f16.f32 high, %f87;
  mov.b32 %r2327, {low,high};}

	// end inline asm

$L__BB0_69:
	add.s32 	%r1171, %r2324, %r120;
	mul.wide.s32 	%rd105, %r1171, 4;
	add.s64 	%rd106, %rd12, %rd105;
	st.global.u32 	[%rd106], %r2327;
	add.s32 	%r2324, %r2324, 1;

$L__BB0_70:
	or.b32  	%r1172, %r126, %r141;
	setp.gt.s32 	%p78, %r1172, -1;
	and.pred  	%p80, %p71, %p78;
	setp.le.s32 	%p81, %r2321, %r918;
	and.pred  	%p4, %p81, %p80;
	add.f32 	%f4, %f1, 0f3FC00000;
	setp.geu.f32 	%p82, %f4, 0f40000000;
	@%p82 bra 	$L__BB0_75;

	@%p4 bra 	$L__BB0_73;
	bra.uni 	$L__BB0_72;

$L__BB0_73:
	add.s32 	%r1175, %r125, %r141;
	mul.wide.s32 	%rd107, %r1175, 4;
	add.s64 	%rd108, %rd11, %rd107;
	ld.global.f32 	%f91, [%rd108];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f91;
  mov.b32 %r2329, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_74;

$L__BB0_72:
	mov.f32 	%f90, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f90;
  cvt.rn.f16.f32 high, %f90;
  mov.b32 %r2329, {low,high};}

	// end inline asm

$L__BB0_74:
	add.s32 	%r1176, %r2324, %r120;
	mul.wide.s32 	%rd109, %r1176, 4;
	add.s64 	%rd110, %rd12, %rd109;
	st.global.u32 	[%rd110], %r2329;
	add.s32 	%r2324, %r2324, 1;

$L__BB0_75:
	add.f32 	%f5, %f2, 0f3F800000;
	setp.geu.f32 	%p83, %f5, 0f40000000;
	@%p83 bra 	$L__BB0_80;

	@%p4 bra 	$L__BB0_78;
	bra.uni 	$L__BB0_77;

$L__BB0_78:
	add.s32 	%r1179, %r127, %r141;
	mul.wide.s32 	%rd111, %r1179, 4;
	add.s64 	%rd112, %rd11, %rd111;
	ld.global.f32 	%f94, [%rd112];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f94;
  mov.b32 %r2331, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_79;

$L__BB0_77:
	mov.f32 	%f93, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f93;
  cvt.rn.f16.f32 high, %f93;
  mov.b32 %r2331, {low,high};}

	// end inline asm

$L__BB0_79:
	add.s32 	%r1180, %r2324, %r120;
	mul.wide.s32 	%rd113, %r1180, 4;
	add.s64 	%rd114, %rd12, %rd113;
	st.global.u32 	[%rd114], %r2331;
	add.s32 	%r2324, %r2324, 1;

$L__BB0_80:
	add.f32 	%f6, %f2, 0f3FC00000;
	setp.geu.f32 	%p84, %f6, 0f40000000;
	@%p84 bra 	$L__BB0_85;

	@%p4 bra 	$L__BB0_83;
	bra.uni 	$L__BB0_82;

$L__BB0_83:
	add.s32 	%r1183, %r128, %r141;
	mul.wide.s32 	%rd115, %r1183, 4;
	add.s64 	%rd116, %rd11, %rd115;
	ld.global.f32 	%f97, [%rd116];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f97;
  mov.b32 %r2333, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_84;

$L__BB0_82:
	mov.f32 	%f96, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f96;
  cvt.rn.f16.f32 high, %f96;
  mov.b32 %r2333, {low,high};}

	// end inline asm

$L__BB0_84:
	add.s32 	%r1184, %r2324, %r120;
	mul.wide.s32 	%rd117, %r1184, 4;
	add.s64 	%rd118, %rd12, %rd117;
	st.global.u32 	[%rd118], %r2333;
	add.s32 	%r2324, %r2324, 1;

$L__BB0_85:
	or.b32  	%r1185, %r2321, %r141;
	setp.gt.s32 	%p85, %r1185, -1;
	and.pred  	%p87, %p71, %p85;
	setp.lt.s32 	%p88, %r2321, %r918;
	and.pred  	%p5, %p88, %p87;
	add.f32 	%f7, %f1, 0f3F000000;
	setp.geu.f32 	%p89, %f7, 0f40000000;
	@%p89 bra 	$L__BB0_90;

	@%p5 bra 	$L__BB0_88;
	bra.uni 	$L__BB0_87;

$L__BB0_88:
	add.s32 	%r1188, %r131, %r141;
	mul.wide.s32 	%rd119, %r1188, 4;
	add.s64 	%rd120, %rd11, %rd119;
	ld.global.f32 	%f100, [%rd120];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f100;
  mov.b32 %r2335, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_89;

$L__BB0_87:
	mov.f32 	%f99, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f99;
  cvt.rn.f16.f32 high, %f99;
  mov.b32 %r2335, {low,high};}

	// end inline asm

$L__BB0_89:
	add.s32 	%r1189, %r2324, %r120;
	mul.wide.s32 	%rd121, %r1189, 4;
	add.s64 	%rd122, %rd12, %rd121;
	st.global.u32 	[%rd122], %r2335;
	add.s32 	%r2324, %r2324, 1;

$L__BB0_90:
	add.f32 	%f101, %f2, 0f00000000;
	setp.geu.f32 	%p90, %f101, 0f40000000;
	@%p90 bra 	$L__BB0_95;

	@%p5 bra 	$L__BB0_93;
	bra.uni 	$L__BB0_92;

$L__BB0_93:
	add.s32 	%r1192, %r129, %r141;
	mul.wide.s32 	%rd123, %r1192, 4;
	add.s64 	%rd124, %rd11, %rd123;
	ld.global.f32 	%f104, [%rd124];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f104;
  mov.b32 %r2337, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_94;

$L__BB0_92:
	mov.f32 	%f103, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f103;
  cvt.rn.f16.f32 high, %f103;
  mov.b32 %r2337, {low,high};}

	// end inline asm

$L__BB0_94:
	add.s32 	%r1193, %r2324, %r120;
	mul.wide.s32 	%rd125, %r1193, 4;
	add.s64 	%rd126, %rd12, %rd125;
	st.global.u32 	[%rd126], %r2337;
	add.s32 	%r2324, %r2324, 1;

$L__BB0_95:
	add.f32 	%f8, %f2, 0f3F000000;
	setp.geu.f32 	%p91, %f8, 0f40000000;
	@%p91 bra 	$L__BB0_100;

	@%p5 bra 	$L__BB0_98;
	bra.uni 	$L__BB0_97;

$L__BB0_98:
	add.s32 	%r1196, %r130, %r141;
	mul.wide.s32 	%rd127, %r1196, 4;
	add.s64 	%rd128, %rd11, %rd127;
	ld.global.f32 	%f107, [%rd128];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f107;
  mov.b32 %r2339, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_99;

$L__BB0_97:
	mov.f32 	%f106, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f106;
  cvt.rn.f16.f32 high, %f106;
  mov.b32 %r2339, {low,high};}

	// end inline asm

$L__BB0_99:
	add.s32 	%r1197, %r2324, %r120;
	mul.wide.s32 	%rd129, %r1197, 4;
	add.s64 	%rd130, %rd12, %rd129;
	st.global.u32 	[%rd130], %r2339;
	add.s32 	%r2324, %r2324, 1;

$L__BB0_100:
	or.b32  	%r1198, %r133, %r141;
	setp.gt.s32 	%p92, %r1198, -1;
	and.pred  	%p94, %p71, %p92;
	setp.lt.s32 	%p95, %r133, %r918;
	and.pred  	%p6, %p95, %p94;
	@%p89 bra 	$L__BB0_105;

	@%p6 bra 	$L__BB0_103;
	bra.uni 	$L__BB0_102;

$L__BB0_103:
	add.s32 	%r1201, %r132, %r141;
	mul.wide.s32 	%rd131, %r1201, 4;
	add.s64 	%rd132, %rd11, %rd131;
	ld.global.f32 	%f110, [%rd132];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f110;
  mov.b32 %r2341, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_104;

$L__BB0_102:
	mov.f32 	%f109, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f109;
  cvt.rn.f16.f32 high, %f109;
  mov.b32 %r2341, {low,high};}

	// end inline asm

$L__BB0_104:
	add.s32 	%r1202, %r2324, %r120;
	mul.wide.s32 	%rd133, %r1202, 4;
	add.s64 	%rd134, %rd12, %rd133;
	st.global.u32 	[%rd134], %r2341;
	add.s32 	%r2324, %r2324, 1;

$L__BB0_105:
	@%p83 bra 	$L__BB0_110;

	@%p6 bra 	$L__BB0_108;
	bra.uni 	$L__BB0_107;

$L__BB0_108:
	add.s32 	%r1205, %r134, %r141;
	mul.wide.s32 	%rd135, %r1205, 4;
	add.s64 	%rd136, %rd11, %rd135;
	ld.global.f32 	%f113, [%rd136];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f113;
  mov.b32 %r2343, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_109;

$L__BB0_107:
	mov.f32 	%f112, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f112;
  cvt.rn.f16.f32 high, %f112;
  mov.b32 %r2343, {low,high};}

	// end inline asm

$L__BB0_109:
	add.s32 	%r1206, %r2324, %r120;
	mul.wide.s32 	%rd137, %r1206, 4;
	add.s64 	%rd138, %rd12, %rd137;
	st.global.u32 	[%rd138], %r2343;
	add.s32 	%r2324, %r2324, 1;

$L__BB0_110:
	@%p91 bra 	$L__BB0_115;

	@%p6 bra 	$L__BB0_113;
	bra.uni 	$L__BB0_112;

$L__BB0_113:
	add.s32 	%r1209, %r135, %r141;
	mul.wide.s32 	%rd139, %r1209, 4;
	add.s64 	%rd140, %rd11, %rd139;
	ld.global.f32 	%f116, [%rd140];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f116;
  mov.b32 %r2345, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_114;

$L__BB0_112:
	mov.f32 	%f115, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f115;
  cvt.rn.f16.f32 high, %f115;
  mov.b32 %r2345, {low,high};}

	// end inline asm

$L__BB0_114:
	add.s32 	%r1210, %r2324, %r120;
	mul.wide.s32 	%rd141, %r1210, 4;
	add.s64 	%rd142, %rd12, %rd141;
	st.global.u32 	[%rd142], %r2345;
	add.s32 	%r2324, %r2324, 1;

$L__BB0_115:
	or.b32  	%r1211, %r137, %r141;
	setp.gt.s32 	%p99, %r1211, -1;
	and.pred  	%p101, %p71, %p99;
	setp.lt.s32 	%p102, %r137, %r918;
	and.pred  	%p7, %p102, %p101;
	@%p82 bra 	$L__BB0_120;

	@%p7 bra 	$L__BB0_118;
	bra.uni 	$L__BB0_117;

$L__BB0_118:
	add.s32 	%r1214, %r136, %r141;
	mul.wide.s32 	%rd143, %r1214, 4;
	add.s64 	%rd144, %rd11, %rd143;
	ld.global.f32 	%f119, [%rd144];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f119;
  mov.b32 %r2347, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_119;

$L__BB0_117:
	mov.f32 	%f118, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f118;
  cvt.rn.f16.f32 high, %f118;
  mov.b32 %r2347, {low,high};}

	// end inline asm

$L__BB0_119:
	add.s32 	%r1215, %r2324, %r120;
	mul.wide.s32 	%rd145, %r1215, 4;
	add.s64 	%rd146, %rd12, %rd145;
	st.global.u32 	[%rd146], %r2347;
	add.s32 	%r2324, %r2324, 1;

$L__BB0_120:
	@%p76 bra 	$L__BB0_125;

	@%p7 bra 	$L__BB0_123;
	bra.uni 	$L__BB0_122;

$L__BB0_123:
	add.s32 	%r1218, %r138, %r141;
	mul.wide.s32 	%rd147, %r1218, 4;
	add.s64 	%rd148, %rd11, %rd147;
	ld.global.f32 	%f122, [%rd148];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f122;
  mov.b32 %r2349, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_124;

$L__BB0_122:
	mov.f32 	%f121, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f121;
  cvt.rn.f16.f32 high, %f121;
  mov.b32 %r2349, {low,high};}

	// end inline asm

$L__BB0_124:
	add.s32 	%r1219, %r2324, %r120;
	mul.wide.s32 	%rd149, %r1219, 4;
	add.s64 	%rd150, %rd12, %rd149;
	st.global.u32 	[%rd150], %r2349;
	add.s32 	%r2324, %r2324, 1;

$L__BB0_125:
	@%p84 bra 	$L__BB0_130;

	@%p7 bra 	$L__BB0_128;
	bra.uni 	$L__BB0_127;

$L__BB0_128:
	add.s32 	%r1222, %r139, %r141;
	mul.wide.s32 	%rd151, %r1222, 4;
	add.s64 	%rd152, %rd11, %rd151;
	ld.global.f32 	%f125, [%rd152];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f125;
  mov.b32 %r2351, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_129;

$L__BB0_127:
	mov.f32 	%f124, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f124;
  cvt.rn.f16.f32 high, %f124;
  mov.b32 %r2351, {low,high};}

	// end inline asm

$L__BB0_129:
	add.s32 	%r1223, %r2324, %r120;
	mul.wide.s32 	%rd153, %r1223, 4;
	add.s64 	%rd154, %rd12, %rd153;
	st.global.u32 	[%rd154], %r2351;
	add.s32 	%r2324, %r2324, 1;

$L__BB0_130:
	add.s64 	%rd546, %rd546, 4;
	mov.u64 	%rd155, _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE;
	add.s64 	%rd156, %rd155, 24;
	setp.ne.s64 	%p106, %rd546, %rd156;
	@%p106 bra 	$L__BB0_55;

$L__BB0_131:
	add.s32 	%r2321, %r2321, %r41;
	setp.lt.s32 	%p107, %r2321, %r918;
	@%p107 bra 	$L__BB0_53;

$L__BB0_132:
	add.s32 	%r2320, %r2320, %r938;
	setp.lt.s32 	%p108, %r2320, %r917;
	@%p108 bra 	$L__BB0_51;

$L__BB0_133:
	setp.eq.s32 	%p109, %r921, 1;
	ld.param.u64 	%rd157, [%rd1+136];
	cvta.to.global.u64 	%rd15, %rd157;
	ld.param.u64 	%rd158, [%rd1+104];
	cvta.to.global.u64 	%rd16, %rd158;
	@%p109 bra 	$L__BB0_151;
	bra.uni 	$L__BB0_134;

$L__BB0_151:
	@%p24 bra 	$L__BB0_280;

	shl.b32 	%r245, %r69, 1;
	shr.u32 	%r1271, %r922, 31;
	add.s32 	%r1272, %r922, %r1271;
	shr.u32 	%r1273, %r1272, 1;
	and.b32  	%r246, %r1273, 1;
	mov.u64 	%rd178, _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE;

$L__BB0_153:
	setp.ge.s32 	%p119, %r245, %r918;
	@%p119 bra 	$L__BB0_279;

	mov.u32 	%r2359, %r245;

$L__BB0_155:
	setp.ne.s32 	%p120, %r39, 0;
	@%p120 bra 	$L__BB0_278;

	shr.u32 	%r1275, %r2359, 31;
	add.s32 	%r1276, %r2359, %r1275;
	shr.s32 	%r1277, %r1276, 1;
	mad.lo.s32 	%r1278, %r1277, %r917, %r2353;
	shl.b32 	%r250, %r1278, 5;
	add.s32 	%r251, %r2359, -2;
	mul.lo.s32 	%r252, %r251, %r917;
	add.s32 	%r1279, %r918, %r251;
	mul.lo.s32 	%r253, %r1279, %r917;
	add.s32 	%r254, %r252, %r917;
	add.s32 	%r255, %r2359, -1;
	add.s32 	%r1280, %r918, %r255;
	mul.lo.s32 	%r256, %r1280, %r917;
	add.s32 	%r1281, %r918, %r2359;
	mul.lo.s32 	%r257, %r1281, %r917;
	mul.lo.s32 	%r258, %r2359, %r917;
	add.s32 	%r259, %r258, %r917;
	add.s32 	%r260, %r2359, 1;
	add.s32 	%r1282, %r918, %r260;
	mul.lo.s32 	%r261, %r1282, %r917;
	add.s32 	%r262, %r259, %r917;
	add.s32 	%r263, %r2359, 2;
	add.s32 	%r1283, %r918, %r263;
	mul.lo.s32 	%r264, %r1283, %r917;
	mov.u32 	%r2363, 0;
	mov.u64 	%rd547, 24;
	mov.u64 	%rd548, %rd178;

$L__BB0_157:
	ld.global.nc.u32 	%r1284, [%rd548];
	cvt.rn.f64.s32 	%fd2, %r1284;
	add.f64 	%fd4, %fd2, 0d3FE0000000000000;
	add.s32 	%r266, %r1284, %r2353;
	setp.lt.s32 	%p121, %r266, %r917;
	or.b32  	%r1285, %r251, %r266;
	setp.gt.s32 	%p122, %r1285, -1;
	and.pred  	%p123, %p121, %p122;
	setp.lt.s32 	%p124, %r251, %r918;
	and.pred  	%p8, %p124, %p123;
	cvt.rn.f32.f64 	%f142, %fd4;
	add.f32 	%f143, %f142, 0f3E800000;
	abs.f32 	%f9, %f143;
	add.f32 	%f144, %f9, 0f40200000;
	setp.geu.f32 	%p125, %f144, 0f40000000;
	@%p125 bra 	$L__BB0_169;

	@%p8 bra 	$L__BB0_160;
	bra.uni 	$L__BB0_159;

$L__BB0_160:
	setp.eq.s32 	%p126, %r246, 0;
	add.s32 	%r1287, %r252, %r266;
	shl.b32 	%r1288, %r1287, 1;
	mul.wide.s32 	%rd179, %r1288, 4;
	add.s64 	%rd180, %rd15, %rd179;
	ld.global.f32 	%f10, [%rd180];
	@%p126 bra 	$L__BB0_162;
	bra.uni 	$L__BB0_161;

$L__BB0_162:
	mov.f32 	%f150, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f10;
  cvt.rn.f16.f32 high, %f150;
  mov.b32 %r2361, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_163;

$L__BB0_159:
	mov.f32 	%f146, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f146;
  cvt.rn.f16.f32 high, %f146;
  mov.b32 %r2361, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_163;

$L__BB0_161:
	mov.f32 	%f147, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f147;
  cvt.rn.f16.f32 high, %f10;
  mov.b32 %r2361, {low,high};}

	// end inline asm

$L__BB0_163:
	add.s32 	%r271, %r2363, %r250;
	mul.wide.s32 	%rd181, %r271, 4;
	add.s64 	%rd182, %rd16, %rd181;
	st.global.u32 	[%rd182], %r2361;
	@%p8 bra 	$L__BB0_165;
	bra.uni 	$L__BB0_164;

$L__BB0_165:
	setp.eq.s32 	%p127, %r246, 0;
	add.s32 	%r1292, %r253, %r266;
	shl.b32 	%r1293, %r1292, 1;
	mul.wide.s32 	%rd183, %r1293, 4;
	add.s64 	%rd184, %rd15, %rd183;
	ld.global.f32 	%f11, [%rd184];
	@%p127 bra 	$L__BB0_167;
	bra.uni 	$L__BB0_166;

$L__BB0_167:
	mov.f32 	%f156, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f11;
  cvt.rn.f16.f32 high, %f156;
  mov.b32 %r2362, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_168;

$L__BB0_164:
	mov.f32 	%f152, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f152;
  cvt.rn.f16.f32 high, %f152;
  mov.b32 %r2362, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_168;

$L__BB0_166:
	mov.f32 	%f153, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f153;
  cvt.rn.f16.f32 high, %f11;
  mov.b32 %r2362, {low,high};}

	// end inline asm

$L__BB0_168:
	add.s32 	%r1296, %r271, 1;
	mul.wide.s32 	%rd185, %r1296, 4;
	add.s64 	%rd186, %rd16, %rd185;
	st.global.u32 	[%rd186], %r2362;
	add.s32 	%r2363, %r2363, 2;

$L__BB0_169:
	cvt.rn.f32.f64 	%f157, %fd2;
	add.f32 	%f158, %f157, 0f3E800000;
	abs.f32 	%f12, %f158;
	add.f32 	%f13, %f12, 0f40000000;
	setp.geu.f32 	%p128, %f13, 0f40000000;
	@%p128 bra 	$L__BB0_181;

	@%p8 bra 	$L__BB0_172;
	bra.uni 	$L__BB0_171;

$L__BB0_172:
	setp.eq.s32 	%p129, %r246, 0;
	add.s32 	%r1298, %r252, %r266;
	shl.b32 	%r1299, %r1298, 1;
	or.b32  	%r1300, %r1299, 1;
	mul.wide.s32 	%rd187, %r1300, 4;
	add.s64 	%rd188, %rd15, %rd187;
	ld.global.f32 	%f14, [%rd188];
	@%p129 bra 	$L__BB0_174;
	bra.uni 	$L__BB0_173;

$L__BB0_174:
	mov.f32 	%f164, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f14;
  cvt.rn.f16.f32 high, %f164;
  mov.b32 %r2364, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_175;

$L__BB0_171:
	mov.f32 	%f160, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f160;
  cvt.rn.f16.f32 high, %f160;
  mov.b32 %r2364, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_175;

$L__BB0_173:
	mov.f32 	%f161, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f161;
  cvt.rn.f16.f32 high, %f14;
  mov.b32 %r2364, {low,high};}

	// end inline asm

$L__BB0_175:
	add.s32 	%r282, %r2363, %r250;
	mul.wide.s32 	%rd189, %r282, 4;
	add.s64 	%rd190, %rd16, %rd189;
	st.global.u32 	[%rd190], %r2364;
	@%p8 bra 	$L__BB0_177;
	bra.uni 	$L__BB0_176;

$L__BB0_177:
	setp.eq.s32 	%p130, %r246, 0;
	add.s32 	%r1304, %r253, %r266;
	shl.b32 	%r1305, %r1304, 1;
	or.b32  	%r1306, %r1305, 1;
	mul.wide.s32 	%rd191, %r1306, 4;
	add.s64 	%rd192, %rd15, %rd191;
	ld.global.f32 	%f15, [%rd192];
	@%p130 bra 	$L__BB0_179;
	bra.uni 	$L__BB0_178;

$L__BB0_179:
	mov.f32 	%f170, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f15;
  cvt.rn.f16.f32 high, %f170;
  mov.b32 %r2365, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_180;

$L__BB0_176:
	mov.f32 	%f166, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f166;
  cvt.rn.f16.f32 high, %f166;
  mov.b32 %r2365, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_180;

$L__BB0_178:
	mov.f32 	%f167, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f167;
  cvt.rn.f16.f32 high, %f15;
  mov.b32 %r2365, {low,high};}

	// end inline asm

$L__BB0_180:
	add.s32 	%r1309, %r282, 1;
	mul.wide.s32 	%rd193, %r1309, 4;
	add.s64 	%rd194, %rd16, %rd193;
	st.global.u32 	[%rd194], %r2365;
	add.s32 	%r2363, %r2363, 2;

$L__BB0_181:
	or.b32  	%r1310, %r255, %r266;
	setp.gt.s32 	%p131, %r1310, -1;
	and.pred  	%p133, %p121, %p131;
	setp.le.s32 	%p134, %r2359, %r918;
	and.pred  	%p9, %p134, %p133;
	add.f32 	%f16, %f9, 0f3FC00000;
	setp.geu.f32 	%p135, %f16, 0f40000000;
	@%p135 bra 	$L__BB0_193;

	@%p9 bra 	$L__BB0_184;
	bra.uni 	$L__BB0_183;

$L__BB0_184:
	setp.eq.s32 	%p136, %r246, 0;
	add.s32 	%r1312, %r254, %r266;
	shl.b32 	%r1313, %r1312, 1;
	mul.wide.s32 	%rd195, %r1313, 4;
	add.s64 	%rd196, %rd15, %rd195;
	ld.global.f32 	%f17, [%rd196];
	@%p136 bra 	$L__BB0_186;
	bra.uni 	$L__BB0_185;

$L__BB0_186:
	mov.f32 	%f176, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f17;
  cvt.rn.f16.f32 high, %f176;
  mov.b32 %r2367, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_187;

$L__BB0_183:
	mov.f32 	%f172, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f172;
  cvt.rn.f16.f32 high, %f172;
  mov.b32 %r2367, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_187;

$L__BB0_185:
	mov.f32 	%f173, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f173;
  cvt.rn.f16.f32 high, %f17;
  mov.b32 %r2367, {low,high};}

	// end inline asm

$L__BB0_187:
	add.s32 	%r293, %r2363, %r250;
	mul.wide.s32 	%rd197, %r293, 4;
	add.s64 	%rd198, %rd16, %rd197;
	st.global.u32 	[%rd198], %r2367;
	@%p9 bra 	$L__BB0_189;
	bra.uni 	$L__BB0_188;

$L__BB0_189:
	setp.eq.s32 	%p137, %r246, 0;
	add.s32 	%r1317, %r256, %r266;
	shl.b32 	%r1318, %r1317, 1;
	mul.wide.s32 	%rd199, %r1318, 4;
	add.s64 	%rd200, %rd15, %rd199;
	ld.global.f32 	%f18, [%rd200];
	@%p137 bra 	$L__BB0_191;
	bra.uni 	$L__BB0_190;

$L__BB0_191:
	mov.f32 	%f182, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f18;
  cvt.rn.f16.f32 high, %f182;
  mov.b32 %r2368, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_192;

$L__BB0_188:
	mov.f32 	%f178, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f178;
  cvt.rn.f16.f32 high, %f178;
  mov.b32 %r2368, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_192;

$L__BB0_190:
	mov.f32 	%f179, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f179;
  cvt.rn.f16.f32 high, %f18;
  mov.b32 %r2368, {low,high};}

	// end inline asm

$L__BB0_192:
	add.s32 	%r1321, %r293, 1;
	mul.wide.s32 	%rd201, %r1321, 4;
	add.s64 	%rd202, %rd16, %rd201;
	st.global.u32 	[%rd202], %r2368;
	add.s32 	%r2363, %r2363, 2;

$L__BB0_193:
	add.f32 	%f19, %f12, 0f3F800000;
	setp.geu.f32 	%p138, %f19, 0f40000000;
	@%p138 bra 	$L__BB0_205;

	@%p9 bra 	$L__BB0_196;
	bra.uni 	$L__BB0_195;

$L__BB0_196:
	setp.eq.s32 	%p139, %r246, 0;
	add.s32 	%r1323, %r254, %r266;
	shl.b32 	%r1324, %r1323, 1;
	or.b32  	%r1325, %r1324, 1;
	mul.wide.s32 	%rd203, %r1325, 4;
	add.s64 	%rd204, %rd15, %rd203;
	ld.global.f32 	%f20, [%rd204];
	@%p139 bra 	$L__BB0_198;
	bra.uni 	$L__BB0_197;

$L__BB0_198:
	mov.f32 	%f188, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f20;
  cvt.rn.f16.f32 high, %f188;
  mov.b32 %r2370, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_199;

$L__BB0_195:
	mov.f32 	%f184, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f184;
  cvt.rn.f16.f32 high, %f184;
  mov.b32 %r2370, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_199;

$L__BB0_197:
	mov.f32 	%f185, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f185;
  cvt.rn.f16.f32 high, %f20;
  mov.b32 %r2370, {low,high};}

	// end inline asm

$L__BB0_199:
	add.s32 	%r304, %r2363, %r250;
	mul.wide.s32 	%rd205, %r304, 4;
	add.s64 	%rd206, %rd16, %rd205;
	st.global.u32 	[%rd206], %r2370;
	@%p9 bra 	$L__BB0_201;
	bra.uni 	$L__BB0_200;

$L__BB0_201:
	setp.eq.s32 	%p140, %r246, 0;
	add.s32 	%r1329, %r256, %r266;
	shl.b32 	%r1330, %r1329, 1;
	or.b32  	%r1331, %r1330, 1;
	mul.wide.s32 	%rd207, %r1331, 4;
	add.s64 	%rd208, %rd15, %rd207;
	ld.global.f32 	%f21, [%rd208];
	@%p140 bra 	$L__BB0_203;
	bra.uni 	$L__BB0_202;

$L__BB0_203:
	mov.f32 	%f194, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f21;
  cvt.rn.f16.f32 high, %f194;
  mov.b32 %r2371, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_204;

$L__BB0_200:
	mov.f32 	%f190, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f190;
  cvt.rn.f16.f32 high, %f190;
  mov.b32 %r2371, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_204;

$L__BB0_202:
	mov.f32 	%f191, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f191;
  cvt.rn.f16.f32 high, %f21;
  mov.b32 %r2371, {low,high};}

	// end inline asm

$L__BB0_204:
	add.s32 	%r1334, %r304, 1;
	mul.wide.s32 	%rd209, %r1334, 4;
	add.s64 	%rd210, %rd16, %rd209;
	st.global.u32 	[%rd210], %r2371;
	add.s32 	%r2363, %r2363, 2;

$L__BB0_205:
	or.b32  	%r1335, %r2359, %r266;
	setp.gt.s32 	%p141, %r1335, -1;
	and.pred  	%p143, %p121, %p141;
	setp.lt.s32 	%p144, %r2359, %r918;
	and.pred  	%p10, %p144, %p143;
	add.f32 	%f22, %f9, 0f3F000000;
	setp.geu.f32 	%p145, %f22, 0f40000000;
	@%p145 bra 	$L__BB0_217;

	@%p10 bra 	$L__BB0_208;
	bra.uni 	$L__BB0_207;

$L__BB0_208:
	setp.eq.s32 	%p146, %r246, 0;
	add.s32 	%r1337, %r258, %r266;
	shl.b32 	%r1338, %r1337, 1;
	mul.wide.s32 	%rd211, %r1338, 4;
	add.s64 	%rd212, %rd15, %rd211;
	ld.global.f32 	%f23, [%rd212];
	@%p146 bra 	$L__BB0_210;
	bra.uni 	$L__BB0_209;

$L__BB0_210:
	mov.f32 	%f200, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f23;
  cvt.rn.f16.f32 high, %f200;
  mov.b32 %r2373, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_211;

$L__BB0_207:
	mov.f32 	%f196, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f196;
  cvt.rn.f16.f32 high, %f196;
  mov.b32 %r2373, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_211;

$L__BB0_209:
	mov.f32 	%f197, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f197;
  cvt.rn.f16.f32 high, %f23;
  mov.b32 %r2373, {low,high};}

	// end inline asm

$L__BB0_211:
	add.s32 	%r315, %r2363, %r250;
	mul.wide.s32 	%rd213, %r315, 4;
	add.s64 	%rd214, %rd16, %rd213;
	st.global.u32 	[%rd214], %r2373;
	@%p10 bra 	$L__BB0_213;
	bra.uni 	$L__BB0_212;

$L__BB0_213:
	setp.eq.s32 	%p147, %r246, 0;
	add.s32 	%r1342, %r257, %r266;
	shl.b32 	%r1343, %r1342, 1;
	mul.wide.s32 	%rd215, %r1343, 4;
	add.s64 	%rd216, %rd15, %rd215;
	ld.global.f32 	%f24, [%rd216];
	@%p147 bra 	$L__BB0_215;
	bra.uni 	$L__BB0_214;

$L__BB0_215:
	mov.f32 	%f206, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f24;
  cvt.rn.f16.f32 high, %f206;
  mov.b32 %r2374, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_216;

$L__BB0_212:
	mov.f32 	%f202, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f202;
  cvt.rn.f16.f32 high, %f202;
  mov.b32 %r2374, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_216;

$L__BB0_214:
	mov.f32 	%f203, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f203;
  cvt.rn.f16.f32 high, %f24;
  mov.b32 %r2374, {low,high};}

	// end inline asm

$L__BB0_216:
	add.s32 	%r1346, %r315, 1;
	mul.wide.s32 	%rd217, %r1346, 4;
	add.s64 	%rd218, %rd16, %rd217;
	st.global.u32 	[%rd218], %r2374;
	add.s32 	%r2363, %r2363, 2;

$L__BB0_217:
	add.f32 	%f207, %f12, 0f00000000;
	setp.geu.f32 	%p148, %f207, 0f40000000;
	@%p148 bra 	$L__BB0_229;

	@%p10 bra 	$L__BB0_220;
	bra.uni 	$L__BB0_219;

$L__BB0_220:
	setp.eq.s32 	%p149, %r246, 0;
	add.s32 	%r1348, %r258, %r266;
	shl.b32 	%r1349, %r1348, 1;
	or.b32  	%r1350, %r1349, 1;
	mul.wide.s32 	%rd219, %r1350, 4;
	add.s64 	%rd220, %rd15, %rd219;
	ld.global.f32 	%f25, [%rd220];
	@%p149 bra 	$L__BB0_222;
	bra.uni 	$L__BB0_221;

$L__BB0_222:
	mov.f32 	%f213, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f25;
  cvt.rn.f16.f32 high, %f213;
  mov.b32 %r2376, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_223;

$L__BB0_219:
	mov.f32 	%f209, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f209;
  cvt.rn.f16.f32 high, %f209;
  mov.b32 %r2376, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_223;

$L__BB0_221:
	mov.f32 	%f210, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f210;
  cvt.rn.f16.f32 high, %f25;
  mov.b32 %r2376, {low,high};}

	// end inline asm

$L__BB0_223:
	add.s32 	%r326, %r2363, %r250;
	mul.wide.s32 	%rd221, %r326, 4;
	add.s64 	%rd222, %rd16, %rd221;
	st.global.u32 	[%rd222], %r2376;
	@%p10 bra 	$L__BB0_225;
	bra.uni 	$L__BB0_224;

$L__BB0_225:
	setp.eq.s32 	%p150, %r246, 0;
	add.s32 	%r1354, %r257, %r266;
	shl.b32 	%r1355, %r1354, 1;
	or.b32  	%r1356, %r1355, 1;
	mul.wide.s32 	%rd223, %r1356, 4;
	add.s64 	%rd224, %rd15, %rd223;
	ld.global.f32 	%f26, [%rd224];
	@%p150 bra 	$L__BB0_227;
	bra.uni 	$L__BB0_226;

$L__BB0_227:
	mov.f32 	%f219, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f26;
  cvt.rn.f16.f32 high, %f219;
  mov.b32 %r2377, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_228;

$L__BB0_224:
	mov.f32 	%f215, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f215;
  cvt.rn.f16.f32 high, %f215;
  mov.b32 %r2377, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_228;

$L__BB0_226:
	mov.f32 	%f216, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f216;
  cvt.rn.f16.f32 high, %f26;
  mov.b32 %r2377, {low,high};}

	// end inline asm

$L__BB0_228:
	add.s32 	%r1359, %r326, 1;
	mul.wide.s32 	%rd225, %r1359, 4;
	add.s64 	%rd226, %rd16, %rd225;
	st.global.u32 	[%rd226], %r2377;
	add.s32 	%r2363, %r2363, 2;

$L__BB0_229:
	or.b32  	%r1360, %r260, %r266;
	setp.gt.s32 	%p151, %r1360, -1;
	and.pred  	%p153, %p121, %p151;
	setp.lt.s32 	%p154, %r260, %r918;
	and.pred  	%p11, %p154, %p153;
	@%p145 bra 	$L__BB0_241;

	@%p11 bra 	$L__BB0_232;
	bra.uni 	$L__BB0_231;

$L__BB0_232:
	setp.eq.s32 	%p156, %r246, 0;
	add.s32 	%r1362, %r259, %r266;
	shl.b32 	%r1363, %r1362, 1;
	mul.wide.s32 	%rd227, %r1363, 4;
	add.s64 	%rd228, %rd15, %rd227;
	ld.global.f32 	%f27, [%rd228];
	@%p156 bra 	$L__BB0_234;
	bra.uni 	$L__BB0_233;

$L__BB0_234:
	mov.f32 	%f225, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f27;
  cvt.rn.f16.f32 high, %f225;
  mov.b32 %r2379, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_235;

$L__BB0_231:
	mov.f32 	%f221, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f221;
  cvt.rn.f16.f32 high, %f221;
  mov.b32 %r2379, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_235;

$L__BB0_233:
	mov.f32 	%f222, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f222;
  cvt.rn.f16.f32 high, %f27;
  mov.b32 %r2379, {low,high};}

	// end inline asm

$L__BB0_235:
	add.s32 	%r337, %r2363, %r250;
	mul.wide.s32 	%rd229, %r337, 4;
	add.s64 	%rd230, %rd16, %rd229;
	st.global.u32 	[%rd230], %r2379;
	@%p11 bra 	$L__BB0_237;
	bra.uni 	$L__BB0_236;

$L__BB0_237:
	setp.eq.s32 	%p157, %r246, 0;
	add.s32 	%r1367, %r261, %r266;
	shl.b32 	%r1368, %r1367, 1;
	mul.wide.s32 	%rd231, %r1368, 4;
	add.s64 	%rd232, %rd15, %rd231;
	ld.global.f32 	%f28, [%rd232];
	@%p157 bra 	$L__BB0_239;
	bra.uni 	$L__BB0_238;

$L__BB0_239:
	mov.f32 	%f231, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f28;
  cvt.rn.f16.f32 high, %f231;
  mov.b32 %r2380, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_240;

$L__BB0_236:
	mov.f32 	%f227, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f227;
  cvt.rn.f16.f32 high, %f227;
  mov.b32 %r2380, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_240;

$L__BB0_238:
	mov.f32 	%f228, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f228;
  cvt.rn.f16.f32 high, %f28;
  mov.b32 %r2380, {low,high};}

	// end inline asm

$L__BB0_240:
	add.s32 	%r1371, %r337, 1;
	mul.wide.s32 	%rd233, %r1371, 4;
	add.s64 	%rd234, %rd16, %rd233;
	st.global.u32 	[%rd234], %r2380;
	add.s32 	%r2363, %r2363, 2;

$L__BB0_241:
	@%p138 bra 	$L__BB0_253;

	@%p11 bra 	$L__BB0_244;
	bra.uni 	$L__BB0_243;

$L__BB0_244:
	setp.eq.s32 	%p159, %r246, 0;
	add.s32 	%r1373, %r259, %r266;
	shl.b32 	%r1374, %r1373, 1;
	or.b32  	%r1375, %r1374, 1;
	mul.wide.s32 	%rd235, %r1375, 4;
	add.s64 	%rd236, %rd15, %rd235;
	ld.global.f32 	%f29, [%rd236];
	@%p159 bra 	$L__BB0_246;
	bra.uni 	$L__BB0_245;

$L__BB0_246:
	mov.f32 	%f237, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f29;
  cvt.rn.f16.f32 high, %f237;
  mov.b32 %r2382, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_247;

$L__BB0_243:
	mov.f32 	%f233, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f233;
  cvt.rn.f16.f32 high, %f233;
  mov.b32 %r2382, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_247;

$L__BB0_245:
	mov.f32 	%f234, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f234;
  cvt.rn.f16.f32 high, %f29;
  mov.b32 %r2382, {low,high};}

	// end inline asm

$L__BB0_247:
	add.s32 	%r348, %r2363, %r250;
	mul.wide.s32 	%rd237, %r348, 4;
	add.s64 	%rd238, %rd16, %rd237;
	st.global.u32 	[%rd238], %r2382;
	@%p11 bra 	$L__BB0_249;
	bra.uni 	$L__BB0_248;

$L__BB0_249:
	setp.eq.s32 	%p160, %r246, 0;
	add.s32 	%r1379, %r261, %r266;
	shl.b32 	%r1380, %r1379, 1;
	or.b32  	%r1381, %r1380, 1;
	mul.wide.s32 	%rd239, %r1381, 4;
	add.s64 	%rd240, %rd15, %rd239;
	ld.global.f32 	%f30, [%rd240];
	@%p160 bra 	$L__BB0_251;
	bra.uni 	$L__BB0_250;

$L__BB0_251:
	mov.f32 	%f243, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f30;
  cvt.rn.f16.f32 high, %f243;
  mov.b32 %r2383, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_252;

$L__BB0_248:
	mov.f32 	%f239, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f239;
  cvt.rn.f16.f32 high, %f239;
  mov.b32 %r2383, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_252;

$L__BB0_250:
	mov.f32 	%f240, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f240;
  cvt.rn.f16.f32 high, %f30;
  mov.b32 %r2383, {low,high};}

	// end inline asm

$L__BB0_252:
	add.s32 	%r1384, %r348, 1;
	mul.wide.s32 	%rd241, %r1384, 4;
	add.s64 	%rd242, %rd16, %rd241;
	st.global.u32 	[%rd242], %r2383;
	add.s32 	%r2363, %r2363, 2;

$L__BB0_253:
	or.b32  	%r1385, %r263, %r266;
	setp.gt.s32 	%p161, %r1385, -1;
	and.pred  	%p163, %p121, %p161;
	setp.lt.s32 	%p164, %r263, %r918;
	and.pred  	%p12, %p164, %p163;
	@%p135 bra 	$L__BB0_265;

	@%p12 bra 	$L__BB0_256;
	bra.uni 	$L__BB0_255;

$L__BB0_256:
	setp.eq.s32 	%p166, %r246, 0;
	add.s32 	%r1387, %r262, %r266;
	shl.b32 	%r1388, %r1387, 1;
	mul.wide.s32 	%rd243, %r1388, 4;
	add.s64 	%rd244, %rd15, %rd243;
	ld.global.f32 	%f31, [%rd244];
	@%p166 bra 	$L__BB0_258;
	bra.uni 	$L__BB0_257;

$L__BB0_258:
	mov.f32 	%f249, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f31;
  cvt.rn.f16.f32 high, %f249;
  mov.b32 %r2385, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_259;

$L__BB0_255:
	mov.f32 	%f245, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f245;
  cvt.rn.f16.f32 high, %f245;
  mov.b32 %r2385, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_259;

$L__BB0_257:
	mov.f32 	%f246, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f246;
  cvt.rn.f16.f32 high, %f31;
  mov.b32 %r2385, {low,high};}

	// end inline asm

$L__BB0_259:
	add.s32 	%r359, %r2363, %r250;
	mul.wide.s32 	%rd245, %r359, 4;
	add.s64 	%rd246, %rd16, %rd245;
	st.global.u32 	[%rd246], %r2385;
	@%p12 bra 	$L__BB0_261;
	bra.uni 	$L__BB0_260;

$L__BB0_261:
	setp.eq.s32 	%p167, %r246, 0;
	add.s32 	%r1392, %r264, %r266;
	shl.b32 	%r1393, %r1392, 1;
	mul.wide.s32 	%rd247, %r1393, 4;
	add.s64 	%rd248, %rd15, %rd247;
	ld.global.f32 	%f32, [%rd248];
	@%p167 bra 	$L__BB0_263;
	bra.uni 	$L__BB0_262;

$L__BB0_263:
	mov.f32 	%f255, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f32;
  cvt.rn.f16.f32 high, %f255;
  mov.b32 %r2386, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_264;

$L__BB0_260:
	mov.f32 	%f251, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f251;
  cvt.rn.f16.f32 high, %f251;
  mov.b32 %r2386, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_264;

$L__BB0_262:
	mov.f32 	%f252, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f252;
  cvt.rn.f16.f32 high, %f32;
  mov.b32 %r2386, {low,high};}

	// end inline asm

$L__BB0_264:
	add.s32 	%r1396, %r359, 1;
	mul.wide.s32 	%rd249, %r1396, 4;
	add.s64 	%rd250, %rd16, %rd249;
	st.global.u32 	[%rd250], %r2386;
	add.s32 	%r2363, %r2363, 2;

$L__BB0_265:
	@%p128 bra 	$L__BB0_277;

	@%p12 bra 	$L__BB0_268;
	bra.uni 	$L__BB0_267;

$L__BB0_268:
	setp.eq.s32 	%p169, %r246, 0;
	add.s32 	%r1398, %r262, %r266;
	shl.b32 	%r1399, %r1398, 1;
	or.b32  	%r1400, %r1399, 1;
	mul.wide.s32 	%rd251, %r1400, 4;
	add.s64 	%rd252, %rd15, %rd251;
	ld.global.f32 	%f33, [%rd252];
	@%p169 bra 	$L__BB0_270;
	bra.uni 	$L__BB0_269;

$L__BB0_270:
	mov.f32 	%f261, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f33;
  cvt.rn.f16.f32 high, %f261;
  mov.b32 %r2388, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_271;

$L__BB0_267:
	mov.f32 	%f257, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f257;
  cvt.rn.f16.f32 high, %f257;
  mov.b32 %r2388, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_271;

$L__BB0_269:
	mov.f32 	%f258, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f258;
  cvt.rn.f16.f32 high, %f33;
  mov.b32 %r2388, {low,high};}

	// end inline asm

$L__BB0_271:
	add.s32 	%r370, %r2363, %r250;
	mul.wide.s32 	%rd253, %r370, 4;
	add.s64 	%rd254, %rd16, %rd253;
	st.global.u32 	[%rd254], %r2388;
	@%p12 bra 	$L__BB0_273;
	bra.uni 	$L__BB0_272;

$L__BB0_273:
	setp.eq.s32 	%p170, %r246, 0;
	add.s32 	%r1404, %r264, %r266;
	shl.b32 	%r1405, %r1404, 1;
	or.b32  	%r1406, %r1405, 1;
	mul.wide.s32 	%rd255, %r1406, 4;
	add.s64 	%rd256, %rd15, %rd255;
	ld.global.f32 	%f34, [%rd256];
	@%p170 bra 	$L__BB0_275;
	bra.uni 	$L__BB0_274;

$L__BB0_275:
	mov.f32 	%f267, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f34;
  cvt.rn.f16.f32 high, %f267;
  mov.b32 %r2389, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_276;

$L__BB0_272:
	mov.f32 	%f263, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f263;
  cvt.rn.f16.f32 high, %f263;
  mov.b32 %r2389, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_276;

$L__BB0_274:
	mov.f32 	%f264, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f264;
  cvt.rn.f16.f32 high, %f34;
  mov.b32 %r2389, {low,high};}

	// end inline asm

$L__BB0_276:
	add.s32 	%r1409, %r370, 1;
	mul.wide.s32 	%rd257, %r1409, 4;
	add.s64 	%rd258, %rd16, %rd257;
	st.global.u32 	[%rd258], %r2389;
	add.s32 	%r2363, %r2363, 2;

$L__BB0_277:
	add.s64 	%rd548, %rd548, 4;
	add.s64 	%rd547, %rd547, -4;
	setp.ne.s64 	%p171, %rd547, 0;
	@%p171 bra 	$L__BB0_157;

$L__BB0_278:
	add.s32 	%r2359, %r2359, %r41;
	setp.lt.s32 	%p172, %r2359, %r918;
	@%p172 bra 	$L__BB0_155;

$L__BB0_279:
	add.s32 	%r2353, %r2353, %r938;
	setp.lt.s32 	%p173, %r2353, %r917;
	@%p173 bra 	$L__BB0_153;
	bra.uni 	$L__BB0_280;

$L__BB0_134:
	@%p24 bra 	$L__BB0_280;

	neg.s32 	%r219, %r68;
	mov.u32 	%r1224, 31;
	sub.s32 	%r1225, %r1224, %r39;
	setp.gt.s32 	%p111, %r38, %r39;
	selp.b32 	%r1226, %r39, %r1225, %p111;
	shl.b32 	%r1227, %r1226, 2;
	mov.u32 	%r1228, 2;
	sub.s32 	%r220, %r1227, %r920;
	shl.b32 	%r1229, %r919, 2;
	mov.u32 	%r1230, 128;
	sub.s32 	%r221, %r1230, %r1229;
	sub.s32 	%r1231, %r1228, %r920;
	add.s32 	%r222, %r1231, %r1227;
	add.s32 	%r223, %r917, -1;
	add.s32 	%r224, %r220, 1;
	add.s32 	%r225, %r222, 1;
	rem.s32 	%r1256, %r224, %r221;
	add.s32 	%r1257, %r1256, %r221;
	rem.s32 	%r236, %r1257, %r221;
	rem.s32 	%r1258, %r225, %r221;
	add.s32 	%r1259, %r1258, %r221;
	rem.s32 	%r237, %r1259, %r221;

$L__BB0_136:
	setp.ne.s32 	%p112, %r35, %r219;
	@%p112 bra 	$L__BB0_150;

	shl.b32 	%r227, %r2353, 1;
	rem.s32 	%r1232, %r220, %r221;
	add.s32 	%r1233, %r1232, %r221;
	rem.s32 	%r228, %r1233, %r221;
	rem.s32 	%r1234, %r222, %r221;
	add.s32 	%r1235, %r1234, %r221;
	rem.s32 	%r229, %r1235, %r221;
	@%p111 bra 	$L__BB0_139;
	bra.uni 	$L__BB0_138;

$L__BB0_139:
	mul.lo.s32 	%r1238, %r227, %r221;
	add.s32 	%r1239, %r1238, %r228;
	mul.wide.s32 	%rd159, %r1239, 4;
	add.s64 	%rd160, %rd15, %rd159;
	ld.global.f32 	%f128, [%rd160];
	add.s32 	%r1240, %r1238, %r229;
	mul.wide.s32 	%rd161, %r1240, 4;
	add.s64 	%rd162, %rd15, %rd161;
	ld.global.f32 	%f129, [%rd162];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f128;
  cvt.rn.f16.f32 high, %f129;
  mov.b32 %r2354, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_140;

$L__BB0_138:
	mov.f32 	%f127, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f127;
  cvt.rn.f16.f32 high, %f127;
  mov.b32 %r2354, {low,high};}

	// end inline asm

$L__BB0_140:
	shl.b32 	%r1241, %r2353, 5;
	add.s32 	%r1242, %r1241, %r39;
	shl.b32 	%r1243, %r1242, 2;
	mul.wide.s32 	%rd163, %r1243, 4;
	add.s64 	%rd17, %rd16, %rd163;
	st.global.u32 	[%rd17], %r2354;
	@%p111 bra 	$L__BB0_142;
	bra.uni 	$L__BB0_141;

$L__BB0_142:
	add.s32 	%r1246, %r227, 1;
	mul.lo.s32 	%r1247, %r1246, %r221;
	add.s32 	%r1248, %r1247, %r228;
	mul.wide.s32 	%rd164, %r1248, 4;
	add.s64 	%rd165, %rd15, %rd164;
	ld.global.f32 	%f132, [%rd165];
	add.s32 	%r1249, %r1247, %r229;
	mul.wide.s32 	%rd166, %r1249, 4;
	add.s64 	%rd167, %rd15, %rd166;
	ld.global.f32 	%f133, [%rd167];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f132;
  cvt.rn.f16.f32 high, %f133;
  mov.b32 %r2355, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_143;

$L__BB0_141:
	mov.f32 	%f131, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f131;
  cvt.rn.f16.f32 high, %f131;
  mov.b32 %r2355, {low,high};}

	// end inline asm

$L__BB0_143:
	add.s32 	%r1250, %r223, %r2353;
	rem.s32 	%r1251, %r1250, %r917;
	shl.b32 	%r1252, %r1251, 5;
	add.s32 	%r1253, %r1252, %r39;
	shl.b32 	%r1254, %r1253, 2;
	or.b32  	%r1255, %r1254, 2;
	mul.wide.s32 	%rd168, %r1255, 4;
	add.s64 	%rd18, %rd16, %rd168;
	st.global.u32 	[%rd18], %r2355;
	@%p111 bra 	$L__BB0_145;
	bra.uni 	$L__BB0_144;

$L__BB0_145:
	mul.lo.s32 	%r1262, %r227, %r221;
	add.s32 	%r1263, %r1262, %r236;
	mul.wide.s32 	%rd169, %r1263, 4;
	add.s64 	%rd170, %rd15, %rd169;
	ld.global.f32 	%f136, [%rd170];
	add.s32 	%r1264, %r1262, %r237;
	mul.wide.s32 	%rd171, %r1264, 4;
	add.s64 	%rd172, %rd15, %rd171;
	ld.global.f32 	%f137, [%rd172];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f136;
  cvt.rn.f16.f32 high, %f137;
  mov.b32 %r2356, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_146;

$L__BB0_144:
	mov.f32 	%f135, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f135;
  cvt.rn.f16.f32 high, %f135;
  mov.b32 %r2356, {low,high};}

	// end inline asm

$L__BB0_146:
	st.global.u32 	[%rd17+4], %r2356;
	@%p111 bra 	$L__BB0_148;
	bra.uni 	$L__BB0_147;

$L__BB0_148:
	add.s32 	%r1267, %r227, 1;
	mul.lo.s32 	%r1268, %r1267, %r221;
	add.s32 	%r1269, %r1268, %r236;
	mul.wide.s32 	%rd173, %r1269, 4;
	add.s64 	%rd174, %rd15, %rd173;
	ld.global.f32 	%f140, [%rd174];
	add.s32 	%r1270, %r1268, %r237;
	mul.wide.s32 	%rd175, %r1270, 4;
	add.s64 	%rd176, %rd15, %rd175;
	ld.global.f32 	%f141, [%rd176];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f140;
  cvt.rn.f16.f32 high, %f141;
  mov.b32 %r2357, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_149;

$L__BB0_147:
	mov.f32 	%f139, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f139;
  cvt.rn.f16.f32 high, %f139;
  mov.b32 %r2357, {low,high};}

	// end inline asm

$L__BB0_149:
	st.global.u32 	[%rd18+4], %r2357;

$L__BB0_150:
	add.s32 	%r2353, %r2353, %r938;
	setp.lt.s32 	%p117, %r2353, %r917;
	@%p117 bra 	$L__BB0_136;

$L__BB0_280:
	add.s32 	%r1411, %r912, -1;
	mad.lo.s32 	%r1412, %r913, 576, 128;
	mul.lo.s32 	%r1413, %r1412, %r1411;
	add.s32 	%r1414, %r62, -64;
	add.s32 	%r1415, %r1414, %r62;
	add.s32 	%r1416, %r913, -1;
	mad.lo.s32 	%r1417, %r1415, %r1416, %r1413;
	mul.lo.s32 	%r1418, %r1411, %r913;
	mul.lo.s32 	%r1419, %r1418, 320;
	mad.lo.s32 	%r1420, %r1414, %r1416, %r1419;
	add.s32 	%r379, %r1420, %r1417;
	setp.lt.s32 	%p174, %r379, 1;
	mov.f32 	%f269, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f269;
  cvt.rn.f16.f32 high, %f269;
  mov.b32 %r2392, {low,high};}

	// end inline asm
	@%p174 bra 	$L__BB0_283;

	mov.u32 	%r2393, 0;
	mov.u32 	%r2391, _ZN6kernel5shmemE;

$L__BB0_282:
	st.shared.u32 	[%r2391], %r2392;
	mov.f32 	%f277, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f277;
  cvt.rn.f16.f32 high, %f277;
  mov.b32 %r1423, {low,high};}

	// end inline asm
	st.shared.u32 	[%r2391+4], %r1423;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f277;
  cvt.rn.f16.f32 high, %f277;
  mov.b32 %r1424, {low,high};}

	// end inline asm
	st.shared.u32 	[%r2391+8], %r1424;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f277;
  cvt.rn.f16.f32 high, %f277;
  mov.b32 %r1425, {low,high};}

	// end inline asm
	st.shared.u32 	[%r2391+12], %r1425;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f277;
  cvt.rn.f16.f32 high, %f277;
  mov.b32 %r2392, {low,high};}

	// end inline asm
	add.s32 	%r2391, %r2391, 16;
	add.s32 	%r2393, %r2393, 4;
	setp.lt.s32 	%p175, %r2393, %r379;
	@%p175 bra 	$L__BB0_282;

$L__BB0_283:
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f269;
  cvt.rn.f16.f32 high, %f269;
  mov.b32 %r1428, {low,high};}

	// end inline asm
	mov.u32 	%r1429, 31;
	sub.s32 	%r1430, %r1429, %r39;
	setp.gt.s32 	%p177, %r38, %r39;
	selp.b32 	%r1431, %r39, %r1430, %p177;
	shl.b32 	%r1432, %r1431, 2;
	sub.s32 	%r388, %r1432, %r920;
	shl.b32 	%r1433, %r919, 2;
	mov.u32 	%r1434, 128;
	sub.s32 	%r389, %r1434, %r1433;
	rem.s32 	%r1435, %r388, %r389;
	add.s32 	%r1436, %r1435, %r389;
	rem.s32 	%r390, %r1436, %r389;
	add.s32 	%r1437, %r388, 2;
	rem.s32 	%r1438, %r1437, %r389;
	add.s32 	%r1439, %r1438, %r389;
	rem.s32 	%r391, %r1439, %r389;
	add.s32 	%r1450, %r388, 1;
	rem.s32 	%r1451, %r1450, %r389;
	add.s32 	%r1452, %r1451, %r389;
	rem.s32 	%r392, %r1452, %r389;
	add.s32 	%r1453, %r388, 3;
	rem.s32 	%r1454, %r1453, %r389;
	add.s32 	%r1455, %r1454, %r389;
	rem.s32 	%r393, %r1455, %r389;
	// begin inline asm
	mov.u32 %r1466, %envreg2;
	// end inline asm
	cvt.u64.u32 	%rd264, %r1466;
	// begin inline asm
	mov.u32 %r1467, %envreg1;
	// end inline asm
	cvt.u64.u32 	%rd265, %r1467;
	bfi.b64 	%rd28, %rd265, %rd264, 32, 32;
	setp.ne.s64 	%p185, %rd28, 0;
	@%p185 bra 	$L__BB0_301;

	// begin inline asm
	trap;
	// end inline asm

$L__BB0_301:
	add.s64 	%rd29, %rd28, 4;
	mov.u32 	%r1468, %nctaid.y;
	mov.u32 	%r1469, %nctaid.x;
	mul.lo.s32 	%r1470, %r1469, %r1468;
	mov.u32 	%r1471, %nctaid.z;
	mul.lo.s32 	%r394, %r1470, %r1471;
	neg.s32 	%r1472, %r35;
	add.s32 	%r1473, %r39, %r34;
	setp.ne.s32 	%p186, %r1473, %r1472;
	mov.u32 	%r1474, %ctaid.x;
	add.s32 	%r395, %r1474, %r36;
	neg.s32 	%r396, %r37;
	bar.sync 	0;
	@%p186 bra 	$L__BB0_305;

	setp.eq.s32 	%p187, %r395, %r396;
	mov.u32 	%r1477, -2147483647;
	sub.s32 	%r1478, %r1477, %r394;
	selp.b32 	%r1476, %r1478, 1, %p187;
	membar.gl;
	// begin inline asm
	atom.add.release.gpu.u32 %r1475,[%rd29],%r1476;
	// end inline asm

$L__BB0_303:
	ld.volatile.u32 	%r1479, [%rd29];
	xor.b32  	%r1480, %r1479, %r1475;
	setp.gt.s32 	%p188, %r1480, -1;
	@%p188 bra 	$L__BB0_303;

	// begin inline asm
	ld.acquire.gpu.u32 %r1481,[%rd29];
	// end inline asm

$L__BB0_305:
	bar.sync 	0;
	setp.lt.s32 	%p189, %r42, 1;
	@%p189 bra 	$L__BB0_630;

	setp.lt.s32 	%p190, %r390, %r931;
	setp.ge.s32 	%p191, %r390, %r930;
	and.pred  	%p13, %p190, %p191;
	setp.lt.s32 	%p192, %r392, %r931;
	setp.ge.s32 	%p193, %r392, %r930;
	and.pred  	%p14, %p192, %p193;
	setp.lt.s32 	%p194, %r391, %r931;
	setp.ge.s32 	%p195, %r391, %r930;
	and.pred  	%p15, %p194, %p195;
	setp.lt.s32 	%p196, %r393, %r931;
	setp.ge.s32 	%p197, %r393, %r930;
	and.pred  	%p16, %p196, %p197;
	mov.u32 	%r2522, 0;
	mul.wide.s32 	%rd272, %r39, 16;
	mul.wide.s32 	%rd274, %r39, 8;
	mov.u32 	%r2394, %r1428;
	mov.u32 	%r2395, %r1428;
	mov.u32 	%r2647, %r1428;
	mov.u32 	%r2575, %r1428;
	mov.u32 	%r2398, %r1428;
	mov.u32 	%r2399, %r1428;
	mov.u32 	%r2682, %r1428;
	mov.u32 	%r2549, %r1428;
	mov.u32 	%r2550, %r1428;
	mov.u32 	%r2403, %r1428;
	mov.u32 	%r2577, %r1428;
	mov.u32 	%r2551, %r1428;
	mov.u32 	%r2552, %r1428;
	mov.u32 	%r2407, %r1428;
	mov.u32 	%r2650, %r1428;
	mov.u32 	%r2409, %r1428;
	mov.u32 	%r2410, %r1428;
	mov.u32 	%r2411, %r1428;
	mov.u32 	%r2412, %r1428;
	mov.u32 	%r2644, %r1428;
	mov.u32 	%r2639, %r1428;
	mov.u32 	%r2640, %r1428;
	mov.u32 	%r2416, %r1428;
	mov.u32 	%r2684, %r1428;
	mov.u32 	%r2418, %r1428;
	mov.u32 	%r2419, %r1428;
	mov.u32 	%r2420, %r1428;
	mov.u32 	%r2643, %r1428;
	mov.u32 	%r2641, %r1428;
	mov.u32 	%r2642, %r1428;
	mov.u32 	%r2424, %r1428;
	mov.u32 	%r2565, %r1428;
	mov.u32 	%r2426, %r1428;
	mov.u32 	%r2651, %r1428;
	mov.u32 	%r2555, %r1428;
	mov.u32 	%r2429, %r1428;
	mov.u32 	%r2561, %r1428;
	mov.u32 	%r2431, %r1428;
	mov.u32 	%r2652, %r1428;
	mov.u32 	%r2556, %r1428;
	mov.u32 	%r2434, %r1428;
	mov.u32 	%r2568, %r1428;
	mov.u32 	%r2436, %r1428;
	mov.u32 	%r2437, %r1428;
	mov.u32 	%r2654, %r1428;
	mov.u32 	%r2557, %r1428;
	mov.u32 	%r2558, %r1428;
	mov.u32 	%r2441, %r1428;
	mov.u32 	%r2570, %r1428;
	mov.u32 	%r2443, %r1428;
	mov.u32 	%r2444, %r1428;
	mov.u32 	%r2656, %r1428;
	mov.u32 	%r2571, %r1428;
	mov.u32 	%r2559, %r1428;
	mov.u32 	%r2585, %r1428;
	mov.u32 	%r2449, %r1428;
	mov.u32 	%r2572, %r1428;
	mov.u32 	%r2560, %r1428;
	mov.u32 	%r2587, %r1428;
	mov.u32 	%r2453, %r1428;
	mov.u32 	%r2615, %r1428;
	mov.u32 	%r2455, %r1428;
	mov.u32 	%r2456, %r1428;
	mov.u32 	%r2457, %r1428;
	mov.u32 	%r2616, %r1428;
	mov.u32 	%r2459, %r1428;
	mov.u32 	%r2460, %r1428;
	mov.u32 	%r2461, %r1428;
	mov.u32 	%r2617, %r1428;
	mov.u32 	%r2618, %r1428;
	mov.u32 	%r2464, %r1428;
	mov.u32 	%r2465, %r1428;
	mov.u32 	%r2466, %r1428;
	mov.u32 	%r2467, %r1428;
	mov.u32 	%r2468, %r1428;
	mov.u32 	%r2619, %r1428;
	mov.u32 	%r2620, %r1428;
	mov.u32 	%r2471, %r1428;
	mov.u32 	%r2472, %r1428;
	mov.u32 	%r2473, %r1428;
	mov.u32 	%r2474, %r1428;
	mov.u32 	%r2475, %r1428;
	mov.u32 	%r2476, %r1428;
	mov.u32 	%r2477, %r1428;
	mov.u32 	%r2478, %r1428;
	mov.u32 	%r2479, %r1428;
	mov.u32 	%r2480, %r1428;
	mov.u32 	%r2481, %r1428;
	mov.u32 	%r2624, %r1428;
	mov.u32 	%r2483, %r1428;
	mov.u32 	%r2484, %r1428;
	mov.u32 	%r2485, %r1428;
	mov.u32 	%r2486, %r1428;
	mov.u32 	%r2487, %r1428;
	mov.u32 	%r2626, %r1428;
	mov.u32 	%r2489, %r1428;
	mov.u32 	%r2490, %r1428;
	mov.u32 	%r2491, %r1428;
	mov.u32 	%r2492, %r1428;
	mov.u32 	%r2493, %r1428;
	mov.u32 	%r2627, %r1428;
	mov.u32 	%r2495, %r1428;
	mov.u32 	%r2496, %r1428;
	mov.u32 	%r2497, %r1428;
	mov.u32 	%r2498, %r1428;
	mov.u32 	%r2499, %r1428;
	mov.u32 	%r2500, %r1428;
	mov.u32 	%r2628, %r1428;
	mov.u32 	%r2502, %r1428;
	mov.u32 	%r2503, %r1428;
	mov.u32 	%r2504, %r1428;
	mov.u32 	%r2505, %r1428;
	mov.u32 	%r2506, %r1428;
	mov.u32 	%r2507, %r1428;
	mov.u32 	%r2508, %r1428;
	mov.u32 	%r2509, %r1428;
	mov.u32 	%r2510, %r1428;
	mov.u32 	%r2511, %r1428;
	mov.u32 	%r2512, %r1428;
	mov.u32 	%r2513, %r1428;
	mov.u32 	%r2514, %r1428;
	mov.u32 	%r2515, %r1428;
	mov.u32 	%r2516, %r1428;
	mov.u32 	%r2517, %r1428;
	mov.u32 	%r2518, %r1428;
	mov.u32 	%r2519, %r1428;
	mov.u32 	%r2520, %r1428;
	mov.u32 	%r2521, %r1428;

$L__BB0_307:
	mov.u32 	%r509, %r2505;
	mov.u32 	%r508, %r2504;
	mov.u32 	%r505, %r2628;
	mov.u32 	%r504, %r2500;
	mov.u32 	%r502, %r2498;
	mov.u32 	%r501, %r2497;
	mov.u32 	%r498, %r2627;
	mov.u32 	%r497, %r2493;
	mov.u32 	%r495, %r2491;
	mov.u32 	%r492, %r2626;
	mov.u32 	%r489, %r2485;
	mov.u32 	%r486, %r2624;
	mov.u32 	%r2504, %r2475;
	mov.u32 	%r478, %r2474;
	mov.u32 	%r475, %r2471;
	mov.u32 	%r2500, %r2620;
	mov.u32 	%r473, %r2619;
	mov.u32 	%r2497, %r2468;
	mov.u32 	%r471, %r2467;
	mov.u32 	%r468, %r2464;
	mov.u32 	%r2493, %r2618;
	mov.u32 	%r466, %r2617;
	mov.u32 	%r465, %r2461;
	mov.u32 	%r462, %r2616;
	mov.u32 	%r461, %r2457;
	mov.u32 	%r458, %r2615;
	mov.u32 	%r449, %r2656;
	mov.u32 	%r2569, %r2441;
	mov.u32 	%r442, %r2654;
	mov.u32 	%r2567, %r2434;
	mov.u32 	%r2505, %r2652;
	mov.u32 	%r435, %r2431;
	mov.u32 	%r434, %r2561;
	mov.u32 	%r2471, %r2429;
	mov.u32 	%r2498, %r2651;
	mov.u32 	%r430, %r2426;
	mov.u32 	%r429, %r2565;
	mov.u32 	%r2464, %r2424;
	mov.u32 	%r2491, %r2642;
	mov.u32 	%r426, %r2641;
	mov.u32 	%r2461, %r2643;
	mov.u32 	%r423, %r2419;
	mov.u32 	%r2554, %r2418;
	mov.u32 	%r2424, %r2684;
	mov.u32 	%r2565, %r2416;
	mov.u32 	%r2485, %r2640;
	mov.u32 	%r418, %r2639;
	mov.u32 	%r2457, %r2644;
	mov.u32 	%r415, %r2411;
	mov.u32 	%r2553, %r2410;
	mov.u32 	%r2426, %r2409;
	mov.u32 	%r2467, %r2650;
	mov.u32 	%r2468, %r2577;
	mov.u32 	%r2429, %r2682;
	mov.u32 	%r2563, %r2399;
	mov.u32 	%r2562, %r2398;
	mov.u32 	%r2475, %r2575;
	mov.u32 	%r2474, %r2647;
	mov.u32 	%r2431, %r2395;
	mov.u32 	%r2561, %r2394;
	not.b32 	%r1484, %r36;
	add.s32 	%r1485, %r914, %r1484;
	mul.lo.s32 	%r1486, %r1485, %r916;
	add.s32 	%r1487, %r2522, %r1486;
	not.b32 	%r1489, %r37;
	add.s32 	%r1490, %r915, %r1489;
	mul.lo.s32 	%r1491, %r1490, %r916;
	add.s32 	%r1492, %r2522, %r1491;
	rem.s32 	%r527, %r1487, %r61;
	rem.s32 	%r528, %r1492, %r970;
	add.s32 	%r1496, %r1486, %r1491;
	add.s32 	%r1497, %r1496, %r917;
	not.b32 	%r1498, %r34;
	add.s32 	%r1499, %r912, %r1498;
	mad.lo.s32 	%r1500, %r1485, %r912, %r1499;
	not.b32 	%r1501, %r35;
	add.s32 	%r1502, %r913, %r1501;
	mad.lo.s32 	%r1503, %r1490, %r913, %r1502;
	add.s32 	%r1504, %r1500, %r1503;
	shl.b32 	%r1505, %r1504, 1;
	add.s32 	%r1506, %r1497, %r1505;
	add.s32 	%r1507, %r2522, %r1506;
	add.s32 	%r1508, %r2522, %r1496;
	div.s32 	%r1509, %r1507, %r917;
	mul.lo.s32 	%r1510, %r1509, %r917;
	sub.s32 	%r1511, %r41, %r917;
	sub.s32 	%r529, %r1507, %r1510;
	sub.s32 	%r1512, %r1500, %r1503;
	shl.b32 	%r1513, %r1512, 1;
	add.s32 	%r1514, %r1513, %r918;
	mad.lo.s32 	%r1515, %r1509, %r41, %r1514;
	mad.lo.s32 	%r1516, %r1509, %r1511, %r1508;
	div.s32 	%r1517, %r1515, %r918;
	mul.lo.s32 	%r1518, %r1517, %r918;
	sub.s32 	%r1521, %r939, %r918;
	sub.s32 	%r530, %r1515, %r1518;
	mad.lo.s32 	%r531, %r1517, %r1521, %r1516;
	setp.lt.s32 	%p198, %r34, 1;
	mov.u32 	%r2615, %r1428;
	mov.u32 	%r2616, %r1428;
	mov.u32 	%r2621, %r1428;
	mov.u32 	%r2622, %r1428;
	mov.u32 	%r2623, %r1428;
	mov.u32 	%r2624, %r1428;
	mov.u32 	%r2625, %r1428;
	mov.u32 	%r2626, %r1428;
	mov.u32 	%r2633, %r1428;
	mov.u32 	%r2634, %r1428;
	@%p198 bra 	$L__BB0_309;

	mul.lo.s32 	%r1522, %r913, 320;
	add.s32 	%r1523, %r34, -1;
	mul.lo.s32 	%r1524, %r35, 320;
	mad.lo.s32 	%r1525, %r1522, %r1523, %r1524;
	add.s32 	%r1528, %r972, -64;
	mad.lo.s32 	%r1533, %r1528, %r1416, %r1413;
	add.s32 	%r1534, %r1525, %r1533;
	shl.b32 	%r1535, %r1534, 2;
	mov.u32 	%r1536, _ZN6kernel5shmemE;
	add.s32 	%r1537, %r1536, %r1535;
	shl.b32 	%r1538, %r39, 4;
	add.s32 	%r1539, %r1537, %r1538;
	ld.shared.v4.u32 	{%r2626, %r2624, %r2616, %r2615}, [%r1539];
	shl.b32 	%r1544, %r39, 3;
	add.s32 	%r1545, %r1537, %r1544;
	ld.shared.v2.u32 	{%r2625, %r2623}, [%r1545+512];
	ld.shared.v4.u32 	{%r2634, %r2633, %r2622, %r2621}, [%r1539+768];

$L__BB0_309:
	setp.lt.s32 	%p199, %r35, 1;
	mov.u32 	%r2617, %r1428;
	mov.u32 	%r2618, %r1428;
	mov.u32 	%r2619, %r1428;
	mov.u32 	%r2620, %r1428;
	mov.u32 	%r2627, %r1428;
	mov.u32 	%r2628, %r1428;
	mov.u32 	%r2629, %r1428;
	mov.u32 	%r2630, %r1428;
	mov.u32 	%r2631, %r1428;
	mov.u32 	%r2632, %r1428;
	mov.u32 	%r2635, %r1428;
	mov.u32 	%r2636, %r1428;
	@%p199 bra 	$L__BB0_312;

	mad.lo.s32 	%r1557, %r1499, 384, %r1419;
	add.s32 	%r1560, %r35, -1;
	mad.lo.s32 	%r1561, %r1414, %r1560, %r1557;
	add.s32 	%r1567, %r1561, %r1417;
	shl.b32 	%r1568, %r1567, 2;
	mov.u32 	%r1569, _ZN6kernel5shmemE;
	add.s32 	%r1570, %r1569, %r1568;
	shl.b32 	%r1571, %r39, 4;
	add.s32 	%r1572, %r1570, %r1571;
	ld.shared.v4.u32 	{%r2636, %r2635, %r2631, %r2629}, [%r1572];
	shl.b32 	%r1577, %r39, 3;
	add.s32 	%r1578, %r1570, %r1577;
	ld.shared.v2.u32 	{%r2632, %r2630}, [%r1578+512];
	ld.shared.v4.u32 	{%r2628, %r2627, %r2619, %r2617}, [%r1572+768];
	mov.u32 	%r2618, %r1428;
	mov.u32 	%r2620, %r1428;
	@%p198 bra 	$L__BB0_312;

	add.s32 	%r2294, %r1578, 512;
	ld.shared.v2.u32 	{%r2620, %r2618}, [%r2294+768];

$L__BB0_312:
	setp.eq.s32 	%p201, %r34, 0;
	@%p201 bra 	$L__BB0_317;

	setp.eq.s32 	%p202, %r35, %r1416;
	@%p202 bra 	$L__BB0_315;

	sub.s32 	%r1588, %r912, %r34;
	mul.lo.s32 	%r1590, %r62, %r35;
	mad.lo.s32 	%r1591, %r1588, 384, %r1590;
	mad.lo.s32 	%r1594, %r1414, %r1416, %r1591;
	mad.lo.s32 	%r1597, %r1412, %r1411, %r1594;
	shl.b32 	%r1598, %r1597, 2;
	mov.u32 	%r1599, _ZN6kernel5shmemE;
	add.s32 	%r1600, %r1599, %r1598;
	shl.b32 	%r1601, %r39, 4;
	add.s32 	%r1602, %r1600, %r1601;
	ld.shared.v4.u32 	{%r2552, %r2550, %r2560, %r2559}, [%r1602];

$L__BB0_315:
	shl.b32 	%r1607, %r35, 8;
	shl.b32 	%r1611, %r913, 8;
	or.b32  	%r1612, %r1611, 128;
	add.s32 	%r1613, %r34, -1;
	mad.lo.s32 	%r1614, %r1612, %r1613, %r1419;
	add.s32 	%r1615, %r1614, %r1607;
	shl.b32 	%r1616, %r1615, 2;
	mov.u32 	%r1617, _ZN6kernel5shmemE;
	add.s32 	%r1618, %r1617, %r1616;
	setp.ne.s32 	%p203, %r35, %r1416;
	shl.b32 	%r1620, %r39, 4;
	add.s32 	%r585, %r1618, %r1620;
	ld.shared.v4.u32 	{%r2556, %r2558, %r2555, %r2557}, [%r585];
	ld.shared.v4.u32 	{%r2554, %r2553, %r2551, %r2549}, [%r585+512];
	@%p203 bra 	$L__BB0_317;

	ld.shared.v4.u32 	{%r2552, %r2550, %r2560, %r2559}, [%r585+1024];

$L__BB0_317:
	setp.eq.s32 	%p204, %r35, 0;
	@%p204 bra 	$L__BB0_320;

	mul.lo.s32 	%r1634, %r62, %r35;
	sub.s32 	%r1635, %r1634, %r62;
	mad.lo.s32 	%r1638, %r1499, 384, %r1635;
	mad.lo.s32 	%r1641, %r1414, %r1416, %r1638;
	mad.lo.s32 	%r1644, %r1412, %r1411, %r1641;
	shl.b32 	%r1645, %r1644, 2;
	mov.u32 	%r1646, _ZN6kernel5shmemE;
	add.s32 	%r1647, %r1646, %r1645;
	shl.b32 	%r1648, %r39, 4;
	add.s32 	%r1649, %r1647, %r1648;
	ld.shared.v4.u32 	{%r2570, %r2568, %r2563, %r2562}, [%r1649+512];
	ld.shared.v4.u32 	{%r2569, %r2567, %r2561, %r2565}, [%r1649+1024];
	@%p201 bra 	$L__BB0_320;

	add.s32 	%r2295, %r1649, 512;
	ld.shared.v4.u32 	{%r2571, %r2572, %r2429, %r2424}, [%r2295+1024];

$L__BB0_320:
	ld.param.u64 	%rd269, [%rd1+80];
	cvta.to.global.u64 	%rd30, %rd269;
	setp.ne.s32 	%p206, %r34, 0;
	mov.u32 	%r2575, %r2475;
	mov.u32 	%r2637, %r2403;
	mov.u32 	%r2577, %r2468;
	mov.u32 	%r2638, %r2407;
	mov.u32 	%r2639, %r418;
	mov.u32 	%r2640, %r2485;
	mov.u32 	%r2641, %r426;
	mov.u32 	%r2642, %r2491;
	mov.u32 	%r2643, %r2461;
	mov.u32 	%r2644, %r2457;
	mov.u32 	%r2645, %r2449;
	mov.u32 	%r2646, %r2453;
	@%p206 bra 	$L__BB0_325;

	mad.lo.s32 	%r1663, %r527, %r915, %r37;
	mul.lo.s32 	%r1664, %r913, %r1663;
	mul.lo.s32 	%r1665, %r1664, 768;
	mad.lo.s32 	%r1666, %r35, 384, %r1665;
	add.s32 	%r1667, %r1666, -64;
	mul.wide.s32 	%rd270, %r1667, 4;
	add.s64 	%rd271, %rd30, %rd270;
	add.s64 	%rd273, %rd271, %rd272;
	ld.global.v4.u32 	{%r2642, %r2640, %r2643, %r2644}, [%rd273+256];
	ld.global.v4.u32 	{%r2646, %r2645, %r2638, %r2637}, [%rd273+1024];
	add.s64 	%rd31, %rd271, %rd274;
	mov.u32 	%r2575, %r2475;
	mov.u32 	%r2577, %r2468;
	@%p204 bra 	$L__BB0_323;

	ld.global.v2.u32 	{%r2575, %r2577}, [%rd31];

$L__BB0_323:
	setp.ne.s32 	%p208, %r35, %r1416;
	ld.global.v2.u32 	{%r2641, %r2639}, [%rd31+768];
	@%p208 bra 	$L__BB0_325;

	ld.global.v2.u32 	{%r2587, %r2585}, [%rd31+1536];

$L__BB0_325:
	setp.ne.s32 	%p209, %r35, 0;
	mov.u32 	%r2647, %r2474;
	mov.u32 	%r2650, %r2467;
	mov.u32 	%r2651, %r2498;
	mov.u32 	%r2652, %r2505;
	mov.u32 	%r2653, %r2437;
	mov.u32 	%r2654, %r442;
	mov.u32 	%r2655, %r2444;
	mov.u32 	%r2656, %r449;
	mov.u32 	%r2657, %r2477;
	mov.u32 	%r2658, %r2479;
	@%p209 bra 	$L__BB0_327;

	mad.lo.s32 	%r1684, %r528, %r914, %r36;
	mul.lo.s32 	%r1688, %r1684, %r973;
	mad.lo.s32 	%r1691, %r1499, 384, %r1688;
	add.s32 	%r1692, %r1691, -64;
	mad.lo.s32 	%r1695, %r975, %r61, %r1692;
	mul.wide.s32 	%rd275, %r1695, 4;
	add.s64 	%rd276, %rd30, %rd275;
	add.s64 	%rd278, %rd276, %rd272;
	ld.global.v4.u32 	{%r2658, %r2657, %r2655, %r2653}, [%rd278+256];
	ld.global.v4.u32 	{%r2652, %r2651, %r2647, %r2650}, [%rd278+1024];
	add.s64 	%rd280, %rd276, %rd274;
	ld.global.v2.u32 	{%r2656, %r2654}, [%rd280+768];
	ld.global.v2.u32 	{%r2575, %r2577}, [%rd280+1536];

$L__BB0_327:
	add.s32 	%r1708, %r917, -1;
	setp.ge.s32 	%p210, %r529, %r1708;
	setp.lt.s32 	%p211, %r529, 2;
	or.pred  	%p212, %p211, %p210;
	setp.lt.s32 	%p213, %r530, 2;
	or.pred  	%p214, %p213, %p212;
	add.s32 	%r1709, %r918, -2;
	setp.ge.s32 	%p215, %r530, %r1709;
	or.pred  	%p216, %p215, %p214;
	@%p216 bra 	$L__BB0_338;

	ld.param.u64 	%rd545, [%rd1+88];
	cvta.to.global.u64 	%rd544, %rd545;
	mad.lo.s32 	%r697, %r530, %r917, %r529;
	shl.b32 	%r1710, %r697, 6;
	mul.wide.s32 	%rd283, %r1710, 4;
	add.s64 	%rd33, %rd544, %rd283;
	and.pred  	%p219, %p206, %p209;
	@%p219 bra 	$L__BB0_330;

	add.s64 	%rd285, %rd33, %rd274;
	ld.global.v2.u32 	{%r2620, %r2618}, [%rd285+256];

$L__BB0_330:
	@%p206 bra 	$L__BB0_332;

	shl.b32 	%r1713, %r917, 5;
	cvt.s64.s32 	%rd286, %r1713;
	cvt.s64.s32 	%rd287, %r39;
	add.s64 	%rd288, %rd286, %rd287;
	shl.b64 	%rd289, %rd288, 3;
	add.s64 	%rd290, %rd33, %rd289;
	ld.global.v2.u32 	{%r2625, %r2623}, [%rd290];

$L__BB0_332:
	@%p209 bra 	$L__BB0_334;

	shl.b32 	%r1716, %r917, 5;
	neg.s32 	%r1717, %r1716;
	cvt.s64.s32 	%rd291, %r1717;
	cvt.s64.s32 	%rd292, %r39;
	add.s64 	%rd293, %rd291, %rd292;
	shl.b64 	%rd294, %rd293, 3;
	add.s64 	%rd295, %rd33, %rd294;
	ld.global.v2.u32 	{%r2632, %r2630}, [%rd295];

$L__BB0_334:
	mad.lo.s32 	%r2306, %r530, %r917, %r529;
	ld.param.u64 	%rd541, [%rd1+88];
	cvta.to.global.u64 	%rd540, %rd541;
	shl.b32 	%r1720, %r918, 6;
	shl.b32 	%r1721, %r2306, 7;
	mad.lo.s32 	%r1722, %r1720, %r917, %r1721;
	mul.wide.s32 	%rd296, %r1722, 4;
	add.s64 	%rd34, %rd540, %rd296;
	@%p206 bra 	$L__BB0_336;

	shl.b32 	%r1723, %r917, 5;
	cvt.s64.s32 	%rd297, %r1723;
	cvt.s64.s32 	%rd298, %r39;
	add.s64 	%rd299, %rd297, %rd298;
	shl.b64 	%rd300, %rd299, 4;
	add.s64 	%rd301, %rd34, %rd300;
	ld.global.v4.u32 	{%r2626, %r2624, %r2616, %r2615}, [%rd301];
	shl.b32 	%r1728, %r917, 6;
	add.s32 	%r1729, %r1728, -32;
	cvt.s64.s32 	%rd302, %r1729;
	add.s64 	%rd303, %rd302, %rd298;
	shl.b64 	%rd304, %rd303, 4;
	add.s64 	%rd305, %rd34, %rd304;
	ld.global.v4.u32 	{%r2634, %r2633, %r2622, %r2621}, [%rd305];

$L__BB0_336:
	@%p209 bra 	$L__BB0_338;

	shl.b32 	%r1734, %r917, 5;
	xor.b32  	%r1735, %r1734, -32;
	cvt.s64.s32 	%rd306, %r1735;
	cvt.s64.s32 	%rd307, %r39;
	add.s64 	%rd308, %rd306, %rd307;
	shl.b64 	%rd309, %rd308, 4;
	add.s64 	%rd310, %rd34, %rd309;
	ld.global.v4.u32 	{%r2636, %r2635, %r2631, %r2629}, [%rd310];
	add.s64 	%rd312, %rd34, %rd272;
	ld.global.v4.u32 	{%r2628, %r2627, %r2619, %r2617}, [%rd312];

$L__BB0_338:
	bar.sync 	0;
	ld.param.u64 	%rd314, [%rd1+160];
	cvta.to.global.u64 	%rd35, %rd314;
	add.s32 	%r1744, %r926, 2;
	setp.lt.s32 	%p224, %r529, %r1744;
	add.s32 	%r1745, %r927, -1;
	setp.ge.s32 	%p225, %r529, %r1745;
	or.pred  	%p226, %p225, %p224;
	add.s32 	%r1746, %r928, 2;
	setp.lt.s32 	%p227, %r530, %r1746;
	or.pred  	%p228, %p226, %p227;
	add.s32 	%r1747, %r929, -2;
	setp.ge.s32 	%p229, %r530, %r1747;
	or.pred  	%p230, %p229, %p228;
	setp.lt.s32 	%p231, %r531, %r923;
	or.pred  	%p232, %p231, %p230;
	mad.lo.s32 	%r1748, %r925, %r924, %r923;
	setp.ge.s32 	%p233, %r531, %r1748;
	or.pred  	%p234, %p232, %p233;
	@%p234 bra 	$L__BB0_580;

	sub.s32 	%r756, %r531, %r923;
	rem.s32 	%r1749, %r756, %r924;
	setp.ne.s32 	%p235, %r1749, 0;
	@%p235 bra 	$L__BB0_580;

	div.s32 	%r1750, %r756, %r924;
	mul.lo.s32 	%r1752, %r1750, %r48;
	sub.s32 	%r757, %r529, %r926;
	sub.s32 	%r758, %r530, %r928;
	mul.lo.s32 	%r759, %r1752, 3;
	add.s32 	%r1753, %r757, %r759;
	add.s32 	%r1754, %r1753, -2;
	mul.lo.s32 	%r760, %r1754, %r49;
	add.s32 	%r1756, %r758, %r760;
	mul.lo.s32 	%r1757, %r1756, %r50;
	sub.s32 	%r761, %r1757, %r930;
	@%p17 bra 	$L__BB0_345;

	not.pred 	%p237, %p13;
	@%p237 bra 	$L__BB0_343;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2521;
  cvt.f32.f16 %f314, low;}

	// end inline asm
	add.s32 	%r1759, %r761, %r390;
	mul.wide.s32 	%rd315, %r1759, 4;
	add.s64 	%rd316, %rd35, %rd315;
	st.global.f32 	[%rd316], %f314;

$L__BB0_343:
	not.pred 	%p238, %p15;
	@%p238 bra 	$L__BB0_345;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2521;
  cvt.f32.f16 %f315, high;}

	// end inline asm
	add.s32 	%r1761, %r761, %r391;
	mul.wide.s32 	%rd317, %r1761, 4;
	add.s64 	%rd318, %rd35, %rd317;
	st.global.f32 	[%rd318], %f315;

$L__BB0_345:
	@%p17 bra 	$L__BB0_350;

	not.pred 	%p240, %p14;
	@%p240 bra 	$L__BB0_348;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2517;
  cvt.f32.f16 %f316, low;}

	// end inline asm
	add.s32 	%r1763, %r761, %r392;
	mul.wide.s32 	%rd319, %r1763, 4;
	add.s64 	%rd320, %rd35, %rd319;
	st.global.f32 	[%rd320], %f316;

$L__BB0_348:
	not.pred 	%p241, %p16;
	@%p241 bra 	$L__BB0_350;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2517;
  cvt.f32.f16 %f317, high;}

	// end inline asm
	add.s32 	%r1765, %r761, %r393;
	mul.wide.s32 	%rd321, %r1765, 4;
	add.s64 	%rd322, %rd35, %rd321;
	st.global.f32 	[%rd322], %f317;

$L__BB0_350:
	sub.s32 	%r2307, %r529, %r926;
	add.s32 	%r762, %r759, %r48;
	add.s32 	%r1767, %r2307, %r762;
	add.s32 	%r1768, %r1767, -2;
	mad.lo.s32 	%r1770, %r1768, %r49, %r758;
	mul.lo.s32 	%r1771, %r1770, %r50;
	sub.s32 	%r763, %r1771, %r930;
	@%p17 bra 	$L__BB0_355;

	not.pred 	%p243, %p13;
	@%p243 bra 	$L__BB0_353;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2520;
  cvt.f32.f16 %f318, low;}

	// end inline asm
	add.s32 	%r1773, %r763, %r390;
	mul.wide.s32 	%rd323, %r1773, 4;
	add.s64 	%rd324, %rd35, %rd323;
	st.global.f32 	[%rd324], %f318;

$L__BB0_353:
	not.pred 	%p244, %p15;
	@%p244 bra 	$L__BB0_355;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2520;
  cvt.f32.f16 %f319, high;}

	// end inline asm
	add.s32 	%r1775, %r763, %r391;
	mul.wide.s32 	%rd325, %r1775, 4;
	add.s64 	%rd326, %rd35, %rd325;
	st.global.f32 	[%rd326], %f319;

$L__BB0_355:
	@%p17 bra 	$L__BB0_360;

	not.pred 	%p246, %p14;
	@%p246 bra 	$L__BB0_358;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2516;
  cvt.f32.f16 %f320, low;}

	// end inline asm
	add.s32 	%r1777, %r763, %r392;
	mul.wide.s32 	%rd327, %r1777, 4;
	add.s64 	%rd328, %rd35, %rd327;
	st.global.f32 	[%rd328], %f320;

$L__BB0_358:
	not.pred 	%p247, %p16;
	@%p247 bra 	$L__BB0_360;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2516;
  cvt.f32.f16 %f321, high;}

	// end inline asm
	add.s32 	%r1779, %r763, %r393;
	mul.wide.s32 	%rd329, %r1779, 4;
	add.s64 	%rd330, %rd35, %rd329;
	st.global.f32 	[%rd330], %f321;

$L__BB0_360:
	add.s32 	%r764, %r758, 1;
	add.s32 	%r1780, %r764, %r760;
	mul.lo.s32 	%r1781, %r1780, %r50;
	sub.s32 	%r765, %r1781, %r930;
	@%p17 bra 	$L__BB0_365;

	not.pred 	%p249, %p13;
	@%p249 bra 	$L__BB0_363;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2513;
  cvt.f32.f16 %f322, low;}

	// end inline asm
	add.s32 	%r1783, %r765, %r390;
	mul.wide.s32 	%rd331, %r1783, 4;
	add.s64 	%rd332, %rd35, %rd331;
	st.global.f32 	[%rd332], %f322;

$L__BB0_363:
	not.pred 	%p250, %p15;
	@%p250 bra 	$L__BB0_365;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2513;
  cvt.f32.f16 %f323, high;}

	// end inline asm
	add.s32 	%r1785, %r765, %r391;
	mul.wide.s32 	%rd333, %r1785, 4;
	add.s64 	%rd334, %rd35, %rd333;
	st.global.f32 	[%rd334], %f323;

$L__BB0_365:
	@%p17 bra 	$L__BB0_370;

	not.pred 	%p252, %p14;
	@%p252 bra 	$L__BB0_368;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2511;
  cvt.f32.f16 %f324, low;}

	// end inline asm
	add.s32 	%r1787, %r765, %r392;
	mul.wide.s32 	%rd335, %r1787, 4;
	add.s64 	%rd336, %rd35, %rd335;
	st.global.f32 	[%rd336], %f324;

$L__BB0_368:
	not.pred 	%p253, %p16;
	@%p253 bra 	$L__BB0_370;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2511;
  cvt.f32.f16 %f325, high;}

	// end inline asm
	add.s32 	%r1789, %r765, %r393;
	mul.wide.s32 	%rd337, %r1789, 4;
	add.s64 	%rd338, %rd35, %rd337;
	st.global.f32 	[%rd338], %f325;

$L__BB0_370:
	not.b32 	%r1790, %r926;
	add.s32 	%r766, %r529, %r1790;
	not.b32 	%r1791, %r928;
	add.s32 	%r767, %r530, %r1791;
	add.s32 	%r1792, %r766, %r759;
	mul.lo.s32 	%r768, %r1792, %r49;
	add.s32 	%r1794, %r767, %r768;
	mul.lo.s32 	%r1795, %r1794, %r50;
	sub.s32 	%r769, %r1795, %r930;
	@%p17 bra 	$L__BB0_375;

	not.pred 	%p255, %p13;
	@%p255 bra 	$L__BB0_373;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2479;
  cvt.f32.f16 %f326, low;}

	// end inline asm
	add.s32 	%r1797, %r769, %r390;
	mul.wide.s32 	%rd339, %r1797, 4;
	add.s64 	%rd340, %rd35, %rd339;
	st.global.f32 	[%rd340], %f326;

$L__BB0_373:
	not.pred 	%p256, %p15;
	@%p256 bra 	$L__BB0_375;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2479;
  cvt.f32.f16 %f327, high;}

	// end inline asm
	add.s32 	%r1799, %r769, %r391;
	mul.wide.s32 	%rd341, %r1799, 4;
	add.s64 	%rd342, %rd35, %rd341;
	st.global.f32 	[%rd342], %f327;

$L__BB0_375:
	@%p17 bra 	$L__BB0_380;

	not.pred 	%p258, %p14;
	@%p258 bra 	$L__BB0_378;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2477;
  cvt.f32.f16 %f328, low;}

	// end inline asm
	add.s32 	%r1801, %r769, %r392;
	mul.wide.s32 	%rd343, %r1801, 4;
	add.s64 	%rd344, %rd35, %rd343;
	st.global.f32 	[%rd344], %f328;

$L__BB0_378:
	not.pred 	%p259, %p16;
	@%p259 bra 	$L__BB0_380;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2477;
  cvt.f32.f16 %f329, high;}

	// end inline asm
	add.s32 	%r1803, %r769, %r393;
	mul.wide.s32 	%rd345, %r1803, 4;
	add.s64 	%rd346, %rd35, %rd345;
	st.global.f32 	[%rd346], %f329;

$L__BB0_380:
	add.s32 	%r1805, %r766, %r762;
	mul.lo.s32 	%r770, %r1805, %r49;
	add.s32 	%r1806, %r767, %r770;
	mul.lo.s32 	%r1807, %r1806, %r50;
	sub.s32 	%r771, %r1807, %r930;
	@%p17 bra 	$L__BB0_385;

	not.pred 	%p261, %p13;
	@%p261 bra 	$L__BB0_383;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2509;
  cvt.f32.f16 %f330, low;}

	// end inline asm
	add.s32 	%r1809, %r771, %r390;
	mul.wide.s32 	%rd347, %r1809, 4;
	add.s64 	%rd348, %rd35, %rd347;
	st.global.f32 	[%rd348], %f330;

$L__BB0_383:
	not.pred 	%p262, %p15;
	@%p262 bra 	$L__BB0_385;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2509;
  cvt.f32.f16 %f331, high;}

	// end inline asm
	add.s32 	%r1811, %r771, %r391;
	mul.wide.s32 	%rd349, %r1811, 4;
	add.s64 	%rd350, %rd35, %rd349;
	st.global.f32 	[%rd350], %f331;

$L__BB0_385:
	@%p17 bra 	$L__BB0_390;

	not.pred 	%p264, %p14;
	@%p264 bra 	$L__BB0_388;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2507;
  cvt.f32.f16 %f332, low;}

	// end inline asm
	add.s32 	%r1813, %r771, %r392;
	mul.wide.s32 	%rd351, %r1813, 4;
	add.s64 	%rd352, %rd35, %rd351;
	st.global.f32 	[%rd352], %f332;

$L__BB0_388:
	not.pred 	%p265, %p16;
	@%p265 bra 	$L__BB0_390;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2507;
  cvt.f32.f16 %f333, high;}

	// end inline asm
	add.s32 	%r1815, %r771, %r393;
	mul.wide.s32 	%rd353, %r1815, 4;
	add.s64 	%rd354, %rd35, %rd353;
	st.global.f32 	[%rd354], %f333;

$L__BB0_390:
	add.s32 	%r1816, %r758, %r768;
	mul.lo.s32 	%r1817, %r1816, %r50;
	sub.s32 	%r772, %r1817, %r930;
	@%p17 bra 	$L__BB0_395;

	not.pred 	%p267, %p13;
	@%p267 bra 	$L__BB0_393;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r509;
  cvt.f32.f16 %f334, low;}

	// end inline asm
	add.s32 	%r1819, %r772, %r390;
	mul.wide.s32 	%rd355, %r1819, 4;
	add.s64 	%rd356, %rd35, %rd355;
	st.global.f32 	[%rd356], %f334;

$L__BB0_393:
	not.pred 	%p268, %p15;
	@%p268 bra 	$L__BB0_395;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r509;
  cvt.f32.f16 %f335, high;}

	// end inline asm
	add.s32 	%r1821, %r772, %r391;
	mul.wide.s32 	%rd357, %r1821, 4;
	add.s64 	%rd358, %rd35, %rd357;
	st.global.f32 	[%rd358], %f335;

$L__BB0_395:
	@%p17 bra 	$L__BB0_400;

	not.pred 	%p270, %p14;
	@%p270 bra 	$L__BB0_398;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r502;
  cvt.f32.f16 %f336, low;}

	// end inline asm
	add.s32 	%r1823, %r772, %r392;
	mul.wide.s32 	%rd359, %r1823, 4;
	add.s64 	%rd360, %rd35, %rd359;
	st.global.f32 	[%rd360], %f336;

$L__BB0_398:
	not.pred 	%p271, %p16;
	@%p271 bra 	$L__BB0_400;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r502;
  cvt.f32.f16 %f337, high;}

	// end inline asm
	add.s32 	%r1825, %r772, %r393;
	mul.wide.s32 	%rd361, %r1825, 4;
	add.s64 	%rd362, %rd35, %rd361;
	st.global.f32 	[%rd362], %f337;

$L__BB0_400:
	add.s32 	%r1826, %r758, %r770;
	mul.lo.s32 	%r1827, %r1826, %r50;
	sub.s32 	%r773, %r1827, %r930;
	@%p17 bra 	$L__BB0_405;

	not.pred 	%p273, %p13;
	@%p273 bra 	$L__BB0_403;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r508;
  cvt.f32.f16 %f338, low;}

	// end inline asm
	add.s32 	%r1829, %r773, %r390;
	mul.wide.s32 	%rd363, %r1829, 4;
	add.s64 	%rd364, %rd35, %rd363;
	st.global.f32 	[%rd364], %f338;

$L__BB0_403:
	not.pred 	%p274, %p15;
	@%p274 bra 	$L__BB0_405;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r508;
  cvt.f32.f16 %f339, high;}

	// end inline asm
	add.s32 	%r1831, %r773, %r391;
	mul.wide.s32 	%rd365, %r1831, 4;
	add.s64 	%rd366, %rd35, %rd365;
	st.global.f32 	[%rd366], %f339;

$L__BB0_405:
	@%p17 bra 	$L__BB0_410;

	not.pred 	%p276, %p14;
	@%p276 bra 	$L__BB0_408;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r501;
  cvt.f32.f16 %f340, low;}

	// end inline asm
	add.s32 	%r1833, %r773, %r392;
	mul.wide.s32 	%rd367, %r1833, 4;
	add.s64 	%rd368, %rd35, %rd367;
	st.global.f32 	[%rd368], %f340;

$L__BB0_408:
	not.pred 	%p277, %p16;
	@%p277 bra 	$L__BB0_410;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r501;
  cvt.f32.f16 %f341, high;}

	// end inline asm
	add.s32 	%r1835, %r773, %r393;
	mul.wide.s32 	%rd369, %r1835, 4;
	add.s64 	%rd370, %rd35, %rd369;
	st.global.f32 	[%rd370], %f341;

$L__BB0_410:
	add.s32 	%r774, %r762, %r48;
	add.s32 	%r1837, %r766, %r774;
	mul.lo.s32 	%r775, %r1837, %r49;
	add.s32 	%r1839, %r758, %r775;
	mul.lo.s32 	%r1840, %r1839, %r50;
	sub.s32 	%r776, %r1840, %r930;
	@%p17 bra 	$L__BB0_415;

	not.pred 	%p279, %p13;
	@%p279 bra 	$L__BB0_413;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2503;
  cvt.f32.f16 %f342, low;}

	// end inline asm
	add.s32 	%r1842, %r776, %r390;
	mul.wide.s32 	%rd371, %r1842, 4;
	add.s64 	%rd372, %rd35, %rd371;
	st.global.f32 	[%rd372], %f342;

$L__BB0_413:
	not.pred 	%p280, %p15;
	@%p280 bra 	$L__BB0_415;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2503;
  cvt.f32.f16 %f343, high;}

	// end inline asm
	add.s32 	%r1844, %r776, %r391;
	mul.wide.s32 	%rd373, %r1844, 4;
	add.s64 	%rd374, %rd35, %rd373;
	st.global.f32 	[%rd374], %f343;

$L__BB0_415:
	@%p17 bra 	$L__BB0_420;

	not.pred 	%p282, %p14;
	@%p282 bra 	$L__BB0_418;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2496;
  cvt.f32.f16 %f344, low;}

	// end inline asm
	add.s32 	%r1846, %r776, %r392;
	mul.wide.s32 	%rd375, %r1846, 4;
	add.s64 	%rd376, %rd35, %rd375;
	st.global.f32 	[%rd376], %f344;

$L__BB0_418:
	not.pred 	%p283, %p16;
	@%p283 bra 	$L__BB0_420;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2496;
  cvt.f32.f16 %f345, high;}

	// end inline asm
	add.s32 	%r1848, %r776, %r393;
	mul.wide.s32 	%rd377, %r1848, 4;
	add.s64 	%rd378, %rd35, %rd377;
	st.global.f32 	[%rd378], %f345;

$L__BB0_420:
	add.s32 	%r2299, %r758, 1;
	add.s32 	%r1849, %r2299, %r768;
	mul.lo.s32 	%r1850, %r1849, %r50;
	sub.s32 	%r777, %r1850, %r930;
	@%p17 bra 	$L__BB0_425;

	not.pred 	%p285, %p13;
	@%p285 bra 	$L__BB0_423;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r495;
  cvt.f32.f16 %f346, low;}

	// end inline asm
	add.s32 	%r1852, %r777, %r390;
	mul.wide.s32 	%rd379, %r1852, 4;
	add.s64 	%rd380, %rd35, %rd379;
	st.global.f32 	[%rd380], %f346;

$L__BB0_423:
	not.pred 	%p286, %p15;
	@%p286 bra 	$L__BB0_425;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r495;
  cvt.f32.f16 %f347, high;}

	// end inline asm
	add.s32 	%r1854, %r777, %r391;
	mul.wide.s32 	%rd381, %r1854, 4;
	add.s64 	%rd382, %rd35, %rd381;
	st.global.f32 	[%rd382], %f347;

$L__BB0_425:
	@%p17 bra 	$L__BB0_430;

	not.pred 	%p288, %p14;
	@%p288 bra 	$L__BB0_428;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r489;
  cvt.f32.f16 %f348, low;}

	// end inline asm
	add.s32 	%r1856, %r777, %r392;
	mul.wide.s32 	%rd383, %r1856, 4;
	add.s64 	%rd384, %rd35, %rd383;
	st.global.f32 	[%rd384], %f348;

$L__BB0_428:
	not.pred 	%p289, %p16;
	@%p289 bra 	$L__BB0_430;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r489;
  cvt.f32.f16 %f349, high;}

	// end inline asm
	add.s32 	%r1858, %r777, %r393;
	mul.wide.s32 	%rd385, %r1858, 4;
	add.s64 	%rd386, %rd35, %rd385;
	st.global.f32 	[%rd386], %f349;

$L__BB0_430:
	add.s32 	%r2300, %r758, 1;
	add.s32 	%r1859, %r2300, %r770;
	mul.lo.s32 	%r1860, %r1859, %r50;
	sub.s32 	%r778, %r1860, %r930;
	@%p17 bra 	$L__BB0_435;

	not.pred 	%p291, %p13;
	@%p291 bra 	$L__BB0_433;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2490;
  cvt.f32.f16 %f350, low;}

	// end inline asm
	add.s32 	%r1862, %r778, %r390;
	mul.wide.s32 	%rd387, %r1862, 4;
	add.s64 	%rd388, %rd35, %rd387;
	st.global.f32 	[%rd388], %f350;

$L__BB0_433:
	not.pred 	%p292, %p15;
	@%p292 bra 	$L__BB0_435;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2490;
  cvt.f32.f16 %f351, high;}

	// end inline asm
	add.s32 	%r1864, %r778, %r391;
	mul.wide.s32 	%rd389, %r1864, 4;
	add.s64 	%rd390, %rd35, %rd389;
	st.global.f32 	[%rd390], %f351;

$L__BB0_435:
	@%p17 bra 	$L__BB0_440;

	not.pred 	%p294, %p14;
	@%p294 bra 	$L__BB0_438;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2484;
  cvt.f32.f16 %f352, low;}

	// end inline asm
	add.s32 	%r1866, %r778, %r392;
	mul.wide.s32 	%rd391, %r1866, 4;
	add.s64 	%rd392, %rd35, %rd391;
	st.global.f32 	[%rd392], %f352;

$L__BB0_438:
	not.pred 	%p295, %p16;
	@%p295 bra 	$L__BB0_440;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2484;
  cvt.f32.f16 %f353, high;}

	// end inline asm
	add.s32 	%r1868, %r778, %r393;
	mul.wide.s32 	%rd393, %r1868, 4;
	add.s64 	%rd394, %rd35, %rd393;
	st.global.f32 	[%rd394], %f353;

$L__BB0_440:
	add.s32 	%r2301, %r758, 1;
	add.s32 	%r1869, %r2301, %r775;
	mul.lo.s32 	%r1870, %r1869, %r50;
	sub.s32 	%r779, %r1870, %r930;
	@%p17 bra 	$L__BB0_445;

	not.pred 	%p297, %p13;
	@%p297 bra 	$L__BB0_443;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2489;
  cvt.f32.f16 %f354, low;}

	// end inline asm
	add.s32 	%r1872, %r779, %r390;
	mul.wide.s32 	%rd395, %r1872, 4;
	add.s64 	%rd396, %rd35, %rd395;
	st.global.f32 	[%rd396], %f354;

$L__BB0_443:
	not.pred 	%p298, %p15;
	@%p298 bra 	$L__BB0_445;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2489;
  cvt.f32.f16 %f355, high;}

	// end inline asm
	add.s32 	%r1874, %r779, %r391;
	mul.wide.s32 	%rd397, %r1874, 4;
	add.s64 	%rd398, %rd35, %rd397;
	st.global.f32 	[%rd398], %f355;

$L__BB0_445:
	@%p17 bra 	$L__BB0_450;

	not.pred 	%p300, %p14;
	@%p300 bra 	$L__BB0_448;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2483;
  cvt.f32.f16 %f356, low;}

	// end inline asm
	add.s32 	%r1876, %r779, %r392;
	mul.wide.s32 	%rd399, %r1876, 4;
	add.s64 	%rd400, %rd35, %rd399;
	st.global.f32 	[%rd400], %f356;

$L__BB0_448:
	not.pred 	%p301, %p16;
	@%p301 bra 	$L__BB0_450;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2483;
  cvt.f32.f16 %f357, high;}

	// end inline asm
	add.s32 	%r1878, %r779, %r393;
	mul.wide.s32 	%rd401, %r1878, 4;
	add.s64 	%rd402, %rd35, %rd401;
	st.global.f32 	[%rd402], %f357;

$L__BB0_450:
	add.s32 	%r780, %r758, 2;
	add.s32 	%r1879, %r780, %r768;
	mul.lo.s32 	%r1880, %r1879, %r50;
	sub.s32 	%r781, %r1880, %r930;
	@%p17 bra 	$L__BB0_455;

	not.pred 	%p303, %p13;
	@%p303 bra 	$L__BB0_453;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2453;
  cvt.f32.f16 %f358, low;}

	// end inline asm
	add.s32 	%r1882, %r781, %r390;
	mul.wide.s32 	%rd403, %r1882, 4;
	add.s64 	%rd404, %rd35, %rd403;
	st.global.f32 	[%rd404], %f358;

$L__BB0_453:
	not.pred 	%p304, %p15;
	@%p304 bra 	$L__BB0_455;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2453;
  cvt.f32.f16 %f359, high;}

	// end inline asm
	add.s32 	%r1884, %r781, %r391;
	mul.wide.s32 	%rd405, %r1884, 4;
	add.s64 	%rd406, %rd35, %rd405;
	st.global.f32 	[%rd406], %f359;

$L__BB0_455:
	@%p17 bra 	$L__BB0_460;

	not.pred 	%p306, %p14;
	@%p306 bra 	$L__BB0_458;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2449;
  cvt.f32.f16 %f360, low;}

	// end inline asm
	add.s32 	%r1886, %r781, %r392;
	mul.wide.s32 	%rd407, %r1886, 4;
	add.s64 	%rd408, %rd35, %rd407;
	st.global.f32 	[%rd408], %f360;

$L__BB0_458:
	not.pred 	%p307, %p16;
	@%p307 bra 	$L__BB0_460;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2449;
  cvt.f32.f16 %f361, high;}

	// end inline asm
	add.s32 	%r1888, %r781, %r393;
	mul.wide.s32 	%rd409, %r1888, 4;
	add.s64 	%rd410, %rd35, %rd409;
	st.global.f32 	[%rd410], %f361;

$L__BB0_460:
	mul.lo.s32 	%r782, %r1767, %r49;
	add.s32 	%r1891, %r767, %r782;
	mul.lo.s32 	%r1892, %r1891, %r50;
	sub.s32 	%r783, %r1892, %r930;
	@%p17 bra 	$L__BB0_465;

	not.pred 	%p309, %p13;
	@%p309 bra 	$L__BB0_463;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r449;
  cvt.f32.f16 %f362, low;}

	// end inline asm
	add.s32 	%r1894, %r783, %r390;
	mul.wide.s32 	%rd411, %r1894, 4;
	add.s64 	%rd412, %rd35, %rd411;
	st.global.f32 	[%rd412], %f362;

$L__BB0_463:
	not.pred 	%p310, %p15;
	@%p310 bra 	$L__BB0_465;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r449;
  cvt.f32.f16 %f363, high;}

	// end inline asm
	add.s32 	%r1896, %r783, %r391;
	mul.wide.s32 	%rd413, %r1896, 4;
	add.s64 	%rd414, %rd35, %rd413;
	st.global.f32 	[%rd414], %f363;

$L__BB0_465:
	@%p17 bra 	$L__BB0_470;

	not.pred 	%p312, %p14;
	@%p312 bra 	$L__BB0_468;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r442;
  cvt.f32.f16 %f364, low;}

	// end inline asm
	add.s32 	%r1898, %r783, %r392;
	mul.wide.s32 	%rd415, %r1898, 4;
	add.s64 	%rd416, %rd35, %rd415;
	st.global.f32 	[%rd416], %f364;

$L__BB0_468:
	not.pred 	%p313, %p16;
	@%p313 bra 	$L__BB0_470;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r442;
  cvt.f32.f16 %f365, high;}

	// end inline asm
	add.s32 	%r1900, %r783, %r393;
	mul.wide.s32 	%rd417, %r1900, 4;
	add.s64 	%rd418, %rd35, %rd417;
	st.global.f32 	[%rd418], %f365;

$L__BB0_470:
	sub.s32 	%r2308, %r529, %r926;
	add.s32 	%r1902, %r2308, %r774;
	mul.lo.s32 	%r784, %r1902, %r49;
	add.s32 	%r1903, %r767, %r784;
	mul.lo.s32 	%r1904, %r1903, %r50;
	sub.s32 	%r785, %r1904, %r930;
	@%p17 bra 	$L__BB0_475;

	not.pred 	%p315, %p13;
	@%p315 bra 	$L__BB0_473;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2444;
  cvt.f32.f16 %f366, low;}

	// end inline asm
	add.s32 	%r1906, %r785, %r390;
	mul.wide.s32 	%rd419, %r1906, 4;
	add.s64 	%rd420, %rd35, %rd419;
	st.global.f32 	[%rd420], %f366;

$L__BB0_473:
	not.pred 	%p316, %p15;
	@%p316 bra 	$L__BB0_475;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2444;
  cvt.f32.f16 %f367, high;}

	// end inline asm
	add.s32 	%r1908, %r785, %r391;
	mul.wide.s32 	%rd421, %r1908, 4;
	add.s64 	%rd422, %rd35, %rd421;
	st.global.f32 	[%rd422], %f367;

$L__BB0_475:
	@%p17 bra 	$L__BB0_480;

	not.pred 	%p318, %p14;
	@%p318 bra 	$L__BB0_478;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2437;
  cvt.f32.f16 %f368, low;}

	// end inline asm
	add.s32 	%r1910, %r785, %r392;
	mul.wide.s32 	%rd423, %r1910, 4;
	add.s64 	%rd424, %rd35, %rd423;
	st.global.f32 	[%rd424], %f368;

$L__BB0_478:
	not.pred 	%p319, %p16;
	@%p319 bra 	$L__BB0_480;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2437;
  cvt.f32.f16 %f369, high;}

	// end inline asm
	add.s32 	%r1912, %r785, %r393;
	mul.wide.s32 	%rd425, %r1912, 4;
	add.s64 	%rd426, %rd35, %rd425;
	st.global.f32 	[%rd426], %f369;

$L__BB0_480:
	mul.lo.s32 	%r786, %r1753, %r49;
	add.s32 	%r1915, %r758, %r786;
	mul.lo.s32 	%r1916, %r1915, %r50;
	sub.s32 	%r787, %r1916, %r930;
	@%p17 bra 	$L__BB0_485;

	not.pred 	%p321, %p13;
	@%p321 bra 	$L__BB0_483;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2505;
  cvt.f32.f16 %f370, low;}

	// end inline asm
	add.s32 	%r1918, %r787, %r390;
	mul.wide.s32 	%rd427, %r1918, 4;
	add.s64 	%rd428, %rd35, %rd427;
	st.global.f32 	[%rd428], %f370;

$L__BB0_483:
	not.pred 	%p322, %p15;
	@%p322 bra 	$L__BB0_485;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2505;
  cvt.f32.f16 %f371, high;}

	// end inline asm
	add.s32 	%r1920, %r787, %r391;
	mul.wide.s32 	%rd429, %r1920, 4;
	add.s64 	%rd430, %rd35, %rd429;
	st.global.f32 	[%rd430], %f371;

$L__BB0_485:
	@%p17 bra 	$L__BB0_490;

	not.pred 	%p324, %p14;
	@%p324 bra 	$L__BB0_488;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2498;
  cvt.f32.f16 %f372, low;}

	// end inline asm
	add.s32 	%r1922, %r787, %r392;
	mul.wide.s32 	%rd431, %r1922, 4;
	add.s64 	%rd432, %rd35, %rd431;
	st.global.f32 	[%rd432], %f372;

$L__BB0_488:
	not.pred 	%p325, %p16;
	@%p325 bra 	$L__BB0_490;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2498;
  cvt.f32.f16 %f373, high;}

	// end inline asm
	add.s32 	%r1924, %r787, %r393;
	mul.wide.s32 	%rd433, %r1924, 4;
	add.s64 	%rd434, %rd35, %rd433;
	st.global.f32 	[%rd434], %f373;

$L__BB0_490:
	add.s32 	%r1925, %r758, %r782;
	mul.lo.s32 	%r1926, %r1925, %r50;
	sub.s32 	%r788, %r1926, %r930;
	@%p17 bra 	$L__BB0_495;

	not.pred 	%p327, %p13;
	@%p327 bra 	$L__BB0_493;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2504;
  cvt.f32.f16 %f374, low;}

	// end inline asm
	add.s32 	%r1928, %r788, %r390;
	mul.wide.s32 	%rd435, %r1928, 4;
	add.s64 	%rd436, %rd35, %rd435;
	st.global.f32 	[%rd436], %f374;

$L__BB0_493:
	not.pred 	%p328, %p15;
	@%p328 bra 	$L__BB0_495;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2504;
  cvt.f32.f16 %f375, high;}

	// end inline asm
	add.s32 	%r1930, %r788, %r391;
	mul.wide.s32 	%rd437, %r1930, 4;
	add.s64 	%rd438, %rd35, %rd437;
	st.global.f32 	[%rd438], %f375;

$L__BB0_495:
	@%p17 bra 	$L__BB0_500;

	not.pred 	%p330, %p14;
	@%p330 bra 	$L__BB0_498;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2497;
  cvt.f32.f16 %f376, low;}

	// end inline asm
	add.s32 	%r1932, %r788, %r392;
	mul.wide.s32 	%rd439, %r1932, 4;
	add.s64 	%rd440, %rd35, %rd439;
	st.global.f32 	[%rd440], %f376;

$L__BB0_498:
	not.pred 	%p331, %p16;
	@%p331 bra 	$L__BB0_500;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2497;
  cvt.f32.f16 %f377, high;}

	// end inline asm
	add.s32 	%r1934, %r788, %r393;
	mul.wide.s32 	%rd441, %r1934, 4;
	add.s64 	%rd442, %rd35, %rd441;
	st.global.f32 	[%rd442], %f377;

$L__BB0_500:
	add.s32 	%r1935, %r758, %r784;
	mul.lo.s32 	%r1936, %r1935, %r50;
	sub.s32 	%r789, %r1936, %r930;
	@%p17 bra 	$L__BB0_505;

	not.pred 	%p333, %p13;
	@%p333 bra 	$L__BB0_503;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r478;
  cvt.f32.f16 %f378, low;}

	// end inline asm
	add.s32 	%r1938, %r789, %r390;
	mul.wide.s32 	%rd443, %r1938, 4;
	add.s64 	%rd444, %rd35, %rd443;
	st.global.f32 	[%rd444], %f378;

$L__BB0_503:
	not.pred 	%p334, %p15;
	@%p334 bra 	$L__BB0_505;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r478;
  cvt.f32.f16 %f379, high;}

	// end inline asm
	add.s32 	%r1940, %r789, %r391;
	mul.wide.s32 	%rd445, %r1940, 4;
	add.s64 	%rd446, %rd35, %rd445;
	st.global.f32 	[%rd446], %f379;

$L__BB0_505:
	@%p17 bra 	$L__BB0_510;

	not.pred 	%p336, %p14;
	@%p336 bra 	$L__BB0_508;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r471;
  cvt.f32.f16 %f380, low;}

	// end inline asm
	add.s32 	%r1942, %r789, %r392;
	mul.wide.s32 	%rd447, %r1942, 4;
	add.s64 	%rd448, %rd35, %rd447;
	st.global.f32 	[%rd448], %f380;

$L__BB0_508:
	not.pred 	%p337, %p16;
	@%p337 bra 	$L__BB0_510;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r471;
  cvt.f32.f16 %f381, high;}

	// end inline asm
	add.s32 	%r1944, %r789, %r393;
	mul.wide.s32 	%rd449, %r1944, 4;
	add.s64 	%rd450, %rd35, %rd449;
	st.global.f32 	[%rd450], %f381;

$L__BB0_510:
	add.s32 	%r2302, %r758, 1;
	add.s32 	%r1945, %r2302, %r786;
	mul.lo.s32 	%r1946, %r1945, %r50;
	sub.s32 	%r790, %r1946, %r930;
	@%p17 bra 	$L__BB0_515;

	not.pred 	%p339, %p13;
	@%p339 bra 	$L__BB0_513;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2491;
  cvt.f32.f16 %f382, low;}

	// end inline asm
	add.s32 	%r1948, %r790, %r390;
	mul.wide.s32 	%rd451, %r1948, 4;
	add.s64 	%rd452, %rd35, %rd451;
	st.global.f32 	[%rd452], %f382;

$L__BB0_513:
	not.pred 	%p340, %p15;
	@%p340 bra 	$L__BB0_515;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2491;
  cvt.f32.f16 %f383, high;}

	// end inline asm
	add.s32 	%r1950, %r790, %r391;
	mul.wide.s32 	%rd453, %r1950, 4;
	add.s64 	%rd454, %rd35, %rd453;
	st.global.f32 	[%rd454], %f383;

$L__BB0_515:
	@%p17 bra 	$L__BB0_520;

	not.pred 	%p342, %p14;
	@%p342 bra 	$L__BB0_518;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2485;
  cvt.f32.f16 %f384, low;}

	// end inline asm
	add.s32 	%r1952, %r790, %r392;
	mul.wide.s32 	%rd455, %r1952, 4;
	add.s64 	%rd456, %rd35, %rd455;
	st.global.f32 	[%rd456], %f384;

$L__BB0_518:
	not.pred 	%p343, %p16;
	@%p343 bra 	$L__BB0_520;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2485;
  cvt.f32.f16 %f385, high;}

	// end inline asm
	add.s32 	%r1954, %r790, %r393;
	mul.wide.s32 	%rd457, %r1954, 4;
	add.s64 	%rd458, %rd35, %rd457;
	st.global.f32 	[%rd458], %f385;

$L__BB0_520:
	add.s32 	%r2303, %r758, 1;
	add.s32 	%r1955, %r2303, %r782;
	mul.lo.s32 	%r1956, %r1955, %r50;
	sub.s32 	%r791, %r1956, %r930;
	@%p17 bra 	$L__BB0_525;

	not.pred 	%p345, %p13;
	@%p345 bra 	$L__BB0_523;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r426;
  cvt.f32.f16 %f386, low;}

	// end inline asm
	add.s32 	%r1958, %r791, %r390;
	mul.wide.s32 	%rd459, %r1958, 4;
	add.s64 	%rd460, %rd35, %rd459;
	st.global.f32 	[%rd460], %f386;

$L__BB0_523:
	not.pred 	%p346, %p15;
	@%p346 bra 	$L__BB0_525;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r426;
  cvt.f32.f16 %f387, high;}

	// end inline asm
	add.s32 	%r1960, %r791, %r391;
	mul.wide.s32 	%rd461, %r1960, 4;
	add.s64 	%rd462, %rd35, %rd461;
	st.global.f32 	[%rd462], %f387;

$L__BB0_525:
	@%p17 bra 	$L__BB0_530;

	not.pred 	%p348, %p14;
	@%p348 bra 	$L__BB0_528;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r418;
  cvt.f32.f16 %f388, low;}

	// end inline asm
	add.s32 	%r1962, %r791, %r392;
	mul.wide.s32 	%rd463, %r1962, 4;
	add.s64 	%rd464, %rd35, %rd463;
	st.global.f32 	[%rd464], %f388;

$L__BB0_528:
	not.pred 	%p349, %p16;
	@%p349 bra 	$L__BB0_530;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r418;
  cvt.f32.f16 %f389, high;}

	// end inline asm
	add.s32 	%r1964, %r791, %r393;
	mul.wide.s32 	%rd465, %r1964, 4;
	add.s64 	%rd466, %rd35, %rd465;
	st.global.f32 	[%rd466], %f389;

$L__BB0_530:
	add.s32 	%r2304, %r758, 1;
	add.s32 	%r1965, %r2304, %r784;
	mul.lo.s32 	%r1966, %r1965, %r50;
	sub.s32 	%r792, %r1966, %r930;
	@%p17 bra 	$L__BB0_535;

	not.pred 	%p351, %p13;
	@%p351 bra 	$L__BB0_533;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r465;
  cvt.f32.f16 %f390, low;}

	// end inline asm
	add.s32 	%r1968, %r792, %r390;
	mul.wide.s32 	%rd467, %r1968, 4;
	add.s64 	%rd468, %rd35, %rd467;
	st.global.f32 	[%rd468], %f390;

$L__BB0_533:
	not.pred 	%p352, %p15;
	@%p352 bra 	$L__BB0_535;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r465;
  cvt.f32.f16 %f391, high;}

	// end inline asm
	add.s32 	%r1970, %r792, %r391;
	mul.wide.s32 	%rd469, %r1970, 4;
	add.s64 	%rd470, %rd35, %rd469;
	st.global.f32 	[%rd470], %f391;

$L__BB0_535:
	@%p17 bra 	$L__BB0_540;

	not.pred 	%p354, %p14;
	@%p354 bra 	$L__BB0_538;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r461;
  cvt.f32.f16 %f392, low;}

	// end inline asm
	add.s32 	%r1972, %r792, %r392;
	mul.wide.s32 	%rd471, %r1972, 4;
	add.s64 	%rd472, %rd35, %rd471;
	st.global.f32 	[%rd472], %f392;

$L__BB0_538:
	not.pred 	%p355, %p16;
	@%p355 bra 	$L__BB0_540;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r461;
  cvt.f32.f16 %f393, high;}

	// end inline asm
	add.s32 	%r1974, %r792, %r393;
	mul.wide.s32 	%rd473, %r1974, 4;
	add.s64 	%rd474, %rd35, %rd473;
	st.global.f32 	[%rd474], %f393;

$L__BB0_540:
	add.s32 	%r2310, %r758, 2;
	add.s32 	%r1975, %r2310, %r784;
	mul.lo.s32 	%r1976, %r1975, %r50;
	sub.s32 	%r793, %r1976, %r930;
	@%p17 bra 	$L__BB0_545;

	not.pred 	%p357, %p13;
	@%p357 bra 	$L__BB0_543;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2407;
  cvt.f32.f16 %f394, low;}

	// end inline asm
	add.s32 	%r1978, %r793, %r390;
	mul.wide.s32 	%rd475, %r1978, 4;
	add.s64 	%rd476, %rd35, %rd475;
	st.global.f32 	[%rd476], %f394;

$L__BB0_543:
	not.pred 	%p358, %p15;
	@%p358 bra 	$L__BB0_545;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2407;
  cvt.f32.f16 %f395, high;}

	// end inline asm
	add.s32 	%r1980, %r793, %r391;
	mul.wide.s32 	%rd477, %r1980, 4;
	add.s64 	%rd478, %rd35, %rd477;
	st.global.f32 	[%rd478], %f395;

$L__BB0_545:
	@%p17 bra 	$L__BB0_550;

	not.pred 	%p360, %p14;
	@%p360 bra 	$L__BB0_548;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2403;
  cvt.f32.f16 %f396, low;}

	// end inline asm
	add.s32 	%r1982, %r793, %r392;
	mul.wide.s32 	%rd479, %r1982, 4;
	add.s64 	%rd480, %rd35, %rd479;
	st.global.f32 	[%rd480], %f396;

$L__BB0_548:
	not.pred 	%p361, %p16;
	@%p361 bra 	$L__BB0_550;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2403;
  cvt.f32.f16 %f397, high;}

	// end inline asm
	add.s32 	%r1984, %r793, %r393;
	mul.wide.s32 	%rd481, %r1984, 4;
	add.s64 	%rd482, %rd35, %rd481;
	st.global.f32 	[%rd482], %f397;

$L__BB0_550:
	sub.s32 	%r2309, %r529, %r926;
	add.s32 	%r794, %r2309, 1;
	add.s32 	%r1985, %r794, %r762;
	mad.lo.s32 	%r1987, %r1985, %r49, %r758;
	mul.lo.s32 	%r1988, %r1987, %r50;
	sub.s32 	%r795, %r1988, %r930;
	@%p17 bra 	$L__BB0_555;

	not.pred 	%p363, %p13;
	@%p363 bra 	$L__BB0_553;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2475;
  cvt.f32.f16 %f398, low;}

	// end inline asm
	add.s32 	%r1990, %r795, %r390;
	mul.wide.s32 	%rd483, %r1990, 4;
	add.s64 	%rd484, %rd35, %rd483;
	st.global.f32 	[%rd484], %f398;

$L__BB0_553:
	not.pred 	%p364, %p15;
	@%p364 bra 	$L__BB0_555;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2475;
  cvt.f32.f16 %f399, high;}

	// end inline asm
	add.s32 	%r1992, %r795, %r391;
	mul.wide.s32 	%rd485, %r1992, 4;
	add.s64 	%rd486, %rd35, %rd485;
	st.global.f32 	[%rd486], %f399;

$L__BB0_555:
	@%p17 bra 	$L__BB0_560;

	not.pred 	%p366, %p14;
	@%p366 bra 	$L__BB0_558;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2468;
  cvt.f32.f16 %f400, low;}

	// end inline asm
	add.s32 	%r1994, %r795, %r392;
	mul.wide.s32 	%rd487, %r1994, 4;
	add.s64 	%rd488, %rd35, %rd487;
	st.global.f32 	[%rd488], %f400;

$L__BB0_558:
	not.pred 	%p367, %p16;
	@%p367 bra 	$L__BB0_560;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2468;
  cvt.f32.f16 %f401, high;}

	// end inline asm
	add.s32 	%r1996, %r795, %r393;
	mul.wide.s32 	%rd489, %r1996, 4;
	add.s64 	%rd490, %rd35, %rd489;
	st.global.f32 	[%rd490], %f401;

$L__BB0_560:
	add.s32 	%r1998, %r794, %r774;
	mul.lo.s32 	%r796, %r1998, %r49;
	add.s32 	%r1999, %r758, %r796;
	mul.lo.s32 	%r2000, %r1999, %r50;
	sub.s32 	%r797, %r2000, %r930;
	@%p17 bra 	$L__BB0_565;

	not.pred 	%p369, %p13;
	@%p369 bra 	$L__BB0_563;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2474;
  cvt.f32.f16 %f402, low;}

	// end inline asm
	add.s32 	%r2002, %r797, %r390;
	mul.wide.s32 	%rd491, %r2002, 4;
	add.s64 	%rd492, %rd35, %rd491;
	st.global.f32 	[%rd492], %f402;

$L__BB0_563:
	not.pred 	%p370, %p15;
	@%p370 bra 	$L__BB0_565;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2474;
  cvt.f32.f16 %f403, high;}

	// end inline asm
	add.s32 	%r2004, %r797, %r391;
	mul.wide.s32 	%rd493, %r2004, 4;
	add.s64 	%rd494, %rd35, %rd493;
	st.global.f32 	[%rd494], %f403;

$L__BB0_565:
	@%p17 bra 	$L__BB0_570;

	not.pred 	%p372, %p14;
	@%p372 bra 	$L__BB0_568;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2467;
  cvt.f32.f16 %f404, low;}

	// end inline asm
	add.s32 	%r2006, %r797, %r392;
	mul.wide.s32 	%rd495, %r2006, 4;
	add.s64 	%rd496, %rd35, %rd495;
	st.global.f32 	[%rd496], %f404;

$L__BB0_568:
	not.pred 	%p373, %p16;
	@%p373 bra 	$L__BB0_570;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2467;
  cvt.f32.f16 %f405, high;}

	// end inline asm
	add.s32 	%r2008, %r797, %r393;
	mul.wide.s32 	%rd497, %r2008, 4;
	add.s64 	%rd498, %rd35, %rd497;
	st.global.f32 	[%rd498], %f405;

$L__BB0_570:
	add.s32 	%r2305, %r758, 1;
	add.s32 	%r2009, %r2305, %r796;
	mul.lo.s32 	%r2010, %r2009, %r50;
	sub.s32 	%r798, %r2010, %r930;
	@%p17 bra 	$L__BB0_575;

	not.pred 	%p375, %p13;
	@%p375 bra 	$L__BB0_573;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2461;
  cvt.f32.f16 %f406, low;}

	// end inline asm
	add.s32 	%r2012, %r798, %r390;
	mul.wide.s32 	%rd499, %r2012, 4;
	add.s64 	%rd500, %rd35, %rd499;
	st.global.f32 	[%rd500], %f406;

$L__BB0_573:
	not.pred 	%p376, %p15;
	@%p376 bra 	$L__BB0_575;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2461;
  cvt.f32.f16 %f407, high;}

	// end inline asm
	add.s32 	%r2014, %r798, %r391;
	mul.wide.s32 	%rd501, %r2014, 4;
	add.s64 	%rd502, %rd35, %rd501;
	st.global.f32 	[%rd502], %f407;

$L__BB0_575:
	@%p17 bra 	$L__BB0_580;

	not.pred 	%p378, %p14;
	@%p378 bra 	$L__BB0_578;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2457;
  cvt.f32.f16 %f408, low;}

	// end inline asm
	add.s32 	%r2016, %r798, %r392;
	mul.wide.s32 	%rd503, %r2016, 4;
	add.s64 	%rd504, %rd35, %rd503;
	st.global.f32 	[%rd504], %f408;

$L__BB0_578:
	not.pred 	%p379, %p16;
	@%p379 bra 	$L__BB0_580;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2457;
  cvt.f32.f16 %f409, high;}

	// end inline asm
	add.s32 	%r2018, %r798, %r393;
	mul.wide.s32 	%rd505, %r2018, 4;
	add.s64 	%rd506, %rd35, %rd505;
	st.global.f32 	[%rd506], %f409;

$L__BB0_580:
	setp.eq.s32 	%p380, %r34, %r1411;
	@%p380 bra 	$L__BB0_582;

	mad.lo.s32 	%r2019, %r913, %r34, %r35;
	mov.u32 	%r2020, _ZN6kernel5shmemE;
	mad.lo.s32 	%r2021, %r2019, 1280, %r2020;
	add.s32 	%r2022, %r2021, -256;
	shl.b32 	%r2023, %r39, 4;
	add.s32 	%r2024, %r2022, %r2023;
	st.shared.v4.u32 	[%r2024+256], {%r2479, %r2477, %r2444, %r2437};
	st.shared.v4.u32 	[%r2024+1024], {%r2521, %r2517, %r2503, %r2496};
	shl.b32 	%r2025, %r39, 3;
	add.s32 	%r2026, %r2022, %r2025;
	st.shared.v2.u32 	[%r2026+768], {%r2509, %r2507};

$L__BB0_582:
	setp.eq.s32 	%p381, %r35, %r1416;
	@%p381 bra 	$L__BB0_586;

	mad.lo.s32 	%r2030, %r912, 384, -64;
	mul.lo.s32 	%r2031, %r2030, %r35;
	mad.lo.s32 	%r2033, %r1412, %r1411, %r2031;
	mad.lo.s32 	%r2034, %r1499, 384, %r2033;
	shl.b32 	%r2035, %r2034, 2;
	mov.u32 	%r2036, _ZN6kernel5shmemE;
	add.s32 	%r2037, %r2036, %r2035;
	add.s32 	%r2038, %r2037, -256;
	shl.b32 	%r2039, %r39, 4;
	add.s32 	%r2040, %r2038, %r2039;
	st.shared.v4.u32 	[%r2040+256], {%r2513, %r2511, %r2489, %r2483};
	st.shared.v4.u32 	[%r2040+1024], {%r2453, %r2449, %r2407, %r2403};
	shl.b32 	%r2041, %r39, 3;
	add.s32 	%r801, %r2038, %r2041;
	@%p380 bra 	$L__BB0_585;

	st.shared.v2.u32 	[%r801], {%r2520, %r2516};

$L__BB0_585:
	st.shared.v2.u32 	[%r801+768], {%r2490, %r2484};

$L__BB0_586:
	setp.ne.s32 	%p383, %r34, %r1411;
	ld.param.u64 	%rd507, [%rd1+80];
	cvta.to.global.u64 	%rd37, %rd507;
	@%p383 bra 	$L__BB0_588;

	mad.lo.s32 	%r2043, %r527, %r915, %r37;
	mul.lo.s32 	%r2044, %r913, %r2043;
	mul.lo.s32 	%r2045, %r2044, 768;
	mad.lo.s32 	%r2046, %r35, 384, %r2045;
	add.s32 	%r2047, %r2046, -64;
	mul.wide.s32 	%rd508, %r2047, 4;
	add.s64 	%rd509, %rd37, %rd508;
	add.s64 	%rd511, %rd509, %rd272;
	st.global.v4.u32 	[%rd511+256], {%r2479, %r2477, %r2444, %r2437};
	st.global.v4.u32 	[%rd511+1024], {%r2521, %r2517, %r2503, %r2496};
	add.s64 	%rd513, %rd509, %rd274;
	st.global.v2.u32 	[%rd513+768], {%r2509, %r2507};
	st.global.v2.u32 	[%rd513+1536], {%r2520, %r2516};

$L__BB0_588:
	setp.ne.s32 	%p384, %r35, %r1416;
	@%p384 bra 	$L__BB0_593;

	ld.param.u64 	%rd543, [%rd1+80];
	cvta.to.global.u64 	%rd542, %rd543;
	mad.lo.s32 	%r2050, %r528, %r914, %r36;
	mul.lo.s32 	%r2054, %r2050, %r973;
	mad.lo.s32 	%r2057, %r1499, 384, %r2054;
	add.s32 	%r2058, %r2057, -64;
	mad.lo.s32 	%r2061, %r975, %r61, %r2058;
	mul.wide.s32 	%rd514, %r2061, 4;
	add.s64 	%rd515, %rd542, %rd514;
	add.s64 	%rd517, %rd515, %rd272;
	st.global.v4.u32 	[%rd517+256], {%r2513, %r2511, %r2489, %r2483};
	st.global.v4.u32 	[%rd517+1024], {%r2453, %r2449, %r2407, %r2403};
	add.s64 	%rd38, %rd515, %rd274;
	@%p380 bra 	$L__BB0_591;

	st.global.v2.u32 	[%rd38], {%r2520, %r2516};

$L__BB0_591:
	st.global.v2.u32 	[%rd38+768], {%r2490, %r2484};
	@%p206 bra 	$L__BB0_593;

	st.global.v2.u32 	[%rd38+1536], {%r2587, %r2585};

$L__BB0_593:
	setp.ge.s32 	%p387, %r34, %r1411;
	@%p387 bra 	$L__BB0_595;

	mul.lo.s32 	%r2062, %r913, 320;
	mul.lo.s32 	%r2063, %r35, 320;
	mad.lo.s32 	%r2064, %r2062, %r34, %r2063;
	add.s32 	%r2068, %r972, -64;
	mad.lo.s32 	%r2072, %r2068, %r1416, %r1413;
	add.s32 	%r2073, %r2064, %r2072;
	shl.b32 	%r2074, %r2073, 2;
	mov.u32 	%r2075, _ZN6kernel5shmemE;
	add.s32 	%r2076, %r2075, %r2074;
	shl.b32 	%r2077, %r39, 4;
	add.s32 	%r2078, %r2076, %r2077;
	st.shared.v4.u32 	[%r2078], {%r2636, %r2635, %r2631, %r2629};
	shl.b32 	%r2079, %r39, 3;
	add.s32 	%r2080, %r2076, %r2079;
	st.shared.v2.u32 	[%r2080+512], {%r2508, %r2506};
	st.shared.v4.u32 	[%r2078+768], {%r2519, %r2515, %r2499, %r2492};

$L__BB0_595:
	setp.ge.s32 	%p388, %r35, %r1416;
	@%p388 bra 	$L__BB0_599;

	mad.lo.s32 	%r2086, %r1499, 384, %r1419;
	mad.lo.s32 	%r2089, %r1414, %r35, %r2086;
	add.s32 	%r2095, %r2089, %r1417;
	shl.b32 	%r2096, %r2095, 2;
	mov.u32 	%r2097, _ZN6kernel5shmemE;
	add.s32 	%r2098, %r2097, %r2096;
	shl.b32 	%r2099, %r39, 3;
	add.s32 	%r2100, %r2098, %r2099;
	@%p387 bra 	$L__BB0_598;

	add.s32 	%r2296, %r2100, -256;
	st.shared.v2.u32 	[%r2296], {%r2518, %r2514};

$L__BB0_598:
	shl.b32 	%r2119, %r39, 4;
	add.s32 	%r2120, %r2098, %r2119;
	st.shared.v4.u32 	[%r2120], {%r2512, %r2510, %r2486, %r2480};
	add.s32 	%r2297, %r2100, -256;
	st.shared.v2.u32 	[%r2297+768], {%r2487, %r2481};
	st.shared.v4.u32 	[%r2120+768], {%r2634, %r2633, %r2622, %r2621};

$L__BB0_599:
	bar.sync 	0;
	@%p201 bra 	$L__BB0_601;

	mul.lo.s32 	%r2121, %r913, 320;
	add.s32 	%r2122, %r34, -1;
	mul.lo.s32 	%r2123, %r35, 320;
	mad.lo.s32 	%r2124, %r2121, %r2122, %r2123;
	shl.b32 	%r2125, %r2124, 2;
	mov.u32 	%r2126, _ZN6kernel5shmemE;
	add.s32 	%r2127, %r2126, %r2125;
	add.s32 	%r2128, %r2127, -256;
	shl.b32 	%r2129, %r39, 4;
	add.s32 	%r2130, %r2128, %r2129;
	ld.shared.v4.u32 	{%r2642, %r2640, %r2643, %r2644}, [%r2130+256];
	ld.shared.v4.u32 	{%r2646, %r2645, %r2638, %r2637}, [%r2130+1024];
	shl.b32 	%r2139, %r39, 3;
	add.s32 	%r2140, %r2128, %r2139;
	ld.shared.v2.u32 	{%r2641, %r2639}, [%r2140+768];

$L__BB0_601:
	@%p204 bra 	$L__BB0_604;

	mad.lo.s32 	%r2145, %r912, 384, -64;
	add.s32 	%r2146, %r35, -1;
	mul.lo.s32 	%r2147, %r2145, %r2146;
	mad.lo.s32 	%r2150, %r1412, %r1411, %r2147;
	mad.lo.s32 	%r2151, %r1499, 384, %r2150;
	shl.b32 	%r2152, %r2151, 2;
	mov.u32 	%r2153, _ZN6kernel5shmemE;
	add.s32 	%r2154, %r2153, %r2152;
	add.s32 	%r2155, %r2154, -256;
	shl.b32 	%r2156, %r39, 4;
	add.s32 	%r2157, %r2155, %r2156;
	ld.shared.v4.u32 	{%r2658, %r2657, %r2655, %r2653}, [%r2157+256];
	ld.shared.v4.u32 	{%r2652, %r2651, %r2647, %r2650}, [%r2157+1024];
	shl.b32 	%r2166, %r39, 3;
	add.s32 	%r2167, %r2155, %r2166;
	ld.shared.v2.u32 	{%r2656, %r2654}, [%r2167+768];
	@%p201 bra 	$L__BB0_604;

	add.s32 	%r2298, %r2167, 768;
	ld.shared.v2.u32 	{%r2575, %r2577}, [%r2298+768];

$L__BB0_604:
	ld.param.u64 	%rd519, [%rd1+80];
	cvta.to.global.u64 	%rd39, %rd519;
	mov.u32 	%r2682, %r2429;
	mov.u32 	%r2664, %r2549;
	mov.u32 	%r2666, %r2551;
	mov.u32 	%r2410, %r2553;
	mov.u32 	%r2684, %r2424;
	mov.u32 	%r2418, %r2554;
	mov.u32 	%r2671, %r2555;
	mov.u32 	%r2672, %r2556;
	mov.u32 	%r2673, %r2557;
	mov.u32 	%r2674, %r2558;
	mov.u32 	%r2689, %r2571;
	mov.u32 	%r2690, %r2572;
	@%p206 bra 	$L__BB0_608;

	mad.lo.s32 	%r2173, %r527, %r915, %r37;
	mad.lo.s32 	%r2174, %r2173, 768, 384;
	mul.lo.s32 	%r2175, %r2174, %r913;
	mad.lo.s32 	%r2176, %r35, 384, %r2175;
	add.s32 	%r2177, %r2176, -128;
	mul.wide.s32 	%rd520, %r2177, 4;
	add.s64 	%rd521, %rd39, %rd520;
	add.s64 	%rd523, %rd521, %rd272;
	add.s64 	%rd40, %rd523, 512;
	mov.u32 	%r2682, %r2429;
	mov.u32 	%r2684, %r2424;
	mov.u32 	%r2689, %r2571;
	mov.u32 	%r2690, %r2572;
	@%p204 bra 	$L__BB0_607;

	ld.global.v4.u32 	{%r2689, %r2690, %r2682, %r2684}, [%rd40+-512];

$L__BB0_607:
	ld.global.v4.u32 	{%r2672, %r2674, %r2671, %r2673}, [%rd40];
	ld.global.v4.u32 	{%r2418, %r2410, %r2666, %r2664}, [%rd40+512];
	ld.global.v4.u32 	{%r2552, %r2550, %r2560, %r2559}, [%rd40+1024];

$L__BB0_608:
	mov.u32 	%r2394, %r2561;
	mov.u32 	%r2398, %r2562;
	mov.u32 	%r2399, %r2563;
	mov.u32 	%r2416, %r2565;
	mov.u32 	%r2434, %r2567;
	mov.u32 	%r2686, %r2568;
	mov.u32 	%r2441, %r2569;
	mov.u32 	%r2688, %r2570;
	@%p209 bra 	$L__BB0_610;

	mad.lo.s32 	%r2195, %r528, %r914, %r36;
	mad.lo.s32 	%r2201, %r1499, 384, %r62;
	mad.lo.s32 	%r2202, %r2195, %r973, %r2201;
	mad.lo.s32 	%r2205, %r975, %r61, %r2202;
	mul.wide.s32 	%rd524, %r2205, 4;
	add.s64 	%rd525, %rd39, %rd524;
	add.s64 	%rd527, %rd525, %rd272;
	ld.global.v4.u32 	{%r2688, %r2686, %r2399, %r2398}, [%rd527+512];
	ld.global.v4.u32 	{%r2441, %r2434, %r2394, %r2416}, [%rd527+1024];
	ld.global.v4.u32 	{%r2689, %r2690, %r2682, %r2684}, [%rd527+1536];

$L__BB0_610:
	add.s32 	%r908, %r2522, 1;
	bar.sync 	0;
	@%p380 bra 	$L__BB0_613;

	shl.b32 	%r2219, %r35, 8;
	shl.b32 	%r2223, %r913, 8;
	or.b32  	%r2224, %r2223, 128;
	mad.lo.s32 	%r2225, %r2224, %r34, %r1419;
	add.s32 	%r2226, %r2225, %r2219;
	shl.b32 	%r2227, %r2226, 2;
	mov.u32 	%r2228, _ZN6kernel5shmemE;
	add.s32 	%r2229, %r2228, %r2227;
	shl.b32 	%r2230, %r39, 4;
	add.s32 	%r909, %r2229, %r2230;
	st.shared.v4.u32 	[%r909], {%r2570, %r2568, %r2443, %r2436};
	st.shared.v4.u32 	[%r909+512], {%r2478, %r2476, %r2472, %r2465};
	@%p384 bra 	$L__BB0_613;

	st.shared.v4.u32 	[%r909+1024], {%r2473, %r2466, %r2502, %r2495};

$L__BB0_613:
	setp.eq.s32 	%p408, %r35, %r1416;
	@%p408 bra 	$L__BB0_615;

	mul.lo.s32 	%r2234, %r1499, 384;
	mad.lo.s32 	%r2235, %r62, %r35, %r2234;
	mad.lo.s32 	%r2238, %r1414, %r1416, %r2235;
	mad.lo.s32 	%r2241, %r1412, %r1411, %r2238;
	shl.b32 	%r2242, %r2241, 2;
	mov.u32 	%r2243, _ZN6kernel5shmemE;
	add.s32 	%r2244, %r2243, %r2242;
	shl.b32 	%r2245, %r39, 4;
	add.s32 	%r2246, %r2244, %r2245;
	st.shared.v4.u32 	[%r2246], {%r2473, %r2466, %r2502, %r2495};
	st.shared.v4.u32 	[%r2246+512], {%r2460, %r2456, %r2420, %r2412};
	st.shared.v4.u32 	[%r2246+1024], {%r2459, %r2455, %r2551, %r2549};

$L__BB0_615:
	setp.ne.s32 	%p409, %r34, %r1411;
	ld.param.u64 	%rd528, [%rd1+80];
	cvta.to.global.u64 	%rd41, %rd528;
	@%p409 bra 	$L__BB0_617;

	mad.lo.s32 	%r2248, %r527, %r915, %r37;
	mad.lo.s32 	%r2249, %r2248, 768, 384;
	mul.lo.s32 	%r2250, %r2249, %r913;
	mad.lo.s32 	%r2251, %r35, 384, %r2250;
	add.s32 	%r2252, %r2251, -128;
	mul.wide.s32 	%rd529, %r2252, 4;
	add.s64 	%rd530, %rd41, %rd529;
	add.s64 	%rd532, %rd530, %rd272;
	st.global.v4.u32 	[%rd532+512], {%r2570, %r2568, %r2443, %r2436};
	st.global.v4.u32 	[%rd532+1024], {%r2478, %r2476, %r2472, %r2465};
	st.global.v4.u32 	[%rd532+1536], {%r2473, %r2466, %r2502, %r2495};

$L__BB0_617:
	@%p384 bra 	$L__BB0_620;

	mad.lo.s32 	%r2254, %r528, %r914, %r36;
	mad.lo.s32 	%r2260, %r1499, 384, %r62;
	mad.lo.s32 	%r2261, %r2254, %r973, %r2260;
	mad.lo.s32 	%r2264, %r975, %r61, %r2261;
	mul.wide.s32 	%rd533, %r2264, 4;
	add.s64 	%rd534, %rd41, %rd533;
	add.s64 	%rd42, %rd534, %rd272;
	st.global.v4.u32 	[%rd42], {%r2473, %r2466, %r2502, %r2495};
	st.global.v4.u32 	[%rd42+512], {%r2460, %r2456, %r2420, %r2412};
	st.global.v4.u32 	[%rd42+1024], {%r2459, %r2455, %r2551, %r2549};
	@%p206 bra 	$L__BB0_620;

	st.global.v4.u32 	[%rd42+1536], {%r2552, %r2550, %r2560, %r2559};

$L__BB0_620:
	rem.s32 	%r2265, %r2522, %r916;
	setp.eq.s32 	%p402, %r2265, 0;
	@%p402 bra 	$L__BB0_622;

	bar.sync 	0;
	bra.uni 	$L__BB0_629;

$L__BB0_622:
	@%p185 bra 	$L__BB0_624;

	// begin inline asm
	trap;
	// end inline asm

$L__BB0_624:
	bar.sync 	0;
	@%p186 bra 	$L__BB0_628;

	membar.gl;
	setp.eq.s32 	%p405, %r395, %r396;
	mov.u32 	%r2280, -2147483647;
	sub.s32 	%r2281, %r2280, %r394;
	selp.b32 	%r2269, %r2281, 1, %p405;
	// begin inline asm
	atom.add.release.gpu.u32 %r2268,[%rd29],%r2269;
	// end inline asm

$L__BB0_626:
	ld.volatile.u32 	%r2282, [%rd29];
	xor.b32  	%r2283, %r2282, %r2268;
	setp.gt.s32 	%p406, %r2283, -1;
	@%p406 bra 	$L__BB0_626;

	// begin inline asm
	ld.acquire.gpu.u32 %r2284,[%rd29];
	// end inline asm

$L__BB0_628:
	bar.sync 	0;

$L__BB0_629:
	setp.lt.s32 	%p407, %r908, %r42;
	mov.u32 	%r2395, %r2571;
	mov.u32 	%r2549, %r2664;
	mov.u32 	%r2403, %r2637;
	mov.u32 	%r2551, %r2666;
	mov.u32 	%r2407, %r2638;
	mov.u32 	%r2409, %r2572;
	mov.u32 	%r2411, %r2558;
	mov.u32 	%r2412, %r2557;
	mov.u32 	%r2419, %r2556;
	mov.u32 	%r2420, %r2555;
	mov.u32 	%r2555, %r2671;
	mov.u32 	%r2556, %r2672;
	mov.u32 	%r2568, %r2686;
	mov.u32 	%r2436, %r2562;
	mov.u32 	%r2437, %r2653;
	mov.u32 	%r2557, %r2673;
	mov.u32 	%r2558, %r2674;
	mov.u32 	%r2570, %r2688;
	mov.u32 	%r2443, %r2563;
	mov.u32 	%r2444, %r2655;
	mov.u32 	%r2571, %r2689;
	mov.u32 	%r2449, %r2645;
	mov.u32 	%r2572, %r2690;
	mov.u32 	%r2453, %r2646;
	mov.u32 	%r2455, %r2553;
	mov.u32 	%r2456, %r415;
	mov.u32 	%r2459, %r2554;
	mov.u32 	%r2460, %r423;
	mov.u32 	%r2465, %r429;
	mov.u32 	%r2466, %r430;
	mov.u32 	%r2472, %r434;
	mov.u32 	%r2473, %r435;
	mov.u32 	%r2476, %r2567;
	mov.u32 	%r2477, %r2657;
	mov.u32 	%r2478, %r2569;
	mov.u32 	%r2479, %r2658;
	mov.u32 	%r2480, %r458;
	mov.u32 	%r2481, %r2623;
	mov.u32 	%r2483, %r461;
	mov.u32 	%r2484, %r418;
	mov.u32 	%r2486, %r462;
	mov.u32 	%r2487, %r2625;
	mov.u32 	%r2489, %r465;
	mov.u32 	%r2490, %r426;
	mov.u32 	%r2492, %r466;
	mov.u32 	%r2495, %r468;
	mov.u32 	%r2496, %r471;
	mov.u32 	%r2499, %r473;
	mov.u32 	%r2502, %r475;
	mov.u32 	%r2503, %r478;
	mov.u32 	%r2506, %r2630;
	mov.u32 	%r2507, %r442;
	mov.u32 	%r2508, %r2632;
	mov.u32 	%r2509, %r449;
	mov.u32 	%r2510, %r486;
	mov.u32 	%r2511, %r489;
	mov.u32 	%r2512, %r492;
	mov.u32 	%r2513, %r495;
	mov.u32 	%r2514, %r497;
	mov.u32 	%r2515, %r498;
	mov.u32 	%r2516, %r501;
	mov.u32 	%r2517, %r502;
	mov.u32 	%r2518, %r504;
	mov.u32 	%r2519, %r505;
	mov.u32 	%r2520, %r508;
	mov.u32 	%r2521, %r509;
	mov.u32 	%r2522, %r908;
	@%p407 bra 	$L__BB0_307;

$L__BB0_630:
	ret;

}

