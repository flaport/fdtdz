//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31833905
// Cuda compilation tools, release 11.8, V11.8.89
// Based on NVVM 7.0.1
//

.version 7.8
.target sm_75
.address_size 64

	// .globl	_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE
.global .align 4 .b8 _ZZN4cuda3std3__48__detail21__stronger_order_cudaEiiE7__xform[16] = {3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE[24] = {254, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllJE[20] = {254, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllKE[8] = {0, 0, 0, 0, 1, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond6AllEhcE[12] = {0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond6AllXyzE[12] = {0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.extern .shared .align 16 .b8 _ZN6kernel5shmemE[];

.visible .entry _ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE(
	.param .align 8 .b8 _ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0[168]
)
{
	.reg .pred 	%p<375>;
	.reg .f32 	%f<400>;
	.reg .b32 	%r<2594>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<545>;


	mov.b64 	%rd39, _ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0;
	mov.u64 	%rd1, %rd39;
	ld.param.v2.u32 	{%r906, %r907}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0];
	ld.param.v2.u32 	{%r908, %r909}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+8];
	ld.param.v2.u32 	{%r910, %r911}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+16];
	ld.param.v2.u32 	{%r912, %r913}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+24];
	ld.param.v2.u32 	{%r914, %r915}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+32];
	ld.param.v2.u32 	{%r916, %r917}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+40];
	ld.param.v2.u32 	{%r918, %r919}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+48];
	ld.param.v2.u32 	{%r920, %r921}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+56];
	ld.param.v2.u32 	{%r922, %r923}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+64];
	ld.param.v2.u32 	{%r924, %r925}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+72];
	mov.u32 	%r30, %tid.y;
	mov.u32 	%r31, %tid.z;
	mov.u32 	%r32, %ctaid.y;
	mov.u32 	%r33, %ctaid.z;
	mov.u32 	%r926, 32;
	sub.s32 	%r34, %r926, %r913;
	mov.u32 	%r35, %tid.x;
	setp.le.s32 	%p15, %r34, %r35;
	add.s32 	%r927, %r919, -1;
	add.s32 	%r928, %r917, %r911;
	add.s32 	%r929, %r928, %r912;
	add.s32 	%r930, %r929, 1;
	mad.lo.s32 	%r931, %r927, %r918, %r930;
	mul.lo.s32 	%r932, %r906, %r908;
	shl.b32 	%r36, %r932, 1;
	shl.b32 	%r933, %r932, 2;
	div.s32 	%r934, %r931, %r933;
	add.s32 	%r935, %r934, 1;
	mul.lo.s32 	%r936, %r935, %r912;
	mul.lo.s32 	%r937, %r907, %r909;
	shl.b32 	%r37, %r937, 1;
	div.s32 	%r938, %r936, %r37;
	add.s32 	%r939, %r938, 1;
	mul.lo.s32 	%r38, %r939, %r911;
	ld.param.u64 	%rd40, [%rd1+160];
	cvta.to.global.u64 	%rd2, %rd40;
	mad.lo.s32 	%r942, %r908, %r33, %r32;
	mad.lo.s32 	%r943, %r942, %r907, %r31;
	mad.lo.s32 	%r944, %r943, %r906, %r30;
	shl.b32 	%r39, %r944, 5;
	add.s32 	%r2214, %r39, %r35;
	mul.lo.s32 	%r945, %r937, %r932;
	shl.b32 	%r43, %r945, 5;
	sub.s32 	%r946, %r921, %r920;
	mul.lo.s32 	%r947, %r919, %r946;
	sub.s32 	%r948, %r923, %r922;
	mul.lo.s32 	%r949, %r947, %r948;
	sub.s32 	%r44, %r925, %r924;
	mul.lo.s32 	%r950, %r949, %r44;
	mul.lo.s32 	%r45, %r950, 3;
	setp.ge.s32 	%p16, %r2214, %r45;
	@%p16 bra 	$L__BB0_9;

	not.b32 	%r951, %r35;
	add.s32 	%r952, %r45, %r951;
	sub.s32 	%r953, %r952, %r39;
	mul.lo.s32 	%r954, %r937, %r906;
	mul.lo.s32 	%r955, %r954, %r908;
	shl.b32 	%r956, %r955, 5;
	div.u32 	%r46, %r953, %r956;
	add.s32 	%r957, %r46, 1;
	and.b32  	%r2211, %r957, 3;
	setp.eq.s32 	%p17, %r2211, 0;
	mov.u32 	%r2212, %r2214;
	@%p17 bra 	$L__BB0_6;

	mov.u32 	%r2212, %r2214;

$L__BB0_5:
	.pragma "nounroll";
	mul.wide.s32 	%rd41, %r2212, 4;
	add.s64 	%rd42, %rd2, %rd41;
	mov.u32 	%r958, 0;
	st.global.u32 	[%rd42], %r958;
	add.s32 	%r2212, %r2212, %r43;
	add.s32 	%r2211, %r2211, -1;
	setp.ne.s32 	%p18, %r2211, 0;
	@%p18 bra 	$L__BB0_5;

$L__BB0_6:
	setp.lt.u32 	%p19, %r46, 3;
	@%p19 bra 	$L__BB0_9;

	mul.wide.s32 	%rd45, %r43, 4;

$L__BB0_8:
	mul.wide.s32 	%rd43, %r2212, 4;
	add.s64 	%rd44, %rd2, %rd43;
	mov.u32 	%r959, 0;
	st.global.u32 	[%rd44], %r959;
	add.s64 	%rd46, %rd44, %rd45;
	st.global.u32 	[%rd46], %r959;
	add.s32 	%r960, %r2212, %r43;
	add.s32 	%r961, %r960, %r43;
	add.s64 	%rd47, %rd46, %rd45;
	st.global.u32 	[%rd47], %r959;
	add.s32 	%r962, %r961, %r43;
	add.s64 	%rd48, %rd47, %rd45;
	st.global.u32 	[%rd48], %r959;
	add.s32 	%r2212, %r962, %r43;
	setp.lt.s32 	%p20, %r2212, %r45;
	@%p20 bra 	$L__BB0_8;

$L__BB0_9:
	ld.param.u64 	%rd49, [%rd1+80];
	cvta.to.global.u64 	%rd3, %rd49;
	sub.s32 	%r963, %r912, %r36;
	div.s32 	%r964, %r963, %r37;
	mul.lo.s32 	%r965, %r964, %r911;
	sub.s32 	%r55, %r965, %r36;
	sub.s32 	%r966, %r911, %r37;
	mul.lo.s32 	%r967, %r966, %r908;
	mul.lo.s32 	%r56, %r906, 384;
	add.s32 	%r968, %r56, %r56;
	add.s32 	%r969, %r968, 128;
	mul.lo.s32 	%r971, %r937, 768;
	mul.lo.s32 	%r972, %r967, %r969;
	mad.lo.s32 	%r57, %r971, %r55, %r972;
	bra.uni 	$L__BB0_10;

$L__BB0_617:
	mov.f32 	%f399, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f399;
  cvt.rn.f16.f32 high, %f399;
  mov.b32 %r2192, {low,high};}

	// end inline asm
	mul.wide.s32 	%rd534, %r2214, 4;
	add.s64 	%rd535, %rd3, %rd534;
	st.global.u32 	[%rd535], %r2192;
	add.s32 	%r2214, %r2214, %r43;

$L__BB0_10:
	setp.lt.s32 	%p21, %r2214, %r57;
	@%p21 bra 	$L__BB0_617;

	ld.param.u64 	%rd50, [%rd1+120];
	cvta.to.global.u64 	%rd5, %rd50;
	ld.param.u64 	%rd51, [%rd1+88];
	cvta.to.global.u64 	%rd6, %rd51;
	mad.lo.s32 	%r2256, %r906, %r32, %r30;
	mul.lo.s32 	%r62, %r907, %r33;
	add.s32 	%r63, %r62, %r31;
	setp.ge.s32 	%p22, %r2256, %r911;
	@%p22 bra 	$L__BB0_35;

	setp.gt.s32 	%p23, %r34, %r35;
	mov.u32 	%r973, 31;
	sub.s32 	%r974, %r973, %r35;
	selp.b32 	%r975, %r35, %r974, %p23;
	shl.b32 	%r976, %r975, 2;
	mov.u32 	%r977, 2;
	sub.s32 	%r64, %r976, %r914;
	shl.b32 	%r978, %r913, 2;
	mov.u32 	%r979, 128;
	sub.s32 	%r65, %r979, %r978;
	sub.s32 	%r980, %r977, %r914;
	add.s32 	%r66, %r980, %r976;
	mul.lo.s32 	%r981, %r912, %r911;
	shl.b32 	%r67, %r981, 6;
	add.s32 	%r68, %r911, -1;
	add.s32 	%r69, %r64, 1;
	add.s32 	%r70, %r66, 1;
	shl.b32 	%r71, %r35, 1;
	or.b32  	%r72, %r71, 1;
	shr.u32 	%r982, %r72, 31;
	add.s32 	%r983, %r72, %r982;
	shr.s32 	%r74, %r983, 1;
	and.b32  	%r984, %r983, -2;
	sub.s32 	%r985, %r72, %r984;
	add.s32 	%r73, %r985, %r67;
	rem.s32 	%r1020, %r69, %r65;
	add.s32 	%r1021, %r1020, %r65;
	rem.s32 	%r97, %r1021, %r65;
	rem.s32 	%r1022, %r70, %r65;
	add.s32 	%r1023, %r1022, %r65;
	rem.s32 	%r98, %r1023, %r65;
	mov.u32 	%r2215, %r2256;

$L__BB0_13:
	setp.ge.s32 	%p24, %r63, %r912;
	@%p24 bra 	$L__BB0_34;

	add.s32 	%r76, %r68, %r2215;
	rem.s32 	%r986, %r64, %r65;
	add.s32 	%r987, %r986, %r65;
	rem.s32 	%r77, %r987, %r65;
	rem.s32 	%r988, %r66, %r65;
	add.s32 	%r989, %r988, %r65;
	rem.s32 	%r78, %r989, %r65;
	mul.lo.s32 	%r79, %r2215, %r912;
	add.s32 	%r990, %r911, %r2215;
	mul.lo.s32 	%r80, %r990, %r912;
	add.s32 	%r991, %r990, %r911;
	mul.lo.s32 	%r81, %r991, %r912;
	mov.u32 	%r2216, %r63;

$L__BB0_15:
	mul.lo.s32 	%r83, %r2216, %r911;
	add.s32 	%r84, %r83, %r2215;
	shl.b32 	%r85, %r84, 6;
	@%p23 bra 	$L__BB0_17;
	bra.uni 	$L__BB0_16;

$L__BB0_17:
	add.s32 	%r994, %r79, %r2216;
	mul.lo.s32 	%r995, %r994, %r65;
	add.s32 	%r996, %r995, %r77;
	mul.wide.s32 	%rd52, %r996, 4;
	add.s64 	%rd53, %rd5, %rd52;
	ld.global.f32 	%f40, [%rd53];
	add.s32 	%r997, %r995, %r78;
	mul.wide.s32 	%rd54, %r997, 4;
	add.s64 	%rd55, %rd5, %rd54;
	ld.global.f32 	%f41, [%rd55];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f40;
  cvt.rn.f16.f32 high, %f41;
  mov.b32 %r2217, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_18;

$L__BB0_16:
	mov.f32 	%f39, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f39;
  cvt.rn.f16.f32 high, %f39;
  mov.b32 %r2217, {low,high};}

	// end inline asm

$L__BB0_18:
	shl.b32 	%r89, %r84, 5;
	add.s32 	%r998, %r89, %r35;
	shl.b32 	%r999, %r998, 2;
	add.s32 	%r1000, %r67, %r999;
	mul.wide.s32 	%rd56, %r1000, 4;
	add.s64 	%rd57, %rd6, %rd56;
	st.global.u32 	[%rd57], %r2217;
	@%p23 bra 	$L__BB0_20;
	bra.uni 	$L__BB0_19;

$L__BB0_20:
	add.s32 	%r1003, %r80, %r2216;
	mul.lo.s32 	%r1004, %r1003, %r65;
	add.s32 	%r1005, %r1004, %r77;
	mul.wide.s32 	%rd58, %r1005, 4;
	add.s64 	%rd59, %rd5, %rd58;
	ld.global.f32 	%f44, [%rd59];
	add.s32 	%r1006, %r1004, %r78;
	mul.wide.s32 	%rd60, %r1006, 4;
	add.s64 	%rd61, %rd5, %rd60;
	ld.global.f32 	%f45, [%rd61];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f44;
  cvt.rn.f16.f32 high, %f45;
  mov.b32 %r2218, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_21;

$L__BB0_19:
	mov.f32 	%f43, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f43;
  cvt.rn.f16.f32 high, %f43;
  mov.b32 %r2218, {low,high};}

	// end inline asm

$L__BB0_21:
	add.s32 	%r1007, %r71, %r85;
	mul.wide.s32 	%rd62, %r1007, 4;
	add.s64 	%rd63, %rd6, %rd62;
	st.global.u32 	[%rd63], %r2218;
	@%p23 bra 	$L__BB0_23;
	bra.uni 	$L__BB0_22;

$L__BB0_23:
	add.s32 	%r1010, %r81, %r2216;
	mul.lo.s32 	%r1011, %r1010, %r65;
	add.s32 	%r1012, %r1011, %r77;
	mul.wide.s32 	%rd64, %r1012, 4;
	add.s64 	%rd65, %rd5, %rd64;
	ld.global.f32 	%f48, [%rd65];
	add.s32 	%r1013, %r1011, %r78;
	mul.wide.s32 	%rd66, %r1013, 4;
	add.s64 	%rd67, %rd5, %rd66;
	ld.global.f32 	%f49, [%rd67];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f48;
  cvt.rn.f16.f32 high, %f49;
  mov.b32 %r2219, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_24;

$L__BB0_22:
	mov.f32 	%f47, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f47;
  cvt.rn.f16.f32 high, %f47;
  mov.b32 %r2219, {low,high};}

	// end inline asm

$L__BB0_24:
	rem.s32 	%r1014, %r76, %r911;
	add.s32 	%r1015, %r1014, %r83;
	shl.b32 	%r96, %r1015, 5;
	add.s32 	%r1016, %r96, %r35;
	shl.b32 	%r1017, %r1016, 2;
	add.s32 	%r1018, %r67, %r1017;
	add.s32 	%r1019, %r1018, 2;
	mul.wide.s32 	%rd68, %r1019, 4;
	add.s64 	%rd69, %rd6, %rd68;
	st.global.u32 	[%rd69], %r2219;
	@%p23 bra 	$L__BB0_26;
	bra.uni 	$L__BB0_25;

$L__BB0_26:
	add.s32 	%r1026, %r79, %r2216;
	mul.lo.s32 	%r1027, %r1026, %r65;
	add.s32 	%r1028, %r1027, %r97;
	mul.wide.s32 	%rd70, %r1028, 4;
	add.s64 	%rd71, %rd5, %rd70;
	ld.global.f32 	%f52, [%rd71];
	add.s32 	%r1029, %r1027, %r98;
	mul.wide.s32 	%rd72, %r1029, 4;
	add.s64 	%rd73, %rd5, %rd72;
	ld.global.f32 	%f53, [%rd73];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f52;
  cvt.rn.f16.f32 high, %f53;
  mov.b32 %r2220, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_27;

$L__BB0_25:
	mov.f32 	%f51, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f51;
  cvt.rn.f16.f32 high, %f51;
  mov.b32 %r2220, {low,high};}

	// end inline asm

$L__BB0_27:
	add.s32 	%r1030, %r89, %r74;
	shl.b32 	%r1031, %r1030, 2;
	add.s32 	%r1032, %r73, %r1031;
	mul.wide.s32 	%rd74, %r1032, 4;
	add.s64 	%rd75, %rd6, %rd74;
	st.global.u32 	[%rd75], %r2220;
	@%p23 bra 	$L__BB0_29;
	bra.uni 	$L__BB0_28;

$L__BB0_29:
	add.s32 	%r1035, %r80, %r2216;
	mul.lo.s32 	%r1036, %r1035, %r65;
	add.s32 	%r1037, %r1036, %r97;
	mul.wide.s32 	%rd76, %r1037, 4;
	add.s64 	%rd77, %rd5, %rd76;
	ld.global.f32 	%f56, [%rd77];
	add.s32 	%r1038, %r1036, %r98;
	mul.wide.s32 	%rd78, %r1038, 4;
	add.s64 	%rd79, %rd5, %rd78;
	ld.global.f32 	%f57, [%rd79];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f56;
  cvt.rn.f16.f32 high, %f57;
  mov.b32 %r2221, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_30;

$L__BB0_28:
	mov.f32 	%f55, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f55;
  cvt.rn.f16.f32 high, %f55;
  mov.b32 %r2221, {low,high};}

	// end inline asm

$L__BB0_30:
	add.s32 	%r1039, %r72, %r85;
	mul.wide.s32 	%rd80, %r1039, 4;
	add.s64 	%rd81, %rd6, %rd80;
	st.global.u32 	[%rd81], %r2221;
	@%p23 bra 	$L__BB0_32;
	bra.uni 	$L__BB0_31;

$L__BB0_32:
	add.s32 	%r1042, %r81, %r2216;
	mul.lo.s32 	%r1043, %r1042, %r65;
	add.s32 	%r1044, %r1043, %r97;
	mul.wide.s32 	%rd82, %r1044, 4;
	add.s64 	%rd83, %rd5, %rd82;
	ld.global.f32 	%f60, [%rd83];
	add.s32 	%r1045, %r1043, %r98;
	mul.wide.s32 	%rd84, %r1045, 4;
	add.s64 	%rd85, %rd5, %rd84;
	ld.global.f32 	%f61, [%rd85];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f60;
  cvt.rn.f16.f32 high, %f61;
  mov.b32 %r2222, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_33;

$L__BB0_31:
	mov.f32 	%f59, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f59;
  cvt.rn.f16.f32 high, %f59;
  mov.b32 %r2222, {low,high};}

	// end inline asm

$L__BB0_33:
	add.s32 	%r1046, %r96, %r74;
	shl.b32 	%r1047, %r1046, 2;
	add.s32 	%r1048, %r73, %r1047;
	add.s32 	%r1049, %r1048, 2;
	mul.wide.s32 	%rd86, %r1049, 4;
	add.s64 	%rd87, %rd6, %rd86;
	st.global.u32 	[%rd87], %r2222;
	add.s32 	%r2216, %r2216, %r937;
	setp.lt.s32 	%p31, %r2216, %r912;
	@%p31 bra 	$L__BB0_15;

$L__BB0_34:
	add.s32 	%r2215, %r2215, %r932;
	setp.lt.s32 	%p32, %r2215, %r911;
	@%p32 bra 	$L__BB0_13;

$L__BB0_35:
	ld.param.u64 	%rd88, [%rd1+128];
	cvta.to.global.u64 	%rd7, %rd88;
	ld.param.u64 	%rd89, [%rd1+96];
	cvta.to.global.u64 	%rd8, %rd89;
	@%p22 bra 	$L__BB0_119;

	shl.b32 	%r110, %r63, 1;
	mov.u64 	%rd90, _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE;
	mov.u32 	%r2223, %r2256;

$L__BB0_37:
	setp.ge.s32 	%p34, %r110, %r912;
	@%p34 bra 	$L__BB0_118;

	mov.u32 	%r2224, %r110;

$L__BB0_39:
	setp.ne.s32 	%p35, %r35, 0;
	@%p35 bra 	$L__BB0_117;

	shr.u32 	%r1051, %r2224, 31;
	add.s32 	%r1052, %r2224, %r1051;
	shr.s32 	%r1053, %r1052, 1;
	mad.lo.s32 	%r1054, %r1053, %r911, %r2223;
	shl.b32 	%r114, %r1054, 5;
	add.s32 	%r115, %r2224, -2;
	mul.lo.s32 	%r116, %r115, %r911;
	add.s32 	%r1055, %r912, %r115;
	mul.lo.s32 	%r117, %r1055, %r911;
	add.s32 	%r1056, %r1055, %r912;
	mul.lo.s32 	%r118, %r1056, %r911;
	add.s32 	%r119, %r116, %r911;
	add.s32 	%r120, %r2224, -1;
	add.s32 	%r1057, %r912, %r120;
	mul.lo.s32 	%r121, %r1057, %r911;
	add.s32 	%r1058, %r1057, %r912;
	mul.lo.s32 	%r122, %r1058, %r911;
	add.s32 	%r1059, %r912, %r2224;
	mul.lo.s32 	%r123, %r1059, %r911;
	add.s32 	%r1060, %r1059, %r912;
	mul.lo.s32 	%r124, %r1060, %r911;
	mul.lo.s32 	%r125, %r2224, %r911;
	add.s32 	%r126, %r125, %r911;
	add.s32 	%r127, %r2224, 1;
	add.s32 	%r1061, %r912, %r127;
	mul.lo.s32 	%r128, %r1061, %r911;
	add.s32 	%r1062, %r1061, %r912;
	mul.lo.s32 	%r129, %r1062, %r911;
	add.s32 	%r130, %r126, %r911;
	add.s32 	%r131, %r2224, 2;
	add.s32 	%r1063, %r912, %r131;
	mul.lo.s32 	%r132, %r1063, %r911;
	add.s32 	%r1064, %r1063, %r912;
	mul.lo.s32 	%r133, %r1064, %r911;
	mov.u32 	%r2227, 0;
	mov.u64 	%rd542, %rd90;

$L__BB0_41:
	ld.global.nc.u32 	%r1065, [%rd542];
	cvt.rn.f64.s32 	%fd1, %r1065;
	add.f64 	%fd3, %fd1, 0d3FE0000000000000;
	add.s32 	%r135, %r1065, %r2223;
	setp.lt.s32 	%p36, %r135, %r911;
	or.b32  	%r1066, %r115, %r135;
	setp.gt.s32 	%p37, %r1066, -1;
	and.pred  	%p38, %p36, %p37;
	setp.lt.s32 	%p39, %r115, %r912;
	and.pred  	%p1, %p39, %p38;
	cvt.rn.f32.f64 	%f62, %fd3;
	add.f32 	%f63, %f62, 0f3E800000;
	abs.f32 	%f1, %f63;
	add.f32 	%f64, %f1, 0f40200000;
	setp.geu.f32 	%p40, %f64, 0f40000000;
	@%p40 bra 	$L__BB0_46;

	@%p1 bra 	$L__BB0_44;
	bra.uni 	$L__BB0_43;

$L__BB0_44:
	add.s32 	%r1069, %r116, %r135;
	mul.wide.s32 	%rd91, %r1069, 4;
	add.s64 	%rd92, %rd7, %rd91;
	ld.global.f32 	%f67, [%rd92];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f67;
  mov.b32 %r2226, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_45;

$L__BB0_43:
	mov.f32 	%f66, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f66;
  cvt.rn.f16.f32 high, %f66;
  mov.b32 %r2226, {low,high};}

	// end inline asm

$L__BB0_45:
	add.s32 	%r1070, %r2227, %r114;
	mul.wide.s32 	%rd93, %r1070, 4;
	add.s64 	%rd94, %rd8, %rd93;
	st.global.u32 	[%rd94], %r2226;
	add.s32 	%r2227, %r2227, 1;

$L__BB0_46:
	cvt.rn.f32.f64 	%f68, %fd1;
	add.f32 	%f69, %f68, 0f3E800000;
	abs.f32 	%f2, %f69;
	add.f32 	%f3, %f2, 0f40000000;
	setp.geu.f32 	%p41, %f3, 0f40000000;
	@%p41 bra 	$L__BB0_51;

	@%p1 bra 	$L__BB0_49;
	bra.uni 	$L__BB0_48;

$L__BB0_49:
	add.s32 	%r1073, %r117, %r135;
	mul.wide.s32 	%rd95, %r1073, 4;
	add.s64 	%rd96, %rd7, %rd95;
	ld.global.f32 	%f72, [%rd96];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f72;
  mov.b32 %r2228, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_50;

$L__BB0_48:
	mov.f32 	%f71, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f71;
  cvt.rn.f16.f32 high, %f71;
  mov.b32 %r2228, {low,high};}

	// end inline asm

$L__BB0_50:
	add.s32 	%r1074, %r2227, %r114;
	mul.wide.s32 	%rd97, %r1074, 4;
	add.s64 	%rd98, %rd8, %rd97;
	st.global.u32 	[%rd98], %r2228;
	add.s32 	%r2227, %r2227, 1;

$L__BB0_51:
	add.f32 	%f73, %f2, 0f40200000;
	setp.geu.f32 	%p42, %f73, 0f40000000;
	@%p42 bra 	$L__BB0_56;

	@%p1 bra 	$L__BB0_54;
	bra.uni 	$L__BB0_53;

$L__BB0_54:
	add.s32 	%r1077, %r118, %r135;
	mul.wide.s32 	%rd99, %r1077, 4;
	add.s64 	%rd100, %rd7, %rd99;
	ld.global.f32 	%f76, [%rd100];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f76;
  mov.b32 %r2230, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_55;

$L__BB0_53:
	mov.f32 	%f75, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f75;
  cvt.rn.f16.f32 high, %f75;
  mov.b32 %r2230, {low,high};}

	// end inline asm

$L__BB0_55:
	add.s32 	%r1078, %r2227, %r114;
	mul.wide.s32 	%rd101, %r1078, 4;
	add.s64 	%rd102, %rd8, %rd101;
	st.global.u32 	[%rd102], %r2230;
	add.s32 	%r2227, %r2227, 1;

$L__BB0_56:
	or.b32  	%r1079, %r120, %r135;
	setp.gt.s32 	%p43, %r1079, -1;
	and.pred  	%p45, %p36, %p43;
	setp.le.s32 	%p46, %r2224, %r912;
	and.pred  	%p2, %p46, %p45;
	add.f32 	%f4, %f1, 0f3FC00000;
	setp.geu.f32 	%p47, %f4, 0f40000000;
	@%p47 bra 	$L__BB0_61;

	@%p2 bra 	$L__BB0_59;
	bra.uni 	$L__BB0_58;

$L__BB0_59:
	add.s32 	%r1082, %r119, %r135;
	mul.wide.s32 	%rd103, %r1082, 4;
	add.s64 	%rd104, %rd7, %rd103;
	ld.global.f32 	%f79, [%rd104];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f79;
  mov.b32 %r2232, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_60;

$L__BB0_58:
	mov.f32 	%f78, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f78;
  cvt.rn.f16.f32 high, %f78;
  mov.b32 %r2232, {low,high};}

	// end inline asm

$L__BB0_60:
	add.s32 	%r1083, %r2227, %r114;
	mul.wide.s32 	%rd105, %r1083, 4;
	add.s64 	%rd106, %rd8, %rd105;
	st.global.u32 	[%rd106], %r2232;
	add.s32 	%r2227, %r2227, 1;

$L__BB0_61:
	add.f32 	%f5, %f2, 0f3F800000;
	setp.geu.f32 	%p48, %f5, 0f40000000;
	@%p48 bra 	$L__BB0_66;

	@%p2 bra 	$L__BB0_64;
	bra.uni 	$L__BB0_63;

$L__BB0_64:
	add.s32 	%r1086, %r121, %r135;
	mul.wide.s32 	%rd107, %r1086, 4;
	add.s64 	%rd108, %rd7, %rd107;
	ld.global.f32 	%f82, [%rd108];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f82;
  mov.b32 %r2234, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_65;

$L__BB0_63:
	mov.f32 	%f81, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f81;
  cvt.rn.f16.f32 high, %f81;
  mov.b32 %r2234, {low,high};}

	// end inline asm

$L__BB0_65:
	add.s32 	%r1087, %r2227, %r114;
	mul.wide.s32 	%rd109, %r1087, 4;
	add.s64 	%rd110, %rd8, %rd109;
	st.global.u32 	[%rd110], %r2234;
	add.s32 	%r2227, %r2227, 1;

$L__BB0_66:
	add.f32 	%f6, %f2, 0f3FC00000;
	setp.geu.f32 	%p49, %f6, 0f40000000;
	@%p49 bra 	$L__BB0_71;

	@%p2 bra 	$L__BB0_69;
	bra.uni 	$L__BB0_68;

$L__BB0_69:
	add.s32 	%r1090, %r122, %r135;
	mul.wide.s32 	%rd111, %r1090, 4;
	add.s64 	%rd112, %rd7, %rd111;
	ld.global.f32 	%f85, [%rd112];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f85;
  mov.b32 %r2236, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_70;

$L__BB0_68:
	mov.f32 	%f84, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f84;
  cvt.rn.f16.f32 high, %f84;
  mov.b32 %r2236, {low,high};}

	// end inline asm

$L__BB0_70:
	add.s32 	%r1091, %r2227, %r114;
	mul.wide.s32 	%rd113, %r1091, 4;
	add.s64 	%rd114, %rd8, %rd113;
	st.global.u32 	[%rd114], %r2236;
	add.s32 	%r2227, %r2227, 1;

$L__BB0_71:
	or.b32  	%r1092, %r2224, %r135;
	setp.gt.s32 	%p50, %r1092, -1;
	and.pred  	%p52, %p36, %p50;
	setp.lt.s32 	%p53, %r2224, %r912;
	and.pred  	%p3, %p53, %p52;
	add.f32 	%f7, %f1, 0f3F000000;
	setp.geu.f32 	%p54, %f7, 0f40000000;
	@%p54 bra 	$L__BB0_76;

	@%p3 bra 	$L__BB0_74;
	bra.uni 	$L__BB0_73;

$L__BB0_74:
	add.s32 	%r1095, %r125, %r135;
	mul.wide.s32 	%rd115, %r1095, 4;
	add.s64 	%rd116, %rd7, %rd115;
	ld.global.f32 	%f88, [%rd116];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f88;
  mov.b32 %r2238, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_75;

$L__BB0_73:
	mov.f32 	%f87, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f87;
  cvt.rn.f16.f32 high, %f87;
  mov.b32 %r2238, {low,high};}

	// end inline asm

$L__BB0_75:
	add.s32 	%r1096, %r2227, %r114;
	mul.wide.s32 	%rd117, %r1096, 4;
	add.s64 	%rd118, %rd8, %rd117;
	st.global.u32 	[%rd118], %r2238;
	add.s32 	%r2227, %r2227, 1;

$L__BB0_76:
	add.f32 	%f89, %f2, 0f00000000;
	setp.geu.f32 	%p55, %f89, 0f40000000;
	@%p55 bra 	$L__BB0_81;

	@%p3 bra 	$L__BB0_79;
	bra.uni 	$L__BB0_78;

$L__BB0_79:
	add.s32 	%r1099, %r123, %r135;
	mul.wide.s32 	%rd119, %r1099, 4;
	add.s64 	%rd120, %rd7, %rd119;
	ld.global.f32 	%f92, [%rd120];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f92;
  mov.b32 %r2240, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_80;

$L__BB0_78:
	mov.f32 	%f91, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f91;
  cvt.rn.f16.f32 high, %f91;
  mov.b32 %r2240, {low,high};}

	// end inline asm

$L__BB0_80:
	add.s32 	%r1100, %r2227, %r114;
	mul.wide.s32 	%rd121, %r1100, 4;
	add.s64 	%rd122, %rd8, %rd121;
	st.global.u32 	[%rd122], %r2240;
	add.s32 	%r2227, %r2227, 1;

$L__BB0_81:
	add.f32 	%f8, %f2, 0f3F000000;
	setp.geu.f32 	%p56, %f8, 0f40000000;
	@%p56 bra 	$L__BB0_86;

	@%p3 bra 	$L__BB0_84;
	bra.uni 	$L__BB0_83;

$L__BB0_84:
	add.s32 	%r1103, %r124, %r135;
	mul.wide.s32 	%rd123, %r1103, 4;
	add.s64 	%rd124, %rd7, %rd123;
	ld.global.f32 	%f95, [%rd124];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f95;
  mov.b32 %r2242, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_85;

$L__BB0_83:
	mov.f32 	%f94, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f94;
  cvt.rn.f16.f32 high, %f94;
  mov.b32 %r2242, {low,high};}

	// end inline asm

$L__BB0_85:
	add.s32 	%r1104, %r2227, %r114;
	mul.wide.s32 	%rd125, %r1104, 4;
	add.s64 	%rd126, %rd8, %rd125;
	st.global.u32 	[%rd126], %r2242;
	add.s32 	%r2227, %r2227, 1;

$L__BB0_86:
	or.b32  	%r1105, %r127, %r135;
	setp.gt.s32 	%p57, %r1105, -1;
	and.pred  	%p59, %p36, %p57;
	setp.lt.s32 	%p60, %r127, %r912;
	and.pred  	%p4, %p60, %p59;
	@%p54 bra 	$L__BB0_91;

	@%p4 bra 	$L__BB0_89;
	bra.uni 	$L__BB0_88;

$L__BB0_89:
	add.s32 	%r1108, %r126, %r135;
	mul.wide.s32 	%rd127, %r1108, 4;
	add.s64 	%rd128, %rd7, %rd127;
	ld.global.f32 	%f98, [%rd128];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f98;
  mov.b32 %r2244, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_90;

$L__BB0_88:
	mov.f32 	%f97, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f97;
  cvt.rn.f16.f32 high, %f97;
  mov.b32 %r2244, {low,high};}

	// end inline asm

$L__BB0_90:
	add.s32 	%r1109, %r2227, %r114;
	mul.wide.s32 	%rd129, %r1109, 4;
	add.s64 	%rd130, %rd8, %rd129;
	st.global.u32 	[%rd130], %r2244;
	add.s32 	%r2227, %r2227, 1;

$L__BB0_91:
	@%p48 bra 	$L__BB0_96;

	@%p4 bra 	$L__BB0_94;
	bra.uni 	$L__BB0_93;

$L__BB0_94:
	add.s32 	%r1112, %r128, %r135;
	mul.wide.s32 	%rd131, %r1112, 4;
	add.s64 	%rd132, %rd7, %rd131;
	ld.global.f32 	%f101, [%rd132];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f101;
  mov.b32 %r2246, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_95;

$L__BB0_93:
	mov.f32 	%f100, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f100;
  cvt.rn.f16.f32 high, %f100;
  mov.b32 %r2246, {low,high};}

	// end inline asm

$L__BB0_95:
	add.s32 	%r1113, %r2227, %r114;
	mul.wide.s32 	%rd133, %r1113, 4;
	add.s64 	%rd134, %rd8, %rd133;
	st.global.u32 	[%rd134], %r2246;
	add.s32 	%r2227, %r2227, 1;

$L__BB0_96:
	@%p56 bra 	$L__BB0_101;

	@%p4 bra 	$L__BB0_99;
	bra.uni 	$L__BB0_98;

$L__BB0_99:
	add.s32 	%r1116, %r129, %r135;
	mul.wide.s32 	%rd135, %r1116, 4;
	add.s64 	%rd136, %rd7, %rd135;
	ld.global.f32 	%f104, [%rd136];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f104;
  mov.b32 %r2248, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_100;

$L__BB0_98:
	mov.f32 	%f103, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f103;
  cvt.rn.f16.f32 high, %f103;
  mov.b32 %r2248, {low,high};}

	// end inline asm

$L__BB0_100:
	add.s32 	%r1117, %r2227, %r114;
	mul.wide.s32 	%rd137, %r1117, 4;
	add.s64 	%rd138, %rd8, %rd137;
	st.global.u32 	[%rd138], %r2248;
	add.s32 	%r2227, %r2227, 1;

$L__BB0_101:
	or.b32  	%r1118, %r131, %r135;
	setp.gt.s32 	%p64, %r1118, -1;
	and.pred  	%p66, %p36, %p64;
	setp.lt.s32 	%p67, %r131, %r912;
	and.pred  	%p5, %p67, %p66;
	@%p47 bra 	$L__BB0_106;

	@%p5 bra 	$L__BB0_104;
	bra.uni 	$L__BB0_103;

$L__BB0_104:
	add.s32 	%r1121, %r130, %r135;
	mul.wide.s32 	%rd139, %r1121, 4;
	add.s64 	%rd140, %rd7, %rd139;
	ld.global.f32 	%f107, [%rd140];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f107;
  mov.b32 %r2250, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_105;

$L__BB0_103:
	mov.f32 	%f106, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f106;
  cvt.rn.f16.f32 high, %f106;
  mov.b32 %r2250, {low,high};}

	// end inline asm

$L__BB0_105:
	add.s32 	%r1122, %r2227, %r114;
	mul.wide.s32 	%rd141, %r1122, 4;
	add.s64 	%rd142, %rd8, %rd141;
	st.global.u32 	[%rd142], %r2250;
	add.s32 	%r2227, %r2227, 1;

$L__BB0_106:
	@%p41 bra 	$L__BB0_111;

	@%p5 bra 	$L__BB0_109;
	bra.uni 	$L__BB0_108;

$L__BB0_109:
	add.s32 	%r1125, %r132, %r135;
	mul.wide.s32 	%rd143, %r1125, 4;
	add.s64 	%rd144, %rd7, %rd143;
	ld.global.f32 	%f110, [%rd144];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f110;
  mov.b32 %r2252, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_110;

$L__BB0_108:
	mov.f32 	%f109, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f109;
  cvt.rn.f16.f32 high, %f109;
  mov.b32 %r2252, {low,high};}

	// end inline asm

$L__BB0_110:
	add.s32 	%r1126, %r2227, %r114;
	mul.wide.s32 	%rd145, %r1126, 4;
	add.s64 	%rd146, %rd8, %rd145;
	st.global.u32 	[%rd146], %r2252;
	add.s32 	%r2227, %r2227, 1;

$L__BB0_111:
	@%p49 bra 	$L__BB0_116;

	@%p5 bra 	$L__BB0_114;
	bra.uni 	$L__BB0_113;

$L__BB0_114:
	add.s32 	%r1129, %r133, %r135;
	mul.wide.s32 	%rd147, %r1129, 4;
	add.s64 	%rd148, %rd7, %rd147;
	ld.global.f32 	%f113, [%rd148];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f113;
  mov.b32 %r2254, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_115;

$L__BB0_113:
	mov.f32 	%f112, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f112;
  cvt.rn.f16.f32 high, %f112;
  mov.b32 %r2254, {low,high};}

	// end inline asm

$L__BB0_115:
	add.s32 	%r1130, %r2227, %r114;
	mul.wide.s32 	%rd149, %r1130, 4;
	add.s64 	%rd150, %rd8, %rd149;
	st.global.u32 	[%rd150], %r2254;
	add.s32 	%r2227, %r2227, 1;

$L__BB0_116:
	add.s64 	%rd542, %rd542, 4;
	mov.u64 	%rd151, _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE;
	add.s64 	%rd152, %rd151, 24;
	setp.ne.s64 	%p71, %rd542, %rd152;
	@%p71 bra 	$L__BB0_41;

$L__BB0_117:
	add.s32 	%r2224, %r2224, %r37;
	setp.lt.s32 	%p72, %r2224, %r912;
	@%p72 bra 	$L__BB0_39;

$L__BB0_118:
	add.s32 	%r2223, %r2223, %r932;
	setp.lt.s32 	%p73, %r2223, %r911;
	@%p73 bra 	$L__BB0_37;

$L__BB0_119:
	setp.eq.s32 	%p74, %r915, 1;
	ld.param.u64 	%rd153, [%rd1+136];
	cvta.to.global.u64 	%rd11, %rd153;
	ld.param.u64 	%rd154, [%rd1+104];
	cvta.to.global.u64 	%rd12, %rd154;
	@%p74 bra 	$L__BB0_137;
	bra.uni 	$L__BB0_120;

$L__BB0_137:
	@%p22 bra 	$L__BB0_266;

	shl.b32 	%r239, %r63, 1;
	shr.u32 	%r1178, %r916, 31;
	add.s32 	%r1179, %r916, %r1178;
	shr.u32 	%r1180, %r1179, 1;
	and.b32  	%r240, %r1180, 1;
	mov.u64 	%rd174, _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE;

$L__BB0_139:
	setp.ge.s32 	%p84, %r239, %r912;
	@%p84 bra 	$L__BB0_265;

	mov.u32 	%r2262, %r239;

$L__BB0_141:
	setp.ne.s32 	%p85, %r35, 0;
	@%p85 bra 	$L__BB0_264;

	shr.u32 	%r1182, %r2262, 31;
	add.s32 	%r1183, %r2262, %r1182;
	shr.s32 	%r1184, %r1183, 1;
	mad.lo.s32 	%r1185, %r1184, %r911, %r2256;
	shl.b32 	%r244, %r1185, 5;
	add.s32 	%r245, %r2262, -2;
	mul.lo.s32 	%r246, %r245, %r911;
	add.s32 	%r1186, %r912, %r245;
	mul.lo.s32 	%r247, %r1186, %r911;
	add.s32 	%r248, %r246, %r911;
	add.s32 	%r249, %r2262, -1;
	add.s32 	%r1187, %r912, %r249;
	mul.lo.s32 	%r250, %r1187, %r911;
	add.s32 	%r1188, %r912, %r2262;
	mul.lo.s32 	%r251, %r1188, %r911;
	mul.lo.s32 	%r252, %r2262, %r911;
	add.s32 	%r253, %r252, %r911;
	add.s32 	%r254, %r2262, 1;
	add.s32 	%r1189, %r912, %r254;
	mul.lo.s32 	%r255, %r1189, %r911;
	add.s32 	%r256, %r253, %r911;
	add.s32 	%r257, %r2262, 2;
	add.s32 	%r1190, %r912, %r257;
	mul.lo.s32 	%r258, %r1190, %r911;
	mov.u32 	%r2266, 0;
	mov.u64 	%rd543, 24;
	mov.u64 	%rd544, %rd174;

$L__BB0_143:
	ld.global.nc.u32 	%r1191, [%rd544];
	cvt.rn.f64.s32 	%fd2, %r1191;
	add.f64 	%fd4, %fd2, 0d3FE0000000000000;
	add.s32 	%r260, %r1191, %r2256;
	setp.lt.s32 	%p86, %r260, %r911;
	or.b32  	%r1192, %r245, %r260;
	setp.gt.s32 	%p87, %r1192, -1;
	and.pred  	%p88, %p86, %p87;
	setp.lt.s32 	%p89, %r245, %r912;
	and.pred  	%p6, %p89, %p88;
	cvt.rn.f32.f64 	%f130, %fd4;
	add.f32 	%f131, %f130, 0f3E800000;
	abs.f32 	%f9, %f131;
	add.f32 	%f132, %f9, 0f40200000;
	setp.geu.f32 	%p90, %f132, 0f40000000;
	@%p90 bra 	$L__BB0_155;

	@%p6 bra 	$L__BB0_146;
	bra.uni 	$L__BB0_145;

$L__BB0_146:
	setp.eq.s32 	%p91, %r240, 0;
	add.s32 	%r1194, %r246, %r260;
	shl.b32 	%r1195, %r1194, 1;
	mul.wide.s32 	%rd175, %r1195, 4;
	add.s64 	%rd176, %rd11, %rd175;
	ld.global.f32 	%f10, [%rd176];
	@%p91 bra 	$L__BB0_148;
	bra.uni 	$L__BB0_147;

$L__BB0_148:
	mov.f32 	%f138, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f10;
  cvt.rn.f16.f32 high, %f138;
  mov.b32 %r2264, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_149;

$L__BB0_145:
	mov.f32 	%f134, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f134;
  cvt.rn.f16.f32 high, %f134;
  mov.b32 %r2264, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_149;

$L__BB0_147:
	mov.f32 	%f135, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f135;
  cvt.rn.f16.f32 high, %f10;
  mov.b32 %r2264, {low,high};}

	// end inline asm

$L__BB0_149:
	add.s32 	%r265, %r2266, %r244;
	mul.wide.s32 	%rd177, %r265, 4;
	add.s64 	%rd178, %rd12, %rd177;
	st.global.u32 	[%rd178], %r2264;
	@%p6 bra 	$L__BB0_151;
	bra.uni 	$L__BB0_150;

$L__BB0_151:
	setp.eq.s32 	%p92, %r240, 0;
	add.s32 	%r1199, %r247, %r260;
	shl.b32 	%r1200, %r1199, 1;
	mul.wide.s32 	%rd179, %r1200, 4;
	add.s64 	%rd180, %rd11, %rd179;
	ld.global.f32 	%f11, [%rd180];
	@%p92 bra 	$L__BB0_153;
	bra.uni 	$L__BB0_152;

$L__BB0_153:
	mov.f32 	%f144, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f11;
  cvt.rn.f16.f32 high, %f144;
  mov.b32 %r2265, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_154;

$L__BB0_150:
	mov.f32 	%f140, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f140;
  cvt.rn.f16.f32 high, %f140;
  mov.b32 %r2265, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_154;

$L__BB0_152:
	mov.f32 	%f141, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f141;
  cvt.rn.f16.f32 high, %f11;
  mov.b32 %r2265, {low,high};}

	// end inline asm

$L__BB0_154:
	add.s32 	%r1203, %r265, 1;
	mul.wide.s32 	%rd181, %r1203, 4;
	add.s64 	%rd182, %rd12, %rd181;
	st.global.u32 	[%rd182], %r2265;
	add.s32 	%r2266, %r2266, 2;

$L__BB0_155:
	cvt.rn.f32.f64 	%f145, %fd2;
	add.f32 	%f146, %f145, 0f3E800000;
	abs.f32 	%f12, %f146;
	add.f32 	%f13, %f12, 0f40000000;
	setp.geu.f32 	%p93, %f13, 0f40000000;
	@%p93 bra 	$L__BB0_167;

	@%p6 bra 	$L__BB0_158;
	bra.uni 	$L__BB0_157;

$L__BB0_158:
	setp.eq.s32 	%p94, %r240, 0;
	add.s32 	%r1205, %r246, %r260;
	shl.b32 	%r1206, %r1205, 1;
	or.b32  	%r1207, %r1206, 1;
	mul.wide.s32 	%rd183, %r1207, 4;
	add.s64 	%rd184, %rd11, %rd183;
	ld.global.f32 	%f14, [%rd184];
	@%p94 bra 	$L__BB0_160;
	bra.uni 	$L__BB0_159;

$L__BB0_160:
	mov.f32 	%f152, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f14;
  cvt.rn.f16.f32 high, %f152;
  mov.b32 %r2267, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_161;

$L__BB0_157:
	mov.f32 	%f148, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f148;
  cvt.rn.f16.f32 high, %f148;
  mov.b32 %r2267, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_161;

$L__BB0_159:
	mov.f32 	%f149, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f149;
  cvt.rn.f16.f32 high, %f14;
  mov.b32 %r2267, {low,high};}

	// end inline asm

$L__BB0_161:
	add.s32 	%r276, %r2266, %r244;
	mul.wide.s32 	%rd185, %r276, 4;
	add.s64 	%rd186, %rd12, %rd185;
	st.global.u32 	[%rd186], %r2267;
	@%p6 bra 	$L__BB0_163;
	bra.uni 	$L__BB0_162;

$L__BB0_163:
	setp.eq.s32 	%p95, %r240, 0;
	add.s32 	%r1211, %r247, %r260;
	shl.b32 	%r1212, %r1211, 1;
	or.b32  	%r1213, %r1212, 1;
	mul.wide.s32 	%rd187, %r1213, 4;
	add.s64 	%rd188, %rd11, %rd187;
	ld.global.f32 	%f15, [%rd188];
	@%p95 bra 	$L__BB0_165;
	bra.uni 	$L__BB0_164;

$L__BB0_165:
	mov.f32 	%f158, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f15;
  cvt.rn.f16.f32 high, %f158;
  mov.b32 %r2268, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_166;

$L__BB0_162:
	mov.f32 	%f154, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f154;
  cvt.rn.f16.f32 high, %f154;
  mov.b32 %r2268, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_166;

$L__BB0_164:
	mov.f32 	%f155, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f155;
  cvt.rn.f16.f32 high, %f15;
  mov.b32 %r2268, {low,high};}

	// end inline asm

$L__BB0_166:
	add.s32 	%r1216, %r276, 1;
	mul.wide.s32 	%rd189, %r1216, 4;
	add.s64 	%rd190, %rd12, %rd189;
	st.global.u32 	[%rd190], %r2268;
	add.s32 	%r2266, %r2266, 2;

$L__BB0_167:
	or.b32  	%r1217, %r249, %r260;
	setp.gt.s32 	%p96, %r1217, -1;
	and.pred  	%p98, %p86, %p96;
	setp.le.s32 	%p99, %r2262, %r912;
	and.pred  	%p7, %p99, %p98;
	add.f32 	%f16, %f9, 0f3FC00000;
	setp.geu.f32 	%p100, %f16, 0f40000000;
	@%p100 bra 	$L__BB0_179;

	@%p7 bra 	$L__BB0_170;
	bra.uni 	$L__BB0_169;

$L__BB0_170:
	setp.eq.s32 	%p101, %r240, 0;
	add.s32 	%r1219, %r248, %r260;
	shl.b32 	%r1220, %r1219, 1;
	mul.wide.s32 	%rd191, %r1220, 4;
	add.s64 	%rd192, %rd11, %rd191;
	ld.global.f32 	%f17, [%rd192];
	@%p101 bra 	$L__BB0_172;
	bra.uni 	$L__BB0_171;

$L__BB0_172:
	mov.f32 	%f164, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f17;
  cvt.rn.f16.f32 high, %f164;
  mov.b32 %r2270, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_173;

$L__BB0_169:
	mov.f32 	%f160, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f160;
  cvt.rn.f16.f32 high, %f160;
  mov.b32 %r2270, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_173;

$L__BB0_171:
	mov.f32 	%f161, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f161;
  cvt.rn.f16.f32 high, %f17;
  mov.b32 %r2270, {low,high};}

	// end inline asm

$L__BB0_173:
	add.s32 	%r287, %r2266, %r244;
	mul.wide.s32 	%rd193, %r287, 4;
	add.s64 	%rd194, %rd12, %rd193;
	st.global.u32 	[%rd194], %r2270;
	@%p7 bra 	$L__BB0_175;
	bra.uni 	$L__BB0_174;

$L__BB0_175:
	setp.eq.s32 	%p102, %r240, 0;
	add.s32 	%r1224, %r250, %r260;
	shl.b32 	%r1225, %r1224, 1;
	mul.wide.s32 	%rd195, %r1225, 4;
	add.s64 	%rd196, %rd11, %rd195;
	ld.global.f32 	%f18, [%rd196];
	@%p102 bra 	$L__BB0_177;
	bra.uni 	$L__BB0_176;

$L__BB0_177:
	mov.f32 	%f170, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f18;
  cvt.rn.f16.f32 high, %f170;
  mov.b32 %r2271, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_178;

$L__BB0_174:
	mov.f32 	%f166, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f166;
  cvt.rn.f16.f32 high, %f166;
  mov.b32 %r2271, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_178;

$L__BB0_176:
	mov.f32 	%f167, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f167;
  cvt.rn.f16.f32 high, %f18;
  mov.b32 %r2271, {low,high};}

	// end inline asm

$L__BB0_178:
	add.s32 	%r1228, %r287, 1;
	mul.wide.s32 	%rd197, %r1228, 4;
	add.s64 	%rd198, %rd12, %rd197;
	st.global.u32 	[%rd198], %r2271;
	add.s32 	%r2266, %r2266, 2;

$L__BB0_179:
	add.f32 	%f19, %f12, 0f3F800000;
	setp.geu.f32 	%p103, %f19, 0f40000000;
	@%p103 bra 	$L__BB0_191;

	@%p7 bra 	$L__BB0_182;
	bra.uni 	$L__BB0_181;

$L__BB0_182:
	setp.eq.s32 	%p104, %r240, 0;
	add.s32 	%r1230, %r248, %r260;
	shl.b32 	%r1231, %r1230, 1;
	or.b32  	%r1232, %r1231, 1;
	mul.wide.s32 	%rd199, %r1232, 4;
	add.s64 	%rd200, %rd11, %rd199;
	ld.global.f32 	%f20, [%rd200];
	@%p104 bra 	$L__BB0_184;
	bra.uni 	$L__BB0_183;

$L__BB0_184:
	mov.f32 	%f176, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f20;
  cvt.rn.f16.f32 high, %f176;
  mov.b32 %r2273, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_185;

$L__BB0_181:
	mov.f32 	%f172, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f172;
  cvt.rn.f16.f32 high, %f172;
  mov.b32 %r2273, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_185;

$L__BB0_183:
	mov.f32 	%f173, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f173;
  cvt.rn.f16.f32 high, %f20;
  mov.b32 %r2273, {low,high};}

	// end inline asm

$L__BB0_185:
	add.s32 	%r298, %r2266, %r244;
	mul.wide.s32 	%rd201, %r298, 4;
	add.s64 	%rd202, %rd12, %rd201;
	st.global.u32 	[%rd202], %r2273;
	@%p7 bra 	$L__BB0_187;
	bra.uni 	$L__BB0_186;

$L__BB0_187:
	setp.eq.s32 	%p105, %r240, 0;
	add.s32 	%r1236, %r250, %r260;
	shl.b32 	%r1237, %r1236, 1;
	or.b32  	%r1238, %r1237, 1;
	mul.wide.s32 	%rd203, %r1238, 4;
	add.s64 	%rd204, %rd11, %rd203;
	ld.global.f32 	%f21, [%rd204];
	@%p105 bra 	$L__BB0_189;
	bra.uni 	$L__BB0_188;

$L__BB0_189:
	mov.f32 	%f182, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f21;
  cvt.rn.f16.f32 high, %f182;
  mov.b32 %r2274, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_190;

$L__BB0_186:
	mov.f32 	%f178, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f178;
  cvt.rn.f16.f32 high, %f178;
  mov.b32 %r2274, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_190;

$L__BB0_188:
	mov.f32 	%f179, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f179;
  cvt.rn.f16.f32 high, %f21;
  mov.b32 %r2274, {low,high};}

	// end inline asm

$L__BB0_190:
	add.s32 	%r1241, %r298, 1;
	mul.wide.s32 	%rd205, %r1241, 4;
	add.s64 	%rd206, %rd12, %rd205;
	st.global.u32 	[%rd206], %r2274;
	add.s32 	%r2266, %r2266, 2;

$L__BB0_191:
	or.b32  	%r1242, %r2262, %r260;
	setp.gt.s32 	%p106, %r1242, -1;
	and.pred  	%p108, %p86, %p106;
	setp.lt.s32 	%p109, %r2262, %r912;
	and.pred  	%p8, %p109, %p108;
	add.f32 	%f22, %f9, 0f3F000000;
	setp.geu.f32 	%p110, %f22, 0f40000000;
	@%p110 bra 	$L__BB0_203;

	@%p8 bra 	$L__BB0_194;
	bra.uni 	$L__BB0_193;

$L__BB0_194:
	setp.eq.s32 	%p111, %r240, 0;
	add.s32 	%r1244, %r252, %r260;
	shl.b32 	%r1245, %r1244, 1;
	mul.wide.s32 	%rd207, %r1245, 4;
	add.s64 	%rd208, %rd11, %rd207;
	ld.global.f32 	%f23, [%rd208];
	@%p111 bra 	$L__BB0_196;
	bra.uni 	$L__BB0_195;

$L__BB0_196:
	mov.f32 	%f188, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f23;
  cvt.rn.f16.f32 high, %f188;
  mov.b32 %r2276, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_197;

$L__BB0_193:
	mov.f32 	%f184, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f184;
  cvt.rn.f16.f32 high, %f184;
  mov.b32 %r2276, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_197;

$L__BB0_195:
	mov.f32 	%f185, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f185;
  cvt.rn.f16.f32 high, %f23;
  mov.b32 %r2276, {low,high};}

	// end inline asm

$L__BB0_197:
	add.s32 	%r309, %r2266, %r244;
	mul.wide.s32 	%rd209, %r309, 4;
	add.s64 	%rd210, %rd12, %rd209;
	st.global.u32 	[%rd210], %r2276;
	@%p8 bra 	$L__BB0_199;
	bra.uni 	$L__BB0_198;

$L__BB0_199:
	setp.eq.s32 	%p112, %r240, 0;
	add.s32 	%r1249, %r251, %r260;
	shl.b32 	%r1250, %r1249, 1;
	mul.wide.s32 	%rd211, %r1250, 4;
	add.s64 	%rd212, %rd11, %rd211;
	ld.global.f32 	%f24, [%rd212];
	@%p112 bra 	$L__BB0_201;
	bra.uni 	$L__BB0_200;

$L__BB0_201:
	mov.f32 	%f194, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f24;
  cvt.rn.f16.f32 high, %f194;
  mov.b32 %r2277, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_202;

$L__BB0_198:
	mov.f32 	%f190, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f190;
  cvt.rn.f16.f32 high, %f190;
  mov.b32 %r2277, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_202;

$L__BB0_200:
	mov.f32 	%f191, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f191;
  cvt.rn.f16.f32 high, %f24;
  mov.b32 %r2277, {low,high};}

	// end inline asm

$L__BB0_202:
	add.s32 	%r1253, %r309, 1;
	mul.wide.s32 	%rd213, %r1253, 4;
	add.s64 	%rd214, %rd12, %rd213;
	st.global.u32 	[%rd214], %r2277;
	add.s32 	%r2266, %r2266, 2;

$L__BB0_203:
	add.f32 	%f195, %f12, 0f00000000;
	setp.geu.f32 	%p113, %f195, 0f40000000;
	@%p113 bra 	$L__BB0_215;

	@%p8 bra 	$L__BB0_206;
	bra.uni 	$L__BB0_205;

$L__BB0_206:
	setp.eq.s32 	%p114, %r240, 0;
	add.s32 	%r1255, %r252, %r260;
	shl.b32 	%r1256, %r1255, 1;
	or.b32  	%r1257, %r1256, 1;
	mul.wide.s32 	%rd215, %r1257, 4;
	add.s64 	%rd216, %rd11, %rd215;
	ld.global.f32 	%f25, [%rd216];
	@%p114 bra 	$L__BB0_208;
	bra.uni 	$L__BB0_207;

$L__BB0_208:
	mov.f32 	%f201, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f25;
  cvt.rn.f16.f32 high, %f201;
  mov.b32 %r2279, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_209;

$L__BB0_205:
	mov.f32 	%f197, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f197;
  cvt.rn.f16.f32 high, %f197;
  mov.b32 %r2279, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_209;

$L__BB0_207:
	mov.f32 	%f198, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f198;
  cvt.rn.f16.f32 high, %f25;
  mov.b32 %r2279, {low,high};}

	// end inline asm

$L__BB0_209:
	add.s32 	%r320, %r2266, %r244;
	mul.wide.s32 	%rd217, %r320, 4;
	add.s64 	%rd218, %rd12, %rd217;
	st.global.u32 	[%rd218], %r2279;
	@%p8 bra 	$L__BB0_211;
	bra.uni 	$L__BB0_210;

$L__BB0_211:
	setp.eq.s32 	%p115, %r240, 0;
	add.s32 	%r1261, %r251, %r260;
	shl.b32 	%r1262, %r1261, 1;
	or.b32  	%r1263, %r1262, 1;
	mul.wide.s32 	%rd219, %r1263, 4;
	add.s64 	%rd220, %rd11, %rd219;
	ld.global.f32 	%f26, [%rd220];
	@%p115 bra 	$L__BB0_213;
	bra.uni 	$L__BB0_212;

$L__BB0_213:
	mov.f32 	%f207, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f26;
  cvt.rn.f16.f32 high, %f207;
  mov.b32 %r2280, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_214;

$L__BB0_210:
	mov.f32 	%f203, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f203;
  cvt.rn.f16.f32 high, %f203;
  mov.b32 %r2280, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_214;

$L__BB0_212:
	mov.f32 	%f204, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f204;
  cvt.rn.f16.f32 high, %f26;
  mov.b32 %r2280, {low,high};}

	// end inline asm

$L__BB0_214:
	add.s32 	%r1266, %r320, 1;
	mul.wide.s32 	%rd221, %r1266, 4;
	add.s64 	%rd222, %rd12, %rd221;
	st.global.u32 	[%rd222], %r2280;
	add.s32 	%r2266, %r2266, 2;

$L__BB0_215:
	or.b32  	%r1267, %r254, %r260;
	setp.gt.s32 	%p116, %r1267, -1;
	and.pred  	%p118, %p86, %p116;
	setp.lt.s32 	%p119, %r254, %r912;
	and.pred  	%p9, %p119, %p118;
	@%p110 bra 	$L__BB0_227;

	@%p9 bra 	$L__BB0_218;
	bra.uni 	$L__BB0_217;

$L__BB0_218:
	setp.eq.s32 	%p121, %r240, 0;
	add.s32 	%r1269, %r253, %r260;
	shl.b32 	%r1270, %r1269, 1;
	mul.wide.s32 	%rd223, %r1270, 4;
	add.s64 	%rd224, %rd11, %rd223;
	ld.global.f32 	%f27, [%rd224];
	@%p121 bra 	$L__BB0_220;
	bra.uni 	$L__BB0_219;

$L__BB0_220:
	mov.f32 	%f213, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f27;
  cvt.rn.f16.f32 high, %f213;
  mov.b32 %r2282, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_221;

$L__BB0_217:
	mov.f32 	%f209, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f209;
  cvt.rn.f16.f32 high, %f209;
  mov.b32 %r2282, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_221;

$L__BB0_219:
	mov.f32 	%f210, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f210;
  cvt.rn.f16.f32 high, %f27;
  mov.b32 %r2282, {low,high};}

	// end inline asm

$L__BB0_221:
	add.s32 	%r331, %r2266, %r244;
	mul.wide.s32 	%rd225, %r331, 4;
	add.s64 	%rd226, %rd12, %rd225;
	st.global.u32 	[%rd226], %r2282;
	@%p9 bra 	$L__BB0_223;
	bra.uni 	$L__BB0_222;

$L__BB0_223:
	setp.eq.s32 	%p122, %r240, 0;
	add.s32 	%r1274, %r255, %r260;
	shl.b32 	%r1275, %r1274, 1;
	mul.wide.s32 	%rd227, %r1275, 4;
	add.s64 	%rd228, %rd11, %rd227;
	ld.global.f32 	%f28, [%rd228];
	@%p122 bra 	$L__BB0_225;
	bra.uni 	$L__BB0_224;

$L__BB0_225:
	mov.f32 	%f219, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f28;
  cvt.rn.f16.f32 high, %f219;
  mov.b32 %r2283, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_226;

$L__BB0_222:
	mov.f32 	%f215, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f215;
  cvt.rn.f16.f32 high, %f215;
  mov.b32 %r2283, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_226;

$L__BB0_224:
	mov.f32 	%f216, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f216;
  cvt.rn.f16.f32 high, %f28;
  mov.b32 %r2283, {low,high};}

	// end inline asm

$L__BB0_226:
	add.s32 	%r1278, %r331, 1;
	mul.wide.s32 	%rd229, %r1278, 4;
	add.s64 	%rd230, %rd12, %rd229;
	st.global.u32 	[%rd230], %r2283;
	add.s32 	%r2266, %r2266, 2;

$L__BB0_227:
	@%p103 bra 	$L__BB0_239;

	@%p9 bra 	$L__BB0_230;
	bra.uni 	$L__BB0_229;

$L__BB0_230:
	setp.eq.s32 	%p124, %r240, 0;
	add.s32 	%r1280, %r253, %r260;
	shl.b32 	%r1281, %r1280, 1;
	or.b32  	%r1282, %r1281, 1;
	mul.wide.s32 	%rd231, %r1282, 4;
	add.s64 	%rd232, %rd11, %rd231;
	ld.global.f32 	%f29, [%rd232];
	@%p124 bra 	$L__BB0_232;
	bra.uni 	$L__BB0_231;

$L__BB0_232:
	mov.f32 	%f225, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f29;
  cvt.rn.f16.f32 high, %f225;
  mov.b32 %r2285, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_233;

$L__BB0_229:
	mov.f32 	%f221, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f221;
  cvt.rn.f16.f32 high, %f221;
  mov.b32 %r2285, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_233;

$L__BB0_231:
	mov.f32 	%f222, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f222;
  cvt.rn.f16.f32 high, %f29;
  mov.b32 %r2285, {low,high};}

	// end inline asm

$L__BB0_233:
	add.s32 	%r342, %r2266, %r244;
	mul.wide.s32 	%rd233, %r342, 4;
	add.s64 	%rd234, %rd12, %rd233;
	st.global.u32 	[%rd234], %r2285;
	@%p9 bra 	$L__BB0_235;
	bra.uni 	$L__BB0_234;

$L__BB0_235:
	setp.eq.s32 	%p125, %r240, 0;
	add.s32 	%r1286, %r255, %r260;
	shl.b32 	%r1287, %r1286, 1;
	or.b32  	%r1288, %r1287, 1;
	mul.wide.s32 	%rd235, %r1288, 4;
	add.s64 	%rd236, %rd11, %rd235;
	ld.global.f32 	%f30, [%rd236];
	@%p125 bra 	$L__BB0_237;
	bra.uni 	$L__BB0_236;

$L__BB0_237:
	mov.f32 	%f231, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f30;
  cvt.rn.f16.f32 high, %f231;
  mov.b32 %r2286, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_238;

$L__BB0_234:
	mov.f32 	%f227, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f227;
  cvt.rn.f16.f32 high, %f227;
  mov.b32 %r2286, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_238;

$L__BB0_236:
	mov.f32 	%f228, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f228;
  cvt.rn.f16.f32 high, %f30;
  mov.b32 %r2286, {low,high};}

	// end inline asm

$L__BB0_238:
	add.s32 	%r1291, %r342, 1;
	mul.wide.s32 	%rd237, %r1291, 4;
	add.s64 	%rd238, %rd12, %rd237;
	st.global.u32 	[%rd238], %r2286;
	add.s32 	%r2266, %r2266, 2;

$L__BB0_239:
	or.b32  	%r1292, %r257, %r260;
	setp.gt.s32 	%p126, %r1292, -1;
	and.pred  	%p128, %p86, %p126;
	setp.lt.s32 	%p129, %r257, %r912;
	and.pred  	%p10, %p129, %p128;
	@%p100 bra 	$L__BB0_251;

	@%p10 bra 	$L__BB0_242;
	bra.uni 	$L__BB0_241;

$L__BB0_242:
	setp.eq.s32 	%p131, %r240, 0;
	add.s32 	%r1294, %r256, %r260;
	shl.b32 	%r1295, %r1294, 1;
	mul.wide.s32 	%rd239, %r1295, 4;
	add.s64 	%rd240, %rd11, %rd239;
	ld.global.f32 	%f31, [%rd240];
	@%p131 bra 	$L__BB0_244;
	bra.uni 	$L__BB0_243;

$L__BB0_244:
	mov.f32 	%f237, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f31;
  cvt.rn.f16.f32 high, %f237;
  mov.b32 %r2288, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_245;

$L__BB0_241:
	mov.f32 	%f233, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f233;
  cvt.rn.f16.f32 high, %f233;
  mov.b32 %r2288, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_245;

$L__BB0_243:
	mov.f32 	%f234, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f234;
  cvt.rn.f16.f32 high, %f31;
  mov.b32 %r2288, {low,high};}

	// end inline asm

$L__BB0_245:
	add.s32 	%r353, %r2266, %r244;
	mul.wide.s32 	%rd241, %r353, 4;
	add.s64 	%rd242, %rd12, %rd241;
	st.global.u32 	[%rd242], %r2288;
	@%p10 bra 	$L__BB0_247;
	bra.uni 	$L__BB0_246;

$L__BB0_247:
	setp.eq.s32 	%p132, %r240, 0;
	add.s32 	%r1299, %r258, %r260;
	shl.b32 	%r1300, %r1299, 1;
	mul.wide.s32 	%rd243, %r1300, 4;
	add.s64 	%rd244, %rd11, %rd243;
	ld.global.f32 	%f32, [%rd244];
	@%p132 bra 	$L__BB0_249;
	bra.uni 	$L__BB0_248;

$L__BB0_249:
	mov.f32 	%f243, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f32;
  cvt.rn.f16.f32 high, %f243;
  mov.b32 %r2289, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_250;

$L__BB0_246:
	mov.f32 	%f239, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f239;
  cvt.rn.f16.f32 high, %f239;
  mov.b32 %r2289, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_250;

$L__BB0_248:
	mov.f32 	%f240, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f240;
  cvt.rn.f16.f32 high, %f32;
  mov.b32 %r2289, {low,high};}

	// end inline asm

$L__BB0_250:
	add.s32 	%r1303, %r353, 1;
	mul.wide.s32 	%rd245, %r1303, 4;
	add.s64 	%rd246, %rd12, %rd245;
	st.global.u32 	[%rd246], %r2289;
	add.s32 	%r2266, %r2266, 2;

$L__BB0_251:
	@%p93 bra 	$L__BB0_263;

	@%p10 bra 	$L__BB0_254;
	bra.uni 	$L__BB0_253;

$L__BB0_254:
	setp.eq.s32 	%p134, %r240, 0;
	add.s32 	%r1305, %r256, %r260;
	shl.b32 	%r1306, %r1305, 1;
	or.b32  	%r1307, %r1306, 1;
	mul.wide.s32 	%rd247, %r1307, 4;
	add.s64 	%rd248, %rd11, %rd247;
	ld.global.f32 	%f33, [%rd248];
	@%p134 bra 	$L__BB0_256;
	bra.uni 	$L__BB0_255;

$L__BB0_256:
	mov.f32 	%f249, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f33;
  cvt.rn.f16.f32 high, %f249;
  mov.b32 %r2291, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_257;

$L__BB0_253:
	mov.f32 	%f245, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f245;
  cvt.rn.f16.f32 high, %f245;
  mov.b32 %r2291, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_257;

$L__BB0_255:
	mov.f32 	%f246, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f246;
  cvt.rn.f16.f32 high, %f33;
  mov.b32 %r2291, {low,high};}

	// end inline asm

$L__BB0_257:
	add.s32 	%r364, %r2266, %r244;
	mul.wide.s32 	%rd249, %r364, 4;
	add.s64 	%rd250, %rd12, %rd249;
	st.global.u32 	[%rd250], %r2291;
	@%p10 bra 	$L__BB0_259;
	bra.uni 	$L__BB0_258;

$L__BB0_259:
	setp.eq.s32 	%p135, %r240, 0;
	add.s32 	%r1311, %r258, %r260;
	shl.b32 	%r1312, %r1311, 1;
	or.b32  	%r1313, %r1312, 1;
	mul.wide.s32 	%rd251, %r1313, 4;
	add.s64 	%rd252, %rd11, %rd251;
	ld.global.f32 	%f34, [%rd252];
	@%p135 bra 	$L__BB0_261;
	bra.uni 	$L__BB0_260;

$L__BB0_261:
	mov.f32 	%f255, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f34;
  cvt.rn.f16.f32 high, %f255;
  mov.b32 %r2292, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_262;

$L__BB0_258:
	mov.f32 	%f251, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f251;
  cvt.rn.f16.f32 high, %f251;
  mov.b32 %r2292, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_262;

$L__BB0_260:
	mov.f32 	%f252, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f252;
  cvt.rn.f16.f32 high, %f34;
  mov.b32 %r2292, {low,high};}

	// end inline asm

$L__BB0_262:
	add.s32 	%r1316, %r364, 1;
	mul.wide.s32 	%rd253, %r1316, 4;
	add.s64 	%rd254, %rd12, %rd253;
	st.global.u32 	[%rd254], %r2292;
	add.s32 	%r2266, %r2266, 2;

$L__BB0_263:
	add.s64 	%rd544, %rd544, 4;
	add.s64 	%rd543, %rd543, -4;
	setp.ne.s64 	%p136, %rd543, 0;
	@%p136 bra 	$L__BB0_143;

$L__BB0_264:
	add.s32 	%r2262, %r2262, %r37;
	setp.lt.s32 	%p137, %r2262, %r912;
	@%p137 bra 	$L__BB0_141;

$L__BB0_265:
	add.s32 	%r2256, %r2256, %r932;
	setp.lt.s32 	%p138, %r2256, %r911;
	@%p138 bra 	$L__BB0_139;
	bra.uni 	$L__BB0_266;

$L__BB0_120:
	@%p22 bra 	$L__BB0_266;

	neg.s32 	%r213, %r62;
	mov.u32 	%r1131, 31;
	sub.s32 	%r1132, %r1131, %r35;
	setp.gt.s32 	%p76, %r34, %r35;
	selp.b32 	%r1133, %r35, %r1132, %p76;
	shl.b32 	%r1134, %r1133, 2;
	mov.u32 	%r1135, 2;
	sub.s32 	%r214, %r1134, %r914;
	shl.b32 	%r1136, %r913, 2;
	mov.u32 	%r1137, 128;
	sub.s32 	%r215, %r1137, %r1136;
	sub.s32 	%r1138, %r1135, %r914;
	add.s32 	%r216, %r1138, %r1134;
	add.s32 	%r217, %r911, -1;
	add.s32 	%r218, %r214, 1;
	add.s32 	%r219, %r216, 1;
	rem.s32 	%r1163, %r218, %r215;
	add.s32 	%r1164, %r1163, %r215;
	rem.s32 	%r230, %r1164, %r215;
	rem.s32 	%r1165, %r219, %r215;
	add.s32 	%r1166, %r1165, %r215;
	rem.s32 	%r231, %r1166, %r215;

$L__BB0_122:
	setp.ne.s32 	%p77, %r31, %r213;
	@%p77 bra 	$L__BB0_136;

	shl.b32 	%r221, %r2256, 1;
	rem.s32 	%r1139, %r214, %r215;
	add.s32 	%r1140, %r1139, %r215;
	rem.s32 	%r222, %r1140, %r215;
	rem.s32 	%r1141, %r216, %r215;
	add.s32 	%r1142, %r1141, %r215;
	rem.s32 	%r223, %r1142, %r215;
	@%p76 bra 	$L__BB0_125;
	bra.uni 	$L__BB0_124;

$L__BB0_125:
	mul.lo.s32 	%r1145, %r221, %r215;
	add.s32 	%r1146, %r1145, %r222;
	mul.wide.s32 	%rd155, %r1146, 4;
	add.s64 	%rd156, %rd11, %rd155;
	ld.global.f32 	%f116, [%rd156];
	add.s32 	%r1147, %r1145, %r223;
	mul.wide.s32 	%rd157, %r1147, 4;
	add.s64 	%rd158, %rd11, %rd157;
	ld.global.f32 	%f117, [%rd158];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f116;
  cvt.rn.f16.f32 high, %f117;
  mov.b32 %r2257, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_126;

$L__BB0_124:
	mov.f32 	%f115, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f115;
  cvt.rn.f16.f32 high, %f115;
  mov.b32 %r2257, {low,high};}

	// end inline asm

$L__BB0_126:
	shl.b32 	%r1148, %r2256, 5;
	add.s32 	%r1149, %r1148, %r35;
	shl.b32 	%r1150, %r1149, 2;
	mul.wide.s32 	%rd159, %r1150, 4;
	add.s64 	%rd13, %rd12, %rd159;
	st.global.u32 	[%rd13], %r2257;
	@%p76 bra 	$L__BB0_128;
	bra.uni 	$L__BB0_127;

$L__BB0_128:
	add.s32 	%r1153, %r221, 1;
	mul.lo.s32 	%r1154, %r1153, %r215;
	add.s32 	%r1155, %r1154, %r222;
	mul.wide.s32 	%rd160, %r1155, 4;
	add.s64 	%rd161, %rd11, %rd160;
	ld.global.f32 	%f120, [%rd161];
	add.s32 	%r1156, %r1154, %r223;
	mul.wide.s32 	%rd162, %r1156, 4;
	add.s64 	%rd163, %rd11, %rd162;
	ld.global.f32 	%f121, [%rd163];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f120;
  cvt.rn.f16.f32 high, %f121;
  mov.b32 %r2258, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_129;

$L__BB0_127:
	mov.f32 	%f119, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f119;
  cvt.rn.f16.f32 high, %f119;
  mov.b32 %r2258, {low,high};}

	// end inline asm

$L__BB0_129:
	add.s32 	%r1157, %r217, %r2256;
	rem.s32 	%r1158, %r1157, %r911;
	shl.b32 	%r1159, %r1158, 5;
	add.s32 	%r1160, %r1159, %r35;
	shl.b32 	%r1161, %r1160, 2;
	or.b32  	%r1162, %r1161, 2;
	mul.wide.s32 	%rd164, %r1162, 4;
	add.s64 	%rd14, %rd12, %rd164;
	st.global.u32 	[%rd14], %r2258;
	@%p76 bra 	$L__BB0_131;
	bra.uni 	$L__BB0_130;

$L__BB0_131:
	mul.lo.s32 	%r1169, %r221, %r215;
	add.s32 	%r1170, %r1169, %r230;
	mul.wide.s32 	%rd165, %r1170, 4;
	add.s64 	%rd166, %rd11, %rd165;
	ld.global.f32 	%f124, [%rd166];
	add.s32 	%r1171, %r1169, %r231;
	mul.wide.s32 	%rd167, %r1171, 4;
	add.s64 	%rd168, %rd11, %rd167;
	ld.global.f32 	%f125, [%rd168];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f124;
  cvt.rn.f16.f32 high, %f125;
  mov.b32 %r2259, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_132;

$L__BB0_130:
	mov.f32 	%f123, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f123;
  cvt.rn.f16.f32 high, %f123;
  mov.b32 %r2259, {low,high};}

	// end inline asm

$L__BB0_132:
	st.global.u32 	[%rd13+4], %r2259;
	@%p76 bra 	$L__BB0_134;
	bra.uni 	$L__BB0_133;

$L__BB0_134:
	add.s32 	%r1174, %r221, 1;
	mul.lo.s32 	%r1175, %r1174, %r215;
	add.s32 	%r1176, %r1175, %r230;
	mul.wide.s32 	%rd169, %r1176, 4;
	add.s64 	%rd170, %rd11, %rd169;
	ld.global.f32 	%f128, [%rd170];
	add.s32 	%r1177, %r1175, %r231;
	mul.wide.s32 	%rd171, %r1177, 4;
	add.s64 	%rd172, %rd11, %rd171;
	ld.global.f32 	%f129, [%rd172];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f128;
  cvt.rn.f16.f32 high, %f129;
  mov.b32 %r2260, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_135;

$L__BB0_133:
	mov.f32 	%f127, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f127;
  cvt.rn.f16.f32 high, %f127;
  mov.b32 %r2260, {low,high};}

	// end inline asm

$L__BB0_135:
	st.global.u32 	[%rd14+4], %r2260;

$L__BB0_136:
	add.s32 	%r2256, %r2256, %r932;
	setp.lt.s32 	%p82, %r2256, %r911;
	@%p82 bra 	$L__BB0_122;

$L__BB0_266:
	add.s32 	%r1318, %r906, -1;
	mad.lo.s32 	%r1319, %r907, 576, 128;
	mul.lo.s32 	%r1320, %r1319, %r1318;
	add.s32 	%r1321, %r56, -64;
	add.s32 	%r1322, %r1321, %r56;
	add.s32 	%r1323, %r907, -1;
	mad.lo.s32 	%r1324, %r1322, %r1323, %r1320;
	mul.lo.s32 	%r1325, %r1318, %r907;
	mul.lo.s32 	%r1326, %r1325, 320;
	mad.lo.s32 	%r1327, %r1321, %r1323, %r1326;
	add.s32 	%r373, %r1327, %r1324;
	setp.lt.s32 	%p139, %r373, 1;
	mov.f32 	%f257, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f257;
  cvt.rn.f16.f32 high, %f257;
  mov.b32 %r2295, {low,high};}

	// end inline asm
	@%p139 bra 	$L__BB0_269;

	mov.u32 	%r2296, 0;
	mov.u32 	%r2294, _ZN6kernel5shmemE;

$L__BB0_268:
	st.shared.u32 	[%r2294], %r2295;
	mov.f32 	%f265, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f265;
  cvt.rn.f16.f32 high, %f265;
  mov.b32 %r1330, {low,high};}

	// end inline asm
	st.shared.u32 	[%r2294+4], %r1330;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f265;
  cvt.rn.f16.f32 high, %f265;
  mov.b32 %r1331, {low,high};}

	// end inline asm
	st.shared.u32 	[%r2294+8], %r1331;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f265;
  cvt.rn.f16.f32 high, %f265;
  mov.b32 %r1332, {low,high};}

	// end inline asm
	st.shared.u32 	[%r2294+12], %r1332;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f265;
  cvt.rn.f16.f32 high, %f265;
  mov.b32 %r2295, {low,high};}

	// end inline asm
	add.s32 	%r2294, %r2294, 16;
	add.s32 	%r2296, %r2296, 4;
	setp.lt.s32 	%p140, %r2296, %r373;
	@%p140 bra 	$L__BB0_268;

$L__BB0_269:
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f257;
  cvt.rn.f16.f32 high, %f257;
  mov.b32 %r1335, {low,high};}

	// end inline asm
	mov.u32 	%r1336, 31;
	sub.s32 	%r1337, %r1336, %r35;
	setp.gt.s32 	%p142, %r34, %r35;
	selp.b32 	%r1338, %r35, %r1337, %p142;
	shl.b32 	%r1339, %r1338, 2;
	sub.s32 	%r382, %r1339, %r914;
	shl.b32 	%r1340, %r913, 2;
	mov.u32 	%r1341, 128;
	sub.s32 	%r383, %r1341, %r1340;
	rem.s32 	%r1342, %r382, %r383;
	add.s32 	%r1343, %r1342, %r383;
	rem.s32 	%r384, %r1343, %r383;
	add.s32 	%r1344, %r382, 2;
	rem.s32 	%r1345, %r1344, %r383;
	add.s32 	%r1346, %r1345, %r383;
	rem.s32 	%r385, %r1346, %r383;
	add.s32 	%r1357, %r382, 1;
	rem.s32 	%r1358, %r1357, %r383;
	add.s32 	%r1359, %r1358, %r383;
	rem.s32 	%r386, %r1359, %r383;
	add.s32 	%r1360, %r382, 3;
	rem.s32 	%r1361, %r1360, %r383;
	add.s32 	%r1362, %r1361, %r383;
	rem.s32 	%r387, %r1362, %r383;
	// begin inline asm
	mov.u32 %r1373, %envreg2;
	// end inline asm
	cvt.u64.u32 	%rd260, %r1373;
	// begin inline asm
	mov.u32 %r1374, %envreg1;
	// end inline asm
	cvt.u64.u32 	%rd261, %r1374;
	bfi.b64 	%rd24, %rd261, %rd260, 32, 32;
	setp.ne.s64 	%p150, %rd24, 0;
	@%p150 bra 	$L__BB0_287;

	// begin inline asm
	trap;
	// end inline asm

$L__BB0_287:
	add.s64 	%rd25, %rd24, 4;
	mov.u32 	%r1375, %nctaid.y;
	mov.u32 	%r1376, %nctaid.x;
	mul.lo.s32 	%r1377, %r1376, %r1375;
	mov.u32 	%r1378, %nctaid.z;
	mul.lo.s32 	%r388, %r1377, %r1378;
	neg.s32 	%r1379, %r31;
	add.s32 	%r1380, %r35, %r30;
	setp.ne.s32 	%p151, %r1380, %r1379;
	mov.u32 	%r1381, %ctaid.x;
	add.s32 	%r389, %r1381, %r32;
	neg.s32 	%r390, %r33;
	bar.sync 	0;
	@%p151 bra 	$L__BB0_291;

	setp.eq.s32 	%p152, %r389, %r390;
	mov.u32 	%r1384, -2147483647;
	sub.s32 	%r1385, %r1384, %r388;
	selp.b32 	%r1383, %r1385, 1, %p152;
	membar.gl;
	// begin inline asm
	atom.add.release.gpu.u32 %r1382,[%rd25],%r1383;
	// end inline asm

$L__BB0_289:
	ld.volatile.u32 	%r1386, [%rd25];
	xor.b32  	%r1387, %r1386, %r1382;
	setp.gt.s32 	%p153, %r1387, -1;
	@%p153 bra 	$L__BB0_289;

	// begin inline asm
	ld.acquire.gpu.u32 %r1388,[%rd25];
	// end inline asm

$L__BB0_291:
	bar.sync 	0;
	setp.lt.s32 	%p154, %r38, 1;
	@%p154 bra 	$L__BB0_616;

	setp.lt.s32 	%p155, %r384, %r925;
	setp.ge.s32 	%p156, %r384, %r924;
	and.pred  	%p11, %p155, %p156;
	setp.lt.s32 	%p157, %r386, %r925;
	setp.ge.s32 	%p158, %r386, %r924;
	and.pred  	%p12, %p157, %p158;
	setp.lt.s32 	%p159, %r385, %r925;
	setp.ge.s32 	%p160, %r385, %r924;
	and.pred  	%p13, %p159, %p160;
	setp.lt.s32 	%p161, %r387, %r925;
	setp.ge.s32 	%p162, %r387, %r924;
	and.pred  	%p14, %p161, %p162;
	mov.u32 	%r2425, 0;
	mul.wide.s32 	%rd268, %r35, 16;
	mul.wide.s32 	%rd270, %r35, 8;
	mov.u32 	%r2297, %r1335;
	mov.u32 	%r2298, %r1335;
	mov.u32 	%r2550, %r1335;
	mov.u32 	%r2478, %r1335;
	mov.u32 	%r2301, %r1335;
	mov.u32 	%r2302, %r1335;
	mov.u32 	%r2585, %r1335;
	mov.u32 	%r2452, %r1335;
	mov.u32 	%r2453, %r1335;
	mov.u32 	%r2306, %r1335;
	mov.u32 	%r2480, %r1335;
	mov.u32 	%r2454, %r1335;
	mov.u32 	%r2455, %r1335;
	mov.u32 	%r2310, %r1335;
	mov.u32 	%r2553, %r1335;
	mov.u32 	%r2312, %r1335;
	mov.u32 	%r2313, %r1335;
	mov.u32 	%r2314, %r1335;
	mov.u32 	%r2315, %r1335;
	mov.u32 	%r2547, %r1335;
	mov.u32 	%r2542, %r1335;
	mov.u32 	%r2543, %r1335;
	mov.u32 	%r2319, %r1335;
	mov.u32 	%r2587, %r1335;
	mov.u32 	%r2321, %r1335;
	mov.u32 	%r2322, %r1335;
	mov.u32 	%r2323, %r1335;
	mov.u32 	%r2546, %r1335;
	mov.u32 	%r2544, %r1335;
	mov.u32 	%r2545, %r1335;
	mov.u32 	%r2327, %r1335;
	mov.u32 	%r2468, %r1335;
	mov.u32 	%r2329, %r1335;
	mov.u32 	%r2554, %r1335;
	mov.u32 	%r2458, %r1335;
	mov.u32 	%r2332, %r1335;
	mov.u32 	%r2464, %r1335;
	mov.u32 	%r2334, %r1335;
	mov.u32 	%r2555, %r1335;
	mov.u32 	%r2459, %r1335;
	mov.u32 	%r2337, %r1335;
	mov.u32 	%r2471, %r1335;
	mov.u32 	%r2339, %r1335;
	mov.u32 	%r2340, %r1335;
	mov.u32 	%r2557, %r1335;
	mov.u32 	%r2460, %r1335;
	mov.u32 	%r2461, %r1335;
	mov.u32 	%r2344, %r1335;
	mov.u32 	%r2473, %r1335;
	mov.u32 	%r2346, %r1335;
	mov.u32 	%r2347, %r1335;
	mov.u32 	%r2559, %r1335;
	mov.u32 	%r2474, %r1335;
	mov.u32 	%r2462, %r1335;
	mov.u32 	%r2488, %r1335;
	mov.u32 	%r2352, %r1335;
	mov.u32 	%r2475, %r1335;
	mov.u32 	%r2463, %r1335;
	mov.u32 	%r2490, %r1335;
	mov.u32 	%r2356, %r1335;
	mov.u32 	%r2518, %r1335;
	mov.u32 	%r2358, %r1335;
	mov.u32 	%r2359, %r1335;
	mov.u32 	%r2360, %r1335;
	mov.u32 	%r2519, %r1335;
	mov.u32 	%r2362, %r1335;
	mov.u32 	%r2363, %r1335;
	mov.u32 	%r2364, %r1335;
	mov.u32 	%r2520, %r1335;
	mov.u32 	%r2521, %r1335;
	mov.u32 	%r2367, %r1335;
	mov.u32 	%r2368, %r1335;
	mov.u32 	%r2369, %r1335;
	mov.u32 	%r2370, %r1335;
	mov.u32 	%r2371, %r1335;
	mov.u32 	%r2522, %r1335;
	mov.u32 	%r2523, %r1335;
	mov.u32 	%r2374, %r1335;
	mov.u32 	%r2375, %r1335;
	mov.u32 	%r2376, %r1335;
	mov.u32 	%r2377, %r1335;
	mov.u32 	%r2378, %r1335;
	mov.u32 	%r2379, %r1335;
	mov.u32 	%r2380, %r1335;
	mov.u32 	%r2381, %r1335;
	mov.u32 	%r2382, %r1335;
	mov.u32 	%r2383, %r1335;
	mov.u32 	%r2384, %r1335;
	mov.u32 	%r2527, %r1335;
	mov.u32 	%r2386, %r1335;
	mov.u32 	%r2387, %r1335;
	mov.u32 	%r2388, %r1335;
	mov.u32 	%r2389, %r1335;
	mov.u32 	%r2390, %r1335;
	mov.u32 	%r2529, %r1335;
	mov.u32 	%r2392, %r1335;
	mov.u32 	%r2393, %r1335;
	mov.u32 	%r2394, %r1335;
	mov.u32 	%r2395, %r1335;
	mov.u32 	%r2396, %r1335;
	mov.u32 	%r2530, %r1335;
	mov.u32 	%r2398, %r1335;
	mov.u32 	%r2399, %r1335;
	mov.u32 	%r2400, %r1335;
	mov.u32 	%r2401, %r1335;
	mov.u32 	%r2402, %r1335;
	mov.u32 	%r2403, %r1335;
	mov.u32 	%r2531, %r1335;
	mov.u32 	%r2405, %r1335;
	mov.u32 	%r2406, %r1335;
	mov.u32 	%r2407, %r1335;
	mov.u32 	%r2408, %r1335;
	mov.u32 	%r2409, %r1335;
	mov.u32 	%r2410, %r1335;
	mov.u32 	%r2411, %r1335;
	mov.u32 	%r2412, %r1335;
	mov.u32 	%r2413, %r1335;
	mov.u32 	%r2414, %r1335;
	mov.u32 	%r2415, %r1335;
	mov.u32 	%r2416, %r1335;
	mov.u32 	%r2417, %r1335;
	mov.u32 	%r2418, %r1335;
	mov.u32 	%r2419, %r1335;
	mov.u32 	%r2420, %r1335;
	mov.u32 	%r2421, %r1335;
	mov.u32 	%r2422, %r1335;
	mov.u32 	%r2423, %r1335;
	mov.u32 	%r2424, %r1335;

$L__BB0_293:
	mov.u32 	%r503, %r2408;
	mov.u32 	%r502, %r2407;
	mov.u32 	%r499, %r2531;
	mov.u32 	%r498, %r2403;
	mov.u32 	%r496, %r2401;
	mov.u32 	%r495, %r2400;
	mov.u32 	%r492, %r2530;
	mov.u32 	%r491, %r2396;
	mov.u32 	%r489, %r2394;
	mov.u32 	%r486, %r2529;
	mov.u32 	%r483, %r2388;
	mov.u32 	%r480, %r2527;
	mov.u32 	%r2407, %r2378;
	mov.u32 	%r472, %r2377;
	mov.u32 	%r469, %r2374;
	mov.u32 	%r2403, %r2523;
	mov.u32 	%r467, %r2522;
	mov.u32 	%r2400, %r2371;
	mov.u32 	%r465, %r2370;
	mov.u32 	%r462, %r2367;
	mov.u32 	%r2396, %r2521;
	mov.u32 	%r460, %r2520;
	mov.u32 	%r459, %r2364;
	mov.u32 	%r456, %r2519;
	mov.u32 	%r455, %r2360;
	mov.u32 	%r452, %r2518;
	mov.u32 	%r443, %r2559;
	mov.u32 	%r2472, %r2344;
	mov.u32 	%r436, %r2557;
	mov.u32 	%r2470, %r2337;
	mov.u32 	%r2408, %r2555;
	mov.u32 	%r429, %r2334;
	mov.u32 	%r428, %r2464;
	mov.u32 	%r2374, %r2332;
	mov.u32 	%r2401, %r2554;
	mov.u32 	%r424, %r2329;
	mov.u32 	%r423, %r2468;
	mov.u32 	%r2367, %r2327;
	mov.u32 	%r2394, %r2545;
	mov.u32 	%r420, %r2544;
	mov.u32 	%r2364, %r2546;
	mov.u32 	%r417, %r2322;
	mov.u32 	%r2457, %r2321;
	mov.u32 	%r2327, %r2587;
	mov.u32 	%r2468, %r2319;
	mov.u32 	%r2388, %r2543;
	mov.u32 	%r412, %r2542;
	mov.u32 	%r2360, %r2547;
	mov.u32 	%r409, %r2314;
	mov.u32 	%r2456, %r2313;
	mov.u32 	%r2329, %r2312;
	mov.u32 	%r2370, %r2553;
	mov.u32 	%r2371, %r2480;
	mov.u32 	%r2332, %r2585;
	mov.u32 	%r2466, %r2302;
	mov.u32 	%r2465, %r2301;
	mov.u32 	%r2378, %r2478;
	mov.u32 	%r2377, %r2550;
	mov.u32 	%r2334, %r2298;
	mov.u32 	%r2464, %r2297;
	not.b32 	%r1391, %r32;
	add.s32 	%r1392, %r908, %r1391;
	mul.lo.s32 	%r1393, %r1392, %r910;
	add.s32 	%r1394, %r2425, %r1393;
	not.b32 	%r1396, %r33;
	add.s32 	%r1397, %r909, %r1396;
	mul.lo.s32 	%r1398, %r1397, %r910;
	add.s32 	%r1399, %r2425, %r1398;
	rem.s32 	%r521, %r1394, %r55;
	rem.s32 	%r522, %r1399, %r966;
	add.s32 	%r1403, %r1393, %r1398;
	add.s32 	%r1404, %r1403, %r911;
	not.b32 	%r1405, %r30;
	add.s32 	%r1406, %r906, %r1405;
	mad.lo.s32 	%r1407, %r1392, %r906, %r1406;
	not.b32 	%r1408, %r31;
	add.s32 	%r1409, %r907, %r1408;
	mad.lo.s32 	%r1410, %r1397, %r907, %r1409;
	add.s32 	%r1411, %r1407, %r1410;
	shl.b32 	%r1412, %r1411, 1;
	add.s32 	%r1413, %r1404, %r1412;
	add.s32 	%r1414, %r2425, %r1413;
	add.s32 	%r1415, %r2425, %r1403;
	div.s32 	%r1416, %r1414, %r911;
	mul.lo.s32 	%r1417, %r1416, %r911;
	sub.s32 	%r1418, %r37, %r911;
	sub.s32 	%r523, %r1414, %r1417;
	sub.s32 	%r1419, %r1407, %r1410;
	shl.b32 	%r1420, %r1419, 1;
	add.s32 	%r1421, %r1420, %r912;
	mad.lo.s32 	%r1422, %r1416, %r37, %r1421;
	mad.lo.s32 	%r1423, %r1416, %r1418, %r1415;
	div.s32 	%r1424, %r1422, %r912;
	mul.lo.s32 	%r1425, %r1424, %r912;
	sub.s32 	%r1428, %r933, %r912;
	sub.s32 	%r524, %r1422, %r1425;
	mad.lo.s32 	%r525, %r1424, %r1428, %r1423;
	setp.lt.s32 	%p163, %r30, 1;
	mov.u32 	%r2518, %r1335;
	mov.u32 	%r2519, %r1335;
	mov.u32 	%r2524, %r1335;
	mov.u32 	%r2525, %r1335;
	mov.u32 	%r2526, %r1335;
	mov.u32 	%r2527, %r1335;
	mov.u32 	%r2528, %r1335;
	mov.u32 	%r2529, %r1335;
	mov.u32 	%r2536, %r1335;
	mov.u32 	%r2537, %r1335;
	@%p163 bra 	$L__BB0_295;

	mul.lo.s32 	%r1429, %r907, 320;
	add.s32 	%r1430, %r30, -1;
	mul.lo.s32 	%r1431, %r31, 320;
	mad.lo.s32 	%r1432, %r1429, %r1430, %r1431;
	add.s32 	%r1435, %r968, -64;
	mad.lo.s32 	%r1440, %r1435, %r1323, %r1320;
	add.s32 	%r1441, %r1432, %r1440;
	shl.b32 	%r1442, %r1441, 2;
	mov.u32 	%r1443, _ZN6kernel5shmemE;
	add.s32 	%r1444, %r1443, %r1442;
	shl.b32 	%r1445, %r35, 4;
	add.s32 	%r1446, %r1444, %r1445;
	ld.shared.v4.u32 	{%r2529, %r2527, %r2519, %r2518}, [%r1446];
	shl.b32 	%r1451, %r35, 3;
	add.s32 	%r1452, %r1444, %r1451;
	ld.shared.v2.u32 	{%r2528, %r2526}, [%r1452+512];
	ld.shared.v4.u32 	{%r2537, %r2536, %r2525, %r2524}, [%r1446+768];

$L__BB0_295:
	setp.lt.s32 	%p164, %r31, 1;
	mov.u32 	%r2520, %r1335;
	mov.u32 	%r2521, %r1335;
	mov.u32 	%r2522, %r1335;
	mov.u32 	%r2523, %r1335;
	mov.u32 	%r2530, %r1335;
	mov.u32 	%r2531, %r1335;
	mov.u32 	%r2532, %r1335;
	mov.u32 	%r2533, %r1335;
	mov.u32 	%r2534, %r1335;
	mov.u32 	%r2535, %r1335;
	mov.u32 	%r2538, %r1335;
	mov.u32 	%r2539, %r1335;
	@%p164 bra 	$L__BB0_298;

	mad.lo.s32 	%r1464, %r1406, 384, %r1326;
	add.s32 	%r1467, %r31, -1;
	mad.lo.s32 	%r1468, %r1321, %r1467, %r1464;
	add.s32 	%r1474, %r1468, %r1324;
	shl.b32 	%r1475, %r1474, 2;
	mov.u32 	%r1476, _ZN6kernel5shmemE;
	add.s32 	%r1477, %r1476, %r1475;
	shl.b32 	%r1478, %r35, 4;
	add.s32 	%r1479, %r1477, %r1478;
	ld.shared.v4.u32 	{%r2539, %r2538, %r2534, %r2532}, [%r1479];
	shl.b32 	%r1484, %r35, 3;
	add.s32 	%r1485, %r1477, %r1484;
	ld.shared.v2.u32 	{%r2535, %r2533}, [%r1485+512];
	ld.shared.v4.u32 	{%r2531, %r2530, %r2522, %r2520}, [%r1479+768];
	mov.u32 	%r2521, %r1335;
	mov.u32 	%r2523, %r1335;
	@%p163 bra 	$L__BB0_298;

	add.s32 	%r2193, %r1485, 512;
	ld.shared.v2.u32 	{%r2523, %r2521}, [%r2193+768];

$L__BB0_298:
	setp.eq.s32 	%p166, %r30, 0;
	@%p166 bra 	$L__BB0_303;

	setp.eq.s32 	%p167, %r31, %r1323;
	@%p167 bra 	$L__BB0_301;

	sub.s32 	%r1495, %r906, %r30;
	mul.lo.s32 	%r1497, %r56, %r31;
	mad.lo.s32 	%r1498, %r1495, 384, %r1497;
	mad.lo.s32 	%r1501, %r1321, %r1323, %r1498;
	mad.lo.s32 	%r1504, %r1319, %r1318, %r1501;
	shl.b32 	%r1505, %r1504, 2;
	mov.u32 	%r1506, _ZN6kernel5shmemE;
	add.s32 	%r1507, %r1506, %r1505;
	shl.b32 	%r1508, %r35, 4;
	add.s32 	%r1509, %r1507, %r1508;
	ld.shared.v4.u32 	{%r2455, %r2453, %r2463, %r2462}, [%r1509];

$L__BB0_301:
	shl.b32 	%r1514, %r31, 8;
	shl.b32 	%r1518, %r907, 8;
	or.b32  	%r1519, %r1518, 128;
	add.s32 	%r1520, %r30, -1;
	mad.lo.s32 	%r1521, %r1519, %r1520, %r1326;
	add.s32 	%r1522, %r1521, %r1514;
	shl.b32 	%r1523, %r1522, 2;
	mov.u32 	%r1524, _ZN6kernel5shmemE;
	add.s32 	%r1525, %r1524, %r1523;
	setp.ne.s32 	%p168, %r31, %r1323;
	shl.b32 	%r1527, %r35, 4;
	add.s32 	%r579, %r1525, %r1527;
	ld.shared.v4.u32 	{%r2459, %r2461, %r2458, %r2460}, [%r579];
	ld.shared.v4.u32 	{%r2457, %r2456, %r2454, %r2452}, [%r579+512];
	@%p168 bra 	$L__BB0_303;

	ld.shared.v4.u32 	{%r2455, %r2453, %r2463, %r2462}, [%r579+1024];

$L__BB0_303:
	setp.eq.s32 	%p169, %r31, 0;
	@%p169 bra 	$L__BB0_306;

	mul.lo.s32 	%r1541, %r56, %r31;
	sub.s32 	%r1542, %r1541, %r56;
	mad.lo.s32 	%r1545, %r1406, 384, %r1542;
	mad.lo.s32 	%r1548, %r1321, %r1323, %r1545;
	mad.lo.s32 	%r1551, %r1319, %r1318, %r1548;
	shl.b32 	%r1552, %r1551, 2;
	mov.u32 	%r1553, _ZN6kernel5shmemE;
	add.s32 	%r1554, %r1553, %r1552;
	shl.b32 	%r1555, %r35, 4;
	add.s32 	%r1556, %r1554, %r1555;
	ld.shared.v4.u32 	{%r2473, %r2471, %r2466, %r2465}, [%r1556+512];
	ld.shared.v4.u32 	{%r2472, %r2470, %r2464, %r2468}, [%r1556+1024];
	@%p166 bra 	$L__BB0_306;

	add.s32 	%r2194, %r1556, 512;
	ld.shared.v4.u32 	{%r2474, %r2475, %r2332, %r2327}, [%r2194+1024];

$L__BB0_306:
	ld.param.u64 	%rd265, [%rd1+80];
	cvta.to.global.u64 	%rd26, %rd265;
	setp.ne.s32 	%p171, %r30, 0;
	mov.u32 	%r2478, %r2378;
	mov.u32 	%r2540, %r2306;
	mov.u32 	%r2480, %r2371;
	mov.u32 	%r2541, %r2310;
	mov.u32 	%r2542, %r412;
	mov.u32 	%r2543, %r2388;
	mov.u32 	%r2544, %r420;
	mov.u32 	%r2545, %r2394;
	mov.u32 	%r2546, %r2364;
	mov.u32 	%r2547, %r2360;
	mov.u32 	%r2548, %r2352;
	mov.u32 	%r2549, %r2356;
	@%p171 bra 	$L__BB0_311;

	mad.lo.s32 	%r1570, %r521, %r909, %r33;
	mul.lo.s32 	%r1571, %r907, %r1570;
	mul.lo.s32 	%r1572, %r1571, 768;
	mad.lo.s32 	%r1573, %r31, 384, %r1572;
	add.s32 	%r1574, %r1573, -64;
	mul.wide.s32 	%rd266, %r1574, 4;
	add.s64 	%rd267, %rd26, %rd266;
	add.s64 	%rd269, %rd267, %rd268;
	ld.global.v4.u32 	{%r2545, %r2543, %r2546, %r2547}, [%rd269+256];
	ld.global.v4.u32 	{%r2549, %r2548, %r2541, %r2540}, [%rd269+1024];
	add.s64 	%rd27, %rd267, %rd270;
	mov.u32 	%r2478, %r2378;
	mov.u32 	%r2480, %r2371;
	@%p169 bra 	$L__BB0_309;

	ld.global.v2.u32 	{%r2478, %r2480}, [%rd27];

$L__BB0_309:
	setp.ne.s32 	%p173, %r31, %r1323;
	ld.global.v2.u32 	{%r2544, %r2542}, [%rd27+768];
	@%p173 bra 	$L__BB0_311;

	ld.global.v2.u32 	{%r2490, %r2488}, [%rd27+1536];

$L__BB0_311:
	setp.ne.s32 	%p174, %r31, 0;
	mov.u32 	%r2550, %r2377;
	mov.u32 	%r2553, %r2370;
	mov.u32 	%r2554, %r2401;
	mov.u32 	%r2555, %r2408;
	mov.u32 	%r2556, %r2340;
	mov.u32 	%r2557, %r436;
	mov.u32 	%r2558, %r2347;
	mov.u32 	%r2559, %r443;
	mov.u32 	%r2560, %r2380;
	mov.u32 	%r2561, %r2382;
	@%p174 bra 	$L__BB0_313;

	mad.lo.s32 	%r1591, %r522, %r908, %r32;
	mul.lo.s32 	%r1595, %r1591, %r969;
	mad.lo.s32 	%r1598, %r1406, 384, %r1595;
	add.s32 	%r1599, %r1598, -64;
	mad.lo.s32 	%r1602, %r971, %r55, %r1599;
	mul.wide.s32 	%rd271, %r1602, 4;
	add.s64 	%rd272, %rd26, %rd271;
	add.s64 	%rd274, %rd272, %rd268;
	ld.global.v4.u32 	{%r2561, %r2560, %r2558, %r2556}, [%rd274+256];
	ld.global.v4.u32 	{%r2555, %r2554, %r2550, %r2553}, [%rd274+1024];
	add.s64 	%rd276, %rd272, %rd270;
	ld.global.v2.u32 	{%r2559, %r2557}, [%rd276+768];
	ld.global.v2.u32 	{%r2478, %r2480}, [%rd276+1536];

$L__BB0_313:
	add.s32 	%r1615, %r911, -1;
	setp.ge.s32 	%p175, %r523, %r1615;
	setp.lt.s32 	%p176, %r523, 2;
	or.pred  	%p177, %p176, %p175;
	setp.lt.s32 	%p178, %r524, 2;
	or.pred  	%p179, %p178, %p177;
	add.s32 	%r1616, %r912, -2;
	setp.ge.s32 	%p180, %r524, %r1616;
	or.pred  	%p181, %p180, %p179;
	@%p181 bra 	$L__BB0_324;

	ld.param.u64 	%rd541, [%rd1+88];
	cvta.to.global.u64 	%rd540, %rd541;
	mad.lo.s32 	%r691, %r524, %r911, %r523;
	shl.b32 	%r1617, %r691, 6;
	mul.wide.s32 	%rd279, %r1617, 4;
	add.s64 	%rd29, %rd540, %rd279;
	and.pred  	%p184, %p171, %p174;
	@%p184 bra 	$L__BB0_316;

	add.s64 	%rd281, %rd29, %rd270;
	ld.global.v2.u32 	{%r2523, %r2521}, [%rd281+256];

$L__BB0_316:
	@%p171 bra 	$L__BB0_318;

	shl.b32 	%r1620, %r911, 5;
	cvt.s64.s32 	%rd282, %r1620;
	cvt.s64.s32 	%rd283, %r35;
	add.s64 	%rd284, %rd282, %rd283;
	shl.b64 	%rd285, %rd284, 3;
	add.s64 	%rd286, %rd29, %rd285;
	ld.global.v2.u32 	{%r2528, %r2526}, [%rd286];

$L__BB0_318:
	@%p174 bra 	$L__BB0_320;

	shl.b32 	%r1623, %r911, 5;
	neg.s32 	%r1624, %r1623;
	cvt.s64.s32 	%rd287, %r1624;
	cvt.s64.s32 	%rd288, %r35;
	add.s64 	%rd289, %rd287, %rd288;
	shl.b64 	%rd290, %rd289, 3;
	add.s64 	%rd291, %rd29, %rd290;
	ld.global.v2.u32 	{%r2535, %r2533}, [%rd291];

$L__BB0_320:
	mad.lo.s32 	%r2205, %r524, %r911, %r523;
	ld.param.u64 	%rd537, [%rd1+88];
	cvta.to.global.u64 	%rd536, %rd537;
	shl.b32 	%r1627, %r912, 6;
	shl.b32 	%r1628, %r2205, 7;
	mad.lo.s32 	%r1629, %r1627, %r911, %r1628;
	mul.wide.s32 	%rd292, %r1629, 4;
	add.s64 	%rd30, %rd536, %rd292;
	@%p171 bra 	$L__BB0_322;

	shl.b32 	%r1630, %r911, 5;
	cvt.s64.s32 	%rd293, %r1630;
	cvt.s64.s32 	%rd294, %r35;
	add.s64 	%rd295, %rd293, %rd294;
	shl.b64 	%rd296, %rd295, 4;
	add.s64 	%rd297, %rd30, %rd296;
	ld.global.v4.u32 	{%r2529, %r2527, %r2519, %r2518}, [%rd297];
	shl.b32 	%r1635, %r911, 6;
	add.s32 	%r1636, %r1635, -32;
	cvt.s64.s32 	%rd298, %r1636;
	add.s64 	%rd299, %rd298, %rd294;
	shl.b64 	%rd300, %rd299, 4;
	add.s64 	%rd301, %rd30, %rd300;
	ld.global.v4.u32 	{%r2537, %r2536, %r2525, %r2524}, [%rd301];

$L__BB0_322:
	@%p174 bra 	$L__BB0_324;

	shl.b32 	%r1641, %r911, 5;
	xor.b32  	%r1642, %r1641, -32;
	cvt.s64.s32 	%rd302, %r1642;
	cvt.s64.s32 	%rd303, %r35;
	add.s64 	%rd304, %rd302, %rd303;
	shl.b64 	%rd305, %rd304, 4;
	add.s64 	%rd306, %rd30, %rd305;
	ld.global.v4.u32 	{%r2539, %r2538, %r2534, %r2532}, [%rd306];
	add.s64 	%rd308, %rd30, %rd268;
	ld.global.v4.u32 	{%r2531, %r2530, %r2522, %r2520}, [%rd308];

$L__BB0_324:
	bar.sync 	0;
	ld.param.u64 	%rd310, [%rd1+160];
	cvta.to.global.u64 	%rd31, %rd310;
	add.s32 	%r1651, %r920, 2;
	setp.lt.s32 	%p189, %r523, %r1651;
	add.s32 	%r1652, %r921, -1;
	setp.ge.s32 	%p190, %r523, %r1652;
	or.pred  	%p191, %p190, %p189;
	add.s32 	%r1653, %r922, 2;
	setp.lt.s32 	%p192, %r524, %r1653;
	or.pred  	%p193, %p191, %p192;
	add.s32 	%r1654, %r923, -2;
	setp.ge.s32 	%p194, %r524, %r1654;
	or.pred  	%p195, %p194, %p193;
	setp.lt.s32 	%p196, %r525, %r917;
	or.pred  	%p197, %p196, %p195;
	mad.lo.s32 	%r1655, %r919, %r918, %r917;
	setp.ge.s32 	%p198, %r525, %r1655;
	or.pred  	%p199, %p197, %p198;
	@%p199 bra 	$L__BB0_566;

	sub.s32 	%r750, %r525, %r917;
	rem.s32 	%r1656, %r750, %r918;
	setp.ne.s32 	%p200, %r1656, 0;
	@%p200 bra 	$L__BB0_566;

	div.s32 	%r1657, %r750, %r918;
	mul.lo.s32 	%r1659, %r1657, %r946;
	sub.s32 	%r751, %r523, %r920;
	sub.s32 	%r752, %r524, %r922;
	mul.lo.s32 	%r753, %r1659, 3;
	add.s32 	%r1660, %r751, %r753;
	add.s32 	%r1661, %r1660, -2;
	mul.lo.s32 	%r754, %r1661, %r948;
	add.s32 	%r1663, %r752, %r754;
	mul.lo.s32 	%r1664, %r1663, %r44;
	sub.s32 	%r755, %r1664, %r924;
	@%p15 bra 	$L__BB0_331;

	not.pred 	%p202, %p11;
	@%p202 bra 	$L__BB0_329;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2424;
  cvt.f32.f16 %f302, low;}

	// end inline asm
	add.s32 	%r1666, %r755, %r384;
	mul.wide.s32 	%rd311, %r1666, 4;
	add.s64 	%rd312, %rd31, %rd311;
	st.global.f32 	[%rd312], %f302;

$L__BB0_329:
	not.pred 	%p203, %p13;
	@%p203 bra 	$L__BB0_331;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2424;
  cvt.f32.f16 %f303, high;}

	// end inline asm
	add.s32 	%r1668, %r755, %r385;
	mul.wide.s32 	%rd313, %r1668, 4;
	add.s64 	%rd314, %rd31, %rd313;
	st.global.f32 	[%rd314], %f303;

$L__BB0_331:
	@%p15 bra 	$L__BB0_336;

	not.pred 	%p205, %p12;
	@%p205 bra 	$L__BB0_334;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2420;
  cvt.f32.f16 %f304, low;}

	// end inline asm
	add.s32 	%r1670, %r755, %r386;
	mul.wide.s32 	%rd315, %r1670, 4;
	add.s64 	%rd316, %rd31, %rd315;
	st.global.f32 	[%rd316], %f304;

$L__BB0_334:
	not.pred 	%p206, %p14;
	@%p206 bra 	$L__BB0_336;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2420;
  cvt.f32.f16 %f305, high;}

	// end inline asm
	add.s32 	%r1672, %r755, %r387;
	mul.wide.s32 	%rd317, %r1672, 4;
	add.s64 	%rd318, %rd31, %rd317;
	st.global.f32 	[%rd318], %f305;

$L__BB0_336:
	sub.s32 	%r2206, %r523, %r920;
	add.s32 	%r756, %r753, %r946;
	add.s32 	%r1674, %r2206, %r756;
	add.s32 	%r1675, %r1674, -2;
	mad.lo.s32 	%r1677, %r1675, %r948, %r752;
	mul.lo.s32 	%r1678, %r1677, %r44;
	sub.s32 	%r757, %r1678, %r924;
	@%p15 bra 	$L__BB0_341;

	not.pred 	%p208, %p11;
	@%p208 bra 	$L__BB0_339;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2423;
  cvt.f32.f16 %f306, low;}

	// end inline asm
	add.s32 	%r1680, %r757, %r384;
	mul.wide.s32 	%rd319, %r1680, 4;
	add.s64 	%rd320, %rd31, %rd319;
	st.global.f32 	[%rd320], %f306;

$L__BB0_339:
	not.pred 	%p209, %p13;
	@%p209 bra 	$L__BB0_341;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2423;
  cvt.f32.f16 %f307, high;}

	// end inline asm
	add.s32 	%r1682, %r757, %r385;
	mul.wide.s32 	%rd321, %r1682, 4;
	add.s64 	%rd322, %rd31, %rd321;
	st.global.f32 	[%rd322], %f307;

$L__BB0_341:
	@%p15 bra 	$L__BB0_346;

	not.pred 	%p211, %p12;
	@%p211 bra 	$L__BB0_344;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2419;
  cvt.f32.f16 %f308, low;}

	// end inline asm
	add.s32 	%r1684, %r757, %r386;
	mul.wide.s32 	%rd323, %r1684, 4;
	add.s64 	%rd324, %rd31, %rd323;
	st.global.f32 	[%rd324], %f308;

$L__BB0_344:
	not.pred 	%p212, %p14;
	@%p212 bra 	$L__BB0_346;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2419;
  cvt.f32.f16 %f309, high;}

	// end inline asm
	add.s32 	%r1686, %r757, %r387;
	mul.wide.s32 	%rd325, %r1686, 4;
	add.s64 	%rd326, %rd31, %rd325;
	st.global.f32 	[%rd326], %f309;

$L__BB0_346:
	add.s32 	%r758, %r752, 1;
	add.s32 	%r1687, %r758, %r754;
	mul.lo.s32 	%r1688, %r1687, %r44;
	sub.s32 	%r759, %r1688, %r924;
	@%p15 bra 	$L__BB0_351;

	not.pred 	%p214, %p11;
	@%p214 bra 	$L__BB0_349;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2416;
  cvt.f32.f16 %f310, low;}

	// end inline asm
	add.s32 	%r1690, %r759, %r384;
	mul.wide.s32 	%rd327, %r1690, 4;
	add.s64 	%rd328, %rd31, %rd327;
	st.global.f32 	[%rd328], %f310;

$L__BB0_349:
	not.pred 	%p215, %p13;
	@%p215 bra 	$L__BB0_351;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2416;
  cvt.f32.f16 %f311, high;}

	// end inline asm
	add.s32 	%r1692, %r759, %r385;
	mul.wide.s32 	%rd329, %r1692, 4;
	add.s64 	%rd330, %rd31, %rd329;
	st.global.f32 	[%rd330], %f311;

$L__BB0_351:
	@%p15 bra 	$L__BB0_356;

	not.pred 	%p217, %p12;
	@%p217 bra 	$L__BB0_354;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2414;
  cvt.f32.f16 %f312, low;}

	// end inline asm
	add.s32 	%r1694, %r759, %r386;
	mul.wide.s32 	%rd331, %r1694, 4;
	add.s64 	%rd332, %rd31, %rd331;
	st.global.f32 	[%rd332], %f312;

$L__BB0_354:
	not.pred 	%p218, %p14;
	@%p218 bra 	$L__BB0_356;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2414;
  cvt.f32.f16 %f313, high;}

	// end inline asm
	add.s32 	%r1696, %r759, %r387;
	mul.wide.s32 	%rd333, %r1696, 4;
	add.s64 	%rd334, %rd31, %rd333;
	st.global.f32 	[%rd334], %f313;

$L__BB0_356:
	not.b32 	%r1697, %r920;
	add.s32 	%r760, %r523, %r1697;
	not.b32 	%r1698, %r922;
	add.s32 	%r761, %r524, %r1698;
	add.s32 	%r1699, %r760, %r753;
	mul.lo.s32 	%r762, %r1699, %r948;
	add.s32 	%r1701, %r761, %r762;
	mul.lo.s32 	%r1702, %r1701, %r44;
	sub.s32 	%r763, %r1702, %r924;
	@%p15 bra 	$L__BB0_361;

	not.pred 	%p220, %p11;
	@%p220 bra 	$L__BB0_359;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2382;
  cvt.f32.f16 %f314, low;}

	// end inline asm
	add.s32 	%r1704, %r763, %r384;
	mul.wide.s32 	%rd335, %r1704, 4;
	add.s64 	%rd336, %rd31, %rd335;
	st.global.f32 	[%rd336], %f314;

$L__BB0_359:
	not.pred 	%p221, %p13;
	@%p221 bra 	$L__BB0_361;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2382;
  cvt.f32.f16 %f315, high;}

	// end inline asm
	add.s32 	%r1706, %r763, %r385;
	mul.wide.s32 	%rd337, %r1706, 4;
	add.s64 	%rd338, %rd31, %rd337;
	st.global.f32 	[%rd338], %f315;

$L__BB0_361:
	@%p15 bra 	$L__BB0_366;

	not.pred 	%p223, %p12;
	@%p223 bra 	$L__BB0_364;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2380;
  cvt.f32.f16 %f316, low;}

	// end inline asm
	add.s32 	%r1708, %r763, %r386;
	mul.wide.s32 	%rd339, %r1708, 4;
	add.s64 	%rd340, %rd31, %rd339;
	st.global.f32 	[%rd340], %f316;

$L__BB0_364:
	not.pred 	%p224, %p14;
	@%p224 bra 	$L__BB0_366;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2380;
  cvt.f32.f16 %f317, high;}

	// end inline asm
	add.s32 	%r1710, %r763, %r387;
	mul.wide.s32 	%rd341, %r1710, 4;
	add.s64 	%rd342, %rd31, %rd341;
	st.global.f32 	[%rd342], %f317;

$L__BB0_366:
	add.s32 	%r1712, %r760, %r756;
	mul.lo.s32 	%r764, %r1712, %r948;
	add.s32 	%r1713, %r761, %r764;
	mul.lo.s32 	%r1714, %r1713, %r44;
	sub.s32 	%r765, %r1714, %r924;
	@%p15 bra 	$L__BB0_371;

	not.pred 	%p226, %p11;
	@%p226 bra 	$L__BB0_369;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2412;
  cvt.f32.f16 %f318, low;}

	// end inline asm
	add.s32 	%r1716, %r765, %r384;
	mul.wide.s32 	%rd343, %r1716, 4;
	add.s64 	%rd344, %rd31, %rd343;
	st.global.f32 	[%rd344], %f318;

$L__BB0_369:
	not.pred 	%p227, %p13;
	@%p227 bra 	$L__BB0_371;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2412;
  cvt.f32.f16 %f319, high;}

	// end inline asm
	add.s32 	%r1718, %r765, %r385;
	mul.wide.s32 	%rd345, %r1718, 4;
	add.s64 	%rd346, %rd31, %rd345;
	st.global.f32 	[%rd346], %f319;

$L__BB0_371:
	@%p15 bra 	$L__BB0_376;

	not.pred 	%p229, %p12;
	@%p229 bra 	$L__BB0_374;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2410;
  cvt.f32.f16 %f320, low;}

	// end inline asm
	add.s32 	%r1720, %r765, %r386;
	mul.wide.s32 	%rd347, %r1720, 4;
	add.s64 	%rd348, %rd31, %rd347;
	st.global.f32 	[%rd348], %f320;

$L__BB0_374:
	not.pred 	%p230, %p14;
	@%p230 bra 	$L__BB0_376;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2410;
  cvt.f32.f16 %f321, high;}

	// end inline asm
	add.s32 	%r1722, %r765, %r387;
	mul.wide.s32 	%rd349, %r1722, 4;
	add.s64 	%rd350, %rd31, %rd349;
	st.global.f32 	[%rd350], %f321;

$L__BB0_376:
	add.s32 	%r1723, %r752, %r762;
	mul.lo.s32 	%r1724, %r1723, %r44;
	sub.s32 	%r766, %r1724, %r924;
	@%p15 bra 	$L__BB0_381;

	not.pred 	%p232, %p11;
	@%p232 bra 	$L__BB0_379;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r503;
  cvt.f32.f16 %f322, low;}

	// end inline asm
	add.s32 	%r1726, %r766, %r384;
	mul.wide.s32 	%rd351, %r1726, 4;
	add.s64 	%rd352, %rd31, %rd351;
	st.global.f32 	[%rd352], %f322;

$L__BB0_379:
	not.pred 	%p233, %p13;
	@%p233 bra 	$L__BB0_381;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r503;
  cvt.f32.f16 %f323, high;}

	// end inline asm
	add.s32 	%r1728, %r766, %r385;
	mul.wide.s32 	%rd353, %r1728, 4;
	add.s64 	%rd354, %rd31, %rd353;
	st.global.f32 	[%rd354], %f323;

$L__BB0_381:
	@%p15 bra 	$L__BB0_386;

	not.pred 	%p235, %p12;
	@%p235 bra 	$L__BB0_384;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r496;
  cvt.f32.f16 %f324, low;}

	// end inline asm
	add.s32 	%r1730, %r766, %r386;
	mul.wide.s32 	%rd355, %r1730, 4;
	add.s64 	%rd356, %rd31, %rd355;
	st.global.f32 	[%rd356], %f324;

$L__BB0_384:
	not.pred 	%p236, %p14;
	@%p236 bra 	$L__BB0_386;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r496;
  cvt.f32.f16 %f325, high;}

	// end inline asm
	add.s32 	%r1732, %r766, %r387;
	mul.wide.s32 	%rd357, %r1732, 4;
	add.s64 	%rd358, %rd31, %rd357;
	st.global.f32 	[%rd358], %f325;

$L__BB0_386:
	add.s32 	%r1733, %r752, %r764;
	mul.lo.s32 	%r1734, %r1733, %r44;
	sub.s32 	%r767, %r1734, %r924;
	@%p15 bra 	$L__BB0_391;

	not.pred 	%p238, %p11;
	@%p238 bra 	$L__BB0_389;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r502;
  cvt.f32.f16 %f326, low;}

	// end inline asm
	add.s32 	%r1736, %r767, %r384;
	mul.wide.s32 	%rd359, %r1736, 4;
	add.s64 	%rd360, %rd31, %rd359;
	st.global.f32 	[%rd360], %f326;

$L__BB0_389:
	not.pred 	%p239, %p13;
	@%p239 bra 	$L__BB0_391;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r502;
  cvt.f32.f16 %f327, high;}

	// end inline asm
	add.s32 	%r1738, %r767, %r385;
	mul.wide.s32 	%rd361, %r1738, 4;
	add.s64 	%rd362, %rd31, %rd361;
	st.global.f32 	[%rd362], %f327;

$L__BB0_391:
	@%p15 bra 	$L__BB0_396;

	not.pred 	%p241, %p12;
	@%p241 bra 	$L__BB0_394;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r495;
  cvt.f32.f16 %f328, low;}

	// end inline asm
	add.s32 	%r1740, %r767, %r386;
	mul.wide.s32 	%rd363, %r1740, 4;
	add.s64 	%rd364, %rd31, %rd363;
	st.global.f32 	[%rd364], %f328;

$L__BB0_394:
	not.pred 	%p242, %p14;
	@%p242 bra 	$L__BB0_396;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r495;
  cvt.f32.f16 %f329, high;}

	// end inline asm
	add.s32 	%r1742, %r767, %r387;
	mul.wide.s32 	%rd365, %r1742, 4;
	add.s64 	%rd366, %rd31, %rd365;
	st.global.f32 	[%rd366], %f329;

$L__BB0_396:
	add.s32 	%r768, %r756, %r946;
	add.s32 	%r1744, %r760, %r768;
	mul.lo.s32 	%r769, %r1744, %r948;
	add.s32 	%r1746, %r752, %r769;
	mul.lo.s32 	%r1747, %r1746, %r44;
	sub.s32 	%r770, %r1747, %r924;
	@%p15 bra 	$L__BB0_401;

	not.pred 	%p244, %p11;
	@%p244 bra 	$L__BB0_399;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2406;
  cvt.f32.f16 %f330, low;}

	// end inline asm
	add.s32 	%r1749, %r770, %r384;
	mul.wide.s32 	%rd367, %r1749, 4;
	add.s64 	%rd368, %rd31, %rd367;
	st.global.f32 	[%rd368], %f330;

$L__BB0_399:
	not.pred 	%p245, %p13;
	@%p245 bra 	$L__BB0_401;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2406;
  cvt.f32.f16 %f331, high;}

	// end inline asm
	add.s32 	%r1751, %r770, %r385;
	mul.wide.s32 	%rd369, %r1751, 4;
	add.s64 	%rd370, %rd31, %rd369;
	st.global.f32 	[%rd370], %f331;

$L__BB0_401:
	@%p15 bra 	$L__BB0_406;

	not.pred 	%p247, %p12;
	@%p247 bra 	$L__BB0_404;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2399;
  cvt.f32.f16 %f332, low;}

	// end inline asm
	add.s32 	%r1753, %r770, %r386;
	mul.wide.s32 	%rd371, %r1753, 4;
	add.s64 	%rd372, %rd31, %rd371;
	st.global.f32 	[%rd372], %f332;

$L__BB0_404:
	not.pred 	%p248, %p14;
	@%p248 bra 	$L__BB0_406;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2399;
  cvt.f32.f16 %f333, high;}

	// end inline asm
	add.s32 	%r1755, %r770, %r387;
	mul.wide.s32 	%rd373, %r1755, 4;
	add.s64 	%rd374, %rd31, %rd373;
	st.global.f32 	[%rd374], %f333;

$L__BB0_406:
	add.s32 	%r2198, %r752, 1;
	add.s32 	%r1756, %r2198, %r762;
	mul.lo.s32 	%r1757, %r1756, %r44;
	sub.s32 	%r771, %r1757, %r924;
	@%p15 bra 	$L__BB0_411;

	not.pred 	%p250, %p11;
	@%p250 bra 	$L__BB0_409;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r489;
  cvt.f32.f16 %f334, low;}

	// end inline asm
	add.s32 	%r1759, %r771, %r384;
	mul.wide.s32 	%rd375, %r1759, 4;
	add.s64 	%rd376, %rd31, %rd375;
	st.global.f32 	[%rd376], %f334;

$L__BB0_409:
	not.pred 	%p251, %p13;
	@%p251 bra 	$L__BB0_411;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r489;
  cvt.f32.f16 %f335, high;}

	// end inline asm
	add.s32 	%r1761, %r771, %r385;
	mul.wide.s32 	%rd377, %r1761, 4;
	add.s64 	%rd378, %rd31, %rd377;
	st.global.f32 	[%rd378], %f335;

$L__BB0_411:
	@%p15 bra 	$L__BB0_416;

	not.pred 	%p253, %p12;
	@%p253 bra 	$L__BB0_414;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r483;
  cvt.f32.f16 %f336, low;}

	// end inline asm
	add.s32 	%r1763, %r771, %r386;
	mul.wide.s32 	%rd379, %r1763, 4;
	add.s64 	%rd380, %rd31, %rd379;
	st.global.f32 	[%rd380], %f336;

$L__BB0_414:
	not.pred 	%p254, %p14;
	@%p254 bra 	$L__BB0_416;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r483;
  cvt.f32.f16 %f337, high;}

	// end inline asm
	add.s32 	%r1765, %r771, %r387;
	mul.wide.s32 	%rd381, %r1765, 4;
	add.s64 	%rd382, %rd31, %rd381;
	st.global.f32 	[%rd382], %f337;

$L__BB0_416:
	add.s32 	%r2199, %r752, 1;
	add.s32 	%r1766, %r2199, %r764;
	mul.lo.s32 	%r1767, %r1766, %r44;
	sub.s32 	%r772, %r1767, %r924;
	@%p15 bra 	$L__BB0_421;

	not.pred 	%p256, %p11;
	@%p256 bra 	$L__BB0_419;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2393;
  cvt.f32.f16 %f338, low;}

	// end inline asm
	add.s32 	%r1769, %r772, %r384;
	mul.wide.s32 	%rd383, %r1769, 4;
	add.s64 	%rd384, %rd31, %rd383;
	st.global.f32 	[%rd384], %f338;

$L__BB0_419:
	not.pred 	%p257, %p13;
	@%p257 bra 	$L__BB0_421;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2393;
  cvt.f32.f16 %f339, high;}

	// end inline asm
	add.s32 	%r1771, %r772, %r385;
	mul.wide.s32 	%rd385, %r1771, 4;
	add.s64 	%rd386, %rd31, %rd385;
	st.global.f32 	[%rd386], %f339;

$L__BB0_421:
	@%p15 bra 	$L__BB0_426;

	not.pred 	%p259, %p12;
	@%p259 bra 	$L__BB0_424;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2387;
  cvt.f32.f16 %f340, low;}

	// end inline asm
	add.s32 	%r1773, %r772, %r386;
	mul.wide.s32 	%rd387, %r1773, 4;
	add.s64 	%rd388, %rd31, %rd387;
	st.global.f32 	[%rd388], %f340;

$L__BB0_424:
	not.pred 	%p260, %p14;
	@%p260 bra 	$L__BB0_426;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2387;
  cvt.f32.f16 %f341, high;}

	// end inline asm
	add.s32 	%r1775, %r772, %r387;
	mul.wide.s32 	%rd389, %r1775, 4;
	add.s64 	%rd390, %rd31, %rd389;
	st.global.f32 	[%rd390], %f341;

$L__BB0_426:
	add.s32 	%r2200, %r752, 1;
	add.s32 	%r1776, %r2200, %r769;
	mul.lo.s32 	%r1777, %r1776, %r44;
	sub.s32 	%r773, %r1777, %r924;
	@%p15 bra 	$L__BB0_431;

	not.pred 	%p262, %p11;
	@%p262 bra 	$L__BB0_429;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2392;
  cvt.f32.f16 %f342, low;}

	// end inline asm
	add.s32 	%r1779, %r773, %r384;
	mul.wide.s32 	%rd391, %r1779, 4;
	add.s64 	%rd392, %rd31, %rd391;
	st.global.f32 	[%rd392], %f342;

$L__BB0_429:
	not.pred 	%p263, %p13;
	@%p263 bra 	$L__BB0_431;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2392;
  cvt.f32.f16 %f343, high;}

	// end inline asm
	add.s32 	%r1781, %r773, %r385;
	mul.wide.s32 	%rd393, %r1781, 4;
	add.s64 	%rd394, %rd31, %rd393;
	st.global.f32 	[%rd394], %f343;

$L__BB0_431:
	@%p15 bra 	$L__BB0_436;

	not.pred 	%p265, %p12;
	@%p265 bra 	$L__BB0_434;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2386;
  cvt.f32.f16 %f344, low;}

	// end inline asm
	add.s32 	%r1783, %r773, %r386;
	mul.wide.s32 	%rd395, %r1783, 4;
	add.s64 	%rd396, %rd31, %rd395;
	st.global.f32 	[%rd396], %f344;

$L__BB0_434:
	not.pred 	%p266, %p14;
	@%p266 bra 	$L__BB0_436;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2386;
  cvt.f32.f16 %f345, high;}

	// end inline asm
	add.s32 	%r1785, %r773, %r387;
	mul.wide.s32 	%rd397, %r1785, 4;
	add.s64 	%rd398, %rd31, %rd397;
	st.global.f32 	[%rd398], %f345;

$L__BB0_436:
	add.s32 	%r774, %r752, 2;
	add.s32 	%r1786, %r774, %r762;
	mul.lo.s32 	%r1787, %r1786, %r44;
	sub.s32 	%r775, %r1787, %r924;
	@%p15 bra 	$L__BB0_441;

	not.pred 	%p268, %p11;
	@%p268 bra 	$L__BB0_439;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2356;
  cvt.f32.f16 %f346, low;}

	// end inline asm
	add.s32 	%r1789, %r775, %r384;
	mul.wide.s32 	%rd399, %r1789, 4;
	add.s64 	%rd400, %rd31, %rd399;
	st.global.f32 	[%rd400], %f346;

$L__BB0_439:
	not.pred 	%p269, %p13;
	@%p269 bra 	$L__BB0_441;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2356;
  cvt.f32.f16 %f347, high;}

	// end inline asm
	add.s32 	%r1791, %r775, %r385;
	mul.wide.s32 	%rd401, %r1791, 4;
	add.s64 	%rd402, %rd31, %rd401;
	st.global.f32 	[%rd402], %f347;

$L__BB0_441:
	@%p15 bra 	$L__BB0_446;

	not.pred 	%p271, %p12;
	@%p271 bra 	$L__BB0_444;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2352;
  cvt.f32.f16 %f348, low;}

	// end inline asm
	add.s32 	%r1793, %r775, %r386;
	mul.wide.s32 	%rd403, %r1793, 4;
	add.s64 	%rd404, %rd31, %rd403;
	st.global.f32 	[%rd404], %f348;

$L__BB0_444:
	not.pred 	%p272, %p14;
	@%p272 bra 	$L__BB0_446;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2352;
  cvt.f32.f16 %f349, high;}

	// end inline asm
	add.s32 	%r1795, %r775, %r387;
	mul.wide.s32 	%rd405, %r1795, 4;
	add.s64 	%rd406, %rd31, %rd405;
	st.global.f32 	[%rd406], %f349;

$L__BB0_446:
	mul.lo.s32 	%r776, %r1674, %r948;
	add.s32 	%r1798, %r761, %r776;
	mul.lo.s32 	%r1799, %r1798, %r44;
	sub.s32 	%r777, %r1799, %r924;
	@%p15 bra 	$L__BB0_451;

	not.pred 	%p274, %p11;
	@%p274 bra 	$L__BB0_449;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r443;
  cvt.f32.f16 %f350, low;}

	// end inline asm
	add.s32 	%r1801, %r777, %r384;
	mul.wide.s32 	%rd407, %r1801, 4;
	add.s64 	%rd408, %rd31, %rd407;
	st.global.f32 	[%rd408], %f350;

$L__BB0_449:
	not.pred 	%p275, %p13;
	@%p275 bra 	$L__BB0_451;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r443;
  cvt.f32.f16 %f351, high;}

	// end inline asm
	add.s32 	%r1803, %r777, %r385;
	mul.wide.s32 	%rd409, %r1803, 4;
	add.s64 	%rd410, %rd31, %rd409;
	st.global.f32 	[%rd410], %f351;

$L__BB0_451:
	@%p15 bra 	$L__BB0_456;

	not.pred 	%p277, %p12;
	@%p277 bra 	$L__BB0_454;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r436;
  cvt.f32.f16 %f352, low;}

	// end inline asm
	add.s32 	%r1805, %r777, %r386;
	mul.wide.s32 	%rd411, %r1805, 4;
	add.s64 	%rd412, %rd31, %rd411;
	st.global.f32 	[%rd412], %f352;

$L__BB0_454:
	not.pred 	%p278, %p14;
	@%p278 bra 	$L__BB0_456;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r436;
  cvt.f32.f16 %f353, high;}

	// end inline asm
	add.s32 	%r1807, %r777, %r387;
	mul.wide.s32 	%rd413, %r1807, 4;
	add.s64 	%rd414, %rd31, %rd413;
	st.global.f32 	[%rd414], %f353;

$L__BB0_456:
	sub.s32 	%r2207, %r523, %r920;
	add.s32 	%r1809, %r2207, %r768;
	mul.lo.s32 	%r778, %r1809, %r948;
	add.s32 	%r1810, %r761, %r778;
	mul.lo.s32 	%r1811, %r1810, %r44;
	sub.s32 	%r779, %r1811, %r924;
	@%p15 bra 	$L__BB0_461;

	not.pred 	%p280, %p11;
	@%p280 bra 	$L__BB0_459;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2347;
  cvt.f32.f16 %f354, low;}

	// end inline asm
	add.s32 	%r1813, %r779, %r384;
	mul.wide.s32 	%rd415, %r1813, 4;
	add.s64 	%rd416, %rd31, %rd415;
	st.global.f32 	[%rd416], %f354;

$L__BB0_459:
	not.pred 	%p281, %p13;
	@%p281 bra 	$L__BB0_461;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2347;
  cvt.f32.f16 %f355, high;}

	// end inline asm
	add.s32 	%r1815, %r779, %r385;
	mul.wide.s32 	%rd417, %r1815, 4;
	add.s64 	%rd418, %rd31, %rd417;
	st.global.f32 	[%rd418], %f355;

$L__BB0_461:
	@%p15 bra 	$L__BB0_466;

	not.pred 	%p283, %p12;
	@%p283 bra 	$L__BB0_464;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2340;
  cvt.f32.f16 %f356, low;}

	// end inline asm
	add.s32 	%r1817, %r779, %r386;
	mul.wide.s32 	%rd419, %r1817, 4;
	add.s64 	%rd420, %rd31, %rd419;
	st.global.f32 	[%rd420], %f356;

$L__BB0_464:
	not.pred 	%p284, %p14;
	@%p284 bra 	$L__BB0_466;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2340;
  cvt.f32.f16 %f357, high;}

	// end inline asm
	add.s32 	%r1819, %r779, %r387;
	mul.wide.s32 	%rd421, %r1819, 4;
	add.s64 	%rd422, %rd31, %rd421;
	st.global.f32 	[%rd422], %f357;

$L__BB0_466:
	mul.lo.s32 	%r780, %r1660, %r948;
	add.s32 	%r1822, %r752, %r780;
	mul.lo.s32 	%r1823, %r1822, %r44;
	sub.s32 	%r781, %r1823, %r924;
	@%p15 bra 	$L__BB0_471;

	not.pred 	%p286, %p11;
	@%p286 bra 	$L__BB0_469;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2408;
  cvt.f32.f16 %f358, low;}

	// end inline asm
	add.s32 	%r1825, %r781, %r384;
	mul.wide.s32 	%rd423, %r1825, 4;
	add.s64 	%rd424, %rd31, %rd423;
	st.global.f32 	[%rd424], %f358;

$L__BB0_469:
	not.pred 	%p287, %p13;
	@%p287 bra 	$L__BB0_471;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2408;
  cvt.f32.f16 %f359, high;}

	// end inline asm
	add.s32 	%r1827, %r781, %r385;
	mul.wide.s32 	%rd425, %r1827, 4;
	add.s64 	%rd426, %rd31, %rd425;
	st.global.f32 	[%rd426], %f359;

$L__BB0_471:
	@%p15 bra 	$L__BB0_476;

	not.pred 	%p289, %p12;
	@%p289 bra 	$L__BB0_474;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2401;
  cvt.f32.f16 %f360, low;}

	// end inline asm
	add.s32 	%r1829, %r781, %r386;
	mul.wide.s32 	%rd427, %r1829, 4;
	add.s64 	%rd428, %rd31, %rd427;
	st.global.f32 	[%rd428], %f360;

$L__BB0_474:
	not.pred 	%p290, %p14;
	@%p290 bra 	$L__BB0_476;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2401;
  cvt.f32.f16 %f361, high;}

	// end inline asm
	add.s32 	%r1831, %r781, %r387;
	mul.wide.s32 	%rd429, %r1831, 4;
	add.s64 	%rd430, %rd31, %rd429;
	st.global.f32 	[%rd430], %f361;

$L__BB0_476:
	add.s32 	%r1832, %r752, %r776;
	mul.lo.s32 	%r1833, %r1832, %r44;
	sub.s32 	%r782, %r1833, %r924;
	@%p15 bra 	$L__BB0_481;

	not.pred 	%p292, %p11;
	@%p292 bra 	$L__BB0_479;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2407;
  cvt.f32.f16 %f362, low;}

	// end inline asm
	add.s32 	%r1835, %r782, %r384;
	mul.wide.s32 	%rd431, %r1835, 4;
	add.s64 	%rd432, %rd31, %rd431;
	st.global.f32 	[%rd432], %f362;

$L__BB0_479:
	not.pred 	%p293, %p13;
	@%p293 bra 	$L__BB0_481;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2407;
  cvt.f32.f16 %f363, high;}

	// end inline asm
	add.s32 	%r1837, %r782, %r385;
	mul.wide.s32 	%rd433, %r1837, 4;
	add.s64 	%rd434, %rd31, %rd433;
	st.global.f32 	[%rd434], %f363;

$L__BB0_481:
	@%p15 bra 	$L__BB0_486;

	not.pred 	%p295, %p12;
	@%p295 bra 	$L__BB0_484;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2400;
  cvt.f32.f16 %f364, low;}

	// end inline asm
	add.s32 	%r1839, %r782, %r386;
	mul.wide.s32 	%rd435, %r1839, 4;
	add.s64 	%rd436, %rd31, %rd435;
	st.global.f32 	[%rd436], %f364;

$L__BB0_484:
	not.pred 	%p296, %p14;
	@%p296 bra 	$L__BB0_486;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2400;
  cvt.f32.f16 %f365, high;}

	// end inline asm
	add.s32 	%r1841, %r782, %r387;
	mul.wide.s32 	%rd437, %r1841, 4;
	add.s64 	%rd438, %rd31, %rd437;
	st.global.f32 	[%rd438], %f365;

$L__BB0_486:
	add.s32 	%r1842, %r752, %r778;
	mul.lo.s32 	%r1843, %r1842, %r44;
	sub.s32 	%r783, %r1843, %r924;
	@%p15 bra 	$L__BB0_491;

	not.pred 	%p298, %p11;
	@%p298 bra 	$L__BB0_489;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r472;
  cvt.f32.f16 %f366, low;}

	// end inline asm
	add.s32 	%r1845, %r783, %r384;
	mul.wide.s32 	%rd439, %r1845, 4;
	add.s64 	%rd440, %rd31, %rd439;
	st.global.f32 	[%rd440], %f366;

$L__BB0_489:
	not.pred 	%p299, %p13;
	@%p299 bra 	$L__BB0_491;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r472;
  cvt.f32.f16 %f367, high;}

	// end inline asm
	add.s32 	%r1847, %r783, %r385;
	mul.wide.s32 	%rd441, %r1847, 4;
	add.s64 	%rd442, %rd31, %rd441;
	st.global.f32 	[%rd442], %f367;

$L__BB0_491:
	@%p15 bra 	$L__BB0_496;

	not.pred 	%p301, %p12;
	@%p301 bra 	$L__BB0_494;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r465;
  cvt.f32.f16 %f368, low;}

	// end inline asm
	add.s32 	%r1849, %r783, %r386;
	mul.wide.s32 	%rd443, %r1849, 4;
	add.s64 	%rd444, %rd31, %rd443;
	st.global.f32 	[%rd444], %f368;

$L__BB0_494:
	not.pred 	%p302, %p14;
	@%p302 bra 	$L__BB0_496;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r465;
  cvt.f32.f16 %f369, high;}

	// end inline asm
	add.s32 	%r1851, %r783, %r387;
	mul.wide.s32 	%rd445, %r1851, 4;
	add.s64 	%rd446, %rd31, %rd445;
	st.global.f32 	[%rd446], %f369;

$L__BB0_496:
	add.s32 	%r2201, %r752, 1;
	add.s32 	%r1852, %r2201, %r780;
	mul.lo.s32 	%r1853, %r1852, %r44;
	sub.s32 	%r784, %r1853, %r924;
	@%p15 bra 	$L__BB0_501;

	not.pred 	%p304, %p11;
	@%p304 bra 	$L__BB0_499;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2394;
  cvt.f32.f16 %f370, low;}

	// end inline asm
	add.s32 	%r1855, %r784, %r384;
	mul.wide.s32 	%rd447, %r1855, 4;
	add.s64 	%rd448, %rd31, %rd447;
	st.global.f32 	[%rd448], %f370;

$L__BB0_499:
	not.pred 	%p305, %p13;
	@%p305 bra 	$L__BB0_501;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2394;
  cvt.f32.f16 %f371, high;}

	// end inline asm
	add.s32 	%r1857, %r784, %r385;
	mul.wide.s32 	%rd449, %r1857, 4;
	add.s64 	%rd450, %rd31, %rd449;
	st.global.f32 	[%rd450], %f371;

$L__BB0_501:
	@%p15 bra 	$L__BB0_506;

	not.pred 	%p307, %p12;
	@%p307 bra 	$L__BB0_504;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2388;
  cvt.f32.f16 %f372, low;}

	// end inline asm
	add.s32 	%r1859, %r784, %r386;
	mul.wide.s32 	%rd451, %r1859, 4;
	add.s64 	%rd452, %rd31, %rd451;
	st.global.f32 	[%rd452], %f372;

$L__BB0_504:
	not.pred 	%p308, %p14;
	@%p308 bra 	$L__BB0_506;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2388;
  cvt.f32.f16 %f373, high;}

	// end inline asm
	add.s32 	%r1861, %r784, %r387;
	mul.wide.s32 	%rd453, %r1861, 4;
	add.s64 	%rd454, %rd31, %rd453;
	st.global.f32 	[%rd454], %f373;

$L__BB0_506:
	add.s32 	%r2202, %r752, 1;
	add.s32 	%r1862, %r2202, %r776;
	mul.lo.s32 	%r1863, %r1862, %r44;
	sub.s32 	%r785, %r1863, %r924;
	@%p15 bra 	$L__BB0_511;

	not.pred 	%p310, %p11;
	@%p310 bra 	$L__BB0_509;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r420;
  cvt.f32.f16 %f374, low;}

	// end inline asm
	add.s32 	%r1865, %r785, %r384;
	mul.wide.s32 	%rd455, %r1865, 4;
	add.s64 	%rd456, %rd31, %rd455;
	st.global.f32 	[%rd456], %f374;

$L__BB0_509:
	not.pred 	%p311, %p13;
	@%p311 bra 	$L__BB0_511;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r420;
  cvt.f32.f16 %f375, high;}

	// end inline asm
	add.s32 	%r1867, %r785, %r385;
	mul.wide.s32 	%rd457, %r1867, 4;
	add.s64 	%rd458, %rd31, %rd457;
	st.global.f32 	[%rd458], %f375;

$L__BB0_511:
	@%p15 bra 	$L__BB0_516;

	not.pred 	%p313, %p12;
	@%p313 bra 	$L__BB0_514;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r412;
  cvt.f32.f16 %f376, low;}

	// end inline asm
	add.s32 	%r1869, %r785, %r386;
	mul.wide.s32 	%rd459, %r1869, 4;
	add.s64 	%rd460, %rd31, %rd459;
	st.global.f32 	[%rd460], %f376;

$L__BB0_514:
	not.pred 	%p314, %p14;
	@%p314 bra 	$L__BB0_516;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r412;
  cvt.f32.f16 %f377, high;}

	// end inline asm
	add.s32 	%r1871, %r785, %r387;
	mul.wide.s32 	%rd461, %r1871, 4;
	add.s64 	%rd462, %rd31, %rd461;
	st.global.f32 	[%rd462], %f377;

$L__BB0_516:
	add.s32 	%r2203, %r752, 1;
	add.s32 	%r1872, %r2203, %r778;
	mul.lo.s32 	%r1873, %r1872, %r44;
	sub.s32 	%r786, %r1873, %r924;
	@%p15 bra 	$L__BB0_521;

	not.pred 	%p316, %p11;
	@%p316 bra 	$L__BB0_519;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r459;
  cvt.f32.f16 %f378, low;}

	// end inline asm
	add.s32 	%r1875, %r786, %r384;
	mul.wide.s32 	%rd463, %r1875, 4;
	add.s64 	%rd464, %rd31, %rd463;
	st.global.f32 	[%rd464], %f378;

$L__BB0_519:
	not.pred 	%p317, %p13;
	@%p317 bra 	$L__BB0_521;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r459;
  cvt.f32.f16 %f379, high;}

	// end inline asm
	add.s32 	%r1877, %r786, %r385;
	mul.wide.s32 	%rd465, %r1877, 4;
	add.s64 	%rd466, %rd31, %rd465;
	st.global.f32 	[%rd466], %f379;

$L__BB0_521:
	@%p15 bra 	$L__BB0_526;

	not.pred 	%p319, %p12;
	@%p319 bra 	$L__BB0_524;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r455;
  cvt.f32.f16 %f380, low;}

	// end inline asm
	add.s32 	%r1879, %r786, %r386;
	mul.wide.s32 	%rd467, %r1879, 4;
	add.s64 	%rd468, %rd31, %rd467;
	st.global.f32 	[%rd468], %f380;

$L__BB0_524:
	not.pred 	%p320, %p14;
	@%p320 bra 	$L__BB0_526;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r455;
  cvt.f32.f16 %f381, high;}

	// end inline asm
	add.s32 	%r1881, %r786, %r387;
	mul.wide.s32 	%rd469, %r1881, 4;
	add.s64 	%rd470, %rd31, %rd469;
	st.global.f32 	[%rd470], %f381;

$L__BB0_526:
	add.s32 	%r2209, %r752, 2;
	add.s32 	%r1882, %r2209, %r778;
	mul.lo.s32 	%r1883, %r1882, %r44;
	sub.s32 	%r787, %r1883, %r924;
	@%p15 bra 	$L__BB0_531;

	not.pred 	%p322, %p11;
	@%p322 bra 	$L__BB0_529;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2310;
  cvt.f32.f16 %f382, low;}

	// end inline asm
	add.s32 	%r1885, %r787, %r384;
	mul.wide.s32 	%rd471, %r1885, 4;
	add.s64 	%rd472, %rd31, %rd471;
	st.global.f32 	[%rd472], %f382;

$L__BB0_529:
	not.pred 	%p323, %p13;
	@%p323 bra 	$L__BB0_531;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2310;
  cvt.f32.f16 %f383, high;}

	// end inline asm
	add.s32 	%r1887, %r787, %r385;
	mul.wide.s32 	%rd473, %r1887, 4;
	add.s64 	%rd474, %rd31, %rd473;
	st.global.f32 	[%rd474], %f383;

$L__BB0_531:
	@%p15 bra 	$L__BB0_536;

	not.pred 	%p325, %p12;
	@%p325 bra 	$L__BB0_534;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2306;
  cvt.f32.f16 %f384, low;}

	// end inline asm
	add.s32 	%r1889, %r787, %r386;
	mul.wide.s32 	%rd475, %r1889, 4;
	add.s64 	%rd476, %rd31, %rd475;
	st.global.f32 	[%rd476], %f384;

$L__BB0_534:
	not.pred 	%p326, %p14;
	@%p326 bra 	$L__BB0_536;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2306;
  cvt.f32.f16 %f385, high;}

	// end inline asm
	add.s32 	%r1891, %r787, %r387;
	mul.wide.s32 	%rd477, %r1891, 4;
	add.s64 	%rd478, %rd31, %rd477;
	st.global.f32 	[%rd478], %f385;

$L__BB0_536:
	sub.s32 	%r2208, %r523, %r920;
	add.s32 	%r788, %r2208, 1;
	add.s32 	%r1892, %r788, %r756;
	mad.lo.s32 	%r1894, %r1892, %r948, %r752;
	mul.lo.s32 	%r1895, %r1894, %r44;
	sub.s32 	%r789, %r1895, %r924;
	@%p15 bra 	$L__BB0_541;

	not.pred 	%p328, %p11;
	@%p328 bra 	$L__BB0_539;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2378;
  cvt.f32.f16 %f386, low;}

	// end inline asm
	add.s32 	%r1897, %r789, %r384;
	mul.wide.s32 	%rd479, %r1897, 4;
	add.s64 	%rd480, %rd31, %rd479;
	st.global.f32 	[%rd480], %f386;

$L__BB0_539:
	not.pred 	%p329, %p13;
	@%p329 bra 	$L__BB0_541;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2378;
  cvt.f32.f16 %f387, high;}

	// end inline asm
	add.s32 	%r1899, %r789, %r385;
	mul.wide.s32 	%rd481, %r1899, 4;
	add.s64 	%rd482, %rd31, %rd481;
	st.global.f32 	[%rd482], %f387;

$L__BB0_541:
	@%p15 bra 	$L__BB0_546;

	not.pred 	%p331, %p12;
	@%p331 bra 	$L__BB0_544;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2371;
  cvt.f32.f16 %f388, low;}

	// end inline asm
	add.s32 	%r1901, %r789, %r386;
	mul.wide.s32 	%rd483, %r1901, 4;
	add.s64 	%rd484, %rd31, %rd483;
	st.global.f32 	[%rd484], %f388;

$L__BB0_544:
	not.pred 	%p332, %p14;
	@%p332 bra 	$L__BB0_546;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2371;
  cvt.f32.f16 %f389, high;}

	// end inline asm
	add.s32 	%r1903, %r789, %r387;
	mul.wide.s32 	%rd485, %r1903, 4;
	add.s64 	%rd486, %rd31, %rd485;
	st.global.f32 	[%rd486], %f389;

$L__BB0_546:
	add.s32 	%r1905, %r788, %r768;
	mul.lo.s32 	%r790, %r1905, %r948;
	add.s32 	%r1906, %r752, %r790;
	mul.lo.s32 	%r1907, %r1906, %r44;
	sub.s32 	%r791, %r1907, %r924;
	@%p15 bra 	$L__BB0_551;

	not.pred 	%p334, %p11;
	@%p334 bra 	$L__BB0_549;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2377;
  cvt.f32.f16 %f390, low;}

	// end inline asm
	add.s32 	%r1909, %r791, %r384;
	mul.wide.s32 	%rd487, %r1909, 4;
	add.s64 	%rd488, %rd31, %rd487;
	st.global.f32 	[%rd488], %f390;

$L__BB0_549:
	not.pred 	%p335, %p13;
	@%p335 bra 	$L__BB0_551;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2377;
  cvt.f32.f16 %f391, high;}

	// end inline asm
	add.s32 	%r1911, %r791, %r385;
	mul.wide.s32 	%rd489, %r1911, 4;
	add.s64 	%rd490, %rd31, %rd489;
	st.global.f32 	[%rd490], %f391;

$L__BB0_551:
	@%p15 bra 	$L__BB0_556;

	not.pred 	%p337, %p12;
	@%p337 bra 	$L__BB0_554;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2370;
  cvt.f32.f16 %f392, low;}

	// end inline asm
	add.s32 	%r1913, %r791, %r386;
	mul.wide.s32 	%rd491, %r1913, 4;
	add.s64 	%rd492, %rd31, %rd491;
	st.global.f32 	[%rd492], %f392;

$L__BB0_554:
	not.pred 	%p338, %p14;
	@%p338 bra 	$L__BB0_556;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2370;
  cvt.f32.f16 %f393, high;}

	// end inline asm
	add.s32 	%r1915, %r791, %r387;
	mul.wide.s32 	%rd493, %r1915, 4;
	add.s64 	%rd494, %rd31, %rd493;
	st.global.f32 	[%rd494], %f393;

$L__BB0_556:
	add.s32 	%r2204, %r752, 1;
	add.s32 	%r1916, %r2204, %r790;
	mul.lo.s32 	%r1917, %r1916, %r44;
	sub.s32 	%r792, %r1917, %r924;
	@%p15 bra 	$L__BB0_561;

	not.pred 	%p340, %p11;
	@%p340 bra 	$L__BB0_559;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2364;
  cvt.f32.f16 %f394, low;}

	// end inline asm
	add.s32 	%r1919, %r792, %r384;
	mul.wide.s32 	%rd495, %r1919, 4;
	add.s64 	%rd496, %rd31, %rd495;
	st.global.f32 	[%rd496], %f394;

$L__BB0_559:
	not.pred 	%p341, %p13;
	@%p341 bra 	$L__BB0_561;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2364;
  cvt.f32.f16 %f395, high;}

	// end inline asm
	add.s32 	%r1921, %r792, %r385;
	mul.wide.s32 	%rd497, %r1921, 4;
	add.s64 	%rd498, %rd31, %rd497;
	st.global.f32 	[%rd498], %f395;

$L__BB0_561:
	@%p15 bra 	$L__BB0_566;

	not.pred 	%p343, %p12;
	@%p343 bra 	$L__BB0_564;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2360;
  cvt.f32.f16 %f396, low;}

	// end inline asm
	add.s32 	%r1923, %r792, %r386;
	mul.wide.s32 	%rd499, %r1923, 4;
	add.s64 	%rd500, %rd31, %rd499;
	st.global.f32 	[%rd500], %f396;

$L__BB0_564:
	not.pred 	%p344, %p14;
	@%p344 bra 	$L__BB0_566;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2360;
  cvt.f32.f16 %f397, high;}

	// end inline asm
	add.s32 	%r1925, %r792, %r387;
	mul.wide.s32 	%rd501, %r1925, 4;
	add.s64 	%rd502, %rd31, %rd501;
	st.global.f32 	[%rd502], %f397;

$L__BB0_566:
	setp.eq.s32 	%p345, %r30, %r1318;
	@%p345 bra 	$L__BB0_568;

	mad.lo.s32 	%r1926, %r907, %r30, %r31;
	mov.u32 	%r1927, _ZN6kernel5shmemE;
	mad.lo.s32 	%r1928, %r1926, 1280, %r1927;
	add.s32 	%r1929, %r1928, -256;
	shl.b32 	%r1930, %r35, 4;
	add.s32 	%r1931, %r1929, %r1930;
	st.shared.v4.u32 	[%r1931+256], {%r2382, %r2380, %r2347, %r2340};
	st.shared.v4.u32 	[%r1931+1024], {%r2424, %r2420, %r2406, %r2399};
	shl.b32 	%r1932, %r35, 3;
	add.s32 	%r1933, %r1929, %r1932;
	st.shared.v2.u32 	[%r1933+768], {%r2412, %r2410};

$L__BB0_568:
	setp.eq.s32 	%p346, %r31, %r1323;
	@%p346 bra 	$L__BB0_572;

	mad.lo.s32 	%r1937, %r906, 384, -64;
	mul.lo.s32 	%r1938, %r1937, %r31;
	mad.lo.s32 	%r1940, %r1319, %r1318, %r1938;
	mad.lo.s32 	%r1941, %r1406, 384, %r1940;
	shl.b32 	%r1942, %r1941, 2;
	mov.u32 	%r1943, _ZN6kernel5shmemE;
	add.s32 	%r1944, %r1943, %r1942;
	add.s32 	%r1945, %r1944, -256;
	shl.b32 	%r1946, %r35, 4;
	add.s32 	%r1947, %r1945, %r1946;
	st.shared.v4.u32 	[%r1947+256], {%r2416, %r2414, %r2392, %r2386};
	st.shared.v4.u32 	[%r1947+1024], {%r2356, %r2352, %r2310, %r2306};
	shl.b32 	%r1948, %r35, 3;
	add.s32 	%r795, %r1945, %r1948;
	@%p345 bra 	$L__BB0_571;

	st.shared.v2.u32 	[%r795], {%r2423, %r2419};

$L__BB0_571:
	st.shared.v2.u32 	[%r795+768], {%r2393, %r2387};

$L__BB0_572:
	setp.ne.s32 	%p348, %r30, %r1318;
	ld.param.u64 	%rd503, [%rd1+80];
	cvta.to.global.u64 	%rd33, %rd503;
	@%p348 bra 	$L__BB0_574;

	mad.lo.s32 	%r1950, %r521, %r909, %r33;
	mul.lo.s32 	%r1951, %r907, %r1950;
	mul.lo.s32 	%r1952, %r1951, 768;
	mad.lo.s32 	%r1953, %r31, 384, %r1952;
	add.s32 	%r1954, %r1953, -64;
	mul.wide.s32 	%rd504, %r1954, 4;
	add.s64 	%rd505, %rd33, %rd504;
	add.s64 	%rd507, %rd505, %rd268;
	st.global.v4.u32 	[%rd507+256], {%r2382, %r2380, %r2347, %r2340};
	st.global.v4.u32 	[%rd507+1024], {%r2424, %r2420, %r2406, %r2399};
	add.s64 	%rd509, %rd505, %rd270;
	st.global.v2.u32 	[%rd509+768], {%r2412, %r2410};
	st.global.v2.u32 	[%rd509+1536], {%r2423, %r2419};

$L__BB0_574:
	setp.ne.s32 	%p349, %r31, %r1323;
	@%p349 bra 	$L__BB0_579;

	ld.param.u64 	%rd539, [%rd1+80];
	cvta.to.global.u64 	%rd538, %rd539;
	mad.lo.s32 	%r1957, %r522, %r908, %r32;
	mul.lo.s32 	%r1961, %r1957, %r969;
	mad.lo.s32 	%r1964, %r1406, 384, %r1961;
	add.s32 	%r1965, %r1964, -64;
	mad.lo.s32 	%r1968, %r971, %r55, %r1965;
	mul.wide.s32 	%rd510, %r1968, 4;
	add.s64 	%rd511, %rd538, %rd510;
	add.s64 	%rd513, %rd511, %rd268;
	st.global.v4.u32 	[%rd513+256], {%r2416, %r2414, %r2392, %r2386};
	st.global.v4.u32 	[%rd513+1024], {%r2356, %r2352, %r2310, %r2306};
	add.s64 	%rd34, %rd511, %rd270;
	@%p345 bra 	$L__BB0_577;

	st.global.v2.u32 	[%rd34], {%r2423, %r2419};

$L__BB0_577:
	st.global.v2.u32 	[%rd34+768], {%r2393, %r2387};
	@%p171 bra 	$L__BB0_579;

	st.global.v2.u32 	[%rd34+1536], {%r2490, %r2488};

$L__BB0_579:
	setp.ge.s32 	%p352, %r30, %r1318;
	@%p352 bra 	$L__BB0_581;

	mul.lo.s32 	%r1969, %r907, 320;
	mul.lo.s32 	%r1970, %r31, 320;
	mad.lo.s32 	%r1971, %r1969, %r30, %r1970;
	add.s32 	%r1975, %r968, -64;
	mad.lo.s32 	%r1979, %r1975, %r1323, %r1320;
	add.s32 	%r1980, %r1971, %r1979;
	shl.b32 	%r1981, %r1980, 2;
	mov.u32 	%r1982, _ZN6kernel5shmemE;
	add.s32 	%r1983, %r1982, %r1981;
	shl.b32 	%r1984, %r35, 4;
	add.s32 	%r1985, %r1983, %r1984;
	st.shared.v4.u32 	[%r1985], {%r2539, %r2538, %r2534, %r2532};
	shl.b32 	%r1986, %r35, 3;
	add.s32 	%r1987, %r1983, %r1986;
	st.shared.v2.u32 	[%r1987+512], {%r2411, %r2409};
	st.shared.v4.u32 	[%r1985+768], {%r2422, %r2418, %r2402, %r2395};

$L__BB0_581:
	setp.ge.s32 	%p353, %r31, %r1323;
	@%p353 bra 	$L__BB0_585;

	mad.lo.s32 	%r1993, %r1406, 384, %r1326;
	mad.lo.s32 	%r1996, %r1321, %r31, %r1993;
	add.s32 	%r2002, %r1996, %r1324;
	shl.b32 	%r2003, %r2002, 2;
	mov.u32 	%r2004, _ZN6kernel5shmemE;
	add.s32 	%r2005, %r2004, %r2003;
	shl.b32 	%r2006, %r35, 3;
	add.s32 	%r2007, %r2005, %r2006;
	@%p352 bra 	$L__BB0_584;

	add.s32 	%r2195, %r2007, -256;
	st.shared.v2.u32 	[%r2195], {%r2421, %r2417};

$L__BB0_584:
	shl.b32 	%r2026, %r35, 4;
	add.s32 	%r2027, %r2005, %r2026;
	st.shared.v4.u32 	[%r2027], {%r2415, %r2413, %r2389, %r2383};
	add.s32 	%r2196, %r2007, -256;
	st.shared.v2.u32 	[%r2196+768], {%r2390, %r2384};
	st.shared.v4.u32 	[%r2027+768], {%r2537, %r2536, %r2525, %r2524};

$L__BB0_585:
	bar.sync 	0;
	@%p166 bra 	$L__BB0_587;

	mul.lo.s32 	%r2028, %r907, 320;
	add.s32 	%r2029, %r30, -1;
	mul.lo.s32 	%r2030, %r31, 320;
	mad.lo.s32 	%r2031, %r2028, %r2029, %r2030;
	shl.b32 	%r2032, %r2031, 2;
	mov.u32 	%r2033, _ZN6kernel5shmemE;
	add.s32 	%r2034, %r2033, %r2032;
	add.s32 	%r2035, %r2034, -256;
	shl.b32 	%r2036, %r35, 4;
	add.s32 	%r2037, %r2035, %r2036;
	ld.shared.v4.u32 	{%r2545, %r2543, %r2546, %r2547}, [%r2037+256];
	ld.shared.v4.u32 	{%r2549, %r2548, %r2541, %r2540}, [%r2037+1024];
	shl.b32 	%r2046, %r35, 3;
	add.s32 	%r2047, %r2035, %r2046;
	ld.shared.v2.u32 	{%r2544, %r2542}, [%r2047+768];

$L__BB0_587:
	@%p169 bra 	$L__BB0_590;

	mad.lo.s32 	%r2052, %r906, 384, -64;
	add.s32 	%r2053, %r31, -1;
	mul.lo.s32 	%r2054, %r2052, %r2053;
	mad.lo.s32 	%r2057, %r1319, %r1318, %r2054;
	mad.lo.s32 	%r2058, %r1406, 384, %r2057;
	shl.b32 	%r2059, %r2058, 2;
	mov.u32 	%r2060, _ZN6kernel5shmemE;
	add.s32 	%r2061, %r2060, %r2059;
	add.s32 	%r2062, %r2061, -256;
	shl.b32 	%r2063, %r35, 4;
	add.s32 	%r2064, %r2062, %r2063;
	ld.shared.v4.u32 	{%r2561, %r2560, %r2558, %r2556}, [%r2064+256];
	ld.shared.v4.u32 	{%r2555, %r2554, %r2550, %r2553}, [%r2064+1024];
	shl.b32 	%r2073, %r35, 3;
	add.s32 	%r2074, %r2062, %r2073;
	ld.shared.v2.u32 	{%r2559, %r2557}, [%r2074+768];
	@%p166 bra 	$L__BB0_590;

	add.s32 	%r2197, %r2074, 768;
	ld.shared.v2.u32 	{%r2478, %r2480}, [%r2197+768];

$L__BB0_590:
	ld.param.u64 	%rd515, [%rd1+80];
	cvta.to.global.u64 	%rd35, %rd515;
	mov.u32 	%r2585, %r2332;
	mov.u32 	%r2567, %r2452;
	mov.u32 	%r2569, %r2454;
	mov.u32 	%r2313, %r2456;
	mov.u32 	%r2587, %r2327;
	mov.u32 	%r2321, %r2457;
	mov.u32 	%r2574, %r2458;
	mov.u32 	%r2575, %r2459;
	mov.u32 	%r2576, %r2460;
	mov.u32 	%r2577, %r2461;
	mov.u32 	%r2592, %r2474;
	mov.u32 	%r2593, %r2475;
	@%p171 bra 	$L__BB0_594;

	mad.lo.s32 	%r2080, %r521, %r909, %r33;
	mad.lo.s32 	%r2081, %r2080, 768, 384;
	mul.lo.s32 	%r2082, %r2081, %r907;
	mad.lo.s32 	%r2083, %r31, 384, %r2082;
	add.s32 	%r2084, %r2083, -128;
	mul.wide.s32 	%rd516, %r2084, 4;
	add.s64 	%rd517, %rd35, %rd516;
	add.s64 	%rd519, %rd517, %rd268;
	add.s64 	%rd36, %rd519, 512;
	mov.u32 	%r2585, %r2332;
	mov.u32 	%r2587, %r2327;
	mov.u32 	%r2592, %r2474;
	mov.u32 	%r2593, %r2475;
	@%p169 bra 	$L__BB0_593;

	ld.global.v4.u32 	{%r2592, %r2593, %r2585, %r2587}, [%rd36+-512];

$L__BB0_593:
	ld.global.v4.u32 	{%r2575, %r2577, %r2574, %r2576}, [%rd36];
	ld.global.v4.u32 	{%r2321, %r2313, %r2569, %r2567}, [%rd36+512];
	ld.global.v4.u32 	{%r2455, %r2453, %r2463, %r2462}, [%rd36+1024];

$L__BB0_594:
	mov.u32 	%r2297, %r2464;
	mov.u32 	%r2301, %r2465;
	mov.u32 	%r2302, %r2466;
	mov.u32 	%r2319, %r2468;
	mov.u32 	%r2337, %r2470;
	mov.u32 	%r2589, %r2471;
	mov.u32 	%r2344, %r2472;
	mov.u32 	%r2591, %r2473;
	@%p174 bra 	$L__BB0_596;

	mad.lo.s32 	%r2102, %r522, %r908, %r32;
	mad.lo.s32 	%r2108, %r1406, 384, %r56;
	mad.lo.s32 	%r2109, %r2102, %r969, %r2108;
	mad.lo.s32 	%r2112, %r971, %r55, %r2109;
	mul.wide.s32 	%rd520, %r2112, 4;
	add.s64 	%rd521, %rd35, %rd520;
	add.s64 	%rd523, %rd521, %rd268;
	ld.global.v4.u32 	{%r2591, %r2589, %r2302, %r2301}, [%rd523+512];
	ld.global.v4.u32 	{%r2344, %r2337, %r2297, %r2319}, [%rd523+1024];
	ld.global.v4.u32 	{%r2592, %r2593, %r2585, %r2587}, [%rd523+1536];

$L__BB0_596:
	add.s32 	%r902, %r2425, 1;
	bar.sync 	0;
	@%p345 bra 	$L__BB0_599;

	shl.b32 	%r2126, %r31, 8;
	shl.b32 	%r2130, %r907, 8;
	or.b32  	%r2131, %r2130, 128;
	mad.lo.s32 	%r2132, %r2131, %r30, %r1326;
	add.s32 	%r2133, %r2132, %r2126;
	shl.b32 	%r2134, %r2133, 2;
	mov.u32 	%r2135, _ZN6kernel5shmemE;
	add.s32 	%r2136, %r2135, %r2134;
	shl.b32 	%r2137, %r35, 4;
	add.s32 	%r903, %r2136, %r2137;
	st.shared.v4.u32 	[%r903], {%r2473, %r2471, %r2346, %r2339};
	st.shared.v4.u32 	[%r903+512], {%r2381, %r2379, %r2375, %r2368};
	@%p349 bra 	$L__BB0_599;

	st.shared.v4.u32 	[%r903+1024], {%r2376, %r2369, %r2405, %r2398};

$L__BB0_599:
	setp.eq.s32 	%p373, %r31, %r1323;
	@%p373 bra 	$L__BB0_601;

	mul.lo.s32 	%r2141, %r1406, 384;
	mad.lo.s32 	%r2142, %r56, %r31, %r2141;
	mad.lo.s32 	%r2145, %r1321, %r1323, %r2142;
	mad.lo.s32 	%r2148, %r1319, %r1318, %r2145;
	shl.b32 	%r2149, %r2148, 2;
	mov.u32 	%r2150, _ZN6kernel5shmemE;
	add.s32 	%r2151, %r2150, %r2149;
	shl.b32 	%r2152, %r35, 4;
	add.s32 	%r2153, %r2151, %r2152;
	st.shared.v4.u32 	[%r2153], {%r2376, %r2369, %r2405, %r2398};
	st.shared.v4.u32 	[%r2153+512], {%r2363, %r2359, %r2323, %r2315};
	st.shared.v4.u32 	[%r2153+1024], {%r2362, %r2358, %r2454, %r2452};

$L__BB0_601:
	setp.ne.s32 	%p374, %r30, %r1318;
	ld.param.u64 	%rd524, [%rd1+80];
	cvta.to.global.u64 	%rd37, %rd524;
	@%p374 bra 	$L__BB0_603;

	mad.lo.s32 	%r2155, %r521, %r909, %r33;
	mad.lo.s32 	%r2156, %r2155, 768, 384;
	mul.lo.s32 	%r2157, %r2156, %r907;
	mad.lo.s32 	%r2158, %r31, 384, %r2157;
	add.s32 	%r2159, %r2158, -128;
	mul.wide.s32 	%rd525, %r2159, 4;
	add.s64 	%rd526, %rd37, %rd525;
	add.s64 	%rd528, %rd526, %rd268;
	st.global.v4.u32 	[%rd528+512], {%r2473, %r2471, %r2346, %r2339};
	st.global.v4.u32 	[%rd528+1024], {%r2381, %r2379, %r2375, %r2368};
	st.global.v4.u32 	[%rd528+1536], {%r2376, %r2369, %r2405, %r2398};

$L__BB0_603:
	@%p349 bra 	$L__BB0_606;

	mad.lo.s32 	%r2161, %r522, %r908, %r32;
	mad.lo.s32 	%r2167, %r1406, 384, %r56;
	mad.lo.s32 	%r2168, %r2161, %r969, %r2167;
	mad.lo.s32 	%r2171, %r971, %r55, %r2168;
	mul.wide.s32 	%rd529, %r2171, 4;
	add.s64 	%rd530, %rd37, %rd529;
	add.s64 	%rd38, %rd530, %rd268;
	st.global.v4.u32 	[%rd38], {%r2376, %r2369, %r2405, %r2398};
	st.global.v4.u32 	[%rd38+512], {%r2363, %r2359, %r2323, %r2315};
	st.global.v4.u32 	[%rd38+1024], {%r2362, %r2358, %r2454, %r2452};
	@%p171 bra 	$L__BB0_606;

	st.global.v4.u32 	[%rd38+1536], {%r2455, %r2453, %r2463, %r2462};

$L__BB0_606:
	rem.s32 	%r2172, %r2425, %r910;
	setp.eq.s32 	%p367, %r2172, 0;
	@%p367 bra 	$L__BB0_608;

	bar.sync 	0;
	bra.uni 	$L__BB0_615;

$L__BB0_608:
	@%p150 bra 	$L__BB0_610;

	// begin inline asm
	trap;
	// end inline asm

$L__BB0_610:
	bar.sync 	0;
	@%p151 bra 	$L__BB0_614;

	membar.gl;
	setp.eq.s32 	%p370, %r389, %r390;
	mov.u32 	%r2187, -2147483647;
	sub.s32 	%r2188, %r2187, %r388;
	selp.b32 	%r2176, %r2188, 1, %p370;
	// begin inline asm
	atom.add.release.gpu.u32 %r2175,[%rd25],%r2176;
	// end inline asm

$L__BB0_612:
	ld.volatile.u32 	%r2189, [%rd25];
	xor.b32  	%r2190, %r2189, %r2175;
	setp.gt.s32 	%p371, %r2190, -1;
	@%p371 bra 	$L__BB0_612;

	// begin inline asm
	ld.acquire.gpu.u32 %r2191,[%rd25];
	// end inline asm

$L__BB0_614:
	bar.sync 	0;

$L__BB0_615:
	setp.lt.s32 	%p372, %r902, %r38;
	mov.u32 	%r2298, %r2474;
	mov.u32 	%r2452, %r2567;
	mov.u32 	%r2306, %r2540;
	mov.u32 	%r2454, %r2569;
	mov.u32 	%r2310, %r2541;
	mov.u32 	%r2312, %r2475;
	mov.u32 	%r2314, %r2461;
	mov.u32 	%r2315, %r2460;
	mov.u32 	%r2322, %r2459;
	mov.u32 	%r2323, %r2458;
	mov.u32 	%r2458, %r2574;
	mov.u32 	%r2459, %r2575;
	mov.u32 	%r2471, %r2589;
	mov.u32 	%r2339, %r2465;
	mov.u32 	%r2340, %r2556;
	mov.u32 	%r2460, %r2576;
	mov.u32 	%r2461, %r2577;
	mov.u32 	%r2473, %r2591;
	mov.u32 	%r2346, %r2466;
	mov.u32 	%r2347, %r2558;
	mov.u32 	%r2474, %r2592;
	mov.u32 	%r2352, %r2548;
	mov.u32 	%r2475, %r2593;
	mov.u32 	%r2356, %r2549;
	mov.u32 	%r2358, %r2456;
	mov.u32 	%r2359, %r409;
	mov.u32 	%r2362, %r2457;
	mov.u32 	%r2363, %r417;
	mov.u32 	%r2368, %r423;
	mov.u32 	%r2369, %r424;
	mov.u32 	%r2375, %r428;
	mov.u32 	%r2376, %r429;
	mov.u32 	%r2379, %r2470;
	mov.u32 	%r2380, %r2560;
	mov.u32 	%r2381, %r2472;
	mov.u32 	%r2382, %r2561;
	mov.u32 	%r2383, %r452;
	mov.u32 	%r2384, %r2526;
	mov.u32 	%r2386, %r455;
	mov.u32 	%r2387, %r412;
	mov.u32 	%r2389, %r456;
	mov.u32 	%r2390, %r2528;
	mov.u32 	%r2392, %r459;
	mov.u32 	%r2393, %r420;
	mov.u32 	%r2395, %r460;
	mov.u32 	%r2398, %r462;
	mov.u32 	%r2399, %r465;
	mov.u32 	%r2402, %r467;
	mov.u32 	%r2405, %r469;
	mov.u32 	%r2406, %r472;
	mov.u32 	%r2409, %r2533;
	mov.u32 	%r2410, %r436;
	mov.u32 	%r2411, %r2535;
	mov.u32 	%r2412, %r443;
	mov.u32 	%r2413, %r480;
	mov.u32 	%r2414, %r483;
	mov.u32 	%r2415, %r486;
	mov.u32 	%r2416, %r489;
	mov.u32 	%r2417, %r491;
	mov.u32 	%r2418, %r492;
	mov.u32 	%r2419, %r495;
	mov.u32 	%r2420, %r496;
	mov.u32 	%r2421, %r498;
	mov.u32 	%r2422, %r499;
	mov.u32 	%r2423, %r502;
	mov.u32 	%r2424, %r503;
	mov.u32 	%r2425, %r902;
	@%p372 bra 	$L__BB0_293;

$L__BB0_616:
	ret;

}

