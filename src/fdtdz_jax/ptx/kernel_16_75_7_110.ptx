//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31833905
// Cuda compilation tools, release 11.8, V11.8.89
// Based on NVVM 7.0.1
//

.version 7.8
.target sm_75
.address_size 64

	// .globl	_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE
.global .align 4 .b8 _ZZN4cuda3std3__48__detail21__stronger_order_cudaEiiE7__xform[16] = {3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE[24] = {254, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllJE[20] = {254, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllKE[8] = {0, 0, 0, 0, 1, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond6AllEhcE[12] = {0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond6AllXyzE[12] = {0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.extern .shared .align 16 .b8 _ZN6kernel5shmemE[];

.visible .entry _ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE(
	.param .align 8 .b8 _ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0[192]
)
{
	.reg .pred 	%p<445>;
	.reg .f32 	%f<437>;
	.reg .b32 	%r<2686>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<573>;


	mov.b64 	%rd39, _ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0;
	mov.u64 	%rd1, %rd39;
	ld.param.v2.u32 	{%r917, %r918}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0];
	ld.param.v2.u32 	{%r919, %r920}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+8];
	ld.param.v2.u32 	{%r921, %r922}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+16];
	ld.param.v2.u32 	{%r923, %r924}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+24];
	ld.param.v2.u32 	{%r925, %r926}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+32];
	ld.param.v2.u32 	{%r927, %r928}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+40];
	ld.param.v2.u32 	{%r929, %r930}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+48];
	ld.param.v2.u32 	{%r931, %r932}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+56];
	ld.param.v2.u32 	{%r933, %r934}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+64];
	ld.param.v2.u32 	{%r935, %r936}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+72];
	ld.param.v2.u32 	{%r937, %r938}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+80];
	ld.param.v2.u32 	{%r939, %r940}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+88];
	ld.param.v2.u32 	{%r941, %r942}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+96];
	mov.u32 	%r40, %tid.y;
	mov.u32 	%r41, %tid.z;
	mov.u32 	%r42, %ctaid.y;
	mov.u32 	%r43, %ctaid.z;
	mov.u32 	%r943, 32;
	sub.s32 	%r44, %r943, %r924;
	mov.u32 	%r45, %tid.x;
	setp.le.s32 	%p28, %r44, %r45;
	add.s32 	%r944, %r930, -1;
	add.s32 	%r945, %r928, %r922;
	add.s32 	%r946, %r945, %r923;
	add.s32 	%r947, %r946, 1;
	mad.lo.s32 	%r948, %r944, %r929, %r947;
	mul.lo.s32 	%r949, %r917, %r919;
	shl.b32 	%r46, %r949, 1;
	shl.b32 	%r950, %r949, 2;
	div.s32 	%r951, %r948, %r950;
	add.s32 	%r952, %r951, 1;
	mul.lo.s32 	%r953, %r952, %r923;
	mul.lo.s32 	%r954, %r918, %r920;
	shl.b32 	%r47, %r954, 1;
	div.s32 	%r955, %r953, %r47;
	add.s32 	%r956, %r955, 1;
	mul.lo.s32 	%r48, %r956, %r922;
	ld.param.u64 	%rd40, [%rd1+184];
	cvta.to.global.u64 	%rd2, %rd40;
	mad.lo.s32 	%r959, %r919, %r43, %r42;
	mad.lo.s32 	%r960, %r959, %r918, %r41;
	mad.lo.s32 	%r961, %r960, %r917, %r40;
	shl.b32 	%r49, %r961, 5;
	add.s32 	%r2312, %r49, %r45;
	mul.lo.s32 	%r962, %r954, %r949;
	shl.b32 	%r53, %r962, 5;
	mov.u32 	%r963, 8;
	sub.s32 	%r964, %r963, %r931;
	add.s32 	%r965, %r964, %r932;
	sub.s32 	%r966, %r963, %r933;
	add.s32 	%r967, %r966, %r934;
	sub.s32 	%r54, %r936, %r935;
	mul.lo.s32 	%r968, %r930, %r54;
	mul.lo.s32 	%r969, %r968, %r967;
	mul.lo.s32 	%r970, %r969, %r965;
	mul.lo.s32 	%r55, %r970, 3;
	setp.ge.s32 	%p29, %r2312, %r55;
	@%p29 bra 	$L__BB0_9;

	add.s32 	%r971, %r934, 8;
	sub.s32 	%r972, %r971, %r933;
	mul.lo.s32 	%r973, %r930, %r972;
	add.s32 	%r974, %r932, 8;
	sub.s32 	%r975, %r974, %r931;
	mul.lo.s32 	%r976, %r973, %r975;
	mul.lo.s32 	%r977, %r976, %r54;
	not.b32 	%r978, %r45;
	mad.lo.s32 	%r979, %r977, 3, %r978;
	sub.s32 	%r980, %r979, %r49;
	mul.lo.s32 	%r981, %r954, %r917;
	mul.lo.s32 	%r982, %r981, %r919;
	shl.b32 	%r983, %r982, 5;
	div.u32 	%r56, %r980, %r983;
	add.s32 	%r984, %r56, 1;
	and.b32  	%r2309, %r984, 3;
	setp.eq.s32 	%p30, %r2309, 0;
	mov.u32 	%r2310, %r2312;
	@%p30 bra 	$L__BB0_6;

	mov.u32 	%r2310, %r2312;

$L__BB0_5:
	.pragma "nounroll";
	mul.wide.s32 	%rd41, %r2310, 4;
	add.s64 	%rd42, %rd2, %rd41;
	mov.u32 	%r985, 0;
	st.global.u32 	[%rd42], %r985;
	add.s32 	%r2310, %r2310, %r53;
	add.s32 	%r2309, %r2309, -1;
	setp.ne.s32 	%p31, %r2309, 0;
	@%p31 bra 	$L__BB0_5;

$L__BB0_6:
	setp.lt.u32 	%p32, %r56, 3;
	@%p32 bra 	$L__BB0_9;

	mul.wide.s32 	%rd45, %r53, 4;

$L__BB0_8:
	mul.wide.s32 	%rd43, %r2310, 4;
	add.s64 	%rd44, %rd2, %rd43;
	mov.u32 	%r986, 0;
	st.global.u32 	[%rd44], %r986;
	add.s64 	%rd46, %rd44, %rd45;
	st.global.u32 	[%rd46], %r986;
	add.s32 	%r987, %r2310, %r53;
	add.s32 	%r988, %r987, %r53;
	add.s64 	%rd47, %rd46, %rd45;
	st.global.u32 	[%rd47], %r986;
	add.s32 	%r989, %r988, %r53;
	add.s64 	%rd48, %rd47, %rd45;
	st.global.u32 	[%rd48], %r986;
	add.s32 	%r2310, %r989, %r53;
	setp.lt.s32 	%p33, %r2310, %r55;
	@%p33 bra 	$L__BB0_8;

$L__BB0_9:
	ld.param.u64 	%rd49, [%rd1+104];
	cvta.to.global.u64 	%rd3, %rd49;
	sub.s32 	%r990, %r923, %r46;
	div.s32 	%r991, %r990, %r47;
	mul.lo.s32 	%r992, %r991, %r922;
	sub.s32 	%r65, %r992, %r46;
	sub.s32 	%r993, %r922, %r47;
	mul.lo.s32 	%r994, %r993, %r919;
	mul.lo.s32 	%r66, %r917, 384;
	add.s32 	%r995, %r66, %r66;
	add.s32 	%r996, %r995, 128;
	mul.lo.s32 	%r998, %r954, 768;
	mul.lo.s32 	%r999, %r994, %r996;
	mad.lo.s32 	%r67, %r998, %r65, %r999;
	bra.uni 	$L__BB0_10;

$L__BB0_647:
	mov.f32 	%f424, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f424;
  cvt.rn.f16.f32 high, %f424;
  mov.b32 %r2283, {low,high};}

	// end inline asm
	mul.wide.s32 	%rd558, %r2312, 4;
	add.s64 	%rd559, %rd3, %rd558;
	st.global.u32 	[%rd559], %r2283;
	add.s32 	%r2312, %r2312, %r53;

$L__BB0_10:
	setp.lt.s32 	%p34, %r2312, %r67;
	@%p34 bra 	$L__BB0_647;

	ld.param.u64 	%rd50, [%rd1+144];
	cvta.to.global.u64 	%rd5, %rd50;
	ld.param.u64 	%rd51, [%rd1+112];
	cvta.to.global.u64 	%rd6, %rd51;
	mad.lo.s32 	%r2348, %r917, %r42, %r40;
	mul.lo.s32 	%r76, %r918, %r43;
	add.s32 	%r77, %r76, %r41;
	setp.ge.s32 	%p35, %r2348, %r922;
	@%p35 bra 	$L__BB0_65;

	setp.gt.s32 	%p36, %r44, %r45;
	mov.u32 	%r1000, 31;
	sub.s32 	%r1001, %r1000, %r45;
	selp.b32 	%r1002, %r45, %r1001, %p36;
	shl.b32 	%r1003, %r1002, 2;
	mov.u32 	%r1004, 2;
	sub.s32 	%r78, %r1003, %r925;
	shl.b32 	%r1005, %r924, 2;
	mov.u32 	%r1006, 128;
	sub.s32 	%r79, %r1006, %r1005;
	sub.s32 	%r1007, %r1004, %r925;
	add.s32 	%r80, %r1007, %r1003;
	sub.s32 	%r81, %r932, %r931;
	sub.s32 	%r82, %r934, %r933;
	add.s32 	%r83, %r932, -1;
	add.s32 	%r84, %r934, -1;
	add.s32 	%r85, %r936, -1;
	mul.lo.s32 	%r1008, %r923, %r922;
	shl.b32 	%r86, %r1008, 6;
	add.s32 	%r87, %r922, -1;
	selp.f32 	%f1, 0f00000000, 0f3F800000, %p36;
	add.s32 	%r88, %r78, 1;
	add.s32 	%r89, %r80, 1;
	shl.b32 	%r90, %r45, 1;
	or.b32  	%r91, %r90, 1;
	shr.u32 	%r1009, %r91, 31;
	add.s32 	%r1010, %r91, %r1009;
	shr.s32 	%r93, %r1010, 1;
	and.b32  	%r1011, %r1010, -2;
	sub.s32 	%r1012, %r91, %r1011;
	add.s32 	%r92, %r1012, %r86;
	rem.s32 	%r1068, %r88, %r79;
	add.s32 	%r1069, %r1068, %r79;
	rem.s32 	%r1070, %r1069, %r79;
	rem.s32 	%r1071, %r89, %r79;
	add.s32 	%r1072, %r1071, %r79;
	rem.s32 	%r1073, %r1072, %r79;
	mov.u32 	%r2313, %r2348;

$L__BB0_13:
	setp.ge.s32 	%p37, %r77, %r923;
	@%p37 bra 	$L__BB0_64;

	setp.ge.s32 	%p38, %r2313, %r937;
	setp.lt.s32 	%p39, %r2313, %r938;
	and.pred  	%p1, %p39, %p38;
	setp.lt.s32 	%p40, %r2313, %r932;
	setp.ge.s32 	%p41, %r2313, %r931;
	and.pred  	%p2, %p40, %p41;
	selp.b32 	%r1013, %r2313, %r83, %p40;
	setp.lt.s32 	%p42, %r2313, %r931;
	selp.b32 	%r1014, %r931, %r1013, %p42;
	sub.s32 	%r1015, %r1014, %r931;
	add.s32 	%r95, %r87, %r2313;
	rem.s32 	%r1016, %r78, %r79;
	add.s32 	%r1017, %r1016, %r79;
	rem.s32 	%r96, %r1017, %r79;
	rem.s32 	%r1018, %r80, %r79;
	add.s32 	%r1019, %r1018, %r79;
	rem.s32 	%r97, %r1019, %r79;
	setp.lt.s32 	%p43, %r96, %r936;
	sub.s32 	%r98, %r96, %r935;
	setp.lt.s32 	%p44, %r96, %r935;
	selp.b32 	%r1020, %r96, %r85, %p43;
	selp.b32 	%r1021, %r935, %r1020, %p44;
	sub.s32 	%r99, %r1021, %r935;
	setp.lt.s32 	%p45, %r97, %r936;
	sub.s32 	%r100, %r97, %r935;
	setp.lt.s32 	%p46, %r97, %r935;
	selp.b32 	%r1022, %r97, %r85, %p45;
	selp.b32 	%r1023, %r935, %r1022, %p46;
	sub.s32 	%r101, %r1023, %r935;
	sub.s32 	%r1024, %r2313, %r931;
	mul.lo.s32 	%r102, %r1024, %r82;
	mul.lo.s32 	%r103, %r1015, %r82;
	add.s32 	%r1025, %r1024, %r81;
	mul.lo.s32 	%r104, %r1025, %r82;
	add.s32 	%r1026, %r1015, %r81;
	mul.lo.s32 	%r105, %r1026, %r82;
	add.s32 	%r1027, %r1025, %r81;
	mul.lo.s32 	%r106, %r1027, %r82;
	add.s32 	%r1028, %r1026, %r81;
	mul.lo.s32 	%r107, %r1028, %r82;
	mov.u32 	%r2314, %r77;

$L__BB0_15:
	setp.ge.s32 	%p47, %r2314, %r939;
	and.pred  	%p48, %p1, %p47;
	setp.lt.s32 	%p49, %r2314, %r940;
	and.pred  	%p3, %p49, %p48;
	setp.ge.s32 	%p50, %r2314, %r933;
	and.pred  	%p51, %p2, %p50;
	setp.lt.s32 	%p52, %r2314, %r934;
	and.pred  	%p4, %p52, %p51;
	sub.s32 	%r109, %r2314, %r933;
	selp.b32 	%r1029, %r2314, %r84, %p52;
	setp.lt.s32 	%p53, %r2314, %r933;
	selp.b32 	%r1030, %r933, %r1029, %p53;
	sub.s32 	%r110, %r1030, %r933;
	mul.lo.s32 	%r111, %r2314, %r922;
	add.s32 	%r112, %r111, %r2313;
	shl.b32 	%r113, %r112, 6;
	setp.ge.s32 	%p54, %r96, %r941;
	and.pred  	%p55, %p3, %p54;
	setp.lt.s32 	%p56, %r96, %r942;
	and.pred  	%p57, %p56, %p55;
	setp.ge.s32 	%p58, %r96, %r935;
	and.pred  	%p59, %p4, %p58;
	and.pred  	%p5, %p43, %p59;
	setp.ge.s32 	%p61, %r97, %r935;
	and.pred  	%p62, %p4, %p61;
	and.pred  	%p6, %p45, %p62;
	and.pred  	%p7, %p36, %p57;
	not.pred 	%p65, %p7;
	mov.f32 	%f425, %f1;
	@%p65 bra 	$L__BB0_19;

	@%p5 bra 	$L__BB0_18;
	bra.uni 	$L__BB0_17;

$L__BB0_18:
	add.s32 	%r1033, %r109, %r102;
	mad.lo.s32 	%r1034, %r1033, %r54, %r98;
	mul.wide.s32 	%rd54, %r1034, 4;
	add.s64 	%rd55, %rd5, %rd54;
	ld.global.f32 	%f425, [%rd55];
	bra.uni 	$L__BB0_19;

$L__BB0_17:
	add.s32 	%r1031, %r110, %r103;
	mad.lo.s32 	%r1032, %r1031, %r54, %r99;
	mul.wide.s32 	%rd52, %r1032, 4;
	add.s64 	%rd53, %rd5, %rd52;
	ld.global.f32 	%f425, [%rd53];

$L__BB0_19:
	setp.lt.s32 	%p67, %r97, %r942;
	setp.ge.s32 	%p68, %r97, %r941;
	and.pred  	%p69, %p3, %p68;
	and.pred  	%p70, %p67, %p69;
	and.pred  	%p8, %p36, %p70;
	not.pred 	%p71, %p8;
	mov.f32 	%f426, %f1;
	@%p71 bra 	$L__BB0_23;

	@%p6 bra 	$L__BB0_22;
	bra.uni 	$L__BB0_21;

$L__BB0_22:
	add.s32 	%r1037, %r109, %r102;
	mad.lo.s32 	%r1038, %r1037, %r54, %r100;
	mul.wide.s32 	%rd58, %r1038, 4;
	add.s64 	%rd59, %rd5, %rd58;
	ld.global.f32 	%f426, [%rd59];
	bra.uni 	$L__BB0_23;

$L__BB0_21:
	add.s32 	%r1035, %r110, %r103;
	mad.lo.s32 	%r1036, %r1035, %r54, %r101;
	mul.wide.s32 	%rd56, %r1036, 4;
	add.s64 	%rd57, %rd5, %rd56;
	ld.global.f32 	%f426, [%rd57];

$L__BB0_23:
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f425;
  cvt.rn.f16.f32 high, %f426;
  mov.b32 %r1039, {low,high};}

	// end inline asm
	shl.b32 	%r114, %r112, 5;
	add.s32 	%r1040, %r114, %r45;
	shl.b32 	%r1041, %r1040, 2;
	add.s32 	%r1042, %r86, %r1041;
	mul.wide.s32 	%rd60, %r1042, 4;
	add.s64 	%rd61, %rd6, %rd60;
	st.global.u32 	[%rd61], %r1039;
	mov.f32 	%f427, %f1;
	@%p65 bra 	$L__BB0_27;

	@%p5 bra 	$L__BB0_26;
	bra.uni 	$L__BB0_25;

$L__BB0_26:
	add.s32 	%r1045, %r109, %r104;
	mad.lo.s32 	%r1046, %r1045, %r54, %r98;
	mul.wide.s32 	%rd64, %r1046, 4;
	add.s64 	%rd65, %rd5, %rd64;
	ld.global.f32 	%f427, [%rd65];
	bra.uni 	$L__BB0_27;

$L__BB0_25:
	add.s32 	%r1043, %r110, %r105;
	mad.lo.s32 	%r1044, %r1043, %r54, %r99;
	mul.wide.s32 	%rd62, %r1044, 4;
	add.s64 	%rd63, %rd5, %rd62;
	ld.global.f32 	%f427, [%rd63];

$L__BB0_27:
	mov.f32 	%f428, %f1;
	@%p71 bra 	$L__BB0_31;

	@%p6 bra 	$L__BB0_30;
	bra.uni 	$L__BB0_29;

$L__BB0_30:
	add.s32 	%r1049, %r109, %r104;
	mad.lo.s32 	%r1050, %r1049, %r54, %r100;
	mul.wide.s32 	%rd68, %r1050, 4;
	add.s64 	%rd69, %rd5, %rd68;
	ld.global.f32 	%f428, [%rd69];
	bra.uni 	$L__BB0_31;

$L__BB0_29:
	add.s32 	%r1047, %r110, %r105;
	mad.lo.s32 	%r1048, %r1047, %r54, %r101;
	mul.wide.s32 	%rd66, %r1048, 4;
	add.s64 	%rd67, %rd5, %rd66;
	ld.global.f32 	%f428, [%rd67];

$L__BB0_31:
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f427;
  cvt.rn.f16.f32 high, %f428;
  mov.b32 %r1051, {low,high};}

	// end inline asm
	add.s32 	%r1052, %r90, %r113;
	mul.wide.s32 	%rd70, %r1052, 4;
	add.s64 	%rd71, %rd6, %rd70;
	st.global.u32 	[%rd71], %r1051;
	mov.f32 	%f429, %f1;
	@%p65 bra 	$L__BB0_35;

	@%p5 bra 	$L__BB0_34;
	bra.uni 	$L__BB0_33;

$L__BB0_34:
	add.s32 	%r1055, %r109, %r106;
	mad.lo.s32 	%r1056, %r1055, %r54, %r98;
	mul.wide.s32 	%rd74, %r1056, 4;
	add.s64 	%rd75, %rd5, %rd74;
	ld.global.f32 	%f429, [%rd75];
	bra.uni 	$L__BB0_35;

$L__BB0_33:
	add.s32 	%r1053, %r110, %r107;
	mad.lo.s32 	%r1054, %r1053, %r54, %r99;
	mul.wide.s32 	%rd72, %r1054, 4;
	add.s64 	%rd73, %rd5, %rd72;
	ld.global.f32 	%f429, [%rd73];

$L__BB0_35:
	mov.f32 	%f430, %f1;
	@%p71 bra 	$L__BB0_39;

	@%p6 bra 	$L__BB0_38;
	bra.uni 	$L__BB0_37;

$L__BB0_38:
	add.s32 	%r1059, %r109, %r106;
	mad.lo.s32 	%r1060, %r1059, %r54, %r100;
	mul.wide.s32 	%rd78, %r1060, 4;
	add.s64 	%rd79, %rd5, %rd78;
	ld.global.f32 	%f430, [%rd79];
	bra.uni 	$L__BB0_39;

$L__BB0_37:
	add.s32 	%r1057, %r110, %r107;
	mad.lo.s32 	%r1058, %r1057, %r54, %r101;
	mul.wide.s32 	%rd76, %r1058, 4;
	add.s64 	%rd77, %rd5, %rd76;
	ld.global.f32 	%f430, [%rd77];

$L__BB0_39:
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f429;
  cvt.rn.f16.f32 high, %f430;
  mov.b32 %r1061, {low,high};}

	// end inline asm
	rem.s32 	%r1062, %r95, %r922;
	add.s32 	%r1063, %r1062, %r111;
	shl.b32 	%r115, %r1063, 5;
	add.s32 	%r1064, %r115, %r45;
	shl.b32 	%r1065, %r1064, 2;
	add.s32 	%r1066, %r86, %r1065;
	add.s32 	%r1067, %r1066, 2;
	mul.wide.s32 	%rd80, %r1067, 4;
	add.s64 	%rd81, %rd6, %rd80;
	st.global.u32 	[%rd81], %r1061;
	setp.ge.s32 	%p76, %r1070, %r941;
	and.pred  	%p77, %p3, %p76;
	setp.lt.s32 	%p78, %r1070, %r942;
	and.pred  	%p79, %p78, %p77;
	setp.ge.s32 	%p80, %r1070, %r935;
	and.pred  	%p81, %p4, %p80;
	setp.lt.s32 	%p82, %r1070, %r936;
	and.pred  	%p9, %p82, %p81;
	setp.ge.s32 	%p83, %r1073, %r941;
	and.pred  	%p84, %p3, %p83;
	setp.lt.s32 	%p85, %r1073, %r942;
	and.pred  	%p10, %p85, %p84;
	sub.s32 	%r116, %r1070, %r935;
	setp.lt.s32 	%p86, %r1070, %r935;
	selp.b32 	%r1074, %r1070, %r85, %p82;
	selp.b32 	%r1075, %r935, %r1074, %p86;
	sub.s32 	%r117, %r1075, %r935;
	setp.ge.s32 	%p87, %r1073, %r935;
	and.pred  	%p88, %p4, %p87;
	setp.lt.s32 	%p89, %r1073, %r936;
	and.pred  	%p11, %p89, %p88;
	sub.s32 	%r118, %r1073, %r935;
	setp.lt.s32 	%p90, %r1073, %r935;
	selp.b32 	%r1076, %r1073, %r85, %p89;
	selp.b32 	%r1077, %r935, %r1076, %p90;
	sub.s32 	%r119, %r1077, %r935;
	and.pred  	%p12, %p36, %p79;
	not.pred 	%p92, %p12;
	mov.f32 	%f431, %f1;
	@%p92 bra 	$L__BB0_43;

	@%p9 bra 	$L__BB0_42;
	bra.uni 	$L__BB0_41;

$L__BB0_42:
	add.s32 	%r1080, %r109, %r102;
	mad.lo.s32 	%r1081, %r1080, %r54, %r116;
	mul.wide.s32 	%rd84, %r1081, 4;
	add.s64 	%rd85, %rd5, %rd84;
	ld.global.f32 	%f431, [%rd85];
	bra.uni 	$L__BB0_43;

$L__BB0_41:
	add.s32 	%r1078, %r110, %r103;
	mad.lo.s32 	%r1079, %r1078, %r54, %r117;
	mul.wide.s32 	%rd82, %r1079, 4;
	add.s64 	%rd83, %rd5, %rd82;
	ld.global.f32 	%f431, [%rd83];

$L__BB0_43:
	and.pred  	%p13, %p36, %p10;
	not.pred 	%p94, %p13;
	mov.f32 	%f432, %f1;
	@%p94 bra 	$L__BB0_47;

	@%p11 bra 	$L__BB0_46;
	bra.uni 	$L__BB0_45;

$L__BB0_46:
	add.s32 	%r1084, %r109, %r102;
	mad.lo.s32 	%r1085, %r1084, %r54, %r118;
	mul.wide.s32 	%rd88, %r1085, 4;
	add.s64 	%rd89, %rd5, %rd88;
	ld.global.f32 	%f432, [%rd89];
	bra.uni 	$L__BB0_47;

$L__BB0_45:
	add.s32 	%r1082, %r110, %r103;
	mad.lo.s32 	%r1083, %r1082, %r54, %r119;
	mul.wide.s32 	%rd86, %r1083, 4;
	add.s64 	%rd87, %rd5, %rd86;
	ld.global.f32 	%f432, [%rd87];

$L__BB0_47:
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f431;
  cvt.rn.f16.f32 high, %f432;
  mov.b32 %r1086, {low,high};}

	// end inline asm
	add.s32 	%r1087, %r114, %r93;
	shl.b32 	%r1088, %r1087, 2;
	add.s32 	%r1089, %r92, %r1088;
	mul.wide.s32 	%rd90, %r1089, 4;
	add.s64 	%rd91, %rd6, %rd90;
	st.global.u32 	[%rd91], %r1086;
	mov.f32 	%f433, %f1;
	@%p92 bra 	$L__BB0_51;

	@%p9 bra 	$L__BB0_50;
	bra.uni 	$L__BB0_49;

$L__BB0_50:
	add.s32 	%r1092, %r109, %r104;
	mad.lo.s32 	%r1093, %r1092, %r54, %r116;
	mul.wide.s32 	%rd94, %r1093, 4;
	add.s64 	%rd95, %rd5, %rd94;
	ld.global.f32 	%f433, [%rd95];
	bra.uni 	$L__BB0_51;

$L__BB0_49:
	add.s32 	%r1090, %r110, %r105;
	mad.lo.s32 	%r1091, %r1090, %r54, %r117;
	mul.wide.s32 	%rd92, %r1091, 4;
	add.s64 	%rd93, %rd5, %rd92;
	ld.global.f32 	%f433, [%rd93];

$L__BB0_51:
	mov.f32 	%f434, %f1;
	@%p94 bra 	$L__BB0_55;

	@%p11 bra 	$L__BB0_54;
	bra.uni 	$L__BB0_53;

$L__BB0_54:
	add.s32 	%r1096, %r109, %r104;
	mad.lo.s32 	%r1097, %r1096, %r54, %r118;
	mul.wide.s32 	%rd98, %r1097, 4;
	add.s64 	%rd99, %rd5, %rd98;
	ld.global.f32 	%f434, [%rd99];
	bra.uni 	$L__BB0_55;

$L__BB0_53:
	add.s32 	%r1094, %r110, %r105;
	mad.lo.s32 	%r1095, %r1094, %r54, %r119;
	mul.wide.s32 	%rd96, %r1095, 4;
	add.s64 	%rd97, %rd5, %rd96;
	ld.global.f32 	%f434, [%rd97];

$L__BB0_55:
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f433;
  cvt.rn.f16.f32 high, %f434;
  mov.b32 %r1098, {low,high};}

	// end inline asm
	add.s32 	%r1099, %r91, %r113;
	mul.wide.s32 	%rd100, %r1099, 4;
	add.s64 	%rd101, %rd6, %rd100;
	st.global.u32 	[%rd101], %r1098;
	mov.f32 	%f435, %f1;
	@%p92 bra 	$L__BB0_59;

	@%p9 bra 	$L__BB0_58;
	bra.uni 	$L__BB0_57;

$L__BB0_58:
	add.s32 	%r1102, %r109, %r106;
	mad.lo.s32 	%r1103, %r1102, %r54, %r116;
	mul.wide.s32 	%rd104, %r1103, 4;
	add.s64 	%rd105, %rd5, %rd104;
	ld.global.f32 	%f435, [%rd105];
	bra.uni 	$L__BB0_59;

$L__BB0_57:
	add.s32 	%r1100, %r110, %r107;
	mad.lo.s32 	%r1101, %r1100, %r54, %r117;
	mul.wide.s32 	%rd102, %r1101, 4;
	add.s64 	%rd103, %rd5, %rd102;
	ld.global.f32 	%f435, [%rd103];

$L__BB0_59:
	mov.f32 	%f436, %f1;
	@%p94 bra 	$L__BB0_63;

	@%p11 bra 	$L__BB0_62;
	bra.uni 	$L__BB0_61;

$L__BB0_62:
	add.s32 	%r1106, %r109, %r106;
	mad.lo.s32 	%r1107, %r1106, %r54, %r118;
	mul.wide.s32 	%rd108, %r1107, 4;
	add.s64 	%rd109, %rd5, %rd108;
	ld.global.f32 	%f436, [%rd109];
	bra.uni 	$L__BB0_63;

$L__BB0_61:
	add.s32 	%r1104, %r110, %r107;
	mad.lo.s32 	%r1105, %r1104, %r54, %r119;
	mul.wide.s32 	%rd106, %r1105, 4;
	add.s64 	%rd107, %rd5, %rd106;
	ld.global.f32 	%f436, [%rd107];

$L__BB0_63:
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f435;
  cvt.rn.f16.f32 high, %f436;
  mov.b32 %r1108, {low,high};}

	// end inline asm
	add.s32 	%r1109, %r115, %r93;
	shl.b32 	%r1110, %r1109, 2;
	add.s32 	%r1111, %r92, %r1110;
	add.s32 	%r1112, %r1111, 2;
	mul.wide.s32 	%rd110, %r1112, 4;
	add.s64 	%rd111, %rd6, %rd110;
	st.global.u32 	[%rd111], %r1108;
	add.s32 	%r2314, %r2314, %r954;
	setp.lt.s32 	%p99, %r2314, %r923;
	@%p99 bra 	$L__BB0_15;

$L__BB0_64:
	add.s32 	%r2313, %r2313, %r949;
	setp.lt.s32 	%p100, %r2313, %r922;
	@%p100 bra 	$L__BB0_13;

$L__BB0_65:
	ld.param.u64 	%rd112, [%rd1+152];
	cvta.to.global.u64 	%rd7, %rd112;
	ld.param.u64 	%rd113, [%rd1+120];
	cvta.to.global.u64 	%rd8, %rd113;
	@%p35 bra 	$L__BB0_149;

	shl.b32 	%r122, %r77, 1;
	mov.u64 	%rd114, _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE;
	mov.u32 	%r2315, %r2348;

$L__BB0_67:
	setp.ge.s32 	%p102, %r122, %r923;
	@%p102 bra 	$L__BB0_148;

	mov.u32 	%r2316, %r122;

$L__BB0_69:
	setp.ne.s32 	%p103, %r45, 0;
	@%p103 bra 	$L__BB0_147;

	shr.u32 	%r1114, %r2316, 31;
	add.s32 	%r1115, %r2316, %r1114;
	shr.s32 	%r1116, %r1115, 1;
	mad.lo.s32 	%r1117, %r1116, %r922, %r2315;
	shl.b32 	%r126, %r1117, 5;
	add.s32 	%r127, %r2316, -2;
	mul.lo.s32 	%r128, %r127, %r922;
	add.s32 	%r1118, %r923, %r127;
	mul.lo.s32 	%r129, %r1118, %r922;
	add.s32 	%r1119, %r1118, %r923;
	mul.lo.s32 	%r130, %r1119, %r922;
	add.s32 	%r131, %r128, %r922;
	add.s32 	%r132, %r2316, -1;
	add.s32 	%r1120, %r923, %r132;
	mul.lo.s32 	%r133, %r1120, %r922;
	add.s32 	%r1121, %r1120, %r923;
	mul.lo.s32 	%r134, %r1121, %r922;
	add.s32 	%r1122, %r923, %r2316;
	mul.lo.s32 	%r135, %r1122, %r922;
	add.s32 	%r1123, %r1122, %r923;
	mul.lo.s32 	%r136, %r1123, %r922;
	mul.lo.s32 	%r137, %r2316, %r922;
	add.s32 	%r138, %r137, %r922;
	add.s32 	%r139, %r2316, 1;
	add.s32 	%r1124, %r923, %r139;
	mul.lo.s32 	%r140, %r1124, %r922;
	add.s32 	%r1125, %r1124, %r923;
	mul.lo.s32 	%r141, %r1125, %r922;
	add.s32 	%r142, %r138, %r922;
	add.s32 	%r143, %r2316, 2;
	add.s32 	%r1126, %r923, %r143;
	mul.lo.s32 	%r144, %r1126, %r922;
	add.s32 	%r1127, %r1126, %r923;
	mul.lo.s32 	%r145, %r1127, %r922;
	mov.u32 	%r2319, 0;
	mov.u64 	%rd570, %rd114;

$L__BB0_71:
	ld.global.nc.u32 	%r1128, [%rd570];
	cvt.rn.f64.s32 	%fd1, %r1128;
	add.f64 	%fd3, %fd1, 0d3FE0000000000000;
	add.s32 	%r147, %r1128, %r2315;
	setp.lt.s32 	%p104, %r147, %r922;
	or.b32  	%r1129, %r127, %r147;
	setp.gt.s32 	%p105, %r1129, -1;
	and.pred  	%p106, %p104, %p105;
	setp.lt.s32 	%p107, %r127, %r923;
	and.pred  	%p14, %p107, %p106;
	cvt.rn.f32.f64 	%f87, %fd3;
	add.f32 	%f88, %f87, 0f3E800000;
	abs.f32 	%f38, %f88;
	add.f32 	%f89, %f38, 0f40200000;
	setp.geu.f32 	%p108, %f89, 0f40000000;
	@%p108 bra 	$L__BB0_76;

	@%p14 bra 	$L__BB0_74;
	bra.uni 	$L__BB0_73;

$L__BB0_74:
	add.s32 	%r1132, %r128, %r147;
	mul.wide.s32 	%rd115, %r1132, 4;
	add.s64 	%rd116, %rd7, %rd115;
	ld.global.f32 	%f92, [%rd116];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f92;
  mov.b32 %r2318, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_75;

$L__BB0_73:
	mov.f32 	%f91, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f91;
  cvt.rn.f16.f32 high, %f91;
  mov.b32 %r2318, {low,high};}

	// end inline asm

$L__BB0_75:
	add.s32 	%r1133, %r2319, %r126;
	mul.wide.s32 	%rd117, %r1133, 4;
	add.s64 	%rd118, %rd8, %rd117;
	st.global.u32 	[%rd118], %r2318;
	add.s32 	%r2319, %r2319, 1;

$L__BB0_76:
	cvt.rn.f32.f64 	%f93, %fd1;
	add.f32 	%f94, %f93, 0f3E800000;
	abs.f32 	%f39, %f94;
	add.f32 	%f40, %f39, 0f40000000;
	setp.geu.f32 	%p109, %f40, 0f40000000;
	@%p109 bra 	$L__BB0_81;

	@%p14 bra 	$L__BB0_79;
	bra.uni 	$L__BB0_78;

$L__BB0_79:
	add.s32 	%r1136, %r129, %r147;
	mul.wide.s32 	%rd119, %r1136, 4;
	add.s64 	%rd120, %rd7, %rd119;
	ld.global.f32 	%f97, [%rd120];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f97;
  mov.b32 %r2320, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_80;

$L__BB0_78:
	mov.f32 	%f96, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f96;
  cvt.rn.f16.f32 high, %f96;
  mov.b32 %r2320, {low,high};}

	// end inline asm

$L__BB0_80:
	add.s32 	%r1137, %r2319, %r126;
	mul.wide.s32 	%rd121, %r1137, 4;
	add.s64 	%rd122, %rd8, %rd121;
	st.global.u32 	[%rd122], %r2320;
	add.s32 	%r2319, %r2319, 1;

$L__BB0_81:
	add.f32 	%f98, %f39, 0f40200000;
	setp.geu.f32 	%p110, %f98, 0f40000000;
	@%p110 bra 	$L__BB0_86;

	@%p14 bra 	$L__BB0_84;
	bra.uni 	$L__BB0_83;

$L__BB0_84:
	add.s32 	%r1140, %r130, %r147;
	mul.wide.s32 	%rd123, %r1140, 4;
	add.s64 	%rd124, %rd7, %rd123;
	ld.global.f32 	%f101, [%rd124];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f101;
  mov.b32 %r2322, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_85;

$L__BB0_83:
	mov.f32 	%f100, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f100;
  cvt.rn.f16.f32 high, %f100;
  mov.b32 %r2322, {low,high};}

	// end inline asm

$L__BB0_85:
	add.s32 	%r1141, %r2319, %r126;
	mul.wide.s32 	%rd125, %r1141, 4;
	add.s64 	%rd126, %rd8, %rd125;
	st.global.u32 	[%rd126], %r2322;
	add.s32 	%r2319, %r2319, 1;

$L__BB0_86:
	or.b32  	%r1142, %r132, %r147;
	setp.gt.s32 	%p111, %r1142, -1;
	and.pred  	%p113, %p104, %p111;
	setp.le.s32 	%p114, %r2316, %r923;
	and.pred  	%p15, %p114, %p113;
	add.f32 	%f41, %f38, 0f3FC00000;
	setp.geu.f32 	%p115, %f41, 0f40000000;
	@%p115 bra 	$L__BB0_91;

	@%p15 bra 	$L__BB0_89;
	bra.uni 	$L__BB0_88;

$L__BB0_89:
	add.s32 	%r1145, %r131, %r147;
	mul.wide.s32 	%rd127, %r1145, 4;
	add.s64 	%rd128, %rd7, %rd127;
	ld.global.f32 	%f104, [%rd128];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f104;
  mov.b32 %r2324, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_90;

$L__BB0_88:
	mov.f32 	%f103, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f103;
  cvt.rn.f16.f32 high, %f103;
  mov.b32 %r2324, {low,high};}

	// end inline asm

$L__BB0_90:
	add.s32 	%r1146, %r2319, %r126;
	mul.wide.s32 	%rd129, %r1146, 4;
	add.s64 	%rd130, %rd8, %rd129;
	st.global.u32 	[%rd130], %r2324;
	add.s32 	%r2319, %r2319, 1;

$L__BB0_91:
	add.f32 	%f42, %f39, 0f3F800000;
	setp.geu.f32 	%p116, %f42, 0f40000000;
	@%p116 bra 	$L__BB0_96;

	@%p15 bra 	$L__BB0_94;
	bra.uni 	$L__BB0_93;

$L__BB0_94:
	add.s32 	%r1149, %r133, %r147;
	mul.wide.s32 	%rd131, %r1149, 4;
	add.s64 	%rd132, %rd7, %rd131;
	ld.global.f32 	%f107, [%rd132];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f107;
  mov.b32 %r2326, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_95;

$L__BB0_93:
	mov.f32 	%f106, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f106;
  cvt.rn.f16.f32 high, %f106;
  mov.b32 %r2326, {low,high};}

	// end inline asm

$L__BB0_95:
	add.s32 	%r1150, %r2319, %r126;
	mul.wide.s32 	%rd133, %r1150, 4;
	add.s64 	%rd134, %rd8, %rd133;
	st.global.u32 	[%rd134], %r2326;
	add.s32 	%r2319, %r2319, 1;

$L__BB0_96:
	add.f32 	%f43, %f39, 0f3FC00000;
	setp.geu.f32 	%p117, %f43, 0f40000000;
	@%p117 bra 	$L__BB0_101;

	@%p15 bra 	$L__BB0_99;
	bra.uni 	$L__BB0_98;

$L__BB0_99:
	add.s32 	%r1153, %r134, %r147;
	mul.wide.s32 	%rd135, %r1153, 4;
	add.s64 	%rd136, %rd7, %rd135;
	ld.global.f32 	%f110, [%rd136];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f110;
  mov.b32 %r2328, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_100;

$L__BB0_98:
	mov.f32 	%f109, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f109;
  cvt.rn.f16.f32 high, %f109;
  mov.b32 %r2328, {low,high};}

	// end inline asm

$L__BB0_100:
	add.s32 	%r1154, %r2319, %r126;
	mul.wide.s32 	%rd137, %r1154, 4;
	add.s64 	%rd138, %rd8, %rd137;
	st.global.u32 	[%rd138], %r2328;
	add.s32 	%r2319, %r2319, 1;

$L__BB0_101:
	or.b32  	%r1155, %r2316, %r147;
	setp.gt.s32 	%p118, %r1155, -1;
	and.pred  	%p120, %p104, %p118;
	setp.lt.s32 	%p121, %r2316, %r923;
	and.pred  	%p16, %p121, %p120;
	add.f32 	%f44, %f38, 0f3F000000;
	setp.geu.f32 	%p122, %f44, 0f40000000;
	@%p122 bra 	$L__BB0_106;

	@%p16 bra 	$L__BB0_104;
	bra.uni 	$L__BB0_103;

$L__BB0_104:
	add.s32 	%r1158, %r137, %r147;
	mul.wide.s32 	%rd139, %r1158, 4;
	add.s64 	%rd140, %rd7, %rd139;
	ld.global.f32 	%f113, [%rd140];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f113;
  mov.b32 %r2330, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_105;

$L__BB0_103:
	mov.f32 	%f112, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f112;
  cvt.rn.f16.f32 high, %f112;
  mov.b32 %r2330, {low,high};}

	// end inline asm

$L__BB0_105:
	add.s32 	%r1159, %r2319, %r126;
	mul.wide.s32 	%rd141, %r1159, 4;
	add.s64 	%rd142, %rd8, %rd141;
	st.global.u32 	[%rd142], %r2330;
	add.s32 	%r2319, %r2319, 1;

$L__BB0_106:
	add.f32 	%f114, %f39, 0f00000000;
	setp.geu.f32 	%p123, %f114, 0f40000000;
	@%p123 bra 	$L__BB0_111;

	@%p16 bra 	$L__BB0_109;
	bra.uni 	$L__BB0_108;

$L__BB0_109:
	add.s32 	%r1162, %r135, %r147;
	mul.wide.s32 	%rd143, %r1162, 4;
	add.s64 	%rd144, %rd7, %rd143;
	ld.global.f32 	%f117, [%rd144];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f117;
  mov.b32 %r2332, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_110;

$L__BB0_108:
	mov.f32 	%f116, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f116;
  cvt.rn.f16.f32 high, %f116;
  mov.b32 %r2332, {low,high};}

	// end inline asm

$L__BB0_110:
	add.s32 	%r1163, %r2319, %r126;
	mul.wide.s32 	%rd145, %r1163, 4;
	add.s64 	%rd146, %rd8, %rd145;
	st.global.u32 	[%rd146], %r2332;
	add.s32 	%r2319, %r2319, 1;

$L__BB0_111:
	add.f32 	%f45, %f39, 0f3F000000;
	setp.geu.f32 	%p124, %f45, 0f40000000;
	@%p124 bra 	$L__BB0_116;

	@%p16 bra 	$L__BB0_114;
	bra.uni 	$L__BB0_113;

$L__BB0_114:
	add.s32 	%r1166, %r136, %r147;
	mul.wide.s32 	%rd147, %r1166, 4;
	add.s64 	%rd148, %rd7, %rd147;
	ld.global.f32 	%f120, [%rd148];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f120;
  mov.b32 %r2334, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_115;

$L__BB0_113:
	mov.f32 	%f119, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f119;
  cvt.rn.f16.f32 high, %f119;
  mov.b32 %r2334, {low,high};}

	// end inline asm

$L__BB0_115:
	add.s32 	%r1167, %r2319, %r126;
	mul.wide.s32 	%rd149, %r1167, 4;
	add.s64 	%rd150, %rd8, %rd149;
	st.global.u32 	[%rd150], %r2334;
	add.s32 	%r2319, %r2319, 1;

$L__BB0_116:
	or.b32  	%r1168, %r139, %r147;
	setp.gt.s32 	%p125, %r1168, -1;
	and.pred  	%p127, %p104, %p125;
	setp.lt.s32 	%p128, %r139, %r923;
	and.pred  	%p17, %p128, %p127;
	@%p122 bra 	$L__BB0_121;

	@%p17 bra 	$L__BB0_119;
	bra.uni 	$L__BB0_118;

$L__BB0_119:
	add.s32 	%r1171, %r138, %r147;
	mul.wide.s32 	%rd151, %r1171, 4;
	add.s64 	%rd152, %rd7, %rd151;
	ld.global.f32 	%f123, [%rd152];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f123;
  mov.b32 %r2336, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_120;

$L__BB0_118:
	mov.f32 	%f122, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f122;
  cvt.rn.f16.f32 high, %f122;
  mov.b32 %r2336, {low,high};}

	// end inline asm

$L__BB0_120:
	add.s32 	%r1172, %r2319, %r126;
	mul.wide.s32 	%rd153, %r1172, 4;
	add.s64 	%rd154, %rd8, %rd153;
	st.global.u32 	[%rd154], %r2336;
	add.s32 	%r2319, %r2319, 1;

$L__BB0_121:
	@%p116 bra 	$L__BB0_126;

	@%p17 bra 	$L__BB0_124;
	bra.uni 	$L__BB0_123;

$L__BB0_124:
	add.s32 	%r1175, %r140, %r147;
	mul.wide.s32 	%rd155, %r1175, 4;
	add.s64 	%rd156, %rd7, %rd155;
	ld.global.f32 	%f126, [%rd156];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f126;
  mov.b32 %r2338, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_125;

$L__BB0_123:
	mov.f32 	%f125, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f125;
  cvt.rn.f16.f32 high, %f125;
  mov.b32 %r2338, {low,high};}

	// end inline asm

$L__BB0_125:
	add.s32 	%r1176, %r2319, %r126;
	mul.wide.s32 	%rd157, %r1176, 4;
	add.s64 	%rd158, %rd8, %rd157;
	st.global.u32 	[%rd158], %r2338;
	add.s32 	%r2319, %r2319, 1;

$L__BB0_126:
	@%p124 bra 	$L__BB0_131;

	@%p17 bra 	$L__BB0_129;
	bra.uni 	$L__BB0_128;

$L__BB0_129:
	add.s32 	%r1179, %r141, %r147;
	mul.wide.s32 	%rd159, %r1179, 4;
	add.s64 	%rd160, %rd7, %rd159;
	ld.global.f32 	%f129, [%rd160];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f129;
  mov.b32 %r2340, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_130;

$L__BB0_128:
	mov.f32 	%f128, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f128;
  cvt.rn.f16.f32 high, %f128;
  mov.b32 %r2340, {low,high};}

	// end inline asm

$L__BB0_130:
	add.s32 	%r1180, %r2319, %r126;
	mul.wide.s32 	%rd161, %r1180, 4;
	add.s64 	%rd162, %rd8, %rd161;
	st.global.u32 	[%rd162], %r2340;
	add.s32 	%r2319, %r2319, 1;

$L__BB0_131:
	or.b32  	%r1181, %r143, %r147;
	setp.gt.s32 	%p132, %r1181, -1;
	and.pred  	%p134, %p104, %p132;
	setp.lt.s32 	%p135, %r143, %r923;
	and.pred  	%p18, %p135, %p134;
	@%p115 bra 	$L__BB0_136;

	@%p18 bra 	$L__BB0_134;
	bra.uni 	$L__BB0_133;

$L__BB0_134:
	add.s32 	%r1184, %r142, %r147;
	mul.wide.s32 	%rd163, %r1184, 4;
	add.s64 	%rd164, %rd7, %rd163;
	ld.global.f32 	%f132, [%rd164];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f132;
  mov.b32 %r2342, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_135;

$L__BB0_133:
	mov.f32 	%f131, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f131;
  cvt.rn.f16.f32 high, %f131;
  mov.b32 %r2342, {low,high};}

	// end inline asm

$L__BB0_135:
	add.s32 	%r1185, %r2319, %r126;
	mul.wide.s32 	%rd165, %r1185, 4;
	add.s64 	%rd166, %rd8, %rd165;
	st.global.u32 	[%rd166], %r2342;
	add.s32 	%r2319, %r2319, 1;

$L__BB0_136:
	@%p109 bra 	$L__BB0_141;

	@%p18 bra 	$L__BB0_139;
	bra.uni 	$L__BB0_138;

$L__BB0_139:
	add.s32 	%r1188, %r144, %r147;
	mul.wide.s32 	%rd167, %r1188, 4;
	add.s64 	%rd168, %rd7, %rd167;
	ld.global.f32 	%f135, [%rd168];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f135;
  mov.b32 %r2344, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_140;

$L__BB0_138:
	mov.f32 	%f134, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f134;
  cvt.rn.f16.f32 high, %f134;
  mov.b32 %r2344, {low,high};}

	// end inline asm

$L__BB0_140:
	add.s32 	%r1189, %r2319, %r126;
	mul.wide.s32 	%rd169, %r1189, 4;
	add.s64 	%rd170, %rd8, %rd169;
	st.global.u32 	[%rd170], %r2344;
	add.s32 	%r2319, %r2319, 1;

$L__BB0_141:
	@%p117 bra 	$L__BB0_146;

	@%p18 bra 	$L__BB0_144;
	bra.uni 	$L__BB0_143;

$L__BB0_144:
	add.s32 	%r1192, %r145, %r147;
	mul.wide.s32 	%rd171, %r1192, 4;
	add.s64 	%rd172, %rd7, %rd171;
	ld.global.f32 	%f138, [%rd172];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f138;
  mov.b32 %r2346, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_145;

$L__BB0_143:
	mov.f32 	%f137, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f137;
  cvt.rn.f16.f32 high, %f137;
  mov.b32 %r2346, {low,high};}

	// end inline asm

$L__BB0_145:
	add.s32 	%r1193, %r2319, %r126;
	mul.wide.s32 	%rd173, %r1193, 4;
	add.s64 	%rd174, %rd8, %rd173;
	st.global.u32 	[%rd174], %r2346;
	add.s32 	%r2319, %r2319, 1;

$L__BB0_146:
	add.s64 	%rd570, %rd570, 4;
	mov.u64 	%rd175, _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE;
	add.s64 	%rd176, %rd175, 24;
	setp.ne.s64 	%p139, %rd570, %rd176;
	@%p139 bra 	$L__BB0_71;

$L__BB0_147:
	add.s32 	%r2316, %r2316, %r47;
	setp.lt.s32 	%p140, %r2316, %r923;
	@%p140 bra 	$L__BB0_69;

$L__BB0_148:
	add.s32 	%r2315, %r2315, %r949;
	setp.lt.s32 	%p141, %r2315, %r922;
	@%p141 bra 	$L__BB0_67;

$L__BB0_149:
	setp.eq.s32 	%p142, %r926, 1;
	ld.param.u64 	%rd177, [%rd1+160];
	cvta.to.global.u64 	%rd11, %rd177;
	ld.param.u64 	%rd178, [%rd1+128];
	cvta.to.global.u64 	%rd12, %rd178;
	@%p142 bra 	$L__BB0_167;
	bra.uni 	$L__BB0_150;

$L__BB0_167:
	@%p35 bra 	$L__BB0_296;

	shl.b32 	%r251, %r77, 1;
	shr.u32 	%r1241, %r927, 31;
	add.s32 	%r1242, %r927, %r1241;
	shr.u32 	%r1243, %r1242, 1;
	and.b32  	%r252, %r1243, 1;
	mov.u64 	%rd198, _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE;

$L__BB0_169:
	setp.ge.s32 	%p152, %r251, %r923;
	@%p152 bra 	$L__BB0_295;

	mov.u32 	%r2354, %r251;

$L__BB0_171:
	setp.ne.s32 	%p153, %r45, 0;
	@%p153 bra 	$L__BB0_294;

	shr.u32 	%r1245, %r2354, 31;
	add.s32 	%r1246, %r2354, %r1245;
	shr.s32 	%r1247, %r1246, 1;
	mad.lo.s32 	%r1248, %r1247, %r922, %r2348;
	shl.b32 	%r256, %r1248, 5;
	add.s32 	%r257, %r2354, -2;
	mul.lo.s32 	%r258, %r257, %r922;
	add.s32 	%r1249, %r923, %r257;
	mul.lo.s32 	%r259, %r1249, %r922;
	add.s32 	%r260, %r258, %r922;
	add.s32 	%r261, %r2354, -1;
	add.s32 	%r1250, %r923, %r261;
	mul.lo.s32 	%r262, %r1250, %r922;
	add.s32 	%r1251, %r923, %r2354;
	mul.lo.s32 	%r263, %r1251, %r922;
	mul.lo.s32 	%r264, %r2354, %r922;
	add.s32 	%r265, %r264, %r922;
	add.s32 	%r266, %r2354, 1;
	add.s32 	%r1252, %r923, %r266;
	mul.lo.s32 	%r267, %r1252, %r922;
	add.s32 	%r268, %r265, %r922;
	add.s32 	%r269, %r2354, 2;
	add.s32 	%r1253, %r923, %r269;
	mul.lo.s32 	%r270, %r1253, %r922;
	mov.u32 	%r2358, 0;
	mov.u64 	%rd571, 24;
	mov.u64 	%rd572, %rd198;

$L__BB0_173:
	ld.global.nc.u32 	%r1254, [%rd572];
	cvt.rn.f64.s32 	%fd2, %r1254;
	add.f64 	%fd4, %fd2, 0d3FE0000000000000;
	add.s32 	%r272, %r1254, %r2348;
	setp.lt.s32 	%p154, %r272, %r922;
	or.b32  	%r1255, %r257, %r272;
	setp.gt.s32 	%p155, %r1255, -1;
	and.pred  	%p156, %p154, %p155;
	setp.lt.s32 	%p157, %r257, %r923;
	and.pred  	%p19, %p157, %p156;
	cvt.rn.f32.f64 	%f155, %fd4;
	add.f32 	%f156, %f155, 0f3E800000;
	abs.f32 	%f46, %f156;
	add.f32 	%f157, %f46, 0f40200000;
	setp.geu.f32 	%p158, %f157, 0f40000000;
	@%p158 bra 	$L__BB0_185;

	@%p19 bra 	$L__BB0_176;
	bra.uni 	$L__BB0_175;

$L__BB0_176:
	setp.eq.s32 	%p159, %r252, 0;
	add.s32 	%r1257, %r258, %r272;
	shl.b32 	%r1258, %r1257, 1;
	mul.wide.s32 	%rd199, %r1258, 4;
	add.s64 	%rd200, %rd11, %rd199;
	ld.global.f32 	%f47, [%rd200];
	@%p159 bra 	$L__BB0_178;
	bra.uni 	$L__BB0_177;

$L__BB0_178:
	mov.f32 	%f163, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f47;
  cvt.rn.f16.f32 high, %f163;
  mov.b32 %r2356, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_179;

$L__BB0_175:
	mov.f32 	%f159, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f159;
  cvt.rn.f16.f32 high, %f159;
  mov.b32 %r2356, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_179;

$L__BB0_177:
	mov.f32 	%f160, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f160;
  cvt.rn.f16.f32 high, %f47;
  mov.b32 %r2356, {low,high};}

	// end inline asm

$L__BB0_179:
	add.s32 	%r277, %r2358, %r256;
	mul.wide.s32 	%rd201, %r277, 4;
	add.s64 	%rd202, %rd12, %rd201;
	st.global.u32 	[%rd202], %r2356;
	@%p19 bra 	$L__BB0_181;
	bra.uni 	$L__BB0_180;

$L__BB0_181:
	setp.eq.s32 	%p160, %r252, 0;
	add.s32 	%r1262, %r259, %r272;
	shl.b32 	%r1263, %r1262, 1;
	mul.wide.s32 	%rd203, %r1263, 4;
	add.s64 	%rd204, %rd11, %rd203;
	ld.global.f32 	%f48, [%rd204];
	@%p160 bra 	$L__BB0_183;
	bra.uni 	$L__BB0_182;

$L__BB0_183:
	mov.f32 	%f169, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f48;
  cvt.rn.f16.f32 high, %f169;
  mov.b32 %r2357, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_184;

$L__BB0_180:
	mov.f32 	%f165, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f165;
  cvt.rn.f16.f32 high, %f165;
  mov.b32 %r2357, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_184;

$L__BB0_182:
	mov.f32 	%f166, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f166;
  cvt.rn.f16.f32 high, %f48;
  mov.b32 %r2357, {low,high};}

	// end inline asm

$L__BB0_184:
	add.s32 	%r1266, %r277, 1;
	mul.wide.s32 	%rd205, %r1266, 4;
	add.s64 	%rd206, %rd12, %rd205;
	st.global.u32 	[%rd206], %r2357;
	add.s32 	%r2358, %r2358, 2;

$L__BB0_185:
	cvt.rn.f32.f64 	%f170, %fd2;
	add.f32 	%f171, %f170, 0f3E800000;
	abs.f32 	%f49, %f171;
	add.f32 	%f50, %f49, 0f40000000;
	setp.geu.f32 	%p161, %f50, 0f40000000;
	@%p161 bra 	$L__BB0_197;

	@%p19 bra 	$L__BB0_188;
	bra.uni 	$L__BB0_187;

$L__BB0_188:
	setp.eq.s32 	%p162, %r252, 0;
	add.s32 	%r1268, %r258, %r272;
	shl.b32 	%r1269, %r1268, 1;
	or.b32  	%r1270, %r1269, 1;
	mul.wide.s32 	%rd207, %r1270, 4;
	add.s64 	%rd208, %rd11, %rd207;
	ld.global.f32 	%f51, [%rd208];
	@%p162 bra 	$L__BB0_190;
	bra.uni 	$L__BB0_189;

$L__BB0_190:
	mov.f32 	%f177, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f51;
  cvt.rn.f16.f32 high, %f177;
  mov.b32 %r2359, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_191;

$L__BB0_187:
	mov.f32 	%f173, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f173;
  cvt.rn.f16.f32 high, %f173;
  mov.b32 %r2359, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_191;

$L__BB0_189:
	mov.f32 	%f174, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f174;
  cvt.rn.f16.f32 high, %f51;
  mov.b32 %r2359, {low,high};}

	// end inline asm

$L__BB0_191:
	add.s32 	%r288, %r2358, %r256;
	mul.wide.s32 	%rd209, %r288, 4;
	add.s64 	%rd210, %rd12, %rd209;
	st.global.u32 	[%rd210], %r2359;
	@%p19 bra 	$L__BB0_193;
	bra.uni 	$L__BB0_192;

$L__BB0_193:
	setp.eq.s32 	%p163, %r252, 0;
	add.s32 	%r1274, %r259, %r272;
	shl.b32 	%r1275, %r1274, 1;
	or.b32  	%r1276, %r1275, 1;
	mul.wide.s32 	%rd211, %r1276, 4;
	add.s64 	%rd212, %rd11, %rd211;
	ld.global.f32 	%f52, [%rd212];
	@%p163 bra 	$L__BB0_195;
	bra.uni 	$L__BB0_194;

$L__BB0_195:
	mov.f32 	%f183, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f52;
  cvt.rn.f16.f32 high, %f183;
  mov.b32 %r2360, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_196;

$L__BB0_192:
	mov.f32 	%f179, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f179;
  cvt.rn.f16.f32 high, %f179;
  mov.b32 %r2360, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_196;

$L__BB0_194:
	mov.f32 	%f180, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f180;
  cvt.rn.f16.f32 high, %f52;
  mov.b32 %r2360, {low,high};}

	// end inline asm

$L__BB0_196:
	add.s32 	%r1279, %r288, 1;
	mul.wide.s32 	%rd213, %r1279, 4;
	add.s64 	%rd214, %rd12, %rd213;
	st.global.u32 	[%rd214], %r2360;
	add.s32 	%r2358, %r2358, 2;

$L__BB0_197:
	or.b32  	%r1280, %r261, %r272;
	setp.gt.s32 	%p164, %r1280, -1;
	and.pred  	%p166, %p154, %p164;
	setp.le.s32 	%p167, %r2354, %r923;
	and.pred  	%p20, %p167, %p166;
	add.f32 	%f53, %f46, 0f3FC00000;
	setp.geu.f32 	%p168, %f53, 0f40000000;
	@%p168 bra 	$L__BB0_209;

	@%p20 bra 	$L__BB0_200;
	bra.uni 	$L__BB0_199;

$L__BB0_200:
	setp.eq.s32 	%p169, %r252, 0;
	add.s32 	%r1282, %r260, %r272;
	shl.b32 	%r1283, %r1282, 1;
	mul.wide.s32 	%rd215, %r1283, 4;
	add.s64 	%rd216, %rd11, %rd215;
	ld.global.f32 	%f54, [%rd216];
	@%p169 bra 	$L__BB0_202;
	bra.uni 	$L__BB0_201;

$L__BB0_202:
	mov.f32 	%f189, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f54;
  cvt.rn.f16.f32 high, %f189;
  mov.b32 %r2362, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_203;

$L__BB0_199:
	mov.f32 	%f185, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f185;
  cvt.rn.f16.f32 high, %f185;
  mov.b32 %r2362, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_203;

$L__BB0_201:
	mov.f32 	%f186, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f186;
  cvt.rn.f16.f32 high, %f54;
  mov.b32 %r2362, {low,high};}

	// end inline asm

$L__BB0_203:
	add.s32 	%r299, %r2358, %r256;
	mul.wide.s32 	%rd217, %r299, 4;
	add.s64 	%rd218, %rd12, %rd217;
	st.global.u32 	[%rd218], %r2362;
	@%p20 bra 	$L__BB0_205;
	bra.uni 	$L__BB0_204;

$L__BB0_205:
	setp.eq.s32 	%p170, %r252, 0;
	add.s32 	%r1287, %r262, %r272;
	shl.b32 	%r1288, %r1287, 1;
	mul.wide.s32 	%rd219, %r1288, 4;
	add.s64 	%rd220, %rd11, %rd219;
	ld.global.f32 	%f55, [%rd220];
	@%p170 bra 	$L__BB0_207;
	bra.uni 	$L__BB0_206;

$L__BB0_207:
	mov.f32 	%f195, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f55;
  cvt.rn.f16.f32 high, %f195;
  mov.b32 %r2363, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_208;

$L__BB0_204:
	mov.f32 	%f191, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f191;
  cvt.rn.f16.f32 high, %f191;
  mov.b32 %r2363, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_208;

$L__BB0_206:
	mov.f32 	%f192, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f192;
  cvt.rn.f16.f32 high, %f55;
  mov.b32 %r2363, {low,high};}

	// end inline asm

$L__BB0_208:
	add.s32 	%r1291, %r299, 1;
	mul.wide.s32 	%rd221, %r1291, 4;
	add.s64 	%rd222, %rd12, %rd221;
	st.global.u32 	[%rd222], %r2363;
	add.s32 	%r2358, %r2358, 2;

$L__BB0_209:
	add.f32 	%f56, %f49, 0f3F800000;
	setp.geu.f32 	%p171, %f56, 0f40000000;
	@%p171 bra 	$L__BB0_221;

	@%p20 bra 	$L__BB0_212;
	bra.uni 	$L__BB0_211;

$L__BB0_212:
	setp.eq.s32 	%p172, %r252, 0;
	add.s32 	%r1293, %r260, %r272;
	shl.b32 	%r1294, %r1293, 1;
	or.b32  	%r1295, %r1294, 1;
	mul.wide.s32 	%rd223, %r1295, 4;
	add.s64 	%rd224, %rd11, %rd223;
	ld.global.f32 	%f57, [%rd224];
	@%p172 bra 	$L__BB0_214;
	bra.uni 	$L__BB0_213;

$L__BB0_214:
	mov.f32 	%f201, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f57;
  cvt.rn.f16.f32 high, %f201;
  mov.b32 %r2365, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_215;

$L__BB0_211:
	mov.f32 	%f197, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f197;
  cvt.rn.f16.f32 high, %f197;
  mov.b32 %r2365, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_215;

$L__BB0_213:
	mov.f32 	%f198, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f198;
  cvt.rn.f16.f32 high, %f57;
  mov.b32 %r2365, {low,high};}

	// end inline asm

$L__BB0_215:
	add.s32 	%r310, %r2358, %r256;
	mul.wide.s32 	%rd225, %r310, 4;
	add.s64 	%rd226, %rd12, %rd225;
	st.global.u32 	[%rd226], %r2365;
	@%p20 bra 	$L__BB0_217;
	bra.uni 	$L__BB0_216;

$L__BB0_217:
	setp.eq.s32 	%p173, %r252, 0;
	add.s32 	%r1299, %r262, %r272;
	shl.b32 	%r1300, %r1299, 1;
	or.b32  	%r1301, %r1300, 1;
	mul.wide.s32 	%rd227, %r1301, 4;
	add.s64 	%rd228, %rd11, %rd227;
	ld.global.f32 	%f58, [%rd228];
	@%p173 bra 	$L__BB0_219;
	bra.uni 	$L__BB0_218;

$L__BB0_219:
	mov.f32 	%f207, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f58;
  cvt.rn.f16.f32 high, %f207;
  mov.b32 %r2366, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_220;

$L__BB0_216:
	mov.f32 	%f203, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f203;
  cvt.rn.f16.f32 high, %f203;
  mov.b32 %r2366, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_220;

$L__BB0_218:
	mov.f32 	%f204, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f204;
  cvt.rn.f16.f32 high, %f58;
  mov.b32 %r2366, {low,high};}

	// end inline asm

$L__BB0_220:
	add.s32 	%r1304, %r310, 1;
	mul.wide.s32 	%rd229, %r1304, 4;
	add.s64 	%rd230, %rd12, %rd229;
	st.global.u32 	[%rd230], %r2366;
	add.s32 	%r2358, %r2358, 2;

$L__BB0_221:
	or.b32  	%r1305, %r2354, %r272;
	setp.gt.s32 	%p174, %r1305, -1;
	and.pred  	%p176, %p154, %p174;
	setp.lt.s32 	%p177, %r2354, %r923;
	and.pred  	%p21, %p177, %p176;
	add.f32 	%f59, %f46, 0f3F000000;
	setp.geu.f32 	%p178, %f59, 0f40000000;
	@%p178 bra 	$L__BB0_233;

	@%p21 bra 	$L__BB0_224;
	bra.uni 	$L__BB0_223;

$L__BB0_224:
	setp.eq.s32 	%p179, %r252, 0;
	add.s32 	%r1307, %r264, %r272;
	shl.b32 	%r1308, %r1307, 1;
	mul.wide.s32 	%rd231, %r1308, 4;
	add.s64 	%rd232, %rd11, %rd231;
	ld.global.f32 	%f60, [%rd232];
	@%p179 bra 	$L__BB0_226;
	bra.uni 	$L__BB0_225;

$L__BB0_226:
	mov.f32 	%f213, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f60;
  cvt.rn.f16.f32 high, %f213;
  mov.b32 %r2368, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_227;

$L__BB0_223:
	mov.f32 	%f209, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f209;
  cvt.rn.f16.f32 high, %f209;
  mov.b32 %r2368, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_227;

$L__BB0_225:
	mov.f32 	%f210, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f210;
  cvt.rn.f16.f32 high, %f60;
  mov.b32 %r2368, {low,high};}

	// end inline asm

$L__BB0_227:
	add.s32 	%r321, %r2358, %r256;
	mul.wide.s32 	%rd233, %r321, 4;
	add.s64 	%rd234, %rd12, %rd233;
	st.global.u32 	[%rd234], %r2368;
	@%p21 bra 	$L__BB0_229;
	bra.uni 	$L__BB0_228;

$L__BB0_229:
	setp.eq.s32 	%p180, %r252, 0;
	add.s32 	%r1312, %r263, %r272;
	shl.b32 	%r1313, %r1312, 1;
	mul.wide.s32 	%rd235, %r1313, 4;
	add.s64 	%rd236, %rd11, %rd235;
	ld.global.f32 	%f61, [%rd236];
	@%p180 bra 	$L__BB0_231;
	bra.uni 	$L__BB0_230;

$L__BB0_231:
	mov.f32 	%f219, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f61;
  cvt.rn.f16.f32 high, %f219;
  mov.b32 %r2369, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_232;

$L__BB0_228:
	mov.f32 	%f215, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f215;
  cvt.rn.f16.f32 high, %f215;
  mov.b32 %r2369, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_232;

$L__BB0_230:
	mov.f32 	%f216, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f216;
  cvt.rn.f16.f32 high, %f61;
  mov.b32 %r2369, {low,high};}

	// end inline asm

$L__BB0_232:
	add.s32 	%r1316, %r321, 1;
	mul.wide.s32 	%rd237, %r1316, 4;
	add.s64 	%rd238, %rd12, %rd237;
	st.global.u32 	[%rd238], %r2369;
	add.s32 	%r2358, %r2358, 2;

$L__BB0_233:
	add.f32 	%f220, %f49, 0f00000000;
	setp.geu.f32 	%p181, %f220, 0f40000000;
	@%p181 bra 	$L__BB0_245;

	@%p21 bra 	$L__BB0_236;
	bra.uni 	$L__BB0_235;

$L__BB0_236:
	setp.eq.s32 	%p182, %r252, 0;
	add.s32 	%r1318, %r264, %r272;
	shl.b32 	%r1319, %r1318, 1;
	or.b32  	%r1320, %r1319, 1;
	mul.wide.s32 	%rd239, %r1320, 4;
	add.s64 	%rd240, %rd11, %rd239;
	ld.global.f32 	%f62, [%rd240];
	@%p182 bra 	$L__BB0_238;
	bra.uni 	$L__BB0_237;

$L__BB0_238:
	mov.f32 	%f226, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f62;
  cvt.rn.f16.f32 high, %f226;
  mov.b32 %r2371, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_239;

$L__BB0_235:
	mov.f32 	%f222, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f222;
  cvt.rn.f16.f32 high, %f222;
  mov.b32 %r2371, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_239;

$L__BB0_237:
	mov.f32 	%f223, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f223;
  cvt.rn.f16.f32 high, %f62;
  mov.b32 %r2371, {low,high};}

	// end inline asm

$L__BB0_239:
	add.s32 	%r332, %r2358, %r256;
	mul.wide.s32 	%rd241, %r332, 4;
	add.s64 	%rd242, %rd12, %rd241;
	st.global.u32 	[%rd242], %r2371;
	@%p21 bra 	$L__BB0_241;
	bra.uni 	$L__BB0_240;

$L__BB0_241:
	setp.eq.s32 	%p183, %r252, 0;
	add.s32 	%r1324, %r263, %r272;
	shl.b32 	%r1325, %r1324, 1;
	or.b32  	%r1326, %r1325, 1;
	mul.wide.s32 	%rd243, %r1326, 4;
	add.s64 	%rd244, %rd11, %rd243;
	ld.global.f32 	%f63, [%rd244];
	@%p183 bra 	$L__BB0_243;
	bra.uni 	$L__BB0_242;

$L__BB0_243:
	mov.f32 	%f232, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f63;
  cvt.rn.f16.f32 high, %f232;
  mov.b32 %r2372, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_244;

$L__BB0_240:
	mov.f32 	%f228, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f228;
  cvt.rn.f16.f32 high, %f228;
  mov.b32 %r2372, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_244;

$L__BB0_242:
	mov.f32 	%f229, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f229;
  cvt.rn.f16.f32 high, %f63;
  mov.b32 %r2372, {low,high};}

	// end inline asm

$L__BB0_244:
	add.s32 	%r1329, %r332, 1;
	mul.wide.s32 	%rd245, %r1329, 4;
	add.s64 	%rd246, %rd12, %rd245;
	st.global.u32 	[%rd246], %r2372;
	add.s32 	%r2358, %r2358, 2;

$L__BB0_245:
	or.b32  	%r1330, %r266, %r272;
	setp.gt.s32 	%p184, %r1330, -1;
	and.pred  	%p186, %p154, %p184;
	setp.lt.s32 	%p187, %r266, %r923;
	and.pred  	%p22, %p187, %p186;
	@%p178 bra 	$L__BB0_257;

	@%p22 bra 	$L__BB0_248;
	bra.uni 	$L__BB0_247;

$L__BB0_248:
	setp.eq.s32 	%p189, %r252, 0;
	add.s32 	%r1332, %r265, %r272;
	shl.b32 	%r1333, %r1332, 1;
	mul.wide.s32 	%rd247, %r1333, 4;
	add.s64 	%rd248, %rd11, %rd247;
	ld.global.f32 	%f64, [%rd248];
	@%p189 bra 	$L__BB0_250;
	bra.uni 	$L__BB0_249;

$L__BB0_250:
	mov.f32 	%f238, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f64;
  cvt.rn.f16.f32 high, %f238;
  mov.b32 %r2374, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_251;

$L__BB0_247:
	mov.f32 	%f234, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f234;
  cvt.rn.f16.f32 high, %f234;
  mov.b32 %r2374, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_251;

$L__BB0_249:
	mov.f32 	%f235, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f235;
  cvt.rn.f16.f32 high, %f64;
  mov.b32 %r2374, {low,high};}

	// end inline asm

$L__BB0_251:
	add.s32 	%r343, %r2358, %r256;
	mul.wide.s32 	%rd249, %r343, 4;
	add.s64 	%rd250, %rd12, %rd249;
	st.global.u32 	[%rd250], %r2374;
	@%p22 bra 	$L__BB0_253;
	bra.uni 	$L__BB0_252;

$L__BB0_253:
	setp.eq.s32 	%p190, %r252, 0;
	add.s32 	%r1337, %r267, %r272;
	shl.b32 	%r1338, %r1337, 1;
	mul.wide.s32 	%rd251, %r1338, 4;
	add.s64 	%rd252, %rd11, %rd251;
	ld.global.f32 	%f65, [%rd252];
	@%p190 bra 	$L__BB0_255;
	bra.uni 	$L__BB0_254;

$L__BB0_255:
	mov.f32 	%f244, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f65;
  cvt.rn.f16.f32 high, %f244;
  mov.b32 %r2375, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_256;

$L__BB0_252:
	mov.f32 	%f240, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f240;
  cvt.rn.f16.f32 high, %f240;
  mov.b32 %r2375, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_256;

$L__BB0_254:
	mov.f32 	%f241, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f241;
  cvt.rn.f16.f32 high, %f65;
  mov.b32 %r2375, {low,high};}

	// end inline asm

$L__BB0_256:
	add.s32 	%r1341, %r343, 1;
	mul.wide.s32 	%rd253, %r1341, 4;
	add.s64 	%rd254, %rd12, %rd253;
	st.global.u32 	[%rd254], %r2375;
	add.s32 	%r2358, %r2358, 2;

$L__BB0_257:
	@%p171 bra 	$L__BB0_269;

	@%p22 bra 	$L__BB0_260;
	bra.uni 	$L__BB0_259;

$L__BB0_260:
	setp.eq.s32 	%p192, %r252, 0;
	add.s32 	%r1343, %r265, %r272;
	shl.b32 	%r1344, %r1343, 1;
	or.b32  	%r1345, %r1344, 1;
	mul.wide.s32 	%rd255, %r1345, 4;
	add.s64 	%rd256, %rd11, %rd255;
	ld.global.f32 	%f66, [%rd256];
	@%p192 bra 	$L__BB0_262;
	bra.uni 	$L__BB0_261;

$L__BB0_262:
	mov.f32 	%f250, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f66;
  cvt.rn.f16.f32 high, %f250;
  mov.b32 %r2377, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_263;

$L__BB0_259:
	mov.f32 	%f246, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f246;
  cvt.rn.f16.f32 high, %f246;
  mov.b32 %r2377, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_263;

$L__BB0_261:
	mov.f32 	%f247, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f247;
  cvt.rn.f16.f32 high, %f66;
  mov.b32 %r2377, {low,high};}

	// end inline asm

$L__BB0_263:
	add.s32 	%r354, %r2358, %r256;
	mul.wide.s32 	%rd257, %r354, 4;
	add.s64 	%rd258, %rd12, %rd257;
	st.global.u32 	[%rd258], %r2377;
	@%p22 bra 	$L__BB0_265;
	bra.uni 	$L__BB0_264;

$L__BB0_265:
	setp.eq.s32 	%p193, %r252, 0;
	add.s32 	%r1349, %r267, %r272;
	shl.b32 	%r1350, %r1349, 1;
	or.b32  	%r1351, %r1350, 1;
	mul.wide.s32 	%rd259, %r1351, 4;
	add.s64 	%rd260, %rd11, %rd259;
	ld.global.f32 	%f67, [%rd260];
	@%p193 bra 	$L__BB0_267;
	bra.uni 	$L__BB0_266;

$L__BB0_267:
	mov.f32 	%f256, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f67;
  cvt.rn.f16.f32 high, %f256;
  mov.b32 %r2378, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_268;

$L__BB0_264:
	mov.f32 	%f252, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f252;
  cvt.rn.f16.f32 high, %f252;
  mov.b32 %r2378, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_268;

$L__BB0_266:
	mov.f32 	%f253, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f253;
  cvt.rn.f16.f32 high, %f67;
  mov.b32 %r2378, {low,high};}

	// end inline asm

$L__BB0_268:
	add.s32 	%r1354, %r354, 1;
	mul.wide.s32 	%rd261, %r1354, 4;
	add.s64 	%rd262, %rd12, %rd261;
	st.global.u32 	[%rd262], %r2378;
	add.s32 	%r2358, %r2358, 2;

$L__BB0_269:
	or.b32  	%r1355, %r269, %r272;
	setp.gt.s32 	%p194, %r1355, -1;
	and.pred  	%p196, %p154, %p194;
	setp.lt.s32 	%p197, %r269, %r923;
	and.pred  	%p23, %p197, %p196;
	@%p168 bra 	$L__BB0_281;

	@%p23 bra 	$L__BB0_272;
	bra.uni 	$L__BB0_271;

$L__BB0_272:
	setp.eq.s32 	%p199, %r252, 0;
	add.s32 	%r1357, %r268, %r272;
	shl.b32 	%r1358, %r1357, 1;
	mul.wide.s32 	%rd263, %r1358, 4;
	add.s64 	%rd264, %rd11, %rd263;
	ld.global.f32 	%f68, [%rd264];
	@%p199 bra 	$L__BB0_274;
	bra.uni 	$L__BB0_273;

$L__BB0_274:
	mov.f32 	%f262, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f68;
  cvt.rn.f16.f32 high, %f262;
  mov.b32 %r2380, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_275;

$L__BB0_271:
	mov.f32 	%f258, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f258;
  cvt.rn.f16.f32 high, %f258;
  mov.b32 %r2380, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_275;

$L__BB0_273:
	mov.f32 	%f259, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f259;
  cvt.rn.f16.f32 high, %f68;
  mov.b32 %r2380, {low,high};}

	// end inline asm

$L__BB0_275:
	add.s32 	%r365, %r2358, %r256;
	mul.wide.s32 	%rd265, %r365, 4;
	add.s64 	%rd266, %rd12, %rd265;
	st.global.u32 	[%rd266], %r2380;
	@%p23 bra 	$L__BB0_277;
	bra.uni 	$L__BB0_276;

$L__BB0_277:
	setp.eq.s32 	%p200, %r252, 0;
	add.s32 	%r1362, %r270, %r272;
	shl.b32 	%r1363, %r1362, 1;
	mul.wide.s32 	%rd267, %r1363, 4;
	add.s64 	%rd268, %rd11, %rd267;
	ld.global.f32 	%f69, [%rd268];
	@%p200 bra 	$L__BB0_279;
	bra.uni 	$L__BB0_278;

$L__BB0_279:
	mov.f32 	%f268, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f69;
  cvt.rn.f16.f32 high, %f268;
  mov.b32 %r2381, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_280;

$L__BB0_276:
	mov.f32 	%f264, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f264;
  cvt.rn.f16.f32 high, %f264;
  mov.b32 %r2381, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_280;

$L__BB0_278:
	mov.f32 	%f265, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f265;
  cvt.rn.f16.f32 high, %f69;
  mov.b32 %r2381, {low,high};}

	// end inline asm

$L__BB0_280:
	add.s32 	%r1366, %r365, 1;
	mul.wide.s32 	%rd269, %r1366, 4;
	add.s64 	%rd270, %rd12, %rd269;
	st.global.u32 	[%rd270], %r2381;
	add.s32 	%r2358, %r2358, 2;

$L__BB0_281:
	@%p161 bra 	$L__BB0_293;

	@%p23 bra 	$L__BB0_284;
	bra.uni 	$L__BB0_283;

$L__BB0_284:
	setp.eq.s32 	%p202, %r252, 0;
	add.s32 	%r1368, %r268, %r272;
	shl.b32 	%r1369, %r1368, 1;
	or.b32  	%r1370, %r1369, 1;
	mul.wide.s32 	%rd271, %r1370, 4;
	add.s64 	%rd272, %rd11, %rd271;
	ld.global.f32 	%f70, [%rd272];
	@%p202 bra 	$L__BB0_286;
	bra.uni 	$L__BB0_285;

$L__BB0_286:
	mov.f32 	%f274, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f70;
  cvt.rn.f16.f32 high, %f274;
  mov.b32 %r2383, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_287;

$L__BB0_283:
	mov.f32 	%f270, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f270;
  cvt.rn.f16.f32 high, %f270;
  mov.b32 %r2383, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_287;

$L__BB0_285:
	mov.f32 	%f271, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f271;
  cvt.rn.f16.f32 high, %f70;
  mov.b32 %r2383, {low,high};}

	// end inline asm

$L__BB0_287:
	add.s32 	%r376, %r2358, %r256;
	mul.wide.s32 	%rd273, %r376, 4;
	add.s64 	%rd274, %rd12, %rd273;
	st.global.u32 	[%rd274], %r2383;
	@%p23 bra 	$L__BB0_289;
	bra.uni 	$L__BB0_288;

$L__BB0_289:
	setp.eq.s32 	%p203, %r252, 0;
	add.s32 	%r1374, %r270, %r272;
	shl.b32 	%r1375, %r1374, 1;
	or.b32  	%r1376, %r1375, 1;
	mul.wide.s32 	%rd275, %r1376, 4;
	add.s64 	%rd276, %rd11, %rd275;
	ld.global.f32 	%f71, [%rd276];
	@%p203 bra 	$L__BB0_291;
	bra.uni 	$L__BB0_290;

$L__BB0_291:
	mov.f32 	%f280, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f71;
  cvt.rn.f16.f32 high, %f280;
  mov.b32 %r2384, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_292;

$L__BB0_288:
	mov.f32 	%f276, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f276;
  cvt.rn.f16.f32 high, %f276;
  mov.b32 %r2384, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_292;

$L__BB0_290:
	mov.f32 	%f277, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f277;
  cvt.rn.f16.f32 high, %f71;
  mov.b32 %r2384, {low,high};}

	// end inline asm

$L__BB0_292:
	add.s32 	%r1379, %r376, 1;
	mul.wide.s32 	%rd277, %r1379, 4;
	add.s64 	%rd278, %rd12, %rd277;
	st.global.u32 	[%rd278], %r2384;
	add.s32 	%r2358, %r2358, 2;

$L__BB0_293:
	add.s64 	%rd572, %rd572, 4;
	add.s64 	%rd571, %rd571, -4;
	setp.ne.s64 	%p204, %rd571, 0;
	@%p204 bra 	$L__BB0_173;

$L__BB0_294:
	add.s32 	%r2354, %r2354, %r47;
	setp.lt.s32 	%p205, %r2354, %r923;
	@%p205 bra 	$L__BB0_171;

$L__BB0_295:
	add.s32 	%r2348, %r2348, %r949;
	setp.lt.s32 	%p206, %r2348, %r922;
	@%p206 bra 	$L__BB0_169;
	bra.uni 	$L__BB0_296;

$L__BB0_150:
	@%p35 bra 	$L__BB0_296;

	neg.s32 	%r225, %r76;
	mov.u32 	%r1194, 31;
	sub.s32 	%r1195, %r1194, %r45;
	setp.gt.s32 	%p144, %r44, %r45;
	selp.b32 	%r1196, %r45, %r1195, %p144;
	shl.b32 	%r1197, %r1196, 2;
	mov.u32 	%r1198, 2;
	sub.s32 	%r226, %r1197, %r925;
	shl.b32 	%r1199, %r924, 2;
	mov.u32 	%r1200, 128;
	sub.s32 	%r227, %r1200, %r1199;
	sub.s32 	%r1201, %r1198, %r925;
	add.s32 	%r228, %r1201, %r1197;
	add.s32 	%r229, %r922, -1;
	add.s32 	%r230, %r226, 1;
	add.s32 	%r231, %r228, 1;
	rem.s32 	%r1226, %r230, %r227;
	add.s32 	%r1227, %r1226, %r227;
	rem.s32 	%r242, %r1227, %r227;
	rem.s32 	%r1228, %r231, %r227;
	add.s32 	%r1229, %r1228, %r227;
	rem.s32 	%r243, %r1229, %r227;

$L__BB0_152:
	setp.ne.s32 	%p145, %r41, %r225;
	@%p145 bra 	$L__BB0_166;

	shl.b32 	%r233, %r2348, 1;
	rem.s32 	%r1202, %r226, %r227;
	add.s32 	%r1203, %r1202, %r227;
	rem.s32 	%r234, %r1203, %r227;
	rem.s32 	%r1204, %r228, %r227;
	add.s32 	%r1205, %r1204, %r227;
	rem.s32 	%r235, %r1205, %r227;
	@%p144 bra 	$L__BB0_155;
	bra.uni 	$L__BB0_154;

$L__BB0_155:
	mul.lo.s32 	%r1208, %r233, %r227;
	add.s32 	%r1209, %r1208, %r234;
	mul.wide.s32 	%rd179, %r1209, 4;
	add.s64 	%rd180, %rd11, %rd179;
	ld.global.f32 	%f141, [%rd180];
	add.s32 	%r1210, %r1208, %r235;
	mul.wide.s32 	%rd181, %r1210, 4;
	add.s64 	%rd182, %rd11, %rd181;
	ld.global.f32 	%f142, [%rd182];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f141;
  cvt.rn.f16.f32 high, %f142;
  mov.b32 %r2349, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_156;

$L__BB0_154:
	mov.f32 	%f140, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f140;
  cvt.rn.f16.f32 high, %f140;
  mov.b32 %r2349, {low,high};}

	// end inline asm

$L__BB0_156:
	shl.b32 	%r1211, %r2348, 5;
	add.s32 	%r1212, %r1211, %r45;
	shl.b32 	%r1213, %r1212, 2;
	mul.wide.s32 	%rd183, %r1213, 4;
	add.s64 	%rd13, %rd12, %rd183;
	st.global.u32 	[%rd13], %r2349;
	@%p144 bra 	$L__BB0_158;
	bra.uni 	$L__BB0_157;

$L__BB0_158:
	add.s32 	%r1216, %r233, 1;
	mul.lo.s32 	%r1217, %r1216, %r227;
	add.s32 	%r1218, %r1217, %r234;
	mul.wide.s32 	%rd184, %r1218, 4;
	add.s64 	%rd185, %rd11, %rd184;
	ld.global.f32 	%f145, [%rd185];
	add.s32 	%r1219, %r1217, %r235;
	mul.wide.s32 	%rd186, %r1219, 4;
	add.s64 	%rd187, %rd11, %rd186;
	ld.global.f32 	%f146, [%rd187];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f145;
  cvt.rn.f16.f32 high, %f146;
  mov.b32 %r2350, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_159;

$L__BB0_157:
	mov.f32 	%f144, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f144;
  cvt.rn.f16.f32 high, %f144;
  mov.b32 %r2350, {low,high};}

	// end inline asm

$L__BB0_159:
	add.s32 	%r1220, %r229, %r2348;
	rem.s32 	%r1221, %r1220, %r922;
	shl.b32 	%r1222, %r1221, 5;
	add.s32 	%r1223, %r1222, %r45;
	shl.b32 	%r1224, %r1223, 2;
	or.b32  	%r1225, %r1224, 2;
	mul.wide.s32 	%rd188, %r1225, 4;
	add.s64 	%rd14, %rd12, %rd188;
	st.global.u32 	[%rd14], %r2350;
	@%p144 bra 	$L__BB0_161;
	bra.uni 	$L__BB0_160;

$L__BB0_161:
	mul.lo.s32 	%r1232, %r233, %r227;
	add.s32 	%r1233, %r1232, %r242;
	mul.wide.s32 	%rd189, %r1233, 4;
	add.s64 	%rd190, %rd11, %rd189;
	ld.global.f32 	%f149, [%rd190];
	add.s32 	%r1234, %r1232, %r243;
	mul.wide.s32 	%rd191, %r1234, 4;
	add.s64 	%rd192, %rd11, %rd191;
	ld.global.f32 	%f150, [%rd192];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f149;
  cvt.rn.f16.f32 high, %f150;
  mov.b32 %r2351, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_162;

$L__BB0_160:
	mov.f32 	%f148, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f148;
  cvt.rn.f16.f32 high, %f148;
  mov.b32 %r2351, {low,high};}

	// end inline asm

$L__BB0_162:
	st.global.u32 	[%rd13+4], %r2351;
	@%p144 bra 	$L__BB0_164;
	bra.uni 	$L__BB0_163;

$L__BB0_164:
	add.s32 	%r1237, %r233, 1;
	mul.lo.s32 	%r1238, %r1237, %r227;
	add.s32 	%r1239, %r1238, %r242;
	mul.wide.s32 	%rd193, %r1239, 4;
	add.s64 	%rd194, %rd11, %rd193;
	ld.global.f32 	%f153, [%rd194];
	add.s32 	%r1240, %r1238, %r243;
	mul.wide.s32 	%rd195, %r1240, 4;
	add.s64 	%rd196, %rd11, %rd195;
	ld.global.f32 	%f154, [%rd196];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f153;
  cvt.rn.f16.f32 high, %f154;
  mov.b32 %r2352, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_165;

$L__BB0_163:
	mov.f32 	%f152, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f152;
  cvt.rn.f16.f32 high, %f152;
  mov.b32 %r2352, {low,high};}

	// end inline asm

$L__BB0_165:
	st.global.u32 	[%rd14+4], %r2352;

$L__BB0_166:
	add.s32 	%r2348, %r2348, %r949;
	setp.lt.s32 	%p150, %r2348, %r922;
	@%p150 bra 	$L__BB0_152;

$L__BB0_296:
	add.s32 	%r1381, %r917, -1;
	mad.lo.s32 	%r1382, %r918, 576, 128;
	mul.lo.s32 	%r1383, %r1382, %r1381;
	add.s32 	%r1384, %r66, -64;
	add.s32 	%r1385, %r1384, %r66;
	add.s32 	%r1386, %r918, -1;
	mad.lo.s32 	%r1387, %r1385, %r1386, %r1383;
	mul.lo.s32 	%r1388, %r1381, %r918;
	mul.lo.s32 	%r1389, %r1388, 320;
	mad.lo.s32 	%r1390, %r1384, %r1386, %r1389;
	add.s32 	%r385, %r1390, %r1387;
	setp.lt.s32 	%p207, %r385, 1;
	mov.f32 	%f282, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f282;
  cvt.rn.f16.f32 high, %f282;
  mov.b32 %r2387, {low,high};}

	// end inline asm
	@%p207 bra 	$L__BB0_299;

	mov.u32 	%r2388, 0;
	mov.u32 	%r2386, _ZN6kernel5shmemE;

$L__BB0_298:
	st.shared.u32 	[%r2386], %r2387;
	mov.f32 	%f290, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f290;
  cvt.rn.f16.f32 high, %f290;
  mov.b32 %r1393, {low,high};}

	// end inline asm
	st.shared.u32 	[%r2386+4], %r1393;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f290;
  cvt.rn.f16.f32 high, %f290;
  mov.b32 %r1394, {low,high};}

	// end inline asm
	st.shared.u32 	[%r2386+8], %r1394;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f290;
  cvt.rn.f16.f32 high, %f290;
  mov.b32 %r1395, {low,high};}

	// end inline asm
	st.shared.u32 	[%r2386+12], %r1395;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f290;
  cvt.rn.f16.f32 high, %f290;
  mov.b32 %r2387, {low,high};}

	// end inline asm
	add.s32 	%r2386, %r2386, 16;
	add.s32 	%r2388, %r2388, 4;
	setp.lt.s32 	%p208, %r2388, %r385;
	@%p208 bra 	$L__BB0_298;

$L__BB0_299:
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f282;
  cvt.rn.f16.f32 high, %f282;
  mov.b32 %r1398, {low,high};}

	// end inline asm
	mov.u32 	%r1399, 31;
	sub.s32 	%r1400, %r1399, %r45;
	setp.gt.s32 	%p210, %r44, %r45;
	selp.b32 	%r1401, %r45, %r1400, %p210;
	shl.b32 	%r1402, %r1401, 2;
	sub.s32 	%r394, %r1402, %r925;
	shl.b32 	%r1403, %r924, 2;
	mov.u32 	%r1404, 128;
	sub.s32 	%r395, %r1404, %r1403;
	rem.s32 	%r1405, %r394, %r395;
	add.s32 	%r1406, %r1405, %r395;
	rem.s32 	%r396, %r1406, %r395;
	add.s32 	%r1407, %r394, 2;
	rem.s32 	%r1408, %r1407, %r395;
	add.s32 	%r1409, %r1408, %r395;
	rem.s32 	%r397, %r1409, %r395;
	add.s32 	%r1420, %r394, 1;
	rem.s32 	%r1421, %r1420, %r395;
	add.s32 	%r1422, %r1421, %r395;
	rem.s32 	%r398, %r1422, %r395;
	add.s32 	%r1423, %r394, 3;
	rem.s32 	%r1424, %r1423, %r395;
	add.s32 	%r1425, %r1424, %r395;
	rem.s32 	%r399, %r1425, %r395;
	// begin inline asm
	mov.u32 %r1436, %envreg2;
	// end inline asm
	cvt.u64.u32 	%rd284, %r1436;
	// begin inline asm
	mov.u32 %r1437, %envreg1;
	// end inline asm
	cvt.u64.u32 	%rd285, %r1437;
	bfi.b64 	%rd24, %rd285, %rd284, 32, 32;
	setp.ne.s64 	%p218, %rd24, 0;
	@%p218 bra 	$L__BB0_317;

	// begin inline asm
	trap;
	// end inline asm

$L__BB0_317:
	add.s64 	%rd25, %rd24, 4;
	mov.u32 	%r1438, %nctaid.y;
	mov.u32 	%r1439, %nctaid.x;
	mul.lo.s32 	%r1440, %r1439, %r1438;
	mov.u32 	%r1441, %nctaid.z;
	mul.lo.s32 	%r400, %r1440, %r1441;
	neg.s32 	%r1442, %r41;
	add.s32 	%r1443, %r45, %r40;
	setp.ne.s32 	%p219, %r1443, %r1442;
	mov.u32 	%r1444, %ctaid.x;
	add.s32 	%r401, %r1444, %r42;
	neg.s32 	%r402, %r43;
	bar.sync 	0;
	@%p219 bra 	$L__BB0_321;

	setp.eq.s32 	%p220, %r401, %r402;
	mov.u32 	%r1447, -2147483647;
	sub.s32 	%r1448, %r1447, %r400;
	selp.b32 	%r1446, %r1448, 1, %p220;
	membar.gl;
	// begin inline asm
	atom.add.release.gpu.u32 %r1445,[%rd25],%r1446;
	// end inline asm

$L__BB0_319:
	ld.volatile.u32 	%r1449, [%rd25];
	xor.b32  	%r1450, %r1449, %r1445;
	setp.gt.s32 	%p221, %r1450, -1;
	@%p221 bra 	$L__BB0_319;

	// begin inline asm
	ld.acquire.gpu.u32 %r1451,[%rd25];
	// end inline asm

$L__BB0_321:
	bar.sync 	0;
	setp.lt.s32 	%p222, %r48, 1;
	@%p222 bra 	$L__BB0_646;

	setp.lt.s32 	%p223, %r396, %r936;
	setp.ge.s32 	%p224, %r396, %r935;
	and.pred  	%p24, %p223, %p224;
	setp.lt.s32 	%p225, %r398, %r936;
	setp.ge.s32 	%p226, %r398, %r935;
	and.pred  	%p25, %p225, %p226;
	setp.lt.s32 	%p227, %r397, %r936;
	setp.ge.s32 	%p228, %r397, %r935;
	and.pred  	%p26, %p227, %p228;
	setp.lt.s32 	%p229, %r399, %r936;
	setp.ge.s32 	%p230, %r399, %r935;
	and.pred  	%p27, %p229, %p230;
	mov.u32 	%r2517, 0;
	mul.wide.s32 	%rd292, %r45, 16;
	mul.wide.s32 	%rd294, %r45, 8;
	mov.u32 	%r2389, %r1398;
	mov.u32 	%r2390, %r1398;
	mov.u32 	%r2642, %r1398;
	mov.u32 	%r2570, %r1398;
	mov.u32 	%r2393, %r1398;
	mov.u32 	%r2394, %r1398;
	mov.u32 	%r2677, %r1398;
	mov.u32 	%r2544, %r1398;
	mov.u32 	%r2545, %r1398;
	mov.u32 	%r2398, %r1398;
	mov.u32 	%r2572, %r1398;
	mov.u32 	%r2546, %r1398;
	mov.u32 	%r2547, %r1398;
	mov.u32 	%r2402, %r1398;
	mov.u32 	%r2645, %r1398;
	mov.u32 	%r2404, %r1398;
	mov.u32 	%r2405, %r1398;
	mov.u32 	%r2406, %r1398;
	mov.u32 	%r2407, %r1398;
	mov.u32 	%r2639, %r1398;
	mov.u32 	%r2634, %r1398;
	mov.u32 	%r2635, %r1398;
	mov.u32 	%r2411, %r1398;
	mov.u32 	%r2679, %r1398;
	mov.u32 	%r2413, %r1398;
	mov.u32 	%r2414, %r1398;
	mov.u32 	%r2415, %r1398;
	mov.u32 	%r2638, %r1398;
	mov.u32 	%r2636, %r1398;
	mov.u32 	%r2637, %r1398;
	mov.u32 	%r2419, %r1398;
	mov.u32 	%r2560, %r1398;
	mov.u32 	%r2421, %r1398;
	mov.u32 	%r2646, %r1398;
	mov.u32 	%r2550, %r1398;
	mov.u32 	%r2424, %r1398;
	mov.u32 	%r2556, %r1398;
	mov.u32 	%r2426, %r1398;
	mov.u32 	%r2647, %r1398;
	mov.u32 	%r2551, %r1398;
	mov.u32 	%r2429, %r1398;
	mov.u32 	%r2563, %r1398;
	mov.u32 	%r2431, %r1398;
	mov.u32 	%r2432, %r1398;
	mov.u32 	%r2649, %r1398;
	mov.u32 	%r2552, %r1398;
	mov.u32 	%r2553, %r1398;
	mov.u32 	%r2436, %r1398;
	mov.u32 	%r2565, %r1398;
	mov.u32 	%r2438, %r1398;
	mov.u32 	%r2439, %r1398;
	mov.u32 	%r2651, %r1398;
	mov.u32 	%r2566, %r1398;
	mov.u32 	%r2554, %r1398;
	mov.u32 	%r2580, %r1398;
	mov.u32 	%r2444, %r1398;
	mov.u32 	%r2567, %r1398;
	mov.u32 	%r2555, %r1398;
	mov.u32 	%r2582, %r1398;
	mov.u32 	%r2448, %r1398;
	mov.u32 	%r2610, %r1398;
	mov.u32 	%r2450, %r1398;
	mov.u32 	%r2451, %r1398;
	mov.u32 	%r2452, %r1398;
	mov.u32 	%r2611, %r1398;
	mov.u32 	%r2454, %r1398;
	mov.u32 	%r2455, %r1398;
	mov.u32 	%r2456, %r1398;
	mov.u32 	%r2612, %r1398;
	mov.u32 	%r2613, %r1398;
	mov.u32 	%r2459, %r1398;
	mov.u32 	%r2460, %r1398;
	mov.u32 	%r2461, %r1398;
	mov.u32 	%r2462, %r1398;
	mov.u32 	%r2463, %r1398;
	mov.u32 	%r2614, %r1398;
	mov.u32 	%r2615, %r1398;
	mov.u32 	%r2466, %r1398;
	mov.u32 	%r2467, %r1398;
	mov.u32 	%r2468, %r1398;
	mov.u32 	%r2469, %r1398;
	mov.u32 	%r2470, %r1398;
	mov.u32 	%r2471, %r1398;
	mov.u32 	%r2472, %r1398;
	mov.u32 	%r2473, %r1398;
	mov.u32 	%r2474, %r1398;
	mov.u32 	%r2475, %r1398;
	mov.u32 	%r2476, %r1398;
	mov.u32 	%r2619, %r1398;
	mov.u32 	%r2478, %r1398;
	mov.u32 	%r2479, %r1398;
	mov.u32 	%r2480, %r1398;
	mov.u32 	%r2481, %r1398;
	mov.u32 	%r2482, %r1398;
	mov.u32 	%r2621, %r1398;
	mov.u32 	%r2484, %r1398;
	mov.u32 	%r2485, %r1398;
	mov.u32 	%r2486, %r1398;
	mov.u32 	%r2487, %r1398;
	mov.u32 	%r2488, %r1398;
	mov.u32 	%r2622, %r1398;
	mov.u32 	%r2490, %r1398;
	mov.u32 	%r2491, %r1398;
	mov.u32 	%r2492, %r1398;
	mov.u32 	%r2493, %r1398;
	mov.u32 	%r2494, %r1398;
	mov.u32 	%r2495, %r1398;
	mov.u32 	%r2623, %r1398;
	mov.u32 	%r2497, %r1398;
	mov.u32 	%r2498, %r1398;
	mov.u32 	%r2499, %r1398;
	mov.u32 	%r2500, %r1398;
	mov.u32 	%r2501, %r1398;
	mov.u32 	%r2502, %r1398;
	mov.u32 	%r2503, %r1398;
	mov.u32 	%r2504, %r1398;
	mov.u32 	%r2505, %r1398;
	mov.u32 	%r2506, %r1398;
	mov.u32 	%r2507, %r1398;
	mov.u32 	%r2508, %r1398;
	mov.u32 	%r2509, %r1398;
	mov.u32 	%r2510, %r1398;
	mov.u32 	%r2511, %r1398;
	mov.u32 	%r2512, %r1398;
	mov.u32 	%r2513, %r1398;
	mov.u32 	%r2514, %r1398;
	mov.u32 	%r2515, %r1398;
	mov.u32 	%r2516, %r1398;

$L__BB0_323:
	mov.u32 	%r515, %r2500;
	mov.u32 	%r514, %r2499;
	mov.u32 	%r511, %r2623;
	mov.u32 	%r510, %r2495;
	mov.u32 	%r508, %r2493;
	mov.u32 	%r507, %r2492;
	mov.u32 	%r504, %r2622;
	mov.u32 	%r503, %r2488;
	mov.u32 	%r501, %r2486;
	mov.u32 	%r498, %r2621;
	mov.u32 	%r495, %r2480;
	mov.u32 	%r492, %r2619;
	mov.u32 	%r2499, %r2470;
	mov.u32 	%r484, %r2469;
	mov.u32 	%r481, %r2466;
	mov.u32 	%r2495, %r2615;
	mov.u32 	%r479, %r2614;
	mov.u32 	%r2492, %r2463;
	mov.u32 	%r477, %r2462;
	mov.u32 	%r474, %r2459;
	mov.u32 	%r2488, %r2613;
	mov.u32 	%r472, %r2612;
	mov.u32 	%r471, %r2456;
	mov.u32 	%r468, %r2611;
	mov.u32 	%r467, %r2452;
	mov.u32 	%r464, %r2610;
	mov.u32 	%r455, %r2651;
	mov.u32 	%r2564, %r2436;
	mov.u32 	%r448, %r2649;
	mov.u32 	%r2562, %r2429;
	mov.u32 	%r2500, %r2647;
	mov.u32 	%r441, %r2426;
	mov.u32 	%r440, %r2556;
	mov.u32 	%r2466, %r2424;
	mov.u32 	%r2493, %r2646;
	mov.u32 	%r436, %r2421;
	mov.u32 	%r435, %r2560;
	mov.u32 	%r2459, %r2419;
	mov.u32 	%r2486, %r2637;
	mov.u32 	%r432, %r2636;
	mov.u32 	%r2456, %r2638;
	mov.u32 	%r429, %r2414;
	mov.u32 	%r2549, %r2413;
	mov.u32 	%r2419, %r2679;
	mov.u32 	%r2560, %r2411;
	mov.u32 	%r2480, %r2635;
	mov.u32 	%r424, %r2634;
	mov.u32 	%r2452, %r2639;
	mov.u32 	%r421, %r2406;
	mov.u32 	%r2548, %r2405;
	mov.u32 	%r2421, %r2404;
	mov.u32 	%r2462, %r2645;
	mov.u32 	%r2463, %r2572;
	mov.u32 	%r2424, %r2677;
	mov.u32 	%r2558, %r2394;
	mov.u32 	%r2557, %r2393;
	mov.u32 	%r2470, %r2570;
	mov.u32 	%r2469, %r2642;
	mov.u32 	%r2426, %r2390;
	mov.u32 	%r2556, %r2389;
	not.b32 	%r1454, %r42;
	add.s32 	%r1455, %r919, %r1454;
	mul.lo.s32 	%r1456, %r1455, %r921;
	add.s32 	%r1457, %r2517, %r1456;
	not.b32 	%r1459, %r43;
	add.s32 	%r1460, %r920, %r1459;
	mul.lo.s32 	%r1461, %r1460, %r921;
	add.s32 	%r1462, %r2517, %r1461;
	rem.s32 	%r533, %r1457, %r65;
	rem.s32 	%r534, %r1462, %r993;
	add.s32 	%r1466, %r1456, %r1461;
	add.s32 	%r1467, %r1466, %r922;
	not.b32 	%r1468, %r40;
	add.s32 	%r1469, %r917, %r1468;
	mad.lo.s32 	%r1470, %r1455, %r917, %r1469;
	not.b32 	%r1471, %r41;
	add.s32 	%r1472, %r918, %r1471;
	mad.lo.s32 	%r1473, %r1460, %r918, %r1472;
	add.s32 	%r1474, %r1470, %r1473;
	shl.b32 	%r1475, %r1474, 1;
	add.s32 	%r1476, %r1467, %r1475;
	add.s32 	%r1477, %r2517, %r1476;
	add.s32 	%r1478, %r2517, %r1466;
	div.s32 	%r1479, %r1477, %r922;
	mul.lo.s32 	%r1480, %r1479, %r922;
	sub.s32 	%r1481, %r47, %r922;
	sub.s32 	%r535, %r1477, %r1480;
	sub.s32 	%r1482, %r1470, %r1473;
	shl.b32 	%r1483, %r1482, 1;
	add.s32 	%r1484, %r1483, %r923;
	mad.lo.s32 	%r1485, %r1479, %r47, %r1484;
	mad.lo.s32 	%r1486, %r1479, %r1481, %r1478;
	div.s32 	%r1487, %r1485, %r923;
	mul.lo.s32 	%r1488, %r1487, %r923;
	sub.s32 	%r1491, %r950, %r923;
	sub.s32 	%r536, %r1485, %r1488;
	mad.lo.s32 	%r537, %r1487, %r1491, %r1486;
	setp.lt.s32 	%p231, %r40, 1;
	mov.u32 	%r2610, %r1398;
	mov.u32 	%r2611, %r1398;
	mov.u32 	%r2616, %r1398;
	mov.u32 	%r2617, %r1398;
	mov.u32 	%r2618, %r1398;
	mov.u32 	%r2619, %r1398;
	mov.u32 	%r2620, %r1398;
	mov.u32 	%r2621, %r1398;
	mov.u32 	%r2628, %r1398;
	mov.u32 	%r2629, %r1398;
	@%p231 bra 	$L__BB0_325;

	mul.lo.s32 	%r1492, %r918, 320;
	add.s32 	%r1493, %r40, -1;
	mul.lo.s32 	%r1494, %r41, 320;
	mad.lo.s32 	%r1495, %r1492, %r1493, %r1494;
	add.s32 	%r1498, %r995, -64;
	mad.lo.s32 	%r1503, %r1498, %r1386, %r1383;
	add.s32 	%r1504, %r1495, %r1503;
	shl.b32 	%r1505, %r1504, 2;
	mov.u32 	%r1506, _ZN6kernel5shmemE;
	add.s32 	%r1507, %r1506, %r1505;
	shl.b32 	%r1508, %r45, 4;
	add.s32 	%r1509, %r1507, %r1508;
	ld.shared.v4.u32 	{%r2621, %r2619, %r2611, %r2610}, [%r1509];
	shl.b32 	%r1514, %r45, 3;
	add.s32 	%r1515, %r1507, %r1514;
	ld.shared.v2.u32 	{%r2620, %r2618}, [%r1515+512];
	ld.shared.v4.u32 	{%r2629, %r2628, %r2617, %r2616}, [%r1509+768];

$L__BB0_325:
	setp.lt.s32 	%p232, %r41, 1;
	mov.u32 	%r2612, %r1398;
	mov.u32 	%r2613, %r1398;
	mov.u32 	%r2614, %r1398;
	mov.u32 	%r2615, %r1398;
	mov.u32 	%r2622, %r1398;
	mov.u32 	%r2623, %r1398;
	mov.u32 	%r2624, %r1398;
	mov.u32 	%r2625, %r1398;
	mov.u32 	%r2626, %r1398;
	mov.u32 	%r2627, %r1398;
	mov.u32 	%r2630, %r1398;
	mov.u32 	%r2631, %r1398;
	@%p232 bra 	$L__BB0_328;

	mad.lo.s32 	%r1527, %r1469, 384, %r1389;
	add.s32 	%r1530, %r41, -1;
	mad.lo.s32 	%r1531, %r1384, %r1530, %r1527;
	add.s32 	%r1537, %r1531, %r1387;
	shl.b32 	%r1538, %r1537, 2;
	mov.u32 	%r1539, _ZN6kernel5shmemE;
	add.s32 	%r1540, %r1539, %r1538;
	shl.b32 	%r1541, %r45, 4;
	add.s32 	%r1542, %r1540, %r1541;
	ld.shared.v4.u32 	{%r2631, %r2630, %r2626, %r2624}, [%r1542];
	shl.b32 	%r1547, %r45, 3;
	add.s32 	%r1548, %r1540, %r1547;
	ld.shared.v2.u32 	{%r2627, %r2625}, [%r1548+512];
	ld.shared.v4.u32 	{%r2623, %r2622, %r2614, %r2612}, [%r1542+768];
	mov.u32 	%r2613, %r1398;
	mov.u32 	%r2615, %r1398;
	@%p231 bra 	$L__BB0_328;

	add.s32 	%r2284, %r1548, 512;
	ld.shared.v2.u32 	{%r2615, %r2613}, [%r2284+768];

$L__BB0_328:
	setp.eq.s32 	%p234, %r40, 0;
	@%p234 bra 	$L__BB0_333;

	setp.eq.s32 	%p235, %r41, %r1386;
	@%p235 bra 	$L__BB0_331;

	sub.s32 	%r1558, %r917, %r40;
	mul.lo.s32 	%r1560, %r66, %r41;
	mad.lo.s32 	%r1561, %r1558, 384, %r1560;
	mad.lo.s32 	%r1564, %r1384, %r1386, %r1561;
	mad.lo.s32 	%r1567, %r1382, %r1381, %r1564;
	shl.b32 	%r1568, %r1567, 2;
	mov.u32 	%r1569, _ZN6kernel5shmemE;
	add.s32 	%r1570, %r1569, %r1568;
	shl.b32 	%r1571, %r45, 4;
	add.s32 	%r1572, %r1570, %r1571;
	ld.shared.v4.u32 	{%r2547, %r2545, %r2555, %r2554}, [%r1572];

$L__BB0_331:
	shl.b32 	%r1577, %r41, 8;
	shl.b32 	%r1581, %r918, 8;
	or.b32  	%r1582, %r1581, 128;
	add.s32 	%r1583, %r40, -1;
	mad.lo.s32 	%r1584, %r1582, %r1583, %r1389;
	add.s32 	%r1585, %r1584, %r1577;
	shl.b32 	%r1586, %r1585, 2;
	mov.u32 	%r1587, _ZN6kernel5shmemE;
	add.s32 	%r1588, %r1587, %r1586;
	setp.ne.s32 	%p236, %r41, %r1386;
	shl.b32 	%r1590, %r45, 4;
	add.s32 	%r591, %r1588, %r1590;
	ld.shared.v4.u32 	{%r2551, %r2553, %r2550, %r2552}, [%r591];
	ld.shared.v4.u32 	{%r2549, %r2548, %r2546, %r2544}, [%r591+512];
	@%p236 bra 	$L__BB0_333;

	ld.shared.v4.u32 	{%r2547, %r2545, %r2555, %r2554}, [%r591+1024];

$L__BB0_333:
	setp.eq.s32 	%p237, %r41, 0;
	@%p237 bra 	$L__BB0_336;

	mul.lo.s32 	%r1604, %r66, %r41;
	sub.s32 	%r1605, %r1604, %r66;
	mad.lo.s32 	%r1608, %r1469, 384, %r1605;
	mad.lo.s32 	%r1611, %r1384, %r1386, %r1608;
	mad.lo.s32 	%r1614, %r1382, %r1381, %r1611;
	shl.b32 	%r1615, %r1614, 2;
	mov.u32 	%r1616, _ZN6kernel5shmemE;
	add.s32 	%r1617, %r1616, %r1615;
	shl.b32 	%r1618, %r45, 4;
	add.s32 	%r1619, %r1617, %r1618;
	ld.shared.v4.u32 	{%r2565, %r2563, %r2558, %r2557}, [%r1619+512];
	ld.shared.v4.u32 	{%r2564, %r2562, %r2556, %r2560}, [%r1619+1024];
	@%p234 bra 	$L__BB0_336;

	add.s32 	%r2285, %r1619, 512;
	ld.shared.v4.u32 	{%r2566, %r2567, %r2424, %r2419}, [%r2285+1024];

$L__BB0_336:
	ld.param.u64 	%rd289, [%rd1+104];
	cvta.to.global.u64 	%rd26, %rd289;
	setp.ne.s32 	%p239, %r40, 0;
	mov.u32 	%r2570, %r2470;
	mov.u32 	%r2632, %r2398;
	mov.u32 	%r2572, %r2463;
	mov.u32 	%r2633, %r2402;
	mov.u32 	%r2634, %r424;
	mov.u32 	%r2635, %r2480;
	mov.u32 	%r2636, %r432;
	mov.u32 	%r2637, %r2486;
	mov.u32 	%r2638, %r2456;
	mov.u32 	%r2639, %r2452;
	mov.u32 	%r2640, %r2444;
	mov.u32 	%r2641, %r2448;
	@%p239 bra 	$L__BB0_341;

	mad.lo.s32 	%r1633, %r533, %r920, %r43;
	mul.lo.s32 	%r1634, %r918, %r1633;
	mul.lo.s32 	%r1635, %r1634, 768;
	mad.lo.s32 	%r1636, %r41, 384, %r1635;
	add.s32 	%r1637, %r1636, -64;
	mul.wide.s32 	%rd290, %r1637, 4;
	add.s64 	%rd291, %rd26, %rd290;
	add.s64 	%rd293, %rd291, %rd292;
	ld.global.v4.u32 	{%r2637, %r2635, %r2638, %r2639}, [%rd293+256];
	ld.global.v4.u32 	{%r2641, %r2640, %r2633, %r2632}, [%rd293+1024];
	add.s64 	%rd27, %rd291, %rd294;
	mov.u32 	%r2570, %r2470;
	mov.u32 	%r2572, %r2463;
	@%p237 bra 	$L__BB0_339;

	ld.global.v2.u32 	{%r2570, %r2572}, [%rd27];

$L__BB0_339:
	setp.ne.s32 	%p241, %r41, %r1386;
	ld.global.v2.u32 	{%r2636, %r2634}, [%rd27+768];
	@%p241 bra 	$L__BB0_341;

	ld.global.v2.u32 	{%r2582, %r2580}, [%rd27+1536];

$L__BB0_341:
	setp.ne.s32 	%p242, %r41, 0;
	mov.u32 	%r2642, %r2469;
	mov.u32 	%r2645, %r2462;
	mov.u32 	%r2646, %r2493;
	mov.u32 	%r2647, %r2500;
	mov.u32 	%r2648, %r2432;
	mov.u32 	%r2649, %r448;
	mov.u32 	%r2650, %r2439;
	mov.u32 	%r2651, %r455;
	mov.u32 	%r2652, %r2472;
	mov.u32 	%r2653, %r2474;
	@%p242 bra 	$L__BB0_343;

	ld.param.u64 	%rd567, [%rd1+104];
	cvta.to.global.u64 	%rd566, %rd567;
	mad.lo.s32 	%r1654, %r534, %r919, %r42;
	mul.lo.s32 	%r1658, %r1654, %r996;
	mad.lo.s32 	%r1661, %r1469, 384, %r1658;
	add.s32 	%r1662, %r1661, -64;
	mad.lo.s32 	%r1665, %r998, %r65, %r1662;
	mul.wide.s32 	%rd295, %r1665, 4;
	add.s64 	%rd296, %rd566, %rd295;
	add.s64 	%rd298, %rd296, %rd292;
	ld.global.v4.u32 	{%r2653, %r2652, %r2650, %r2648}, [%rd298+256];
	ld.global.v4.u32 	{%r2647, %r2646, %r2642, %r2645}, [%rd298+1024];
	add.s64 	%rd300, %rd296, %rd294;
	ld.global.v2.u32 	{%r2651, %r2649}, [%rd300+768];
	ld.global.v2.u32 	{%r2570, %r2572}, [%rd300+1536];

$L__BB0_343:
	add.s32 	%r1678, %r922, -1;
	setp.ge.s32 	%p243, %r535, %r1678;
	setp.lt.s32 	%p244, %r535, 2;
	or.pred  	%p245, %p244, %p243;
	setp.lt.s32 	%p246, %r536, 2;
	or.pred  	%p247, %p246, %p245;
	add.s32 	%r1679, %r923, -2;
	setp.ge.s32 	%p248, %r536, %r1679;
	or.pred  	%p249, %p248, %p247;
	@%p249 bra 	$L__BB0_354;

	ld.param.u64 	%rd569, [%rd1+112];
	cvta.to.global.u64 	%rd568, %rd569;
	mad.lo.s32 	%r703, %r536, %r922, %r535;
	shl.b32 	%r1680, %r703, 6;
	mul.wide.s32 	%rd303, %r1680, 4;
	add.s64 	%rd29, %rd568, %rd303;
	and.pred  	%p252, %p239, %p242;
	@%p252 bra 	$L__BB0_346;

	add.s64 	%rd305, %rd29, %rd294;
	ld.global.v2.u32 	{%r2615, %r2613}, [%rd305+256];

$L__BB0_346:
	@%p239 bra 	$L__BB0_348;

	shl.b32 	%r1683, %r922, 5;
	cvt.s64.s32 	%rd306, %r1683;
	cvt.s64.s32 	%rd307, %r45;
	add.s64 	%rd308, %rd306, %rd307;
	shl.b64 	%rd309, %rd308, 3;
	add.s64 	%rd310, %rd29, %rd309;
	ld.global.v2.u32 	{%r2620, %r2618}, [%rd310];

$L__BB0_348:
	@%p242 bra 	$L__BB0_350;

	shl.b32 	%r1686, %r922, 5;
	neg.s32 	%r1687, %r1686;
	cvt.s64.s32 	%rd311, %r1687;
	cvt.s64.s32 	%rd312, %r45;
	add.s64 	%rd313, %rd311, %rd312;
	shl.b64 	%rd314, %rd313, 3;
	add.s64 	%rd315, %rd29, %rd314;
	ld.global.v2.u32 	{%r2627, %r2625}, [%rd315];

$L__BB0_350:
	mad.lo.s32 	%r2304, %r536, %r922, %r535;
	ld.param.u64 	%rd561, [%rd1+112];
	cvta.to.global.u64 	%rd560, %rd561;
	shl.b32 	%r1690, %r923, 6;
	shl.b32 	%r1691, %r2304, 7;
	mad.lo.s32 	%r1692, %r1690, %r922, %r1691;
	mul.wide.s32 	%rd316, %r1692, 4;
	add.s64 	%rd30, %rd560, %rd316;
	@%p239 bra 	$L__BB0_352;

	shl.b32 	%r1693, %r922, 5;
	cvt.s64.s32 	%rd317, %r1693;
	cvt.s64.s32 	%rd318, %r45;
	add.s64 	%rd319, %rd317, %rd318;
	shl.b64 	%rd320, %rd319, 4;
	add.s64 	%rd321, %rd30, %rd320;
	ld.global.v4.u32 	{%r2621, %r2619, %r2611, %r2610}, [%rd321];
	shl.b32 	%r1698, %r922, 6;
	add.s32 	%r1699, %r1698, -32;
	cvt.s64.s32 	%rd322, %r1699;
	add.s64 	%rd323, %rd322, %rd318;
	shl.b64 	%rd324, %rd323, 4;
	add.s64 	%rd325, %rd30, %rd324;
	ld.global.v4.u32 	{%r2629, %r2628, %r2617, %r2616}, [%rd325];

$L__BB0_352:
	@%p242 bra 	$L__BB0_354;

	shl.b32 	%r1704, %r922, 5;
	xor.b32  	%r1705, %r1704, -32;
	cvt.s64.s32 	%rd326, %r1705;
	cvt.s64.s32 	%rd327, %r45;
	add.s64 	%rd328, %rd326, %rd327;
	shl.b64 	%rd329, %rd328, 4;
	add.s64 	%rd330, %rd30, %rd329;
	ld.global.v4.u32 	{%r2631, %r2630, %r2626, %r2624}, [%rd330];
	add.s64 	%rd332, %rd30, %rd292;
	ld.global.v4.u32 	{%r2623, %r2622, %r2614, %r2612}, [%rd332];

$L__BB0_354:
	bar.sync 	0;
	ld.param.u64 	%rd334, [%rd1+184];
	cvta.to.global.u64 	%rd31, %rd334;
	add.s32 	%r1714, %r931, -2;
	setp.lt.s32 	%p257, %r535, %r1714;
	add.s32 	%r1715, %r932, 3;
	setp.ge.s32 	%p258, %r535, %r1715;
	or.pred  	%p259, %p257, %p258;
	add.s32 	%r1716, %r933, -2;
	setp.lt.s32 	%p260, %r536, %r1716;
	or.pred  	%p261, %p259, %p260;
	add.s32 	%r1717, %r934, 2;
	setp.ge.s32 	%p262, %r536, %r1717;
	or.pred  	%p263, %p262, %p261;
	setp.lt.s32 	%p264, %r537, %r928;
	or.pred  	%p265, %p264, %p263;
	mad.lo.s32 	%r1718, %r930, %r929, %r928;
	setp.ge.s32 	%p266, %r537, %r1718;
	or.pred  	%p267, %p265, %p266;
	@%p267 bra 	$L__BB0_596;

	sub.s32 	%r762, %r537, %r928;
	rem.s32 	%r1719, %r762, %r929;
	setp.ne.s32 	%p268, %r1719, 0;
	@%p268 bra 	$L__BB0_596;

	div.s32 	%r1720, %r762, %r929;
	mov.u32 	%r1721, 8;
	sub.s32 	%r1722, %r1721, %r931;
	add.s32 	%r1723, %r1722, %r932;
	mul.lo.s32 	%r1724, %r1720, %r1723;
	mov.u32 	%r1725, 4;
	sub.s32 	%r1726, %r1725, %r931;
	add.s32 	%r763, %r1726, %r535;
	sub.s32 	%r1727, %r1725, %r933;
	add.s32 	%r764, %r1727, %r536;
	mul.lo.s32 	%r765, %r1724, 3;
	add.s32 	%r1728, %r763, %r765;
	add.s32 	%r1729, %r1728, -2;
	sub.s32 	%r1730, %r1721, %r933;
	add.s32 	%r1731, %r1730, %r934;
	mul.lo.s32 	%r766, %r1729, %r1731;
	add.s32 	%r1732, %r764, %r766;
	mul.lo.s32 	%r1733, %r1732, %r54;
	sub.s32 	%r767, %r1733, %r935;
	@%p28 bra 	$L__BB0_361;

	not.pred 	%p270, %p24;
	@%p270 bra 	$L__BB0_359;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2516;
  cvt.f32.f16 %f327, low;}

	// end inline asm
	add.s32 	%r1735, %r767, %r396;
	mul.wide.s32 	%rd335, %r1735, 4;
	add.s64 	%rd336, %rd31, %rd335;
	st.global.f32 	[%rd336], %f327;

$L__BB0_359:
	not.pred 	%p271, %p26;
	@%p271 bra 	$L__BB0_361;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2516;
  cvt.f32.f16 %f328, high;}

	// end inline asm
	add.s32 	%r1737, %r767, %r397;
	mul.wide.s32 	%rd337, %r1737, 4;
	add.s64 	%rd338, %rd31, %rd337;
	st.global.f32 	[%rd338], %f328;

$L__BB0_361:
	@%p28 bra 	$L__BB0_366;

	not.pred 	%p273, %p25;
	@%p273 bra 	$L__BB0_364;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2512;
  cvt.f32.f16 %f329, low;}

	// end inline asm
	add.s32 	%r1739, %r767, %r398;
	mul.wide.s32 	%rd339, %r1739, 4;
	add.s64 	%rd340, %rd31, %rd339;
	st.global.f32 	[%rd340], %f329;

$L__BB0_364:
	not.pred 	%p274, %p27;
	@%p274 bra 	$L__BB0_366;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2512;
  cvt.f32.f16 %f330, high;}

	// end inline asm
	add.s32 	%r1741, %r767, %r399;
	mul.wide.s32 	%rd341, %r1741, 4;
	add.s64 	%rd342, %rd31, %rd341;
	st.global.f32 	[%rd342], %f330;

$L__BB0_366:
	mov.u32 	%r1742, 8;
	sub.s32 	%r1743, %r1742, %r931;
	add.s32 	%r1744, %r1743, %r932;
	add.s32 	%r768, %r765, %r1744;
	add.s32 	%r1745, %r763, %r768;
	add.s32 	%r1746, %r1745, -2;
	sub.s32 	%r1747, %r1742, %r933;
	add.s32 	%r1748, %r1747, %r934;
	mad.lo.s32 	%r1749, %r1746, %r1748, %r764;
	mul.lo.s32 	%r1750, %r1749, %r54;
	sub.s32 	%r769, %r1750, %r935;
	@%p28 bra 	$L__BB0_371;

	not.pred 	%p276, %p24;
	@%p276 bra 	$L__BB0_369;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2515;
  cvt.f32.f16 %f331, low;}

	// end inline asm
	add.s32 	%r1752, %r769, %r396;
	mul.wide.s32 	%rd343, %r1752, 4;
	add.s64 	%rd344, %rd31, %rd343;
	st.global.f32 	[%rd344], %f331;

$L__BB0_369:
	not.pred 	%p277, %p26;
	@%p277 bra 	$L__BB0_371;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2515;
  cvt.f32.f16 %f332, high;}

	// end inline asm
	add.s32 	%r1754, %r769, %r397;
	mul.wide.s32 	%rd345, %r1754, 4;
	add.s64 	%rd346, %rd31, %rd345;
	st.global.f32 	[%rd346], %f332;

$L__BB0_371:
	@%p28 bra 	$L__BB0_376;

	not.pred 	%p279, %p25;
	@%p279 bra 	$L__BB0_374;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2511;
  cvt.f32.f16 %f333, low;}

	// end inline asm
	add.s32 	%r1756, %r769, %r398;
	mul.wide.s32 	%rd347, %r1756, 4;
	add.s64 	%rd348, %rd31, %rd347;
	st.global.f32 	[%rd348], %f333;

$L__BB0_374:
	not.pred 	%p280, %p27;
	@%p280 bra 	$L__BB0_376;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2511;
  cvt.f32.f16 %f334, high;}

	// end inline asm
	add.s32 	%r1758, %r769, %r399;
	mul.wide.s32 	%rd349, %r1758, 4;
	add.s64 	%rd350, %rd31, %rd349;
	st.global.f32 	[%rd350], %f334;

$L__BB0_376:
	add.s32 	%r770, %r764, 1;
	add.s32 	%r1759, %r770, %r766;
	mul.lo.s32 	%r1760, %r1759, %r54;
	sub.s32 	%r771, %r1760, %r935;
	@%p28 bra 	$L__BB0_381;

	not.pred 	%p282, %p24;
	@%p282 bra 	$L__BB0_379;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2508;
  cvt.f32.f16 %f335, low;}

	// end inline asm
	add.s32 	%r1762, %r771, %r396;
	mul.wide.s32 	%rd351, %r1762, 4;
	add.s64 	%rd352, %rd31, %rd351;
	st.global.f32 	[%rd352], %f335;

$L__BB0_379:
	not.pred 	%p283, %p26;
	@%p283 bra 	$L__BB0_381;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2508;
  cvt.f32.f16 %f336, high;}

	// end inline asm
	add.s32 	%r1764, %r771, %r397;
	mul.wide.s32 	%rd353, %r1764, 4;
	add.s64 	%rd354, %rd31, %rd353;
	st.global.f32 	[%rd354], %f336;

$L__BB0_381:
	@%p28 bra 	$L__BB0_386;

	not.pred 	%p285, %p25;
	@%p285 bra 	$L__BB0_384;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2506;
  cvt.f32.f16 %f337, low;}

	// end inline asm
	add.s32 	%r1766, %r771, %r398;
	mul.wide.s32 	%rd355, %r1766, 4;
	add.s64 	%rd356, %rd31, %rd355;
	st.global.f32 	[%rd356], %f337;

$L__BB0_384:
	not.pred 	%p286, %p27;
	@%p286 bra 	$L__BB0_386;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2506;
  cvt.f32.f16 %f338, high;}

	// end inline asm
	add.s32 	%r1768, %r771, %r399;
	mul.wide.s32 	%rd357, %r1768, 4;
	add.s64 	%rd358, %rd31, %rd357;
	st.global.f32 	[%rd358], %f338;

$L__BB0_386:
	add.s32 	%r772, %r763, -1;
	add.s32 	%r1769, %r772, %r765;
	mov.u32 	%r1770, 8;
	sub.s32 	%r1771, %r1770, %r933;
	add.s32 	%r1772, %r1771, %r934;
	mul.lo.s32 	%r773, %r1769, %r1772;
	add.s32 	%r1773, %r764, %r773;
	add.s32 	%r1774, %r1773, -1;
	mul.lo.s32 	%r1775, %r1774, %r54;
	sub.s32 	%r774, %r1775, %r935;
	@%p28 bra 	$L__BB0_391;

	not.pred 	%p288, %p24;
	@%p288 bra 	$L__BB0_389;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2474;
  cvt.f32.f16 %f339, low;}

	// end inline asm
	add.s32 	%r1777, %r774, %r396;
	mul.wide.s32 	%rd359, %r1777, 4;
	add.s64 	%rd360, %rd31, %rd359;
	st.global.f32 	[%rd360], %f339;

$L__BB0_389:
	not.pred 	%p289, %p26;
	@%p289 bra 	$L__BB0_391;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2474;
  cvt.f32.f16 %f340, high;}

	// end inline asm
	add.s32 	%r1779, %r774, %r397;
	mul.wide.s32 	%rd361, %r1779, 4;
	add.s64 	%rd362, %rd31, %rd361;
	st.global.f32 	[%rd362], %f340;

$L__BB0_391:
	@%p28 bra 	$L__BB0_396;

	not.pred 	%p291, %p25;
	@%p291 bra 	$L__BB0_394;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2472;
  cvt.f32.f16 %f341, low;}

	// end inline asm
	add.s32 	%r1781, %r774, %r398;
	mul.wide.s32 	%rd363, %r1781, 4;
	add.s64 	%rd364, %rd31, %rd363;
	st.global.f32 	[%rd364], %f341;

$L__BB0_394:
	not.pred 	%p292, %p27;
	@%p292 bra 	$L__BB0_396;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2472;
  cvt.f32.f16 %f342, high;}

	// end inline asm
	add.s32 	%r1783, %r774, %r399;
	mul.wide.s32 	%rd365, %r1783, 4;
	add.s64 	%rd366, %rd31, %rd365;
	st.global.f32 	[%rd366], %f342;

$L__BB0_396:
	add.s32 	%r2305, %r763, -1;
	mov.u32 	%r1784, 8;
	sub.s32 	%r1785, %r1784, %r933;
	add.s32 	%r1786, %r1785, %r934;
	add.s32 	%r1787, %r2305, %r768;
	mul.lo.s32 	%r775, %r1787, %r1786;
	add.s32 	%r1788, %r764, %r775;
	add.s32 	%r1789, %r1788, -1;
	mul.lo.s32 	%r1790, %r1789, %r54;
	sub.s32 	%r776, %r1790, %r935;
	@%p28 bra 	$L__BB0_401;

	not.pred 	%p294, %p24;
	@%p294 bra 	$L__BB0_399;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2504;
  cvt.f32.f16 %f343, low;}

	// end inline asm
	add.s32 	%r1792, %r776, %r396;
	mul.wide.s32 	%rd367, %r1792, 4;
	add.s64 	%rd368, %rd31, %rd367;
	st.global.f32 	[%rd368], %f343;

$L__BB0_399:
	not.pred 	%p295, %p26;
	@%p295 bra 	$L__BB0_401;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2504;
  cvt.f32.f16 %f344, high;}

	// end inline asm
	add.s32 	%r1794, %r776, %r397;
	mul.wide.s32 	%rd369, %r1794, 4;
	add.s64 	%rd370, %rd31, %rd369;
	st.global.f32 	[%rd370], %f344;

$L__BB0_401:
	@%p28 bra 	$L__BB0_406;

	not.pred 	%p297, %p25;
	@%p297 bra 	$L__BB0_404;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2502;
  cvt.f32.f16 %f345, low;}

	// end inline asm
	add.s32 	%r1796, %r776, %r398;
	mul.wide.s32 	%rd371, %r1796, 4;
	add.s64 	%rd372, %rd31, %rd371;
	st.global.f32 	[%rd372], %f345;

$L__BB0_404:
	not.pred 	%p298, %p27;
	@%p298 bra 	$L__BB0_406;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2502;
  cvt.f32.f16 %f346, high;}

	// end inline asm
	add.s32 	%r1798, %r776, %r399;
	mul.wide.s32 	%rd373, %r1798, 4;
	add.s64 	%rd374, %rd31, %rd373;
	st.global.f32 	[%rd374], %f346;

$L__BB0_406:
	mul.lo.s32 	%r1800, %r1773, %r54;
	sub.s32 	%r777, %r1800, %r935;
	@%p28 bra 	$L__BB0_411;

	not.pred 	%p300, %p24;
	@%p300 bra 	$L__BB0_409;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r515;
  cvt.f32.f16 %f347, low;}

	// end inline asm
	add.s32 	%r1802, %r777, %r396;
	mul.wide.s32 	%rd375, %r1802, 4;
	add.s64 	%rd376, %rd31, %rd375;
	st.global.f32 	[%rd376], %f347;

$L__BB0_409:
	not.pred 	%p301, %p26;
	@%p301 bra 	$L__BB0_411;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r515;
  cvt.f32.f16 %f348, high;}

	// end inline asm
	add.s32 	%r1804, %r777, %r397;
	mul.wide.s32 	%rd377, %r1804, 4;
	add.s64 	%rd378, %rd31, %rd377;
	st.global.f32 	[%rd378], %f348;

$L__BB0_411:
	@%p28 bra 	$L__BB0_416;

	not.pred 	%p303, %p25;
	@%p303 bra 	$L__BB0_414;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r508;
  cvt.f32.f16 %f349, low;}

	// end inline asm
	add.s32 	%r1806, %r777, %r398;
	mul.wide.s32 	%rd379, %r1806, 4;
	add.s64 	%rd380, %rd31, %rd379;
	st.global.f32 	[%rd380], %f349;

$L__BB0_414:
	not.pred 	%p304, %p27;
	@%p304 bra 	$L__BB0_416;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r508;
  cvt.f32.f16 %f350, high;}

	// end inline asm
	add.s32 	%r1808, %r777, %r399;
	mul.wide.s32 	%rd381, %r1808, 4;
	add.s64 	%rd382, %rd31, %rd381;
	st.global.f32 	[%rd382], %f350;

$L__BB0_416:
	mul.lo.s32 	%r1810, %r1788, %r54;
	sub.s32 	%r778, %r1810, %r935;
	@%p28 bra 	$L__BB0_421;

	not.pred 	%p306, %p24;
	@%p306 bra 	$L__BB0_419;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r514;
  cvt.f32.f16 %f351, low;}

	// end inline asm
	add.s32 	%r1812, %r778, %r396;
	mul.wide.s32 	%rd383, %r1812, 4;
	add.s64 	%rd384, %rd31, %rd383;
	st.global.f32 	[%rd384], %f351;

$L__BB0_419:
	not.pred 	%p307, %p26;
	@%p307 bra 	$L__BB0_421;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r514;
  cvt.f32.f16 %f352, high;}

	// end inline asm
	add.s32 	%r1814, %r778, %r397;
	mul.wide.s32 	%rd385, %r1814, 4;
	add.s64 	%rd386, %rd31, %rd385;
	st.global.f32 	[%rd386], %f352;

$L__BB0_421:
	@%p28 bra 	$L__BB0_426;

	not.pred 	%p309, %p25;
	@%p309 bra 	$L__BB0_424;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r507;
  cvt.f32.f16 %f353, low;}

	// end inline asm
	add.s32 	%r1816, %r778, %r398;
	mul.wide.s32 	%rd387, %r1816, 4;
	add.s64 	%rd388, %rd31, %rd387;
	st.global.f32 	[%rd388], %f353;

$L__BB0_424:
	not.pred 	%p310, %p27;
	@%p310 bra 	$L__BB0_426;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r507;
  cvt.f32.f16 %f354, high;}

	// end inline asm
	add.s32 	%r1818, %r778, %r399;
	mul.wide.s32 	%rd389, %r1818, 4;
	add.s64 	%rd390, %rd31, %rd389;
	st.global.f32 	[%rd390], %f354;

$L__BB0_426:
	add.s32 	%r2306, %r763, -1;
	mov.u32 	%r1819, 8;
	sub.s32 	%r1820, %r1819, %r931;
	add.s32 	%r1821, %r1820, %r932;
	add.s32 	%r779, %r768, %r1821;
	add.s32 	%r1822, %r2306, %r779;
	sub.s32 	%r1823, %r1819, %r933;
	add.s32 	%r1824, %r1823, %r934;
	mul.lo.s32 	%r780, %r1822, %r1824;
	add.s32 	%r1825, %r764, %r780;
	mul.lo.s32 	%r1826, %r1825, %r54;
	sub.s32 	%r781, %r1826, %r935;
	@%p28 bra 	$L__BB0_431;

	not.pred 	%p312, %p24;
	@%p312 bra 	$L__BB0_429;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2498;
  cvt.f32.f16 %f355, low;}

	// end inline asm
	add.s32 	%r1828, %r781, %r396;
	mul.wide.s32 	%rd391, %r1828, 4;
	add.s64 	%rd392, %rd31, %rd391;
	st.global.f32 	[%rd392], %f355;

$L__BB0_429:
	not.pred 	%p313, %p26;
	@%p313 bra 	$L__BB0_431;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2498;
  cvt.f32.f16 %f356, high;}

	// end inline asm
	add.s32 	%r1830, %r781, %r397;
	mul.wide.s32 	%rd393, %r1830, 4;
	add.s64 	%rd394, %rd31, %rd393;
	st.global.f32 	[%rd394], %f356;

$L__BB0_431:
	@%p28 bra 	$L__BB0_436;

	not.pred 	%p315, %p25;
	@%p315 bra 	$L__BB0_434;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2491;
  cvt.f32.f16 %f357, low;}

	// end inline asm
	add.s32 	%r1832, %r781, %r398;
	mul.wide.s32 	%rd395, %r1832, 4;
	add.s64 	%rd396, %rd31, %rd395;
	st.global.f32 	[%rd396], %f357;

$L__BB0_434:
	not.pred 	%p316, %p27;
	@%p316 bra 	$L__BB0_436;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2491;
  cvt.f32.f16 %f358, high;}

	// end inline asm
	add.s32 	%r1834, %r781, %r399;
	mul.wide.s32 	%rd397, %r1834, 4;
	add.s64 	%rd398, %rd31, %rd397;
	st.global.f32 	[%rd398], %f358;

$L__BB0_436:
	add.s32 	%r2289, %r764, 1;
	add.s32 	%r1835, %r2289, %r773;
	mul.lo.s32 	%r1836, %r1835, %r54;
	sub.s32 	%r782, %r1836, %r935;
	@%p28 bra 	$L__BB0_441;

	not.pred 	%p318, %p24;
	@%p318 bra 	$L__BB0_439;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r501;
  cvt.f32.f16 %f359, low;}

	// end inline asm
	add.s32 	%r1838, %r782, %r396;
	mul.wide.s32 	%rd399, %r1838, 4;
	add.s64 	%rd400, %rd31, %rd399;
	st.global.f32 	[%rd400], %f359;

$L__BB0_439:
	not.pred 	%p319, %p26;
	@%p319 bra 	$L__BB0_441;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r501;
  cvt.f32.f16 %f360, high;}

	// end inline asm
	add.s32 	%r1840, %r782, %r397;
	mul.wide.s32 	%rd401, %r1840, 4;
	add.s64 	%rd402, %rd31, %rd401;
	st.global.f32 	[%rd402], %f360;

$L__BB0_441:
	@%p28 bra 	$L__BB0_446;

	not.pred 	%p321, %p25;
	@%p321 bra 	$L__BB0_444;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r495;
  cvt.f32.f16 %f361, low;}

	// end inline asm
	add.s32 	%r1842, %r782, %r398;
	mul.wide.s32 	%rd403, %r1842, 4;
	add.s64 	%rd404, %rd31, %rd403;
	st.global.f32 	[%rd404], %f361;

$L__BB0_444:
	not.pred 	%p322, %p27;
	@%p322 bra 	$L__BB0_446;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r495;
  cvt.f32.f16 %f362, high;}

	// end inline asm
	add.s32 	%r1844, %r782, %r399;
	mul.wide.s32 	%rd405, %r1844, 4;
	add.s64 	%rd406, %rd31, %rd405;
	st.global.f32 	[%rd406], %f362;

$L__BB0_446:
	add.s32 	%r2290, %r764, 1;
	add.s32 	%r1845, %r2290, %r775;
	mul.lo.s32 	%r1846, %r1845, %r54;
	sub.s32 	%r783, %r1846, %r935;
	@%p28 bra 	$L__BB0_451;

	not.pred 	%p324, %p24;
	@%p324 bra 	$L__BB0_449;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2485;
  cvt.f32.f16 %f363, low;}

	// end inline asm
	add.s32 	%r1848, %r783, %r396;
	mul.wide.s32 	%rd407, %r1848, 4;
	add.s64 	%rd408, %rd31, %rd407;
	st.global.f32 	[%rd408], %f363;

$L__BB0_449:
	not.pred 	%p325, %p26;
	@%p325 bra 	$L__BB0_451;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2485;
  cvt.f32.f16 %f364, high;}

	// end inline asm
	add.s32 	%r1850, %r783, %r397;
	mul.wide.s32 	%rd409, %r1850, 4;
	add.s64 	%rd410, %rd31, %rd409;
	st.global.f32 	[%rd410], %f364;

$L__BB0_451:
	@%p28 bra 	$L__BB0_456;

	not.pred 	%p327, %p25;
	@%p327 bra 	$L__BB0_454;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2479;
  cvt.f32.f16 %f365, low;}

	// end inline asm
	add.s32 	%r1852, %r783, %r398;
	mul.wide.s32 	%rd411, %r1852, 4;
	add.s64 	%rd412, %rd31, %rd411;
	st.global.f32 	[%rd412], %f365;

$L__BB0_454:
	not.pred 	%p328, %p27;
	@%p328 bra 	$L__BB0_456;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2479;
  cvt.f32.f16 %f366, high;}

	// end inline asm
	add.s32 	%r1854, %r783, %r399;
	mul.wide.s32 	%rd413, %r1854, 4;
	add.s64 	%rd414, %rd31, %rd413;
	st.global.f32 	[%rd414], %f366;

$L__BB0_456:
	add.s32 	%r2291, %r764, 1;
	add.s32 	%r1855, %r2291, %r780;
	mul.lo.s32 	%r1856, %r1855, %r54;
	sub.s32 	%r784, %r1856, %r935;
	@%p28 bra 	$L__BB0_461;

	not.pred 	%p330, %p24;
	@%p330 bra 	$L__BB0_459;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2484;
  cvt.f32.f16 %f367, low;}

	// end inline asm
	add.s32 	%r1858, %r784, %r396;
	mul.wide.s32 	%rd415, %r1858, 4;
	add.s64 	%rd416, %rd31, %rd415;
	st.global.f32 	[%rd416], %f367;

$L__BB0_459:
	not.pred 	%p331, %p26;
	@%p331 bra 	$L__BB0_461;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2484;
  cvt.f32.f16 %f368, high;}

	// end inline asm
	add.s32 	%r1860, %r784, %r397;
	mul.wide.s32 	%rd417, %r1860, 4;
	add.s64 	%rd418, %rd31, %rd417;
	st.global.f32 	[%rd418], %f368;

$L__BB0_461:
	@%p28 bra 	$L__BB0_466;

	not.pred 	%p333, %p25;
	@%p333 bra 	$L__BB0_464;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2478;
  cvt.f32.f16 %f369, low;}

	// end inline asm
	add.s32 	%r1862, %r784, %r398;
	mul.wide.s32 	%rd419, %r1862, 4;
	add.s64 	%rd420, %rd31, %rd419;
	st.global.f32 	[%rd420], %f369;

$L__BB0_464:
	not.pred 	%p334, %p27;
	@%p334 bra 	$L__BB0_466;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2478;
  cvt.f32.f16 %f370, high;}

	// end inline asm
	add.s32 	%r1864, %r784, %r399;
	mul.wide.s32 	%rd421, %r1864, 4;
	add.s64 	%rd422, %rd31, %rd421;
	st.global.f32 	[%rd422], %f370;

$L__BB0_466:
	add.s32 	%r785, %r764, 2;
	add.s32 	%r1865, %r785, %r773;
	mul.lo.s32 	%r1866, %r1865, %r54;
	sub.s32 	%r786, %r1866, %r935;
	@%p28 bra 	$L__BB0_471;

	not.pred 	%p336, %p24;
	@%p336 bra 	$L__BB0_469;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2448;
  cvt.f32.f16 %f371, low;}

	// end inline asm
	add.s32 	%r1868, %r786, %r396;
	mul.wide.s32 	%rd423, %r1868, 4;
	add.s64 	%rd424, %rd31, %rd423;
	st.global.f32 	[%rd424], %f371;

$L__BB0_469:
	not.pred 	%p337, %p26;
	@%p337 bra 	$L__BB0_471;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2448;
  cvt.f32.f16 %f372, high;}

	// end inline asm
	add.s32 	%r1870, %r786, %r397;
	mul.wide.s32 	%rd425, %r1870, 4;
	add.s64 	%rd426, %rd31, %rd425;
	st.global.f32 	[%rd426], %f372;

$L__BB0_471:
	@%p28 bra 	$L__BB0_476;

	not.pred 	%p339, %p25;
	@%p339 bra 	$L__BB0_474;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2444;
  cvt.f32.f16 %f373, low;}

	// end inline asm
	add.s32 	%r1872, %r786, %r398;
	mul.wide.s32 	%rd427, %r1872, 4;
	add.s64 	%rd428, %rd31, %rd427;
	st.global.f32 	[%rd428], %f373;

$L__BB0_474:
	not.pred 	%p340, %p27;
	@%p340 bra 	$L__BB0_476;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2444;
  cvt.f32.f16 %f374, high;}

	// end inline asm
	add.s32 	%r1874, %r786, %r399;
	mul.wide.s32 	%rd429, %r1874, 4;
	add.s64 	%rd430, %rd31, %rd429;
	st.global.f32 	[%rd430], %f374;

$L__BB0_476:
	mov.u32 	%r1875, 8;
	sub.s32 	%r1876, %r1875, %r933;
	add.s32 	%r1877, %r1876, %r934;
	mul.lo.s32 	%r787, %r1745, %r1877;
	add.s32 	%r1879, %r764, %r787;
	add.s32 	%r1880, %r1879, -1;
	mul.lo.s32 	%r1881, %r1880, %r54;
	sub.s32 	%r788, %r1881, %r935;
	@%p28 bra 	$L__BB0_481;

	not.pred 	%p342, %p24;
	@%p342 bra 	$L__BB0_479;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r455;
  cvt.f32.f16 %f375, low;}

	// end inline asm
	add.s32 	%r1883, %r788, %r396;
	mul.wide.s32 	%rd431, %r1883, 4;
	add.s64 	%rd432, %rd31, %rd431;
	st.global.f32 	[%rd432], %f375;

$L__BB0_479:
	not.pred 	%p343, %p26;
	@%p343 bra 	$L__BB0_481;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r455;
  cvt.f32.f16 %f376, high;}

	// end inline asm
	add.s32 	%r1885, %r788, %r397;
	mul.wide.s32 	%rd433, %r1885, 4;
	add.s64 	%rd434, %rd31, %rd433;
	st.global.f32 	[%rd434], %f376;

$L__BB0_481:
	@%p28 bra 	$L__BB0_486;

	not.pred 	%p345, %p25;
	@%p345 bra 	$L__BB0_484;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r448;
  cvt.f32.f16 %f377, low;}

	// end inline asm
	add.s32 	%r1887, %r788, %r398;
	mul.wide.s32 	%rd435, %r1887, 4;
	add.s64 	%rd436, %rd31, %rd435;
	st.global.f32 	[%rd436], %f377;

$L__BB0_484:
	not.pred 	%p346, %p27;
	@%p346 bra 	$L__BB0_486;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r448;
  cvt.f32.f16 %f378, high;}

	// end inline asm
	add.s32 	%r1889, %r788, %r399;
	mul.wide.s32 	%rd437, %r1889, 4;
	add.s64 	%rd438, %rd31, %rd437;
	st.global.f32 	[%rd438], %f378;

$L__BB0_486:
	mov.u32 	%r2295, 8;
	sub.s32 	%r2294, %r2295, %r931;
	add.s32 	%r2293, %r2294, %r932;
	add.s32 	%r2292, %r768, %r2293;
	mov.u32 	%r1890, 8;
	sub.s32 	%r1891, %r1890, %r933;
	add.s32 	%r1892, %r1891, %r934;
	add.s32 	%r1893, %r763, %r2292;
	mul.lo.s32 	%r789, %r1893, %r1892;
	add.s32 	%r1894, %r764, %r789;
	add.s32 	%r1895, %r1894, -1;
	mul.lo.s32 	%r1896, %r1895, %r54;
	sub.s32 	%r790, %r1896, %r935;
	@%p28 bra 	$L__BB0_491;

	not.pred 	%p348, %p24;
	@%p348 bra 	$L__BB0_489;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2439;
  cvt.f32.f16 %f379, low;}

	// end inline asm
	add.s32 	%r1898, %r790, %r396;
	mul.wide.s32 	%rd439, %r1898, 4;
	add.s64 	%rd440, %rd31, %rd439;
	st.global.f32 	[%rd440], %f379;

$L__BB0_489:
	not.pred 	%p349, %p26;
	@%p349 bra 	$L__BB0_491;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2439;
  cvt.f32.f16 %f380, high;}

	// end inline asm
	add.s32 	%r1900, %r790, %r397;
	mul.wide.s32 	%rd441, %r1900, 4;
	add.s64 	%rd442, %rd31, %rd441;
	st.global.f32 	[%rd442], %f380;

$L__BB0_491:
	@%p28 bra 	$L__BB0_496;

	not.pred 	%p351, %p25;
	@%p351 bra 	$L__BB0_494;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2432;
  cvt.f32.f16 %f381, low;}

	// end inline asm
	add.s32 	%r1902, %r790, %r398;
	mul.wide.s32 	%rd443, %r1902, 4;
	add.s64 	%rd444, %rd31, %rd443;
	st.global.f32 	[%rd444], %f381;

$L__BB0_494:
	not.pred 	%p352, %p27;
	@%p352 bra 	$L__BB0_496;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2432;
  cvt.f32.f16 %f382, high;}

	// end inline asm
	add.s32 	%r1904, %r790, %r399;
	mul.wide.s32 	%rd445, %r1904, 4;
	add.s64 	%rd446, %rd31, %rd445;
	st.global.f32 	[%rd446], %f382;

$L__BB0_496:
	mov.u32 	%r1905, 8;
	sub.s32 	%r1906, %r1905, %r933;
	add.s32 	%r1907, %r1906, %r934;
	mul.lo.s32 	%r791, %r1728, %r1907;
	add.s32 	%r1909, %r764, %r791;
	mul.lo.s32 	%r1910, %r1909, %r54;
	sub.s32 	%r792, %r1910, %r935;
	@%p28 bra 	$L__BB0_501;

	not.pred 	%p354, %p24;
	@%p354 bra 	$L__BB0_499;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2500;
  cvt.f32.f16 %f383, low;}

	// end inline asm
	add.s32 	%r1912, %r792, %r396;
	mul.wide.s32 	%rd447, %r1912, 4;
	add.s64 	%rd448, %rd31, %rd447;
	st.global.f32 	[%rd448], %f383;

$L__BB0_499:
	not.pred 	%p355, %p26;
	@%p355 bra 	$L__BB0_501;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2500;
  cvt.f32.f16 %f384, high;}

	// end inline asm
	add.s32 	%r1914, %r792, %r397;
	mul.wide.s32 	%rd449, %r1914, 4;
	add.s64 	%rd450, %rd31, %rd449;
	st.global.f32 	[%rd450], %f384;

$L__BB0_501:
	@%p28 bra 	$L__BB0_506;

	not.pred 	%p357, %p25;
	@%p357 bra 	$L__BB0_504;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2493;
  cvt.f32.f16 %f385, low;}

	// end inline asm
	add.s32 	%r1916, %r792, %r398;
	mul.wide.s32 	%rd451, %r1916, 4;
	add.s64 	%rd452, %rd31, %rd451;
	st.global.f32 	[%rd452], %f385;

$L__BB0_504:
	not.pred 	%p358, %p27;
	@%p358 bra 	$L__BB0_506;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2493;
  cvt.f32.f16 %f386, high;}

	// end inline asm
	add.s32 	%r1918, %r792, %r399;
	mul.wide.s32 	%rd453, %r1918, 4;
	add.s64 	%rd454, %rd31, %rd453;
	st.global.f32 	[%rd454], %f386;

$L__BB0_506:
	mul.lo.s32 	%r1920, %r1879, %r54;
	sub.s32 	%r793, %r1920, %r935;
	@%p28 bra 	$L__BB0_511;

	not.pred 	%p360, %p24;
	@%p360 bra 	$L__BB0_509;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2499;
  cvt.f32.f16 %f387, low;}

	// end inline asm
	add.s32 	%r1922, %r793, %r396;
	mul.wide.s32 	%rd455, %r1922, 4;
	add.s64 	%rd456, %rd31, %rd455;
	st.global.f32 	[%rd456], %f387;

$L__BB0_509:
	not.pred 	%p361, %p26;
	@%p361 bra 	$L__BB0_511;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2499;
  cvt.f32.f16 %f388, high;}

	// end inline asm
	add.s32 	%r1924, %r793, %r397;
	mul.wide.s32 	%rd457, %r1924, 4;
	add.s64 	%rd458, %rd31, %rd457;
	st.global.f32 	[%rd458], %f388;

$L__BB0_511:
	@%p28 bra 	$L__BB0_516;

	not.pred 	%p363, %p25;
	@%p363 bra 	$L__BB0_514;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2492;
  cvt.f32.f16 %f389, low;}

	// end inline asm
	add.s32 	%r1926, %r793, %r398;
	mul.wide.s32 	%rd459, %r1926, 4;
	add.s64 	%rd460, %rd31, %rd459;
	st.global.f32 	[%rd460], %f389;

$L__BB0_514:
	not.pred 	%p364, %p27;
	@%p364 bra 	$L__BB0_516;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2492;
  cvt.f32.f16 %f390, high;}

	// end inline asm
	add.s32 	%r1928, %r793, %r399;
	mul.wide.s32 	%rd461, %r1928, 4;
	add.s64 	%rd462, %rd31, %rd461;
	st.global.f32 	[%rd462], %f390;

$L__BB0_516:
	mul.lo.s32 	%r1930, %r1894, %r54;
	sub.s32 	%r794, %r1930, %r935;
	@%p28 bra 	$L__BB0_521;

	not.pred 	%p366, %p24;
	@%p366 bra 	$L__BB0_519;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r484;
  cvt.f32.f16 %f391, low;}

	// end inline asm
	add.s32 	%r1932, %r794, %r396;
	mul.wide.s32 	%rd463, %r1932, 4;
	add.s64 	%rd464, %rd31, %rd463;
	st.global.f32 	[%rd464], %f391;

$L__BB0_519:
	not.pred 	%p367, %p26;
	@%p367 bra 	$L__BB0_521;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r484;
  cvt.f32.f16 %f392, high;}

	// end inline asm
	add.s32 	%r1934, %r794, %r397;
	mul.wide.s32 	%rd465, %r1934, 4;
	add.s64 	%rd466, %rd31, %rd465;
	st.global.f32 	[%rd466], %f392;

$L__BB0_521:
	@%p28 bra 	$L__BB0_526;

	not.pred 	%p369, %p25;
	@%p369 bra 	$L__BB0_524;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r477;
  cvt.f32.f16 %f393, low;}

	// end inline asm
	add.s32 	%r1936, %r794, %r398;
	mul.wide.s32 	%rd467, %r1936, 4;
	add.s64 	%rd468, %rd31, %rd467;
	st.global.f32 	[%rd468], %f393;

$L__BB0_524:
	not.pred 	%p370, %p27;
	@%p370 bra 	$L__BB0_526;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r477;
  cvt.f32.f16 %f394, high;}

	// end inline asm
	add.s32 	%r1938, %r794, %r399;
	mul.wide.s32 	%rd469, %r1938, 4;
	add.s64 	%rd470, %rd31, %rd469;
	st.global.f32 	[%rd470], %f394;

$L__BB0_526:
	add.s32 	%r2296, %r764, 1;
	add.s32 	%r1939, %r2296, %r791;
	mul.lo.s32 	%r1940, %r1939, %r54;
	sub.s32 	%r795, %r1940, %r935;
	@%p28 bra 	$L__BB0_531;

	not.pred 	%p372, %p24;
	@%p372 bra 	$L__BB0_529;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2486;
  cvt.f32.f16 %f395, low;}

	// end inline asm
	add.s32 	%r1942, %r795, %r396;
	mul.wide.s32 	%rd471, %r1942, 4;
	add.s64 	%rd472, %rd31, %rd471;
	st.global.f32 	[%rd472], %f395;

$L__BB0_529:
	not.pred 	%p373, %p26;
	@%p373 bra 	$L__BB0_531;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2486;
  cvt.f32.f16 %f396, high;}

	// end inline asm
	add.s32 	%r1944, %r795, %r397;
	mul.wide.s32 	%rd473, %r1944, 4;
	add.s64 	%rd474, %rd31, %rd473;
	st.global.f32 	[%rd474], %f396;

$L__BB0_531:
	@%p28 bra 	$L__BB0_536;

	not.pred 	%p375, %p25;
	@%p375 bra 	$L__BB0_534;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2480;
  cvt.f32.f16 %f397, low;}

	// end inline asm
	add.s32 	%r1946, %r795, %r398;
	mul.wide.s32 	%rd475, %r1946, 4;
	add.s64 	%rd476, %rd31, %rd475;
	st.global.f32 	[%rd476], %f397;

$L__BB0_534:
	not.pred 	%p376, %p27;
	@%p376 bra 	$L__BB0_536;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2480;
  cvt.f32.f16 %f398, high;}

	// end inline asm
	add.s32 	%r1948, %r795, %r399;
	mul.wide.s32 	%rd477, %r1948, 4;
	add.s64 	%rd478, %rd31, %rd477;
	st.global.f32 	[%rd478], %f398;

$L__BB0_536:
	add.s32 	%r2297, %r764, 1;
	add.s32 	%r1949, %r2297, %r787;
	mul.lo.s32 	%r1950, %r1949, %r54;
	sub.s32 	%r796, %r1950, %r935;
	@%p28 bra 	$L__BB0_541;

	not.pred 	%p378, %p24;
	@%p378 bra 	$L__BB0_539;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r432;
  cvt.f32.f16 %f399, low;}

	// end inline asm
	add.s32 	%r1952, %r796, %r396;
	mul.wide.s32 	%rd479, %r1952, 4;
	add.s64 	%rd480, %rd31, %rd479;
	st.global.f32 	[%rd480], %f399;

$L__BB0_539:
	not.pred 	%p379, %p26;
	@%p379 bra 	$L__BB0_541;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r432;
  cvt.f32.f16 %f400, high;}

	// end inline asm
	add.s32 	%r1954, %r796, %r397;
	mul.wide.s32 	%rd481, %r1954, 4;
	add.s64 	%rd482, %rd31, %rd481;
	st.global.f32 	[%rd482], %f400;

$L__BB0_541:
	@%p28 bra 	$L__BB0_546;

	not.pred 	%p381, %p25;
	@%p381 bra 	$L__BB0_544;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r424;
  cvt.f32.f16 %f401, low;}

	// end inline asm
	add.s32 	%r1956, %r796, %r398;
	mul.wide.s32 	%rd483, %r1956, 4;
	add.s64 	%rd484, %rd31, %rd483;
	st.global.f32 	[%rd484], %f401;

$L__BB0_544:
	not.pred 	%p382, %p27;
	@%p382 bra 	$L__BB0_546;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r424;
  cvt.f32.f16 %f402, high;}

	// end inline asm
	add.s32 	%r1958, %r796, %r399;
	mul.wide.s32 	%rd485, %r1958, 4;
	add.s64 	%rd486, %rd31, %rd485;
	st.global.f32 	[%rd486], %f402;

$L__BB0_546:
	add.s32 	%r2298, %r764, 1;
	add.s32 	%r1959, %r2298, %r789;
	mul.lo.s32 	%r1960, %r1959, %r54;
	sub.s32 	%r797, %r1960, %r935;
	@%p28 bra 	$L__BB0_551;

	not.pred 	%p384, %p24;
	@%p384 bra 	$L__BB0_549;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r471;
  cvt.f32.f16 %f403, low;}

	// end inline asm
	add.s32 	%r1962, %r797, %r396;
	mul.wide.s32 	%rd487, %r1962, 4;
	add.s64 	%rd488, %rd31, %rd487;
	st.global.f32 	[%rd488], %f403;

$L__BB0_549:
	not.pred 	%p385, %p26;
	@%p385 bra 	$L__BB0_551;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r471;
  cvt.f32.f16 %f404, high;}

	// end inline asm
	add.s32 	%r1964, %r797, %r397;
	mul.wide.s32 	%rd489, %r1964, 4;
	add.s64 	%rd490, %rd31, %rd489;
	st.global.f32 	[%rd490], %f404;

$L__BB0_551:
	@%p28 bra 	$L__BB0_556;

	not.pred 	%p387, %p25;
	@%p387 bra 	$L__BB0_554;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r467;
  cvt.f32.f16 %f405, low;}

	// end inline asm
	add.s32 	%r1966, %r797, %r398;
	mul.wide.s32 	%rd491, %r1966, 4;
	add.s64 	%rd492, %rd31, %rd491;
	st.global.f32 	[%rd492], %f405;

$L__BB0_554:
	not.pred 	%p388, %p27;
	@%p388 bra 	$L__BB0_556;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r467;
  cvt.f32.f16 %f406, high;}

	// end inline asm
	add.s32 	%r1968, %r797, %r399;
	mul.wide.s32 	%rd493, %r1968, 4;
	add.s64 	%rd494, %rd31, %rd493;
	st.global.f32 	[%rd494], %f406;

$L__BB0_556:
	add.s32 	%r2307, %r764, 2;
	add.s32 	%r1969, %r2307, %r789;
	mul.lo.s32 	%r1970, %r1969, %r54;
	sub.s32 	%r798, %r1970, %r935;
	@%p28 bra 	$L__BB0_561;

	not.pred 	%p390, %p24;
	@%p390 bra 	$L__BB0_559;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2402;
  cvt.f32.f16 %f407, low;}

	// end inline asm
	add.s32 	%r1972, %r798, %r396;
	mul.wide.s32 	%rd495, %r1972, 4;
	add.s64 	%rd496, %rd31, %rd495;
	st.global.f32 	[%rd496], %f407;

$L__BB0_559:
	not.pred 	%p391, %p26;
	@%p391 bra 	$L__BB0_561;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2402;
  cvt.f32.f16 %f408, high;}

	// end inline asm
	add.s32 	%r1974, %r798, %r397;
	mul.wide.s32 	%rd497, %r1974, 4;
	add.s64 	%rd498, %rd31, %rd497;
	st.global.f32 	[%rd498], %f408;

$L__BB0_561:
	@%p28 bra 	$L__BB0_566;

	not.pred 	%p393, %p25;
	@%p393 bra 	$L__BB0_564;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2398;
  cvt.f32.f16 %f409, low;}

	// end inline asm
	add.s32 	%r1976, %r798, %r398;
	mul.wide.s32 	%rd499, %r1976, 4;
	add.s64 	%rd500, %rd31, %rd499;
	st.global.f32 	[%rd500], %f409;

$L__BB0_564:
	not.pred 	%p394, %p27;
	@%p394 bra 	$L__BB0_566;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2398;
  cvt.f32.f16 %f410, high;}

	// end inline asm
	add.s32 	%r1978, %r798, %r399;
	mul.wide.s32 	%rd501, %r1978, 4;
	add.s64 	%rd502, %rd31, %rd501;
	st.global.f32 	[%rd502], %f410;

$L__BB0_566:
	add.s32 	%r799, %r763, 1;
	add.s32 	%r1979, %r799, %r768;
	mov.u32 	%r1980, 8;
	sub.s32 	%r1981, %r1980, %r933;
	add.s32 	%r1982, %r1981, %r934;
	mad.lo.s32 	%r1983, %r1979, %r1982, %r764;
	mul.lo.s32 	%r1984, %r1983, %r54;
	sub.s32 	%r800, %r1984, %r935;
	@%p28 bra 	$L__BB0_571;

	not.pred 	%p396, %p24;
	@%p396 bra 	$L__BB0_569;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2470;
  cvt.f32.f16 %f411, low;}

	// end inline asm
	add.s32 	%r1986, %r800, %r396;
	mul.wide.s32 	%rd503, %r1986, 4;
	add.s64 	%rd504, %rd31, %rd503;
	st.global.f32 	[%rd504], %f411;

$L__BB0_569:
	not.pred 	%p397, %p26;
	@%p397 bra 	$L__BB0_571;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2470;
  cvt.f32.f16 %f412, high;}

	// end inline asm
	add.s32 	%r1988, %r800, %r397;
	mul.wide.s32 	%rd505, %r1988, 4;
	add.s64 	%rd506, %rd31, %rd505;
	st.global.f32 	[%rd506], %f412;

$L__BB0_571:
	@%p28 bra 	$L__BB0_576;

	not.pred 	%p399, %p25;
	@%p399 bra 	$L__BB0_574;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2463;
  cvt.f32.f16 %f413, low;}

	// end inline asm
	add.s32 	%r1990, %r800, %r398;
	mul.wide.s32 	%rd507, %r1990, 4;
	add.s64 	%rd508, %rd31, %rd507;
	st.global.f32 	[%rd508], %f413;

$L__BB0_574:
	not.pred 	%p400, %p27;
	@%p400 bra 	$L__BB0_576;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2463;
  cvt.f32.f16 %f414, high;}

	// end inline asm
	add.s32 	%r1992, %r800, %r399;
	mul.wide.s32 	%rd509, %r1992, 4;
	add.s64 	%rd510, %rd31, %rd509;
	st.global.f32 	[%rd510], %f414;

$L__BB0_576:
	mov.u32 	%r2302, 8;
	sub.s32 	%r2301, %r2302, %r931;
	add.s32 	%r2300, %r2301, %r932;
	add.s32 	%r2299, %r768, %r2300;
	mov.u32 	%r1993, 8;
	sub.s32 	%r1994, %r1993, %r933;
	add.s32 	%r1995, %r1994, %r934;
	add.s32 	%r1996, %r799, %r2299;
	mul.lo.s32 	%r801, %r1996, %r1995;
	add.s32 	%r1997, %r764, %r801;
	mul.lo.s32 	%r1998, %r1997, %r54;
	sub.s32 	%r802, %r1998, %r935;
	@%p28 bra 	$L__BB0_581;

	not.pred 	%p402, %p24;
	@%p402 bra 	$L__BB0_579;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2469;
  cvt.f32.f16 %f415, low;}

	// end inline asm
	add.s32 	%r2000, %r802, %r396;
	mul.wide.s32 	%rd511, %r2000, 4;
	add.s64 	%rd512, %rd31, %rd511;
	st.global.f32 	[%rd512], %f415;

$L__BB0_579:
	not.pred 	%p403, %p26;
	@%p403 bra 	$L__BB0_581;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2469;
  cvt.f32.f16 %f416, high;}

	// end inline asm
	add.s32 	%r2002, %r802, %r397;
	mul.wide.s32 	%rd513, %r2002, 4;
	add.s64 	%rd514, %rd31, %rd513;
	st.global.f32 	[%rd514], %f416;

$L__BB0_581:
	@%p28 bra 	$L__BB0_586;

	not.pred 	%p405, %p25;
	@%p405 bra 	$L__BB0_584;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2462;
  cvt.f32.f16 %f417, low;}

	// end inline asm
	add.s32 	%r2004, %r802, %r398;
	mul.wide.s32 	%rd515, %r2004, 4;
	add.s64 	%rd516, %rd31, %rd515;
	st.global.f32 	[%rd516], %f417;

$L__BB0_584:
	not.pred 	%p406, %p27;
	@%p406 bra 	$L__BB0_586;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2462;
  cvt.f32.f16 %f418, high;}

	// end inline asm
	add.s32 	%r2006, %r802, %r399;
	mul.wide.s32 	%rd517, %r2006, 4;
	add.s64 	%rd518, %rd31, %rd517;
	st.global.f32 	[%rd518], %f418;

$L__BB0_586:
	add.s32 	%r2303, %r764, 1;
	add.s32 	%r2007, %r2303, %r801;
	mul.lo.s32 	%r2008, %r2007, %r54;
	sub.s32 	%r803, %r2008, %r935;
	@%p28 bra 	$L__BB0_591;

	not.pred 	%p408, %p24;
	@%p408 bra 	$L__BB0_589;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2456;
  cvt.f32.f16 %f419, low;}

	// end inline asm
	add.s32 	%r2010, %r803, %r396;
	mul.wide.s32 	%rd519, %r2010, 4;
	add.s64 	%rd520, %rd31, %rd519;
	st.global.f32 	[%rd520], %f419;

$L__BB0_589:
	not.pred 	%p409, %p26;
	@%p409 bra 	$L__BB0_591;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2456;
  cvt.f32.f16 %f420, high;}

	// end inline asm
	add.s32 	%r2012, %r803, %r397;
	mul.wide.s32 	%rd521, %r2012, 4;
	add.s64 	%rd522, %rd31, %rd521;
	st.global.f32 	[%rd522], %f420;

$L__BB0_591:
	@%p28 bra 	$L__BB0_596;

	not.pred 	%p411, %p25;
	@%p411 bra 	$L__BB0_594;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2452;
  cvt.f32.f16 %f421, low;}

	// end inline asm
	add.s32 	%r2014, %r803, %r398;
	mul.wide.s32 	%rd523, %r2014, 4;
	add.s64 	%rd524, %rd31, %rd523;
	st.global.f32 	[%rd524], %f421;

$L__BB0_594:
	not.pred 	%p412, %p27;
	@%p412 bra 	$L__BB0_596;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2452;
  cvt.f32.f16 %f422, high;}

	// end inline asm
	add.s32 	%r2016, %r803, %r399;
	mul.wide.s32 	%rd525, %r2016, 4;
	add.s64 	%rd526, %rd31, %rd525;
	st.global.f32 	[%rd526], %f422;

$L__BB0_596:
	setp.eq.s32 	%p413, %r40, %r1381;
	@%p413 bra 	$L__BB0_598;

	mad.lo.s32 	%r2017, %r918, %r40, %r41;
	mov.u32 	%r2018, _ZN6kernel5shmemE;
	mad.lo.s32 	%r2019, %r2017, 1280, %r2018;
	add.s32 	%r2020, %r2019, -256;
	shl.b32 	%r2021, %r45, 4;
	add.s32 	%r2022, %r2020, %r2021;
	st.shared.v4.u32 	[%r2022+256], {%r2474, %r2472, %r2439, %r2432};
	st.shared.v4.u32 	[%r2022+1024], {%r2516, %r2512, %r2498, %r2491};
	shl.b32 	%r2023, %r45, 3;
	add.s32 	%r2024, %r2020, %r2023;
	st.shared.v2.u32 	[%r2024+768], {%r2504, %r2502};

$L__BB0_598:
	setp.eq.s32 	%p414, %r41, %r1386;
	@%p414 bra 	$L__BB0_602;

	mad.lo.s32 	%r2028, %r917, 384, -64;
	mul.lo.s32 	%r2029, %r2028, %r41;
	mad.lo.s32 	%r2031, %r1382, %r1381, %r2029;
	mad.lo.s32 	%r2032, %r1469, 384, %r2031;
	shl.b32 	%r2033, %r2032, 2;
	mov.u32 	%r2034, _ZN6kernel5shmemE;
	add.s32 	%r2035, %r2034, %r2033;
	add.s32 	%r2036, %r2035, -256;
	shl.b32 	%r2037, %r45, 4;
	add.s32 	%r2038, %r2036, %r2037;
	st.shared.v4.u32 	[%r2038+256], {%r2508, %r2506, %r2484, %r2478};
	st.shared.v4.u32 	[%r2038+1024], {%r2448, %r2444, %r2402, %r2398};
	shl.b32 	%r2039, %r45, 3;
	add.s32 	%r806, %r2036, %r2039;
	@%p413 bra 	$L__BB0_601;

	st.shared.v2.u32 	[%r806], {%r2515, %r2511};

$L__BB0_601:
	st.shared.v2.u32 	[%r806+768], {%r2485, %r2479};

$L__BB0_602:
	setp.ne.s32 	%p416, %r40, %r1381;
	@%p416 bra 	$L__BB0_604;

	ld.param.u64 	%rd563, [%rd1+104];
	cvta.to.global.u64 	%rd562, %rd563;
	mad.lo.s32 	%r2041, %r533, %r920, %r43;
	mul.lo.s32 	%r2042, %r918, %r2041;
	mul.lo.s32 	%r2043, %r2042, 768;
	mad.lo.s32 	%r2044, %r41, 384, %r2043;
	add.s32 	%r2045, %r2044, -64;
	mul.wide.s32 	%rd528, %r2045, 4;
	add.s64 	%rd529, %rd562, %rd528;
	add.s64 	%rd531, %rd529, %rd292;
	st.global.v4.u32 	[%rd531+256], {%r2474, %r2472, %r2439, %r2432};
	st.global.v4.u32 	[%rd531+1024], {%r2516, %r2512, %r2498, %r2491};
	add.s64 	%rd533, %rd529, %rd294;
	st.global.v2.u32 	[%rd533+768], {%r2504, %r2502};
	st.global.v2.u32 	[%rd533+1536], {%r2515, %r2511};

$L__BB0_604:
	setp.ne.s32 	%p417, %r41, %r1386;
	@%p417 bra 	$L__BB0_609;

	ld.param.u64 	%rd565, [%rd1+104];
	cvta.to.global.u64 	%rd564, %rd565;
	mad.lo.s32 	%r2048, %r534, %r919, %r42;
	mul.lo.s32 	%r2052, %r2048, %r996;
	mad.lo.s32 	%r2055, %r1469, 384, %r2052;
	add.s32 	%r2056, %r2055, -64;
	mad.lo.s32 	%r2059, %r998, %r65, %r2056;
	mul.wide.s32 	%rd534, %r2059, 4;
	add.s64 	%rd535, %rd564, %rd534;
	add.s64 	%rd537, %rd535, %rd292;
	st.global.v4.u32 	[%rd537+256], {%r2508, %r2506, %r2484, %r2478};
	st.global.v4.u32 	[%rd537+1024], {%r2448, %r2444, %r2402, %r2398};
	add.s64 	%rd34, %rd535, %rd294;
	@%p413 bra 	$L__BB0_607;

	st.global.v2.u32 	[%rd34], {%r2515, %r2511};

$L__BB0_607:
	st.global.v2.u32 	[%rd34+768], {%r2485, %r2479};
	@%p239 bra 	$L__BB0_609;

	st.global.v2.u32 	[%rd34+1536], {%r2582, %r2580};

$L__BB0_609:
	setp.ge.s32 	%p420, %r40, %r1381;
	@%p420 bra 	$L__BB0_611;

	mul.lo.s32 	%r2060, %r918, 320;
	mul.lo.s32 	%r2061, %r41, 320;
	mad.lo.s32 	%r2062, %r2060, %r40, %r2061;
	add.s32 	%r2066, %r995, -64;
	mad.lo.s32 	%r2070, %r2066, %r1386, %r1383;
	add.s32 	%r2071, %r2062, %r2070;
	shl.b32 	%r2072, %r2071, 2;
	mov.u32 	%r2073, _ZN6kernel5shmemE;
	add.s32 	%r2074, %r2073, %r2072;
	shl.b32 	%r2075, %r45, 4;
	add.s32 	%r2076, %r2074, %r2075;
	st.shared.v4.u32 	[%r2076], {%r2631, %r2630, %r2626, %r2624};
	shl.b32 	%r2077, %r45, 3;
	add.s32 	%r2078, %r2074, %r2077;
	st.shared.v2.u32 	[%r2078+512], {%r2503, %r2501};
	st.shared.v4.u32 	[%r2076+768], {%r2514, %r2510, %r2494, %r2487};

$L__BB0_611:
	setp.ge.s32 	%p421, %r41, %r1386;
	@%p421 bra 	$L__BB0_615;

	mad.lo.s32 	%r2084, %r1469, 384, %r1389;
	mad.lo.s32 	%r2087, %r1384, %r41, %r2084;
	add.s32 	%r2093, %r2087, %r1387;
	shl.b32 	%r2094, %r2093, 2;
	mov.u32 	%r2095, _ZN6kernel5shmemE;
	add.s32 	%r2096, %r2095, %r2094;
	shl.b32 	%r2097, %r45, 3;
	add.s32 	%r2098, %r2096, %r2097;
	@%p420 bra 	$L__BB0_614;

	add.s32 	%r2286, %r2098, -256;
	st.shared.v2.u32 	[%r2286], {%r2513, %r2509};

$L__BB0_614:
	shl.b32 	%r2117, %r45, 4;
	add.s32 	%r2118, %r2096, %r2117;
	st.shared.v4.u32 	[%r2118], {%r2507, %r2505, %r2481, %r2475};
	add.s32 	%r2287, %r2098, -256;
	st.shared.v2.u32 	[%r2287+768], {%r2482, %r2476};
	st.shared.v4.u32 	[%r2118+768], {%r2629, %r2628, %r2617, %r2616};

$L__BB0_615:
	bar.sync 	0;
	@%p234 bra 	$L__BB0_617;

	mul.lo.s32 	%r2119, %r918, 320;
	add.s32 	%r2120, %r40, -1;
	mul.lo.s32 	%r2121, %r41, 320;
	mad.lo.s32 	%r2122, %r2119, %r2120, %r2121;
	shl.b32 	%r2123, %r2122, 2;
	mov.u32 	%r2124, _ZN6kernel5shmemE;
	add.s32 	%r2125, %r2124, %r2123;
	add.s32 	%r2126, %r2125, -256;
	shl.b32 	%r2127, %r45, 4;
	add.s32 	%r2128, %r2126, %r2127;
	ld.shared.v4.u32 	{%r2637, %r2635, %r2638, %r2639}, [%r2128+256];
	ld.shared.v4.u32 	{%r2641, %r2640, %r2633, %r2632}, [%r2128+1024];
	shl.b32 	%r2137, %r45, 3;
	add.s32 	%r2138, %r2126, %r2137;
	ld.shared.v2.u32 	{%r2636, %r2634}, [%r2138+768];

$L__BB0_617:
	@%p237 bra 	$L__BB0_620;

	mad.lo.s32 	%r2143, %r917, 384, -64;
	add.s32 	%r2144, %r41, -1;
	mul.lo.s32 	%r2145, %r2143, %r2144;
	mad.lo.s32 	%r2148, %r1382, %r1381, %r2145;
	mad.lo.s32 	%r2149, %r1469, 384, %r2148;
	shl.b32 	%r2150, %r2149, 2;
	mov.u32 	%r2151, _ZN6kernel5shmemE;
	add.s32 	%r2152, %r2151, %r2150;
	add.s32 	%r2153, %r2152, -256;
	shl.b32 	%r2154, %r45, 4;
	add.s32 	%r2155, %r2153, %r2154;
	ld.shared.v4.u32 	{%r2653, %r2652, %r2650, %r2648}, [%r2155+256];
	ld.shared.v4.u32 	{%r2647, %r2646, %r2642, %r2645}, [%r2155+1024];
	shl.b32 	%r2164, %r45, 3;
	add.s32 	%r2165, %r2153, %r2164;
	ld.shared.v2.u32 	{%r2651, %r2649}, [%r2165+768];
	@%p234 bra 	$L__BB0_620;

	add.s32 	%r2288, %r2165, 768;
	ld.shared.v2.u32 	{%r2570, %r2572}, [%r2288+768];

$L__BB0_620:
	ld.param.u64 	%rd539, [%rd1+104];
	cvta.to.global.u64 	%rd35, %rd539;
	mov.u32 	%r2677, %r2424;
	mov.u32 	%r2659, %r2544;
	mov.u32 	%r2661, %r2546;
	mov.u32 	%r2405, %r2548;
	mov.u32 	%r2679, %r2419;
	mov.u32 	%r2413, %r2549;
	mov.u32 	%r2666, %r2550;
	mov.u32 	%r2667, %r2551;
	mov.u32 	%r2668, %r2552;
	mov.u32 	%r2669, %r2553;
	mov.u32 	%r2684, %r2566;
	mov.u32 	%r2685, %r2567;
	@%p239 bra 	$L__BB0_624;

	mad.lo.s32 	%r2171, %r533, %r920, %r43;
	mad.lo.s32 	%r2172, %r2171, 768, 384;
	mul.lo.s32 	%r2173, %r2172, %r918;
	mad.lo.s32 	%r2174, %r41, 384, %r2173;
	add.s32 	%r2175, %r2174, -128;
	mul.wide.s32 	%rd540, %r2175, 4;
	add.s64 	%rd541, %rd35, %rd540;
	add.s64 	%rd543, %rd541, %rd292;
	add.s64 	%rd36, %rd543, 512;
	mov.u32 	%r2677, %r2424;
	mov.u32 	%r2679, %r2419;
	mov.u32 	%r2684, %r2566;
	mov.u32 	%r2685, %r2567;
	@%p237 bra 	$L__BB0_623;

	ld.global.v4.u32 	{%r2684, %r2685, %r2677, %r2679}, [%rd36+-512];

$L__BB0_623:
	ld.global.v4.u32 	{%r2667, %r2669, %r2666, %r2668}, [%rd36];
	ld.global.v4.u32 	{%r2413, %r2405, %r2661, %r2659}, [%rd36+512];
	ld.global.v4.u32 	{%r2547, %r2545, %r2555, %r2554}, [%rd36+1024];

$L__BB0_624:
	mov.u32 	%r2389, %r2556;
	mov.u32 	%r2393, %r2557;
	mov.u32 	%r2394, %r2558;
	mov.u32 	%r2411, %r2560;
	mov.u32 	%r2429, %r2562;
	mov.u32 	%r2681, %r2563;
	mov.u32 	%r2436, %r2564;
	mov.u32 	%r2683, %r2565;
	@%p242 bra 	$L__BB0_626;

	mad.lo.s32 	%r2193, %r534, %r919, %r42;
	mad.lo.s32 	%r2199, %r1469, 384, %r66;
	mad.lo.s32 	%r2200, %r2193, %r996, %r2199;
	mad.lo.s32 	%r2203, %r998, %r65, %r2200;
	mul.wide.s32 	%rd544, %r2203, 4;
	add.s64 	%rd545, %rd35, %rd544;
	add.s64 	%rd547, %rd545, %rd292;
	ld.global.v4.u32 	{%r2683, %r2681, %r2394, %r2393}, [%rd547+512];
	ld.global.v4.u32 	{%r2436, %r2429, %r2389, %r2411}, [%rd547+1024];
	ld.global.v4.u32 	{%r2684, %r2685, %r2677, %r2679}, [%rd547+1536];

$L__BB0_626:
	add.s32 	%r913, %r2517, 1;
	bar.sync 	0;
	@%p413 bra 	$L__BB0_629;

	setp.ne.s32 	%p443, %r41, %r1386;
	shl.b32 	%r2217, %r41, 8;
	shl.b32 	%r2221, %r918, 8;
	or.b32  	%r2222, %r2221, 128;
	mad.lo.s32 	%r2223, %r2222, %r40, %r1389;
	add.s32 	%r2224, %r2223, %r2217;
	shl.b32 	%r2225, %r2224, 2;
	mov.u32 	%r2226, _ZN6kernel5shmemE;
	add.s32 	%r2227, %r2226, %r2225;
	shl.b32 	%r2228, %r45, 4;
	add.s32 	%r914, %r2227, %r2228;
	st.shared.v4.u32 	[%r914], {%r2565, %r2563, %r2438, %r2431};
	st.shared.v4.u32 	[%r914+512], {%r2473, %r2471, %r2467, %r2460};
	@%p443 bra 	$L__BB0_629;

	st.shared.v4.u32 	[%r914+1024], {%r2468, %r2461, %r2497, %r2490};

$L__BB0_629:
	setp.eq.s32 	%p441, %r41, %r1386;
	@%p441 bra 	$L__BB0_631;

	mul.lo.s32 	%r2232, %r1469, 384;
	mad.lo.s32 	%r2233, %r66, %r41, %r2232;
	mad.lo.s32 	%r2236, %r1384, %r1386, %r2233;
	mad.lo.s32 	%r2239, %r1382, %r1381, %r2236;
	shl.b32 	%r2240, %r2239, 2;
	mov.u32 	%r2241, _ZN6kernel5shmemE;
	add.s32 	%r2242, %r2241, %r2240;
	shl.b32 	%r2243, %r45, 4;
	add.s32 	%r2244, %r2242, %r2243;
	st.shared.v4.u32 	[%r2244], {%r2468, %r2461, %r2497, %r2490};
	st.shared.v4.u32 	[%r2244+512], {%r2455, %r2451, %r2415, %r2407};
	st.shared.v4.u32 	[%r2244+1024], {%r2454, %r2450, %r2546, %r2544};

$L__BB0_631:
	setp.ne.s32 	%p442, %r40, %r1381;
	ld.param.u64 	%rd548, [%rd1+104];
	cvta.to.global.u64 	%rd37, %rd548;
	@%p442 bra 	$L__BB0_633;

	mad.lo.s32 	%r2246, %r533, %r920, %r43;
	mad.lo.s32 	%r2247, %r2246, 768, 384;
	mul.lo.s32 	%r2248, %r2247, %r918;
	mad.lo.s32 	%r2249, %r41, 384, %r2248;
	add.s32 	%r2250, %r2249, -128;
	mul.wide.s32 	%rd549, %r2250, 4;
	add.s64 	%rd550, %rd37, %rd549;
	add.s64 	%rd552, %rd550, %rd292;
	st.global.v4.u32 	[%rd552+512], {%r2565, %r2563, %r2438, %r2431};
	st.global.v4.u32 	[%rd552+1024], {%r2473, %r2471, %r2467, %r2460};
	st.global.v4.u32 	[%rd552+1536], {%r2468, %r2461, %r2497, %r2490};

$L__BB0_633:
	setp.ne.s32 	%p444, %r41, %r1386;
	@%p444 bra 	$L__BB0_636;

	mad.lo.s32 	%r2252, %r534, %r919, %r42;
	mad.lo.s32 	%r2258, %r1469, 384, %r66;
	mad.lo.s32 	%r2259, %r2252, %r996, %r2258;
	mad.lo.s32 	%r2262, %r998, %r65, %r2259;
	mul.wide.s32 	%rd553, %r2262, 4;
	add.s64 	%rd554, %rd37, %rd553;
	add.s64 	%rd38, %rd554, %rd292;
	st.global.v4.u32 	[%rd38], {%r2468, %r2461, %r2497, %r2490};
	st.global.v4.u32 	[%rd38+512], {%r2455, %r2451, %r2415, %r2407};
	st.global.v4.u32 	[%rd38+1024], {%r2454, %r2450, %r2546, %r2544};
	@%p239 bra 	$L__BB0_636;

	st.global.v4.u32 	[%rd38+1536], {%r2547, %r2545, %r2555, %r2554};

$L__BB0_636:
	rem.s32 	%r2263, %r2517, %r921;
	setp.eq.s32 	%p435, %r2263, 0;
	@%p435 bra 	$L__BB0_638;

	bar.sync 	0;
	bra.uni 	$L__BB0_645;

$L__BB0_638:
	@%p218 bra 	$L__BB0_640;

	// begin inline asm
	trap;
	// end inline asm

$L__BB0_640:
	bar.sync 	0;
	@%p219 bra 	$L__BB0_644;

	membar.gl;
	setp.eq.s32 	%p438, %r401, %r402;
	mov.u32 	%r2278, -2147483647;
	sub.s32 	%r2279, %r2278, %r400;
	selp.b32 	%r2267, %r2279, 1, %p438;
	// begin inline asm
	atom.add.release.gpu.u32 %r2266,[%rd25],%r2267;
	// end inline asm

$L__BB0_642:
	ld.volatile.u32 	%r2280, [%rd25];
	xor.b32  	%r2281, %r2280, %r2266;
	setp.gt.s32 	%p439, %r2281, -1;
	@%p439 bra 	$L__BB0_642;

	// begin inline asm
	ld.acquire.gpu.u32 %r2282,[%rd25];
	// end inline asm

$L__BB0_644:
	bar.sync 	0;

$L__BB0_645:
	setp.lt.s32 	%p440, %r913, %r48;
	mov.u32 	%r2390, %r2566;
	mov.u32 	%r2544, %r2659;
	mov.u32 	%r2398, %r2632;
	mov.u32 	%r2546, %r2661;
	mov.u32 	%r2402, %r2633;
	mov.u32 	%r2404, %r2567;
	mov.u32 	%r2406, %r2553;
	mov.u32 	%r2407, %r2552;
	mov.u32 	%r2414, %r2551;
	mov.u32 	%r2415, %r2550;
	mov.u32 	%r2550, %r2666;
	mov.u32 	%r2551, %r2667;
	mov.u32 	%r2563, %r2681;
	mov.u32 	%r2431, %r2557;
	mov.u32 	%r2432, %r2648;
	mov.u32 	%r2552, %r2668;
	mov.u32 	%r2553, %r2669;
	mov.u32 	%r2565, %r2683;
	mov.u32 	%r2438, %r2558;
	mov.u32 	%r2439, %r2650;
	mov.u32 	%r2566, %r2684;
	mov.u32 	%r2444, %r2640;
	mov.u32 	%r2567, %r2685;
	mov.u32 	%r2448, %r2641;
	mov.u32 	%r2450, %r2548;
	mov.u32 	%r2451, %r421;
	mov.u32 	%r2454, %r2549;
	mov.u32 	%r2455, %r429;
	mov.u32 	%r2460, %r435;
	mov.u32 	%r2461, %r436;
	mov.u32 	%r2467, %r440;
	mov.u32 	%r2468, %r441;
	mov.u32 	%r2471, %r2562;
	mov.u32 	%r2472, %r2652;
	mov.u32 	%r2473, %r2564;
	mov.u32 	%r2474, %r2653;
	mov.u32 	%r2475, %r464;
	mov.u32 	%r2476, %r2618;
	mov.u32 	%r2478, %r467;
	mov.u32 	%r2479, %r424;
	mov.u32 	%r2481, %r468;
	mov.u32 	%r2482, %r2620;
	mov.u32 	%r2484, %r471;
	mov.u32 	%r2485, %r432;
	mov.u32 	%r2487, %r472;
	mov.u32 	%r2490, %r474;
	mov.u32 	%r2491, %r477;
	mov.u32 	%r2494, %r479;
	mov.u32 	%r2497, %r481;
	mov.u32 	%r2498, %r484;
	mov.u32 	%r2501, %r2625;
	mov.u32 	%r2502, %r448;
	mov.u32 	%r2503, %r2627;
	mov.u32 	%r2504, %r455;
	mov.u32 	%r2505, %r492;
	mov.u32 	%r2506, %r495;
	mov.u32 	%r2507, %r498;
	mov.u32 	%r2508, %r501;
	mov.u32 	%r2509, %r503;
	mov.u32 	%r2510, %r504;
	mov.u32 	%r2511, %r507;
	mov.u32 	%r2512, %r508;
	mov.u32 	%r2513, %r510;
	mov.u32 	%r2514, %r511;
	mov.u32 	%r2515, %r514;
	mov.u32 	%r2516, %r515;
	mov.u32 	%r2517, %r913;
	@%p440 bra 	$L__BB0_323;

$L__BB0_646:
	ret;

}

