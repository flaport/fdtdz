//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31833905
// Cuda compilation tools, release 11.8, V11.8.89
// Based on NVVM 7.0.1
//

.version 7.8
.target sm_75
.address_size 64

	// .globl	_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE
.global .align 4 .b8 _ZZN4cuda3std3__48__detail21__stronger_order_cudaEiiE7__xform[16] = {3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE[24] = {254, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllJE[20] = {254, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllKE[8] = {0, 0, 0, 0, 1, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond6AllEhcE[12] = {0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond6AllXyzE[12] = {0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.extern .shared .align 16 .b8 _ZN6kernel5shmemE[];

.visible .entry _ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE(
	.param .align 8 .b8 _ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0[168]
)
{
	.reg .pred 	%p<387>;
	.reg .f32 	%f<400>;
	.reg .b32 	%r<2619>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<545>;


	mov.b64 	%rd39, _ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0;
	mov.u64 	%rd1, %rd39;
	ld.param.v2.u32 	{%r916, %r917}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0];
	ld.param.v2.u32 	{%r918, %r919}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+8];
	ld.param.v2.u32 	{%r920, %r921}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+16];
	ld.param.v2.u32 	{%r922, %r923}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+24];
	ld.param.v2.u32 	{%r924, %r925}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+32];
	ld.param.v2.u32 	{%r926, %r927}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+40];
	ld.param.v2.u32 	{%r928, %r929}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+48];
	ld.param.v2.u32 	{%r930, %r931}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+56];
	ld.param.v2.u32 	{%r932, %r933}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+64];
	ld.param.v2.u32 	{%r934, %r935}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+72];
	mov.u32 	%r34, %tid.y;
	mov.u32 	%r35, %tid.z;
	mov.u32 	%r36, %ctaid.y;
	mov.u32 	%r37, %ctaid.z;
	mov.u32 	%r936, 32;
	sub.s32 	%r38, %r936, %r923;
	mov.u32 	%r39, %tid.x;
	setp.le.s32 	%p15, %r38, %r39;
	add.s32 	%r937, %r929, -1;
	add.s32 	%r938, %r927, %r921;
	add.s32 	%r939, %r938, %r922;
	add.s32 	%r940, %r939, 1;
	mad.lo.s32 	%r941, %r937, %r928, %r940;
	mul.lo.s32 	%r942, %r916, %r918;
	shl.b32 	%r40, %r942, 1;
	shl.b32 	%r943, %r942, 2;
	div.s32 	%r944, %r941, %r943;
	add.s32 	%r945, %r944, 1;
	mul.lo.s32 	%r946, %r945, %r922;
	mul.lo.s32 	%r947, %r917, %r919;
	shl.b32 	%r41, %r947, 1;
	div.s32 	%r948, %r946, %r41;
	add.s32 	%r949, %r948, 1;
	mul.lo.s32 	%r42, %r949, %r921;
	ld.param.u64 	%rd40, [%rd1+160];
	cvta.to.global.u64 	%rd2, %rd40;
	mad.lo.s32 	%r952, %r918, %r37, %r36;
	mad.lo.s32 	%r953, %r952, %r917, %r35;
	mad.lo.s32 	%r954, %r953, %r916, %r34;
	shl.b32 	%r43, %r954, 5;
	add.s32 	%r2239, %r43, %r39;
	mul.lo.s32 	%r955, %r947, %r942;
	shl.b32 	%r47, %r955, 5;
	sub.s32 	%r48, %r931, %r930;
	mul.lo.s32 	%r956, %r929, %r48;
	sub.s32 	%r49, %r933, %r932;
	mul.lo.s32 	%r957, %r956, %r49;
	sub.s32 	%r50, %r935, %r934;
	mul.lo.s32 	%r958, %r957, %r50;
	mul.lo.s32 	%r51, %r958, 3;
	setp.ge.s32 	%p16, %r2239, %r51;
	@%p16 bra 	$L__BB0_9;

	not.b32 	%r959, %r39;
	add.s32 	%r960, %r51, %r959;
	sub.s32 	%r961, %r960, %r43;
	mul.lo.s32 	%r962, %r947, %r916;
	mul.lo.s32 	%r963, %r962, %r918;
	shl.b32 	%r964, %r963, 5;
	div.u32 	%r52, %r961, %r964;
	add.s32 	%r965, %r52, 1;
	and.b32  	%r2236, %r965, 3;
	setp.eq.s32 	%p17, %r2236, 0;
	mov.u32 	%r2237, %r2239;
	@%p17 bra 	$L__BB0_6;

	mov.u32 	%r2237, %r2239;

$L__BB0_5:
	.pragma "nounroll";
	mul.wide.s32 	%rd41, %r2237, 4;
	add.s64 	%rd42, %rd2, %rd41;
	mov.u32 	%r966, 0;
	st.global.u32 	[%rd42], %r966;
	add.s32 	%r2237, %r2237, %r47;
	add.s32 	%r2236, %r2236, -1;
	setp.ne.s32 	%p18, %r2236, 0;
	@%p18 bra 	$L__BB0_5;

$L__BB0_6:
	setp.lt.u32 	%p19, %r52, 3;
	@%p19 bra 	$L__BB0_9;

	mul.wide.s32 	%rd45, %r47, 4;

$L__BB0_8:
	mul.wide.s32 	%rd43, %r2237, 4;
	add.s64 	%rd44, %rd2, %rd43;
	mov.u32 	%r967, 0;
	st.global.u32 	[%rd44], %r967;
	add.s64 	%rd46, %rd44, %rd45;
	st.global.u32 	[%rd46], %r967;
	add.s32 	%r968, %r2237, %r47;
	add.s32 	%r969, %r968, %r47;
	add.s64 	%rd47, %rd46, %rd45;
	st.global.u32 	[%rd47], %r967;
	add.s32 	%r970, %r969, %r47;
	add.s64 	%rd48, %rd47, %rd45;
	st.global.u32 	[%rd48], %r967;
	add.s32 	%r2237, %r970, %r47;
	setp.lt.s32 	%p20, %r2237, %r51;
	@%p20 bra 	$L__BB0_8;

$L__BB0_9:
	ld.param.u64 	%rd49, [%rd1+80];
	cvta.to.global.u64 	%rd3, %rd49;
	sub.s32 	%r971, %r922, %r40;
	div.s32 	%r972, %r971, %r41;
	mul.lo.s32 	%r973, %r972, %r921;
	sub.s32 	%r61, %r973, %r40;
	sub.s32 	%r974, %r921, %r41;
	mul.lo.s32 	%r975, %r974, %r918;
	mul.lo.s32 	%r62, %r916, 384;
	add.s32 	%r976, %r62, %r62;
	add.s32 	%r977, %r976, 128;
	mul.lo.s32 	%r979, %r947, 768;
	mul.lo.s32 	%r980, %r975, %r977;
	mad.lo.s32 	%r63, %r979, %r61, %r980;
	bra.uni 	$L__BB0_10;

$L__BB0_617:
	mov.f32 	%f399, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f399;
  cvt.rn.f16.f32 high, %f399;
  mov.b32 %r2217, {low,high};}

	// end inline asm
	mul.wide.s32 	%rd534, %r2239, 4;
	add.s64 	%rd535, %rd3, %rd534;
	st.global.u32 	[%rd535], %r2217;
	add.s32 	%r2239, %r2239, %r47;

$L__BB0_10:
	setp.lt.s32 	%p21, %r2239, %r63;
	@%p21 bra 	$L__BB0_617;

	ld.param.u64 	%rd50, [%rd1+120];
	cvta.to.global.u64 	%rd5, %rd50;
	ld.param.u64 	%rd51, [%rd1+88];
	cvta.to.global.u64 	%rd6, %rd51;
	mad.lo.s32 	%r2281, %r916, %r36, %r34;
	mul.lo.s32 	%r68, %r917, %r37;
	add.s32 	%r69, %r68, %r35;
	setp.ge.s32 	%p22, %r2281, %r921;
	@%p22 bra 	$L__BB0_35;

	setp.gt.s32 	%p23, %r38, %r39;
	mov.u32 	%r981, 31;
	sub.s32 	%r982, %r981, %r39;
	selp.b32 	%r983, %r39, %r982, %p23;
	shl.b32 	%r984, %r983, 2;
	mov.u32 	%r985, 2;
	sub.s32 	%r70, %r984, %r924;
	shl.b32 	%r986, %r923, 2;
	mov.u32 	%r987, 128;
	sub.s32 	%r71, %r987, %r986;
	add.s32 	%r72, %r931, -1;
	add.s32 	%r73, %r933, -1;
	add.s32 	%r74, %r935, -1;
	sub.s32 	%r988, %r985, %r924;
	add.s32 	%r75, %r988, %r984;
	mul.lo.s32 	%r989, %r922, %r921;
	shl.b32 	%r76, %r989, 6;
	add.s32 	%r77, %r921, -1;
	add.s32 	%r78, %r70, 1;
	add.s32 	%r79, %r75, 1;
	shl.b32 	%r80, %r39, 1;
	or.b32  	%r81, %r80, 1;
	shr.u32 	%r990, %r81, 31;
	add.s32 	%r991, %r81, %r990;
	shr.s32 	%r83, %r991, 1;
	and.b32  	%r992, %r991, -2;
	sub.s32 	%r993, %r81, %r992;
	add.s32 	%r82, %r993, %r76;
	rem.s32 	%r1039, %r78, %r71;
	add.s32 	%r1040, %r1039, %r71;
	rem.s32 	%r1041, %r1040, %r71;
	rem.s32 	%r1044, %r79, %r71;
	add.s32 	%r1045, %r1044, %r71;
	rem.s32 	%r1046, %r1045, %r71;
	mov.u32 	%r2240, %r2281;

$L__BB0_13:
	setp.ge.s32 	%p24, %r69, %r922;
	@%p24 bra 	$L__BB0_34;

	setp.gt.s32 	%p25, %r930, %r2240;
	setp.gt.s32 	%p26, %r931, %r2240;
	selp.b32 	%r994, %r2240, %r72, %p26;
	selp.b32 	%r995, %r930, %r994, %p25;
	sub.s32 	%r996, %r995, %r930;
	add.s32 	%r85, %r77, %r2240;
	rem.s32 	%r997, %r70, %r71;
	add.s32 	%r998, %r997, %r71;
	rem.s32 	%r999, %r998, %r71;
	setp.gt.s32 	%p27, %r934, %r999;
	setp.gt.s32 	%p28, %r935, %r999;
	selp.b32 	%r1000, %r999, %r74, %p28;
	selp.b32 	%r1001, %r934, %r1000, %p27;
	rem.s32 	%r1002, %r75, %r71;
	add.s32 	%r1003, %r1002, %r71;
	rem.s32 	%r1004, %r1003, %r71;
	setp.gt.s32 	%p29, %r934, %r1004;
	setp.gt.s32 	%p30, %r935, %r1004;
	selp.b32 	%r1005, %r1004, %r74, %p30;
	selp.b32 	%r1006, %r934, %r1005, %p29;
	sub.s32 	%r86, %r1001, %r934;
	sub.s32 	%r87, %r1006, %r934;
	mul.lo.s32 	%r88, %r996, %r49;
	add.s32 	%r1007, %r996, %r48;
	mul.lo.s32 	%r89, %r1007, %r49;
	add.s32 	%r1008, %r1007, %r48;
	mul.lo.s32 	%r90, %r1008, %r49;
	mov.u32 	%r2241, %r69;

$L__BB0_15:
	setp.gt.s32 	%p31, %r933, %r2241;
	selp.b32 	%r1009, %r2241, %r73, %p31;
	setp.gt.s32 	%p32, %r932, %r2241;
	selp.b32 	%r1010, %r932, %r1009, %p32;
	sub.s32 	%r92, %r1010, %r932;
	mul.lo.s32 	%r93, %r2241, %r921;
	add.s32 	%r94, %r93, %r2240;
	shl.b32 	%r95, %r94, 6;
	@%p23 bra 	$L__BB0_17;
	bra.uni 	$L__BB0_16;

$L__BB0_17:
	add.s32 	%r1013, %r92, %r88;
	mul.lo.s32 	%r1014, %r1013, %r50;
	add.s32 	%r1015, %r86, %r1014;
	mul.wide.s32 	%rd52, %r1015, 4;
	add.s64 	%rd53, %rd5, %rd52;
	ld.global.f32 	%f40, [%rd53];
	add.s32 	%r1016, %r87, %r1014;
	mul.wide.s32 	%rd54, %r1016, 4;
	add.s64 	%rd55, %rd5, %rd54;
	ld.global.f32 	%f41, [%rd55];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f40;
  cvt.rn.f16.f32 high, %f41;
  mov.b32 %r2242, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_18;

$L__BB0_16:
	mov.f32 	%f39, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f39;
  cvt.rn.f16.f32 high, %f39;
  mov.b32 %r2242, {low,high};}

	// end inline asm

$L__BB0_18:
	shl.b32 	%r99, %r94, 5;
	add.s32 	%r1017, %r99, %r39;
	shl.b32 	%r1018, %r1017, 2;
	add.s32 	%r1019, %r76, %r1018;
	mul.wide.s32 	%rd56, %r1019, 4;
	add.s64 	%rd57, %rd6, %rd56;
	st.global.u32 	[%rd57], %r2242;
	@%p23 bra 	$L__BB0_20;
	bra.uni 	$L__BB0_19;

$L__BB0_20:
	add.s32 	%r1022, %r92, %r89;
	mul.lo.s32 	%r1023, %r1022, %r50;
	add.s32 	%r1024, %r86, %r1023;
	mul.wide.s32 	%rd58, %r1024, 4;
	add.s64 	%rd59, %rd5, %rd58;
	ld.global.f32 	%f44, [%rd59];
	add.s32 	%r1025, %r87, %r1023;
	mul.wide.s32 	%rd60, %r1025, 4;
	add.s64 	%rd61, %rd5, %rd60;
	ld.global.f32 	%f45, [%rd61];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f44;
  cvt.rn.f16.f32 high, %f45;
  mov.b32 %r2243, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_21;

$L__BB0_19:
	mov.f32 	%f43, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f43;
  cvt.rn.f16.f32 high, %f43;
  mov.b32 %r2243, {low,high};}

	// end inline asm

$L__BB0_21:
	add.s32 	%r1026, %r80, %r95;
	mul.wide.s32 	%rd62, %r1026, 4;
	add.s64 	%rd63, %rd6, %rd62;
	st.global.u32 	[%rd63], %r2243;
	@%p23 bra 	$L__BB0_23;
	bra.uni 	$L__BB0_22;

$L__BB0_23:
	add.s32 	%r1029, %r92, %r90;
	mul.lo.s32 	%r1030, %r1029, %r50;
	add.s32 	%r1031, %r86, %r1030;
	mul.wide.s32 	%rd64, %r1031, 4;
	add.s64 	%rd65, %rd5, %rd64;
	ld.global.f32 	%f48, [%rd65];
	add.s32 	%r1032, %r87, %r1030;
	mul.wide.s32 	%rd66, %r1032, 4;
	add.s64 	%rd67, %rd5, %rd66;
	ld.global.f32 	%f49, [%rd67];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f48;
  cvt.rn.f16.f32 high, %f49;
  mov.b32 %r2244, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_24;

$L__BB0_22:
	mov.f32 	%f47, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f47;
  cvt.rn.f16.f32 high, %f47;
  mov.b32 %r2244, {low,high};}

	// end inline asm

$L__BB0_24:
	rem.s32 	%r1033, %r85, %r921;
	add.s32 	%r1034, %r1033, %r93;
	shl.b32 	%r106, %r1034, 5;
	add.s32 	%r1035, %r106, %r39;
	shl.b32 	%r1036, %r1035, 2;
	add.s32 	%r1037, %r76, %r1036;
	add.s32 	%r1038, %r1037, 2;
	mul.wide.s32 	%rd68, %r1038, 4;
	add.s64 	%rd69, %rd6, %rd68;
	st.global.u32 	[%rd69], %r2244;
	setp.gt.s32 	%p36, %r934, %r1041;
	setp.gt.s32 	%p37, %r935, %r1041;
	selp.b32 	%r1042, %r1041, %r74, %p37;
	selp.b32 	%r1043, %r934, %r1042, %p36;
	setp.gt.s32 	%p38, %r934, %r1046;
	setp.gt.s32 	%p39, %r935, %r1046;
	selp.b32 	%r1047, %r1046, %r74, %p39;
	selp.b32 	%r1048, %r934, %r1047, %p38;
	sub.s32 	%r107, %r1043, %r934;
	sub.s32 	%r108, %r1048, %r934;
	@%p23 bra 	$L__BB0_26;
	bra.uni 	$L__BB0_25;

$L__BB0_26:
	add.s32 	%r1051, %r92, %r88;
	mul.lo.s32 	%r1052, %r1051, %r50;
	add.s32 	%r1053, %r107, %r1052;
	mul.wide.s32 	%rd70, %r1053, 4;
	add.s64 	%rd71, %rd5, %rd70;
	ld.global.f32 	%f52, [%rd71];
	add.s32 	%r1054, %r108, %r1052;
	mul.wide.s32 	%rd72, %r1054, 4;
	add.s64 	%rd73, %rd5, %rd72;
	ld.global.f32 	%f53, [%rd73];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f52;
  cvt.rn.f16.f32 high, %f53;
  mov.b32 %r2245, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_27;

$L__BB0_25:
	mov.f32 	%f51, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f51;
  cvt.rn.f16.f32 high, %f51;
  mov.b32 %r2245, {low,high};}

	// end inline asm

$L__BB0_27:
	add.s32 	%r1055, %r99, %r83;
	shl.b32 	%r1056, %r1055, 2;
	add.s32 	%r1057, %r82, %r1056;
	mul.wide.s32 	%rd74, %r1057, 4;
	add.s64 	%rd75, %rd6, %rd74;
	st.global.u32 	[%rd75], %r2245;
	@%p23 bra 	$L__BB0_29;
	bra.uni 	$L__BB0_28;

$L__BB0_29:
	add.s32 	%r1060, %r92, %r89;
	mul.lo.s32 	%r1061, %r1060, %r50;
	add.s32 	%r1062, %r107, %r1061;
	mul.wide.s32 	%rd76, %r1062, 4;
	add.s64 	%rd77, %rd5, %rd76;
	ld.global.f32 	%f56, [%rd77];
	add.s32 	%r1063, %r108, %r1061;
	mul.wide.s32 	%rd78, %r1063, 4;
	add.s64 	%rd79, %rd5, %rd78;
	ld.global.f32 	%f57, [%rd79];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f56;
  cvt.rn.f16.f32 high, %f57;
  mov.b32 %r2246, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_30;

$L__BB0_28:
	mov.f32 	%f55, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f55;
  cvt.rn.f16.f32 high, %f55;
  mov.b32 %r2246, {low,high};}

	// end inline asm

$L__BB0_30:
	add.s32 	%r1064, %r81, %r95;
	mul.wide.s32 	%rd80, %r1064, 4;
	add.s64 	%rd81, %rd6, %rd80;
	st.global.u32 	[%rd81], %r2246;
	@%p23 bra 	$L__BB0_32;
	bra.uni 	$L__BB0_31;

$L__BB0_32:
	add.s32 	%r1067, %r92, %r90;
	mul.lo.s32 	%r1068, %r1067, %r50;
	add.s32 	%r1069, %r107, %r1068;
	mul.wide.s32 	%rd82, %r1069, 4;
	add.s64 	%rd83, %rd5, %rd82;
	ld.global.f32 	%f60, [%rd83];
	add.s32 	%r1070, %r108, %r1068;
	mul.wide.s32 	%rd84, %r1070, 4;
	add.s64 	%rd85, %rd5, %rd84;
	ld.global.f32 	%f61, [%rd85];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f60;
  cvt.rn.f16.f32 high, %f61;
  mov.b32 %r2247, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_33;

$L__BB0_31:
	mov.f32 	%f59, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f59;
  cvt.rn.f16.f32 high, %f59;
  mov.b32 %r2247, {low,high};}

	// end inline asm

$L__BB0_33:
	add.s32 	%r1071, %r106, %r83;
	shl.b32 	%r1072, %r1071, 2;
	add.s32 	%r1073, %r82, %r1072;
	add.s32 	%r1074, %r1073, 2;
	mul.wide.s32 	%rd86, %r1074, 4;
	add.s64 	%rd87, %rd6, %rd86;
	st.global.u32 	[%rd87], %r2247;
	add.s32 	%r2241, %r2241, %r947;
	setp.lt.s32 	%p43, %r2241, %r922;
	@%p43 bra 	$L__BB0_15;

$L__BB0_34:
	add.s32 	%r2240, %r2240, %r942;
	setp.lt.s32 	%p44, %r2240, %r921;
	@%p44 bra 	$L__BB0_13;

$L__BB0_35:
	ld.param.u64 	%rd88, [%rd1+128];
	cvta.to.global.u64 	%rd7, %rd88;
	ld.param.u64 	%rd89, [%rd1+96];
	cvta.to.global.u64 	%rd8, %rd89;
	@%p22 bra 	$L__BB0_119;

	shl.b32 	%r120, %r69, 1;
	mov.u64 	%rd90, _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE;
	mov.u32 	%r2248, %r2281;

$L__BB0_37:
	setp.ge.s32 	%p46, %r120, %r922;
	@%p46 bra 	$L__BB0_118;

	mov.u32 	%r2249, %r120;

$L__BB0_39:
	setp.ne.s32 	%p47, %r39, 0;
	@%p47 bra 	$L__BB0_117;

	shr.u32 	%r1076, %r2249, 31;
	add.s32 	%r1077, %r2249, %r1076;
	shr.s32 	%r1078, %r1077, 1;
	mad.lo.s32 	%r1079, %r1078, %r921, %r2248;
	shl.b32 	%r124, %r1079, 5;
	add.s32 	%r125, %r2249, -2;
	mul.lo.s32 	%r126, %r125, %r921;
	add.s32 	%r1080, %r922, %r125;
	mul.lo.s32 	%r127, %r1080, %r921;
	add.s32 	%r1081, %r1080, %r922;
	mul.lo.s32 	%r128, %r1081, %r921;
	add.s32 	%r129, %r126, %r921;
	add.s32 	%r130, %r2249, -1;
	add.s32 	%r1082, %r922, %r130;
	mul.lo.s32 	%r131, %r1082, %r921;
	add.s32 	%r1083, %r1082, %r922;
	mul.lo.s32 	%r132, %r1083, %r921;
	add.s32 	%r1084, %r922, %r2249;
	mul.lo.s32 	%r133, %r1084, %r921;
	add.s32 	%r1085, %r1084, %r922;
	mul.lo.s32 	%r134, %r1085, %r921;
	mul.lo.s32 	%r135, %r2249, %r921;
	add.s32 	%r136, %r135, %r921;
	add.s32 	%r137, %r2249, 1;
	add.s32 	%r1086, %r922, %r137;
	mul.lo.s32 	%r138, %r1086, %r921;
	add.s32 	%r1087, %r1086, %r922;
	mul.lo.s32 	%r139, %r1087, %r921;
	add.s32 	%r140, %r136, %r921;
	add.s32 	%r141, %r2249, 2;
	add.s32 	%r1088, %r922, %r141;
	mul.lo.s32 	%r142, %r1088, %r921;
	add.s32 	%r1089, %r1088, %r922;
	mul.lo.s32 	%r143, %r1089, %r921;
	mov.u32 	%r2252, 0;
	mov.u64 	%rd542, %rd90;

$L__BB0_41:
	ld.global.nc.u32 	%r1090, [%rd542];
	cvt.rn.f64.s32 	%fd1, %r1090;
	add.f64 	%fd3, %fd1, 0d3FE0000000000000;
	add.s32 	%r145, %r1090, %r2248;
	setp.lt.s32 	%p48, %r145, %r921;
	or.b32  	%r1091, %r125, %r145;
	setp.gt.s32 	%p49, %r1091, -1;
	and.pred  	%p50, %p48, %p49;
	setp.lt.s32 	%p51, %r125, %r922;
	and.pred  	%p1, %p51, %p50;
	cvt.rn.f32.f64 	%f62, %fd3;
	add.f32 	%f63, %f62, 0f3E800000;
	abs.f32 	%f1, %f63;
	add.f32 	%f64, %f1, 0f40200000;
	setp.geu.f32 	%p52, %f64, 0f40000000;
	@%p52 bra 	$L__BB0_46;

	@%p1 bra 	$L__BB0_44;
	bra.uni 	$L__BB0_43;

$L__BB0_44:
	add.s32 	%r1094, %r126, %r145;
	mul.wide.s32 	%rd91, %r1094, 4;
	add.s64 	%rd92, %rd7, %rd91;
	ld.global.f32 	%f67, [%rd92];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f67;
  mov.b32 %r2251, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_45;

$L__BB0_43:
	mov.f32 	%f66, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f66;
  cvt.rn.f16.f32 high, %f66;
  mov.b32 %r2251, {low,high};}

	// end inline asm

$L__BB0_45:
	add.s32 	%r1095, %r2252, %r124;
	mul.wide.s32 	%rd93, %r1095, 4;
	add.s64 	%rd94, %rd8, %rd93;
	st.global.u32 	[%rd94], %r2251;
	add.s32 	%r2252, %r2252, 1;

$L__BB0_46:
	cvt.rn.f32.f64 	%f68, %fd1;
	add.f32 	%f69, %f68, 0f3E800000;
	abs.f32 	%f2, %f69;
	add.f32 	%f3, %f2, 0f40000000;
	setp.geu.f32 	%p53, %f3, 0f40000000;
	@%p53 bra 	$L__BB0_51;

	@%p1 bra 	$L__BB0_49;
	bra.uni 	$L__BB0_48;

$L__BB0_49:
	add.s32 	%r1098, %r127, %r145;
	mul.wide.s32 	%rd95, %r1098, 4;
	add.s64 	%rd96, %rd7, %rd95;
	ld.global.f32 	%f72, [%rd96];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f72;
  mov.b32 %r2253, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_50;

$L__BB0_48:
	mov.f32 	%f71, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f71;
  cvt.rn.f16.f32 high, %f71;
  mov.b32 %r2253, {low,high};}

	// end inline asm

$L__BB0_50:
	add.s32 	%r1099, %r2252, %r124;
	mul.wide.s32 	%rd97, %r1099, 4;
	add.s64 	%rd98, %rd8, %rd97;
	st.global.u32 	[%rd98], %r2253;
	add.s32 	%r2252, %r2252, 1;

$L__BB0_51:
	add.f32 	%f73, %f2, 0f40200000;
	setp.geu.f32 	%p54, %f73, 0f40000000;
	@%p54 bra 	$L__BB0_56;

	@%p1 bra 	$L__BB0_54;
	bra.uni 	$L__BB0_53;

$L__BB0_54:
	add.s32 	%r1102, %r128, %r145;
	mul.wide.s32 	%rd99, %r1102, 4;
	add.s64 	%rd100, %rd7, %rd99;
	ld.global.f32 	%f76, [%rd100];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f76;
  mov.b32 %r2255, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_55;

$L__BB0_53:
	mov.f32 	%f75, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f75;
  cvt.rn.f16.f32 high, %f75;
  mov.b32 %r2255, {low,high};}

	// end inline asm

$L__BB0_55:
	add.s32 	%r1103, %r2252, %r124;
	mul.wide.s32 	%rd101, %r1103, 4;
	add.s64 	%rd102, %rd8, %rd101;
	st.global.u32 	[%rd102], %r2255;
	add.s32 	%r2252, %r2252, 1;

$L__BB0_56:
	or.b32  	%r1104, %r130, %r145;
	setp.gt.s32 	%p55, %r1104, -1;
	and.pred  	%p57, %p48, %p55;
	setp.le.s32 	%p58, %r2249, %r922;
	and.pred  	%p2, %p58, %p57;
	add.f32 	%f4, %f1, 0f3FC00000;
	setp.geu.f32 	%p59, %f4, 0f40000000;
	@%p59 bra 	$L__BB0_61;

	@%p2 bra 	$L__BB0_59;
	bra.uni 	$L__BB0_58;

$L__BB0_59:
	add.s32 	%r1107, %r129, %r145;
	mul.wide.s32 	%rd103, %r1107, 4;
	add.s64 	%rd104, %rd7, %rd103;
	ld.global.f32 	%f79, [%rd104];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f79;
  mov.b32 %r2257, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_60;

$L__BB0_58:
	mov.f32 	%f78, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f78;
  cvt.rn.f16.f32 high, %f78;
  mov.b32 %r2257, {low,high};}

	// end inline asm

$L__BB0_60:
	add.s32 	%r1108, %r2252, %r124;
	mul.wide.s32 	%rd105, %r1108, 4;
	add.s64 	%rd106, %rd8, %rd105;
	st.global.u32 	[%rd106], %r2257;
	add.s32 	%r2252, %r2252, 1;

$L__BB0_61:
	add.f32 	%f5, %f2, 0f3F800000;
	setp.geu.f32 	%p60, %f5, 0f40000000;
	@%p60 bra 	$L__BB0_66;

	@%p2 bra 	$L__BB0_64;
	bra.uni 	$L__BB0_63;

$L__BB0_64:
	add.s32 	%r1111, %r131, %r145;
	mul.wide.s32 	%rd107, %r1111, 4;
	add.s64 	%rd108, %rd7, %rd107;
	ld.global.f32 	%f82, [%rd108];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f82;
  mov.b32 %r2259, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_65;

$L__BB0_63:
	mov.f32 	%f81, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f81;
  cvt.rn.f16.f32 high, %f81;
  mov.b32 %r2259, {low,high};}

	// end inline asm

$L__BB0_65:
	add.s32 	%r1112, %r2252, %r124;
	mul.wide.s32 	%rd109, %r1112, 4;
	add.s64 	%rd110, %rd8, %rd109;
	st.global.u32 	[%rd110], %r2259;
	add.s32 	%r2252, %r2252, 1;

$L__BB0_66:
	add.f32 	%f6, %f2, 0f3FC00000;
	setp.geu.f32 	%p61, %f6, 0f40000000;
	@%p61 bra 	$L__BB0_71;

	@%p2 bra 	$L__BB0_69;
	bra.uni 	$L__BB0_68;

$L__BB0_69:
	add.s32 	%r1115, %r132, %r145;
	mul.wide.s32 	%rd111, %r1115, 4;
	add.s64 	%rd112, %rd7, %rd111;
	ld.global.f32 	%f85, [%rd112];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f85;
  mov.b32 %r2261, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_70;

$L__BB0_68:
	mov.f32 	%f84, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f84;
  cvt.rn.f16.f32 high, %f84;
  mov.b32 %r2261, {low,high};}

	// end inline asm

$L__BB0_70:
	add.s32 	%r1116, %r2252, %r124;
	mul.wide.s32 	%rd113, %r1116, 4;
	add.s64 	%rd114, %rd8, %rd113;
	st.global.u32 	[%rd114], %r2261;
	add.s32 	%r2252, %r2252, 1;

$L__BB0_71:
	or.b32  	%r1117, %r2249, %r145;
	setp.gt.s32 	%p62, %r1117, -1;
	and.pred  	%p64, %p48, %p62;
	setp.lt.s32 	%p65, %r2249, %r922;
	and.pred  	%p3, %p65, %p64;
	add.f32 	%f7, %f1, 0f3F000000;
	setp.geu.f32 	%p66, %f7, 0f40000000;
	@%p66 bra 	$L__BB0_76;

	@%p3 bra 	$L__BB0_74;
	bra.uni 	$L__BB0_73;

$L__BB0_74:
	add.s32 	%r1120, %r135, %r145;
	mul.wide.s32 	%rd115, %r1120, 4;
	add.s64 	%rd116, %rd7, %rd115;
	ld.global.f32 	%f88, [%rd116];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f88;
  mov.b32 %r2263, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_75;

$L__BB0_73:
	mov.f32 	%f87, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f87;
  cvt.rn.f16.f32 high, %f87;
  mov.b32 %r2263, {low,high};}

	// end inline asm

$L__BB0_75:
	add.s32 	%r1121, %r2252, %r124;
	mul.wide.s32 	%rd117, %r1121, 4;
	add.s64 	%rd118, %rd8, %rd117;
	st.global.u32 	[%rd118], %r2263;
	add.s32 	%r2252, %r2252, 1;

$L__BB0_76:
	add.f32 	%f89, %f2, 0f00000000;
	setp.geu.f32 	%p67, %f89, 0f40000000;
	@%p67 bra 	$L__BB0_81;

	@%p3 bra 	$L__BB0_79;
	bra.uni 	$L__BB0_78;

$L__BB0_79:
	add.s32 	%r1124, %r133, %r145;
	mul.wide.s32 	%rd119, %r1124, 4;
	add.s64 	%rd120, %rd7, %rd119;
	ld.global.f32 	%f92, [%rd120];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f92;
  mov.b32 %r2265, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_80;

$L__BB0_78:
	mov.f32 	%f91, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f91;
  cvt.rn.f16.f32 high, %f91;
  mov.b32 %r2265, {low,high};}

	// end inline asm

$L__BB0_80:
	add.s32 	%r1125, %r2252, %r124;
	mul.wide.s32 	%rd121, %r1125, 4;
	add.s64 	%rd122, %rd8, %rd121;
	st.global.u32 	[%rd122], %r2265;
	add.s32 	%r2252, %r2252, 1;

$L__BB0_81:
	add.f32 	%f8, %f2, 0f3F000000;
	setp.geu.f32 	%p68, %f8, 0f40000000;
	@%p68 bra 	$L__BB0_86;

	@%p3 bra 	$L__BB0_84;
	bra.uni 	$L__BB0_83;

$L__BB0_84:
	add.s32 	%r1128, %r134, %r145;
	mul.wide.s32 	%rd123, %r1128, 4;
	add.s64 	%rd124, %rd7, %rd123;
	ld.global.f32 	%f95, [%rd124];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f95;
  mov.b32 %r2267, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_85;

$L__BB0_83:
	mov.f32 	%f94, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f94;
  cvt.rn.f16.f32 high, %f94;
  mov.b32 %r2267, {low,high};}

	// end inline asm

$L__BB0_85:
	add.s32 	%r1129, %r2252, %r124;
	mul.wide.s32 	%rd125, %r1129, 4;
	add.s64 	%rd126, %rd8, %rd125;
	st.global.u32 	[%rd126], %r2267;
	add.s32 	%r2252, %r2252, 1;

$L__BB0_86:
	or.b32  	%r1130, %r137, %r145;
	setp.gt.s32 	%p69, %r1130, -1;
	and.pred  	%p71, %p48, %p69;
	setp.lt.s32 	%p72, %r137, %r922;
	and.pred  	%p4, %p72, %p71;
	@%p66 bra 	$L__BB0_91;

	@%p4 bra 	$L__BB0_89;
	bra.uni 	$L__BB0_88;

$L__BB0_89:
	add.s32 	%r1133, %r136, %r145;
	mul.wide.s32 	%rd127, %r1133, 4;
	add.s64 	%rd128, %rd7, %rd127;
	ld.global.f32 	%f98, [%rd128];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f98;
  mov.b32 %r2269, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_90;

$L__BB0_88:
	mov.f32 	%f97, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f97;
  cvt.rn.f16.f32 high, %f97;
  mov.b32 %r2269, {low,high};}

	// end inline asm

$L__BB0_90:
	add.s32 	%r1134, %r2252, %r124;
	mul.wide.s32 	%rd129, %r1134, 4;
	add.s64 	%rd130, %rd8, %rd129;
	st.global.u32 	[%rd130], %r2269;
	add.s32 	%r2252, %r2252, 1;

$L__BB0_91:
	@%p60 bra 	$L__BB0_96;

	@%p4 bra 	$L__BB0_94;
	bra.uni 	$L__BB0_93;

$L__BB0_94:
	add.s32 	%r1137, %r138, %r145;
	mul.wide.s32 	%rd131, %r1137, 4;
	add.s64 	%rd132, %rd7, %rd131;
	ld.global.f32 	%f101, [%rd132];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f101;
  mov.b32 %r2271, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_95;

$L__BB0_93:
	mov.f32 	%f100, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f100;
  cvt.rn.f16.f32 high, %f100;
  mov.b32 %r2271, {low,high};}

	// end inline asm

$L__BB0_95:
	add.s32 	%r1138, %r2252, %r124;
	mul.wide.s32 	%rd133, %r1138, 4;
	add.s64 	%rd134, %rd8, %rd133;
	st.global.u32 	[%rd134], %r2271;
	add.s32 	%r2252, %r2252, 1;

$L__BB0_96:
	@%p68 bra 	$L__BB0_101;

	@%p4 bra 	$L__BB0_99;
	bra.uni 	$L__BB0_98;

$L__BB0_99:
	add.s32 	%r1141, %r139, %r145;
	mul.wide.s32 	%rd135, %r1141, 4;
	add.s64 	%rd136, %rd7, %rd135;
	ld.global.f32 	%f104, [%rd136];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f104;
  mov.b32 %r2273, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_100;

$L__BB0_98:
	mov.f32 	%f103, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f103;
  cvt.rn.f16.f32 high, %f103;
  mov.b32 %r2273, {low,high};}

	// end inline asm

$L__BB0_100:
	add.s32 	%r1142, %r2252, %r124;
	mul.wide.s32 	%rd137, %r1142, 4;
	add.s64 	%rd138, %rd8, %rd137;
	st.global.u32 	[%rd138], %r2273;
	add.s32 	%r2252, %r2252, 1;

$L__BB0_101:
	or.b32  	%r1143, %r141, %r145;
	setp.gt.s32 	%p76, %r1143, -1;
	and.pred  	%p78, %p48, %p76;
	setp.lt.s32 	%p79, %r141, %r922;
	and.pred  	%p5, %p79, %p78;
	@%p59 bra 	$L__BB0_106;

	@%p5 bra 	$L__BB0_104;
	bra.uni 	$L__BB0_103;

$L__BB0_104:
	add.s32 	%r1146, %r140, %r145;
	mul.wide.s32 	%rd139, %r1146, 4;
	add.s64 	%rd140, %rd7, %rd139;
	ld.global.f32 	%f107, [%rd140];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f107;
  mov.b32 %r2275, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_105;

$L__BB0_103:
	mov.f32 	%f106, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f106;
  cvt.rn.f16.f32 high, %f106;
  mov.b32 %r2275, {low,high};}

	// end inline asm

$L__BB0_105:
	add.s32 	%r1147, %r2252, %r124;
	mul.wide.s32 	%rd141, %r1147, 4;
	add.s64 	%rd142, %rd8, %rd141;
	st.global.u32 	[%rd142], %r2275;
	add.s32 	%r2252, %r2252, 1;

$L__BB0_106:
	@%p53 bra 	$L__BB0_111;

	@%p5 bra 	$L__BB0_109;
	bra.uni 	$L__BB0_108;

$L__BB0_109:
	add.s32 	%r1150, %r142, %r145;
	mul.wide.s32 	%rd143, %r1150, 4;
	add.s64 	%rd144, %rd7, %rd143;
	ld.global.f32 	%f110, [%rd144];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f110;
  mov.b32 %r2277, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_110;

$L__BB0_108:
	mov.f32 	%f109, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f109;
  cvt.rn.f16.f32 high, %f109;
  mov.b32 %r2277, {low,high};}

	// end inline asm

$L__BB0_110:
	add.s32 	%r1151, %r2252, %r124;
	mul.wide.s32 	%rd145, %r1151, 4;
	add.s64 	%rd146, %rd8, %rd145;
	st.global.u32 	[%rd146], %r2277;
	add.s32 	%r2252, %r2252, 1;

$L__BB0_111:
	@%p61 bra 	$L__BB0_116;

	@%p5 bra 	$L__BB0_114;
	bra.uni 	$L__BB0_113;

$L__BB0_114:
	add.s32 	%r1154, %r143, %r145;
	mul.wide.s32 	%rd147, %r1154, 4;
	add.s64 	%rd148, %rd7, %rd147;
	ld.global.f32 	%f113, [%rd148];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f113;
  mov.b32 %r2279, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_115;

$L__BB0_113:
	mov.f32 	%f112, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f112;
  cvt.rn.f16.f32 high, %f112;
  mov.b32 %r2279, {low,high};}

	// end inline asm

$L__BB0_115:
	add.s32 	%r1155, %r2252, %r124;
	mul.wide.s32 	%rd149, %r1155, 4;
	add.s64 	%rd150, %rd8, %rd149;
	st.global.u32 	[%rd150], %r2279;
	add.s32 	%r2252, %r2252, 1;

$L__BB0_116:
	add.s64 	%rd542, %rd542, 4;
	mov.u64 	%rd151, _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE;
	add.s64 	%rd152, %rd151, 24;
	setp.ne.s64 	%p83, %rd542, %rd152;
	@%p83 bra 	$L__BB0_41;

$L__BB0_117:
	add.s32 	%r2249, %r2249, %r41;
	setp.lt.s32 	%p84, %r2249, %r922;
	@%p84 bra 	$L__BB0_39;

$L__BB0_118:
	add.s32 	%r2248, %r2248, %r942;
	setp.lt.s32 	%p85, %r2248, %r921;
	@%p85 bra 	$L__BB0_37;

$L__BB0_119:
	setp.eq.s32 	%p86, %r925, 1;
	ld.param.u64 	%rd153, [%rd1+136];
	cvta.to.global.u64 	%rd11, %rd153;
	ld.param.u64 	%rd154, [%rd1+104];
	cvta.to.global.u64 	%rd12, %rd154;
	@%p86 bra 	$L__BB0_137;
	bra.uni 	$L__BB0_120;

$L__BB0_137:
	@%p22 bra 	$L__BB0_266;

	shl.b32 	%r249, %r69, 1;
	shr.u32 	%r1203, %r926, 31;
	add.s32 	%r1204, %r926, %r1203;
	shr.u32 	%r1205, %r1204, 1;
	and.b32  	%r250, %r1205, 1;
	mov.u64 	%rd174, _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE;

$L__BB0_139:
	setp.ge.s32 	%p96, %r249, %r922;
	@%p96 bra 	$L__BB0_265;

	mov.u32 	%r2287, %r249;

$L__BB0_141:
	setp.ne.s32 	%p97, %r39, 0;
	@%p97 bra 	$L__BB0_264;

	shr.u32 	%r1207, %r2287, 31;
	add.s32 	%r1208, %r2287, %r1207;
	shr.s32 	%r1209, %r1208, 1;
	mad.lo.s32 	%r1210, %r1209, %r921, %r2281;
	shl.b32 	%r254, %r1210, 5;
	add.s32 	%r255, %r2287, -2;
	mul.lo.s32 	%r256, %r255, %r921;
	add.s32 	%r1211, %r922, %r255;
	mul.lo.s32 	%r257, %r1211, %r921;
	add.s32 	%r258, %r256, %r921;
	add.s32 	%r259, %r2287, -1;
	add.s32 	%r1212, %r922, %r259;
	mul.lo.s32 	%r260, %r1212, %r921;
	add.s32 	%r1213, %r922, %r2287;
	mul.lo.s32 	%r261, %r1213, %r921;
	mul.lo.s32 	%r262, %r2287, %r921;
	add.s32 	%r263, %r262, %r921;
	add.s32 	%r264, %r2287, 1;
	add.s32 	%r1214, %r922, %r264;
	mul.lo.s32 	%r265, %r1214, %r921;
	add.s32 	%r266, %r263, %r921;
	add.s32 	%r267, %r2287, 2;
	add.s32 	%r1215, %r922, %r267;
	mul.lo.s32 	%r268, %r1215, %r921;
	mov.u32 	%r2291, 0;
	mov.u64 	%rd543, 24;
	mov.u64 	%rd544, %rd174;

$L__BB0_143:
	ld.global.nc.u32 	%r1216, [%rd544];
	cvt.rn.f64.s32 	%fd2, %r1216;
	add.f64 	%fd4, %fd2, 0d3FE0000000000000;
	add.s32 	%r270, %r1216, %r2281;
	setp.lt.s32 	%p98, %r270, %r921;
	or.b32  	%r1217, %r255, %r270;
	setp.gt.s32 	%p99, %r1217, -1;
	and.pred  	%p100, %p98, %p99;
	setp.lt.s32 	%p101, %r255, %r922;
	and.pred  	%p6, %p101, %p100;
	cvt.rn.f32.f64 	%f130, %fd4;
	add.f32 	%f131, %f130, 0f3E800000;
	abs.f32 	%f9, %f131;
	add.f32 	%f132, %f9, 0f40200000;
	setp.geu.f32 	%p102, %f132, 0f40000000;
	@%p102 bra 	$L__BB0_155;

	@%p6 bra 	$L__BB0_146;
	bra.uni 	$L__BB0_145;

$L__BB0_146:
	setp.eq.s32 	%p103, %r250, 0;
	add.s32 	%r1219, %r256, %r270;
	shl.b32 	%r1220, %r1219, 1;
	mul.wide.s32 	%rd175, %r1220, 4;
	add.s64 	%rd176, %rd11, %rd175;
	ld.global.f32 	%f10, [%rd176];
	@%p103 bra 	$L__BB0_148;
	bra.uni 	$L__BB0_147;

$L__BB0_148:
	mov.f32 	%f138, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f10;
  cvt.rn.f16.f32 high, %f138;
  mov.b32 %r2289, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_149;

$L__BB0_145:
	mov.f32 	%f134, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f134;
  cvt.rn.f16.f32 high, %f134;
  mov.b32 %r2289, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_149;

$L__BB0_147:
	mov.f32 	%f135, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f135;
  cvt.rn.f16.f32 high, %f10;
  mov.b32 %r2289, {low,high};}

	// end inline asm

$L__BB0_149:
	add.s32 	%r275, %r2291, %r254;
	mul.wide.s32 	%rd177, %r275, 4;
	add.s64 	%rd178, %rd12, %rd177;
	st.global.u32 	[%rd178], %r2289;
	@%p6 bra 	$L__BB0_151;
	bra.uni 	$L__BB0_150;

$L__BB0_151:
	setp.eq.s32 	%p104, %r250, 0;
	add.s32 	%r1224, %r257, %r270;
	shl.b32 	%r1225, %r1224, 1;
	mul.wide.s32 	%rd179, %r1225, 4;
	add.s64 	%rd180, %rd11, %rd179;
	ld.global.f32 	%f11, [%rd180];
	@%p104 bra 	$L__BB0_153;
	bra.uni 	$L__BB0_152;

$L__BB0_153:
	mov.f32 	%f144, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f11;
  cvt.rn.f16.f32 high, %f144;
  mov.b32 %r2290, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_154;

$L__BB0_150:
	mov.f32 	%f140, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f140;
  cvt.rn.f16.f32 high, %f140;
  mov.b32 %r2290, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_154;

$L__BB0_152:
	mov.f32 	%f141, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f141;
  cvt.rn.f16.f32 high, %f11;
  mov.b32 %r2290, {low,high};}

	// end inline asm

$L__BB0_154:
	add.s32 	%r1228, %r275, 1;
	mul.wide.s32 	%rd181, %r1228, 4;
	add.s64 	%rd182, %rd12, %rd181;
	st.global.u32 	[%rd182], %r2290;
	add.s32 	%r2291, %r2291, 2;

$L__BB0_155:
	cvt.rn.f32.f64 	%f145, %fd2;
	add.f32 	%f146, %f145, 0f3E800000;
	abs.f32 	%f12, %f146;
	add.f32 	%f13, %f12, 0f40000000;
	setp.geu.f32 	%p105, %f13, 0f40000000;
	@%p105 bra 	$L__BB0_167;

	@%p6 bra 	$L__BB0_158;
	bra.uni 	$L__BB0_157;

$L__BB0_158:
	setp.eq.s32 	%p106, %r250, 0;
	add.s32 	%r1230, %r256, %r270;
	shl.b32 	%r1231, %r1230, 1;
	or.b32  	%r1232, %r1231, 1;
	mul.wide.s32 	%rd183, %r1232, 4;
	add.s64 	%rd184, %rd11, %rd183;
	ld.global.f32 	%f14, [%rd184];
	@%p106 bra 	$L__BB0_160;
	bra.uni 	$L__BB0_159;

$L__BB0_160:
	mov.f32 	%f152, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f14;
  cvt.rn.f16.f32 high, %f152;
  mov.b32 %r2292, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_161;

$L__BB0_157:
	mov.f32 	%f148, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f148;
  cvt.rn.f16.f32 high, %f148;
  mov.b32 %r2292, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_161;

$L__BB0_159:
	mov.f32 	%f149, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f149;
  cvt.rn.f16.f32 high, %f14;
  mov.b32 %r2292, {low,high};}

	// end inline asm

$L__BB0_161:
	add.s32 	%r286, %r2291, %r254;
	mul.wide.s32 	%rd185, %r286, 4;
	add.s64 	%rd186, %rd12, %rd185;
	st.global.u32 	[%rd186], %r2292;
	@%p6 bra 	$L__BB0_163;
	bra.uni 	$L__BB0_162;

$L__BB0_163:
	setp.eq.s32 	%p107, %r250, 0;
	add.s32 	%r1236, %r257, %r270;
	shl.b32 	%r1237, %r1236, 1;
	or.b32  	%r1238, %r1237, 1;
	mul.wide.s32 	%rd187, %r1238, 4;
	add.s64 	%rd188, %rd11, %rd187;
	ld.global.f32 	%f15, [%rd188];
	@%p107 bra 	$L__BB0_165;
	bra.uni 	$L__BB0_164;

$L__BB0_165:
	mov.f32 	%f158, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f15;
  cvt.rn.f16.f32 high, %f158;
  mov.b32 %r2293, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_166;

$L__BB0_162:
	mov.f32 	%f154, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f154;
  cvt.rn.f16.f32 high, %f154;
  mov.b32 %r2293, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_166;

$L__BB0_164:
	mov.f32 	%f155, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f155;
  cvt.rn.f16.f32 high, %f15;
  mov.b32 %r2293, {low,high};}

	// end inline asm

$L__BB0_166:
	add.s32 	%r1241, %r286, 1;
	mul.wide.s32 	%rd189, %r1241, 4;
	add.s64 	%rd190, %rd12, %rd189;
	st.global.u32 	[%rd190], %r2293;
	add.s32 	%r2291, %r2291, 2;

$L__BB0_167:
	or.b32  	%r1242, %r259, %r270;
	setp.gt.s32 	%p108, %r1242, -1;
	and.pred  	%p110, %p98, %p108;
	setp.le.s32 	%p111, %r2287, %r922;
	and.pred  	%p7, %p111, %p110;
	add.f32 	%f16, %f9, 0f3FC00000;
	setp.geu.f32 	%p112, %f16, 0f40000000;
	@%p112 bra 	$L__BB0_179;

	@%p7 bra 	$L__BB0_170;
	bra.uni 	$L__BB0_169;

$L__BB0_170:
	setp.eq.s32 	%p113, %r250, 0;
	add.s32 	%r1244, %r258, %r270;
	shl.b32 	%r1245, %r1244, 1;
	mul.wide.s32 	%rd191, %r1245, 4;
	add.s64 	%rd192, %rd11, %rd191;
	ld.global.f32 	%f17, [%rd192];
	@%p113 bra 	$L__BB0_172;
	bra.uni 	$L__BB0_171;

$L__BB0_172:
	mov.f32 	%f164, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f17;
  cvt.rn.f16.f32 high, %f164;
  mov.b32 %r2295, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_173;

$L__BB0_169:
	mov.f32 	%f160, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f160;
  cvt.rn.f16.f32 high, %f160;
  mov.b32 %r2295, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_173;

$L__BB0_171:
	mov.f32 	%f161, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f161;
  cvt.rn.f16.f32 high, %f17;
  mov.b32 %r2295, {low,high};}

	// end inline asm

$L__BB0_173:
	add.s32 	%r297, %r2291, %r254;
	mul.wide.s32 	%rd193, %r297, 4;
	add.s64 	%rd194, %rd12, %rd193;
	st.global.u32 	[%rd194], %r2295;
	@%p7 bra 	$L__BB0_175;
	bra.uni 	$L__BB0_174;

$L__BB0_175:
	setp.eq.s32 	%p114, %r250, 0;
	add.s32 	%r1249, %r260, %r270;
	shl.b32 	%r1250, %r1249, 1;
	mul.wide.s32 	%rd195, %r1250, 4;
	add.s64 	%rd196, %rd11, %rd195;
	ld.global.f32 	%f18, [%rd196];
	@%p114 bra 	$L__BB0_177;
	bra.uni 	$L__BB0_176;

$L__BB0_177:
	mov.f32 	%f170, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f18;
  cvt.rn.f16.f32 high, %f170;
  mov.b32 %r2296, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_178;

$L__BB0_174:
	mov.f32 	%f166, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f166;
  cvt.rn.f16.f32 high, %f166;
  mov.b32 %r2296, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_178;

$L__BB0_176:
	mov.f32 	%f167, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f167;
  cvt.rn.f16.f32 high, %f18;
  mov.b32 %r2296, {low,high};}

	// end inline asm

$L__BB0_178:
	add.s32 	%r1253, %r297, 1;
	mul.wide.s32 	%rd197, %r1253, 4;
	add.s64 	%rd198, %rd12, %rd197;
	st.global.u32 	[%rd198], %r2296;
	add.s32 	%r2291, %r2291, 2;

$L__BB0_179:
	add.f32 	%f19, %f12, 0f3F800000;
	setp.geu.f32 	%p115, %f19, 0f40000000;
	@%p115 bra 	$L__BB0_191;

	@%p7 bra 	$L__BB0_182;
	bra.uni 	$L__BB0_181;

$L__BB0_182:
	setp.eq.s32 	%p116, %r250, 0;
	add.s32 	%r1255, %r258, %r270;
	shl.b32 	%r1256, %r1255, 1;
	or.b32  	%r1257, %r1256, 1;
	mul.wide.s32 	%rd199, %r1257, 4;
	add.s64 	%rd200, %rd11, %rd199;
	ld.global.f32 	%f20, [%rd200];
	@%p116 bra 	$L__BB0_184;
	bra.uni 	$L__BB0_183;

$L__BB0_184:
	mov.f32 	%f176, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f20;
  cvt.rn.f16.f32 high, %f176;
  mov.b32 %r2298, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_185;

$L__BB0_181:
	mov.f32 	%f172, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f172;
  cvt.rn.f16.f32 high, %f172;
  mov.b32 %r2298, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_185;

$L__BB0_183:
	mov.f32 	%f173, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f173;
  cvt.rn.f16.f32 high, %f20;
  mov.b32 %r2298, {low,high};}

	// end inline asm

$L__BB0_185:
	add.s32 	%r308, %r2291, %r254;
	mul.wide.s32 	%rd201, %r308, 4;
	add.s64 	%rd202, %rd12, %rd201;
	st.global.u32 	[%rd202], %r2298;
	@%p7 bra 	$L__BB0_187;
	bra.uni 	$L__BB0_186;

$L__BB0_187:
	setp.eq.s32 	%p117, %r250, 0;
	add.s32 	%r1261, %r260, %r270;
	shl.b32 	%r1262, %r1261, 1;
	or.b32  	%r1263, %r1262, 1;
	mul.wide.s32 	%rd203, %r1263, 4;
	add.s64 	%rd204, %rd11, %rd203;
	ld.global.f32 	%f21, [%rd204];
	@%p117 bra 	$L__BB0_189;
	bra.uni 	$L__BB0_188;

$L__BB0_189:
	mov.f32 	%f182, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f21;
  cvt.rn.f16.f32 high, %f182;
  mov.b32 %r2299, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_190;

$L__BB0_186:
	mov.f32 	%f178, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f178;
  cvt.rn.f16.f32 high, %f178;
  mov.b32 %r2299, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_190;

$L__BB0_188:
	mov.f32 	%f179, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f179;
  cvt.rn.f16.f32 high, %f21;
  mov.b32 %r2299, {low,high};}

	// end inline asm

$L__BB0_190:
	add.s32 	%r1266, %r308, 1;
	mul.wide.s32 	%rd205, %r1266, 4;
	add.s64 	%rd206, %rd12, %rd205;
	st.global.u32 	[%rd206], %r2299;
	add.s32 	%r2291, %r2291, 2;

$L__BB0_191:
	or.b32  	%r1267, %r2287, %r270;
	setp.gt.s32 	%p118, %r1267, -1;
	and.pred  	%p120, %p98, %p118;
	setp.lt.s32 	%p121, %r2287, %r922;
	and.pred  	%p8, %p121, %p120;
	add.f32 	%f22, %f9, 0f3F000000;
	setp.geu.f32 	%p122, %f22, 0f40000000;
	@%p122 bra 	$L__BB0_203;

	@%p8 bra 	$L__BB0_194;
	bra.uni 	$L__BB0_193;

$L__BB0_194:
	setp.eq.s32 	%p123, %r250, 0;
	add.s32 	%r1269, %r262, %r270;
	shl.b32 	%r1270, %r1269, 1;
	mul.wide.s32 	%rd207, %r1270, 4;
	add.s64 	%rd208, %rd11, %rd207;
	ld.global.f32 	%f23, [%rd208];
	@%p123 bra 	$L__BB0_196;
	bra.uni 	$L__BB0_195;

$L__BB0_196:
	mov.f32 	%f188, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f23;
  cvt.rn.f16.f32 high, %f188;
  mov.b32 %r2301, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_197;

$L__BB0_193:
	mov.f32 	%f184, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f184;
  cvt.rn.f16.f32 high, %f184;
  mov.b32 %r2301, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_197;

$L__BB0_195:
	mov.f32 	%f185, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f185;
  cvt.rn.f16.f32 high, %f23;
  mov.b32 %r2301, {low,high};}

	// end inline asm

$L__BB0_197:
	add.s32 	%r319, %r2291, %r254;
	mul.wide.s32 	%rd209, %r319, 4;
	add.s64 	%rd210, %rd12, %rd209;
	st.global.u32 	[%rd210], %r2301;
	@%p8 bra 	$L__BB0_199;
	bra.uni 	$L__BB0_198;

$L__BB0_199:
	setp.eq.s32 	%p124, %r250, 0;
	add.s32 	%r1274, %r261, %r270;
	shl.b32 	%r1275, %r1274, 1;
	mul.wide.s32 	%rd211, %r1275, 4;
	add.s64 	%rd212, %rd11, %rd211;
	ld.global.f32 	%f24, [%rd212];
	@%p124 bra 	$L__BB0_201;
	bra.uni 	$L__BB0_200;

$L__BB0_201:
	mov.f32 	%f194, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f24;
  cvt.rn.f16.f32 high, %f194;
  mov.b32 %r2302, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_202;

$L__BB0_198:
	mov.f32 	%f190, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f190;
  cvt.rn.f16.f32 high, %f190;
  mov.b32 %r2302, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_202;

$L__BB0_200:
	mov.f32 	%f191, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f191;
  cvt.rn.f16.f32 high, %f24;
  mov.b32 %r2302, {low,high};}

	// end inline asm

$L__BB0_202:
	add.s32 	%r1278, %r319, 1;
	mul.wide.s32 	%rd213, %r1278, 4;
	add.s64 	%rd214, %rd12, %rd213;
	st.global.u32 	[%rd214], %r2302;
	add.s32 	%r2291, %r2291, 2;

$L__BB0_203:
	add.f32 	%f195, %f12, 0f00000000;
	setp.geu.f32 	%p125, %f195, 0f40000000;
	@%p125 bra 	$L__BB0_215;

	@%p8 bra 	$L__BB0_206;
	bra.uni 	$L__BB0_205;

$L__BB0_206:
	setp.eq.s32 	%p126, %r250, 0;
	add.s32 	%r1280, %r262, %r270;
	shl.b32 	%r1281, %r1280, 1;
	or.b32  	%r1282, %r1281, 1;
	mul.wide.s32 	%rd215, %r1282, 4;
	add.s64 	%rd216, %rd11, %rd215;
	ld.global.f32 	%f25, [%rd216];
	@%p126 bra 	$L__BB0_208;
	bra.uni 	$L__BB0_207;

$L__BB0_208:
	mov.f32 	%f201, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f25;
  cvt.rn.f16.f32 high, %f201;
  mov.b32 %r2304, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_209;

$L__BB0_205:
	mov.f32 	%f197, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f197;
  cvt.rn.f16.f32 high, %f197;
  mov.b32 %r2304, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_209;

$L__BB0_207:
	mov.f32 	%f198, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f198;
  cvt.rn.f16.f32 high, %f25;
  mov.b32 %r2304, {low,high};}

	// end inline asm

$L__BB0_209:
	add.s32 	%r330, %r2291, %r254;
	mul.wide.s32 	%rd217, %r330, 4;
	add.s64 	%rd218, %rd12, %rd217;
	st.global.u32 	[%rd218], %r2304;
	@%p8 bra 	$L__BB0_211;
	bra.uni 	$L__BB0_210;

$L__BB0_211:
	setp.eq.s32 	%p127, %r250, 0;
	add.s32 	%r1286, %r261, %r270;
	shl.b32 	%r1287, %r1286, 1;
	or.b32  	%r1288, %r1287, 1;
	mul.wide.s32 	%rd219, %r1288, 4;
	add.s64 	%rd220, %rd11, %rd219;
	ld.global.f32 	%f26, [%rd220];
	@%p127 bra 	$L__BB0_213;
	bra.uni 	$L__BB0_212;

$L__BB0_213:
	mov.f32 	%f207, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f26;
  cvt.rn.f16.f32 high, %f207;
  mov.b32 %r2305, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_214;

$L__BB0_210:
	mov.f32 	%f203, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f203;
  cvt.rn.f16.f32 high, %f203;
  mov.b32 %r2305, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_214;

$L__BB0_212:
	mov.f32 	%f204, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f204;
  cvt.rn.f16.f32 high, %f26;
  mov.b32 %r2305, {low,high};}

	// end inline asm

$L__BB0_214:
	add.s32 	%r1291, %r330, 1;
	mul.wide.s32 	%rd221, %r1291, 4;
	add.s64 	%rd222, %rd12, %rd221;
	st.global.u32 	[%rd222], %r2305;
	add.s32 	%r2291, %r2291, 2;

$L__BB0_215:
	or.b32  	%r1292, %r264, %r270;
	setp.gt.s32 	%p128, %r1292, -1;
	and.pred  	%p130, %p98, %p128;
	setp.lt.s32 	%p131, %r264, %r922;
	and.pred  	%p9, %p131, %p130;
	@%p122 bra 	$L__BB0_227;

	@%p9 bra 	$L__BB0_218;
	bra.uni 	$L__BB0_217;

$L__BB0_218:
	setp.eq.s32 	%p133, %r250, 0;
	add.s32 	%r1294, %r263, %r270;
	shl.b32 	%r1295, %r1294, 1;
	mul.wide.s32 	%rd223, %r1295, 4;
	add.s64 	%rd224, %rd11, %rd223;
	ld.global.f32 	%f27, [%rd224];
	@%p133 bra 	$L__BB0_220;
	bra.uni 	$L__BB0_219;

$L__BB0_220:
	mov.f32 	%f213, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f27;
  cvt.rn.f16.f32 high, %f213;
  mov.b32 %r2307, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_221;

$L__BB0_217:
	mov.f32 	%f209, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f209;
  cvt.rn.f16.f32 high, %f209;
  mov.b32 %r2307, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_221;

$L__BB0_219:
	mov.f32 	%f210, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f210;
  cvt.rn.f16.f32 high, %f27;
  mov.b32 %r2307, {low,high};}

	// end inline asm

$L__BB0_221:
	add.s32 	%r341, %r2291, %r254;
	mul.wide.s32 	%rd225, %r341, 4;
	add.s64 	%rd226, %rd12, %rd225;
	st.global.u32 	[%rd226], %r2307;
	@%p9 bra 	$L__BB0_223;
	bra.uni 	$L__BB0_222;

$L__BB0_223:
	setp.eq.s32 	%p134, %r250, 0;
	add.s32 	%r1299, %r265, %r270;
	shl.b32 	%r1300, %r1299, 1;
	mul.wide.s32 	%rd227, %r1300, 4;
	add.s64 	%rd228, %rd11, %rd227;
	ld.global.f32 	%f28, [%rd228];
	@%p134 bra 	$L__BB0_225;
	bra.uni 	$L__BB0_224;

$L__BB0_225:
	mov.f32 	%f219, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f28;
  cvt.rn.f16.f32 high, %f219;
  mov.b32 %r2308, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_226;

$L__BB0_222:
	mov.f32 	%f215, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f215;
  cvt.rn.f16.f32 high, %f215;
  mov.b32 %r2308, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_226;

$L__BB0_224:
	mov.f32 	%f216, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f216;
  cvt.rn.f16.f32 high, %f28;
  mov.b32 %r2308, {low,high};}

	// end inline asm

$L__BB0_226:
	add.s32 	%r1303, %r341, 1;
	mul.wide.s32 	%rd229, %r1303, 4;
	add.s64 	%rd230, %rd12, %rd229;
	st.global.u32 	[%rd230], %r2308;
	add.s32 	%r2291, %r2291, 2;

$L__BB0_227:
	@%p115 bra 	$L__BB0_239;

	@%p9 bra 	$L__BB0_230;
	bra.uni 	$L__BB0_229;

$L__BB0_230:
	setp.eq.s32 	%p136, %r250, 0;
	add.s32 	%r1305, %r263, %r270;
	shl.b32 	%r1306, %r1305, 1;
	or.b32  	%r1307, %r1306, 1;
	mul.wide.s32 	%rd231, %r1307, 4;
	add.s64 	%rd232, %rd11, %rd231;
	ld.global.f32 	%f29, [%rd232];
	@%p136 bra 	$L__BB0_232;
	bra.uni 	$L__BB0_231;

$L__BB0_232:
	mov.f32 	%f225, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f29;
  cvt.rn.f16.f32 high, %f225;
  mov.b32 %r2310, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_233;

$L__BB0_229:
	mov.f32 	%f221, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f221;
  cvt.rn.f16.f32 high, %f221;
  mov.b32 %r2310, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_233;

$L__BB0_231:
	mov.f32 	%f222, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f222;
  cvt.rn.f16.f32 high, %f29;
  mov.b32 %r2310, {low,high};}

	// end inline asm

$L__BB0_233:
	add.s32 	%r352, %r2291, %r254;
	mul.wide.s32 	%rd233, %r352, 4;
	add.s64 	%rd234, %rd12, %rd233;
	st.global.u32 	[%rd234], %r2310;
	@%p9 bra 	$L__BB0_235;
	bra.uni 	$L__BB0_234;

$L__BB0_235:
	setp.eq.s32 	%p137, %r250, 0;
	add.s32 	%r1311, %r265, %r270;
	shl.b32 	%r1312, %r1311, 1;
	or.b32  	%r1313, %r1312, 1;
	mul.wide.s32 	%rd235, %r1313, 4;
	add.s64 	%rd236, %rd11, %rd235;
	ld.global.f32 	%f30, [%rd236];
	@%p137 bra 	$L__BB0_237;
	bra.uni 	$L__BB0_236;

$L__BB0_237:
	mov.f32 	%f231, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f30;
  cvt.rn.f16.f32 high, %f231;
  mov.b32 %r2311, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_238;

$L__BB0_234:
	mov.f32 	%f227, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f227;
  cvt.rn.f16.f32 high, %f227;
  mov.b32 %r2311, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_238;

$L__BB0_236:
	mov.f32 	%f228, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f228;
  cvt.rn.f16.f32 high, %f30;
  mov.b32 %r2311, {low,high};}

	// end inline asm

$L__BB0_238:
	add.s32 	%r1316, %r352, 1;
	mul.wide.s32 	%rd237, %r1316, 4;
	add.s64 	%rd238, %rd12, %rd237;
	st.global.u32 	[%rd238], %r2311;
	add.s32 	%r2291, %r2291, 2;

$L__BB0_239:
	or.b32  	%r1317, %r267, %r270;
	setp.gt.s32 	%p138, %r1317, -1;
	and.pred  	%p140, %p98, %p138;
	setp.lt.s32 	%p141, %r267, %r922;
	and.pred  	%p10, %p141, %p140;
	@%p112 bra 	$L__BB0_251;

	@%p10 bra 	$L__BB0_242;
	bra.uni 	$L__BB0_241;

$L__BB0_242:
	setp.eq.s32 	%p143, %r250, 0;
	add.s32 	%r1319, %r266, %r270;
	shl.b32 	%r1320, %r1319, 1;
	mul.wide.s32 	%rd239, %r1320, 4;
	add.s64 	%rd240, %rd11, %rd239;
	ld.global.f32 	%f31, [%rd240];
	@%p143 bra 	$L__BB0_244;
	bra.uni 	$L__BB0_243;

$L__BB0_244:
	mov.f32 	%f237, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f31;
  cvt.rn.f16.f32 high, %f237;
  mov.b32 %r2313, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_245;

$L__BB0_241:
	mov.f32 	%f233, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f233;
  cvt.rn.f16.f32 high, %f233;
  mov.b32 %r2313, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_245;

$L__BB0_243:
	mov.f32 	%f234, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f234;
  cvt.rn.f16.f32 high, %f31;
  mov.b32 %r2313, {low,high};}

	// end inline asm

$L__BB0_245:
	add.s32 	%r363, %r2291, %r254;
	mul.wide.s32 	%rd241, %r363, 4;
	add.s64 	%rd242, %rd12, %rd241;
	st.global.u32 	[%rd242], %r2313;
	@%p10 bra 	$L__BB0_247;
	bra.uni 	$L__BB0_246;

$L__BB0_247:
	setp.eq.s32 	%p144, %r250, 0;
	add.s32 	%r1324, %r268, %r270;
	shl.b32 	%r1325, %r1324, 1;
	mul.wide.s32 	%rd243, %r1325, 4;
	add.s64 	%rd244, %rd11, %rd243;
	ld.global.f32 	%f32, [%rd244];
	@%p144 bra 	$L__BB0_249;
	bra.uni 	$L__BB0_248;

$L__BB0_249:
	mov.f32 	%f243, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f32;
  cvt.rn.f16.f32 high, %f243;
  mov.b32 %r2314, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_250;

$L__BB0_246:
	mov.f32 	%f239, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f239;
  cvt.rn.f16.f32 high, %f239;
  mov.b32 %r2314, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_250;

$L__BB0_248:
	mov.f32 	%f240, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f240;
  cvt.rn.f16.f32 high, %f32;
  mov.b32 %r2314, {low,high};}

	// end inline asm

$L__BB0_250:
	add.s32 	%r1328, %r363, 1;
	mul.wide.s32 	%rd245, %r1328, 4;
	add.s64 	%rd246, %rd12, %rd245;
	st.global.u32 	[%rd246], %r2314;
	add.s32 	%r2291, %r2291, 2;

$L__BB0_251:
	@%p105 bra 	$L__BB0_263;

	@%p10 bra 	$L__BB0_254;
	bra.uni 	$L__BB0_253;

$L__BB0_254:
	setp.eq.s32 	%p146, %r250, 0;
	add.s32 	%r1330, %r266, %r270;
	shl.b32 	%r1331, %r1330, 1;
	or.b32  	%r1332, %r1331, 1;
	mul.wide.s32 	%rd247, %r1332, 4;
	add.s64 	%rd248, %rd11, %rd247;
	ld.global.f32 	%f33, [%rd248];
	@%p146 bra 	$L__BB0_256;
	bra.uni 	$L__BB0_255;

$L__BB0_256:
	mov.f32 	%f249, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f33;
  cvt.rn.f16.f32 high, %f249;
  mov.b32 %r2316, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_257;

$L__BB0_253:
	mov.f32 	%f245, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f245;
  cvt.rn.f16.f32 high, %f245;
  mov.b32 %r2316, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_257;

$L__BB0_255:
	mov.f32 	%f246, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f246;
  cvt.rn.f16.f32 high, %f33;
  mov.b32 %r2316, {low,high};}

	// end inline asm

$L__BB0_257:
	add.s32 	%r374, %r2291, %r254;
	mul.wide.s32 	%rd249, %r374, 4;
	add.s64 	%rd250, %rd12, %rd249;
	st.global.u32 	[%rd250], %r2316;
	@%p10 bra 	$L__BB0_259;
	bra.uni 	$L__BB0_258;

$L__BB0_259:
	setp.eq.s32 	%p147, %r250, 0;
	add.s32 	%r1336, %r268, %r270;
	shl.b32 	%r1337, %r1336, 1;
	or.b32  	%r1338, %r1337, 1;
	mul.wide.s32 	%rd251, %r1338, 4;
	add.s64 	%rd252, %rd11, %rd251;
	ld.global.f32 	%f34, [%rd252];
	@%p147 bra 	$L__BB0_261;
	bra.uni 	$L__BB0_260;

$L__BB0_261:
	mov.f32 	%f255, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f34;
  cvt.rn.f16.f32 high, %f255;
  mov.b32 %r2317, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_262;

$L__BB0_258:
	mov.f32 	%f251, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f251;
  cvt.rn.f16.f32 high, %f251;
  mov.b32 %r2317, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_262;

$L__BB0_260:
	mov.f32 	%f252, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f252;
  cvt.rn.f16.f32 high, %f34;
  mov.b32 %r2317, {low,high};}

	// end inline asm

$L__BB0_262:
	add.s32 	%r1341, %r374, 1;
	mul.wide.s32 	%rd253, %r1341, 4;
	add.s64 	%rd254, %rd12, %rd253;
	st.global.u32 	[%rd254], %r2317;
	add.s32 	%r2291, %r2291, 2;

$L__BB0_263:
	add.s64 	%rd544, %rd544, 4;
	add.s64 	%rd543, %rd543, -4;
	setp.ne.s64 	%p148, %rd543, 0;
	@%p148 bra 	$L__BB0_143;

$L__BB0_264:
	add.s32 	%r2287, %r2287, %r41;
	setp.lt.s32 	%p149, %r2287, %r922;
	@%p149 bra 	$L__BB0_141;

$L__BB0_265:
	add.s32 	%r2281, %r2281, %r942;
	setp.lt.s32 	%p150, %r2281, %r921;
	@%p150 bra 	$L__BB0_139;
	bra.uni 	$L__BB0_266;

$L__BB0_120:
	@%p22 bra 	$L__BB0_266;

	neg.s32 	%r223, %r68;
	mov.u32 	%r1156, 31;
	sub.s32 	%r1157, %r1156, %r39;
	setp.gt.s32 	%p88, %r38, %r39;
	selp.b32 	%r1158, %r39, %r1157, %p88;
	shl.b32 	%r1159, %r1158, 2;
	mov.u32 	%r1160, 2;
	sub.s32 	%r224, %r1159, %r924;
	shl.b32 	%r1161, %r923, 2;
	mov.u32 	%r1162, 128;
	sub.s32 	%r225, %r1162, %r1161;
	sub.s32 	%r1163, %r1160, %r924;
	add.s32 	%r226, %r1163, %r1159;
	add.s32 	%r227, %r921, -1;
	add.s32 	%r228, %r224, 1;
	add.s32 	%r229, %r226, 1;
	rem.s32 	%r1188, %r228, %r225;
	add.s32 	%r1189, %r1188, %r225;
	rem.s32 	%r240, %r1189, %r225;
	rem.s32 	%r1190, %r229, %r225;
	add.s32 	%r1191, %r1190, %r225;
	rem.s32 	%r241, %r1191, %r225;

$L__BB0_122:
	setp.ne.s32 	%p89, %r35, %r223;
	@%p89 bra 	$L__BB0_136;

	shl.b32 	%r231, %r2281, 1;
	rem.s32 	%r1164, %r224, %r225;
	add.s32 	%r1165, %r1164, %r225;
	rem.s32 	%r232, %r1165, %r225;
	rem.s32 	%r1166, %r226, %r225;
	add.s32 	%r1167, %r1166, %r225;
	rem.s32 	%r233, %r1167, %r225;
	@%p88 bra 	$L__BB0_125;
	bra.uni 	$L__BB0_124;

$L__BB0_125:
	mul.lo.s32 	%r1170, %r231, %r225;
	add.s32 	%r1171, %r1170, %r232;
	mul.wide.s32 	%rd155, %r1171, 4;
	add.s64 	%rd156, %rd11, %rd155;
	ld.global.f32 	%f116, [%rd156];
	add.s32 	%r1172, %r1170, %r233;
	mul.wide.s32 	%rd157, %r1172, 4;
	add.s64 	%rd158, %rd11, %rd157;
	ld.global.f32 	%f117, [%rd158];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f116;
  cvt.rn.f16.f32 high, %f117;
  mov.b32 %r2282, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_126;

$L__BB0_124:
	mov.f32 	%f115, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f115;
  cvt.rn.f16.f32 high, %f115;
  mov.b32 %r2282, {low,high};}

	// end inline asm

$L__BB0_126:
	shl.b32 	%r1173, %r2281, 5;
	add.s32 	%r1174, %r1173, %r39;
	shl.b32 	%r1175, %r1174, 2;
	mul.wide.s32 	%rd159, %r1175, 4;
	add.s64 	%rd13, %rd12, %rd159;
	st.global.u32 	[%rd13], %r2282;
	@%p88 bra 	$L__BB0_128;
	bra.uni 	$L__BB0_127;

$L__BB0_128:
	add.s32 	%r1178, %r231, 1;
	mul.lo.s32 	%r1179, %r1178, %r225;
	add.s32 	%r1180, %r1179, %r232;
	mul.wide.s32 	%rd160, %r1180, 4;
	add.s64 	%rd161, %rd11, %rd160;
	ld.global.f32 	%f120, [%rd161];
	add.s32 	%r1181, %r1179, %r233;
	mul.wide.s32 	%rd162, %r1181, 4;
	add.s64 	%rd163, %rd11, %rd162;
	ld.global.f32 	%f121, [%rd163];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f120;
  cvt.rn.f16.f32 high, %f121;
  mov.b32 %r2283, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_129;

$L__BB0_127:
	mov.f32 	%f119, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f119;
  cvt.rn.f16.f32 high, %f119;
  mov.b32 %r2283, {low,high};}

	// end inline asm

$L__BB0_129:
	add.s32 	%r1182, %r227, %r2281;
	rem.s32 	%r1183, %r1182, %r921;
	shl.b32 	%r1184, %r1183, 5;
	add.s32 	%r1185, %r1184, %r39;
	shl.b32 	%r1186, %r1185, 2;
	or.b32  	%r1187, %r1186, 2;
	mul.wide.s32 	%rd164, %r1187, 4;
	add.s64 	%rd14, %rd12, %rd164;
	st.global.u32 	[%rd14], %r2283;
	@%p88 bra 	$L__BB0_131;
	bra.uni 	$L__BB0_130;

$L__BB0_131:
	mul.lo.s32 	%r1194, %r231, %r225;
	add.s32 	%r1195, %r1194, %r240;
	mul.wide.s32 	%rd165, %r1195, 4;
	add.s64 	%rd166, %rd11, %rd165;
	ld.global.f32 	%f124, [%rd166];
	add.s32 	%r1196, %r1194, %r241;
	mul.wide.s32 	%rd167, %r1196, 4;
	add.s64 	%rd168, %rd11, %rd167;
	ld.global.f32 	%f125, [%rd168];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f124;
  cvt.rn.f16.f32 high, %f125;
  mov.b32 %r2284, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_132;

$L__BB0_130:
	mov.f32 	%f123, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f123;
  cvt.rn.f16.f32 high, %f123;
  mov.b32 %r2284, {low,high};}

	// end inline asm

$L__BB0_132:
	st.global.u32 	[%rd13+4], %r2284;
	@%p88 bra 	$L__BB0_134;
	bra.uni 	$L__BB0_133;

$L__BB0_134:
	add.s32 	%r1199, %r231, 1;
	mul.lo.s32 	%r1200, %r1199, %r225;
	add.s32 	%r1201, %r1200, %r240;
	mul.wide.s32 	%rd169, %r1201, 4;
	add.s64 	%rd170, %rd11, %rd169;
	ld.global.f32 	%f128, [%rd170];
	add.s32 	%r1202, %r1200, %r241;
	mul.wide.s32 	%rd171, %r1202, 4;
	add.s64 	%rd172, %rd11, %rd171;
	ld.global.f32 	%f129, [%rd172];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f128;
  cvt.rn.f16.f32 high, %f129;
  mov.b32 %r2285, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_135;

$L__BB0_133:
	mov.f32 	%f127, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f127;
  cvt.rn.f16.f32 high, %f127;
  mov.b32 %r2285, {low,high};}

	// end inline asm

$L__BB0_135:
	st.global.u32 	[%rd14+4], %r2285;

$L__BB0_136:
	add.s32 	%r2281, %r2281, %r942;
	setp.lt.s32 	%p94, %r2281, %r921;
	@%p94 bra 	$L__BB0_122;

$L__BB0_266:
	add.s32 	%r1343, %r916, -1;
	mad.lo.s32 	%r1344, %r917, 576, 128;
	mul.lo.s32 	%r1345, %r1344, %r1343;
	add.s32 	%r1346, %r62, -64;
	add.s32 	%r1347, %r1346, %r62;
	add.s32 	%r1348, %r917, -1;
	mad.lo.s32 	%r1349, %r1347, %r1348, %r1345;
	mul.lo.s32 	%r1350, %r1343, %r917;
	mul.lo.s32 	%r1351, %r1350, 320;
	mad.lo.s32 	%r1352, %r1346, %r1348, %r1351;
	add.s32 	%r383, %r1352, %r1349;
	setp.lt.s32 	%p151, %r383, 1;
	mov.f32 	%f257, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f257;
  cvt.rn.f16.f32 high, %f257;
  mov.b32 %r2320, {low,high};}

	// end inline asm
	@%p151 bra 	$L__BB0_269;

	mov.u32 	%r2321, 0;
	mov.u32 	%r2319, _ZN6kernel5shmemE;

$L__BB0_268:
	st.shared.u32 	[%r2319], %r2320;
	mov.f32 	%f265, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f265;
  cvt.rn.f16.f32 high, %f265;
  mov.b32 %r1355, {low,high};}

	// end inline asm
	st.shared.u32 	[%r2319+4], %r1355;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f265;
  cvt.rn.f16.f32 high, %f265;
  mov.b32 %r1356, {low,high};}

	// end inline asm
	st.shared.u32 	[%r2319+8], %r1356;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f265;
  cvt.rn.f16.f32 high, %f265;
  mov.b32 %r1357, {low,high};}

	// end inline asm
	st.shared.u32 	[%r2319+12], %r1357;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f265;
  cvt.rn.f16.f32 high, %f265;
  mov.b32 %r2320, {low,high};}

	// end inline asm
	add.s32 	%r2319, %r2319, 16;
	add.s32 	%r2321, %r2321, 4;
	setp.lt.s32 	%p152, %r2321, %r383;
	@%p152 bra 	$L__BB0_268;

$L__BB0_269:
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f257;
  cvt.rn.f16.f32 high, %f257;
  mov.b32 %r1360, {low,high};}

	// end inline asm
	mov.u32 	%r1361, 31;
	sub.s32 	%r1362, %r1361, %r39;
	setp.gt.s32 	%p154, %r38, %r39;
	selp.b32 	%r1363, %r39, %r1362, %p154;
	shl.b32 	%r1364, %r1363, 2;
	sub.s32 	%r392, %r1364, %r924;
	shl.b32 	%r1365, %r923, 2;
	mov.u32 	%r1366, 128;
	sub.s32 	%r393, %r1366, %r1365;
	rem.s32 	%r1367, %r392, %r393;
	add.s32 	%r1368, %r1367, %r393;
	rem.s32 	%r394, %r1368, %r393;
	add.s32 	%r1369, %r392, 2;
	rem.s32 	%r1370, %r1369, %r393;
	add.s32 	%r1371, %r1370, %r393;
	rem.s32 	%r395, %r1371, %r393;
	add.s32 	%r1382, %r392, 1;
	rem.s32 	%r1383, %r1382, %r393;
	add.s32 	%r1384, %r1383, %r393;
	rem.s32 	%r396, %r1384, %r393;
	add.s32 	%r1385, %r392, 3;
	rem.s32 	%r1386, %r1385, %r393;
	add.s32 	%r1387, %r1386, %r393;
	rem.s32 	%r397, %r1387, %r393;
	// begin inline asm
	mov.u32 %r1398, %envreg2;
	// end inline asm
	cvt.u64.u32 	%rd260, %r1398;
	// begin inline asm
	mov.u32 %r1399, %envreg1;
	// end inline asm
	cvt.u64.u32 	%rd261, %r1399;
	bfi.b64 	%rd24, %rd261, %rd260, 32, 32;
	setp.ne.s64 	%p162, %rd24, 0;
	@%p162 bra 	$L__BB0_287;

	// begin inline asm
	trap;
	// end inline asm

$L__BB0_287:
	add.s64 	%rd25, %rd24, 4;
	mov.u32 	%r1400, %nctaid.y;
	mov.u32 	%r1401, %nctaid.x;
	mul.lo.s32 	%r1402, %r1401, %r1400;
	mov.u32 	%r1403, %nctaid.z;
	mul.lo.s32 	%r398, %r1402, %r1403;
	neg.s32 	%r1404, %r35;
	add.s32 	%r1405, %r39, %r34;
	setp.ne.s32 	%p163, %r1405, %r1404;
	mov.u32 	%r1406, %ctaid.x;
	add.s32 	%r399, %r1406, %r36;
	neg.s32 	%r400, %r37;
	bar.sync 	0;
	@%p163 bra 	$L__BB0_291;

	setp.eq.s32 	%p164, %r399, %r400;
	mov.u32 	%r1409, -2147483647;
	sub.s32 	%r1410, %r1409, %r398;
	selp.b32 	%r1408, %r1410, 1, %p164;
	membar.gl;
	// begin inline asm
	atom.add.release.gpu.u32 %r1407,[%rd25],%r1408;
	// end inline asm

$L__BB0_289:
	ld.volatile.u32 	%r1411, [%rd25];
	xor.b32  	%r1412, %r1411, %r1407;
	setp.gt.s32 	%p165, %r1412, -1;
	@%p165 bra 	$L__BB0_289;

	// begin inline asm
	ld.acquire.gpu.u32 %r1413,[%rd25];
	// end inline asm

$L__BB0_291:
	bar.sync 	0;
	setp.lt.s32 	%p166, %r42, 1;
	@%p166 bra 	$L__BB0_616;

	setp.lt.s32 	%p167, %r394, %r935;
	setp.ge.s32 	%p168, %r394, %r934;
	and.pred  	%p11, %p167, %p168;
	setp.lt.s32 	%p169, %r396, %r935;
	setp.ge.s32 	%p170, %r396, %r934;
	and.pred  	%p12, %p169, %p170;
	setp.lt.s32 	%p171, %r395, %r935;
	setp.ge.s32 	%p172, %r395, %r934;
	and.pred  	%p13, %p171, %p172;
	setp.lt.s32 	%p173, %r397, %r935;
	setp.ge.s32 	%p174, %r397, %r934;
	and.pred  	%p14, %p173, %p174;
	mov.u32 	%r2450, 0;
	mul.wide.s32 	%rd268, %r39, 16;
	mul.wide.s32 	%rd270, %r39, 8;
	mov.u32 	%r2322, %r1360;
	mov.u32 	%r2323, %r1360;
	mov.u32 	%r2575, %r1360;
	mov.u32 	%r2503, %r1360;
	mov.u32 	%r2326, %r1360;
	mov.u32 	%r2327, %r1360;
	mov.u32 	%r2610, %r1360;
	mov.u32 	%r2477, %r1360;
	mov.u32 	%r2478, %r1360;
	mov.u32 	%r2331, %r1360;
	mov.u32 	%r2505, %r1360;
	mov.u32 	%r2479, %r1360;
	mov.u32 	%r2480, %r1360;
	mov.u32 	%r2335, %r1360;
	mov.u32 	%r2578, %r1360;
	mov.u32 	%r2337, %r1360;
	mov.u32 	%r2338, %r1360;
	mov.u32 	%r2339, %r1360;
	mov.u32 	%r2340, %r1360;
	mov.u32 	%r2572, %r1360;
	mov.u32 	%r2567, %r1360;
	mov.u32 	%r2568, %r1360;
	mov.u32 	%r2344, %r1360;
	mov.u32 	%r2612, %r1360;
	mov.u32 	%r2346, %r1360;
	mov.u32 	%r2347, %r1360;
	mov.u32 	%r2348, %r1360;
	mov.u32 	%r2571, %r1360;
	mov.u32 	%r2569, %r1360;
	mov.u32 	%r2570, %r1360;
	mov.u32 	%r2352, %r1360;
	mov.u32 	%r2493, %r1360;
	mov.u32 	%r2354, %r1360;
	mov.u32 	%r2579, %r1360;
	mov.u32 	%r2483, %r1360;
	mov.u32 	%r2357, %r1360;
	mov.u32 	%r2489, %r1360;
	mov.u32 	%r2359, %r1360;
	mov.u32 	%r2580, %r1360;
	mov.u32 	%r2484, %r1360;
	mov.u32 	%r2362, %r1360;
	mov.u32 	%r2496, %r1360;
	mov.u32 	%r2364, %r1360;
	mov.u32 	%r2365, %r1360;
	mov.u32 	%r2582, %r1360;
	mov.u32 	%r2485, %r1360;
	mov.u32 	%r2486, %r1360;
	mov.u32 	%r2369, %r1360;
	mov.u32 	%r2498, %r1360;
	mov.u32 	%r2371, %r1360;
	mov.u32 	%r2372, %r1360;
	mov.u32 	%r2584, %r1360;
	mov.u32 	%r2499, %r1360;
	mov.u32 	%r2487, %r1360;
	mov.u32 	%r2513, %r1360;
	mov.u32 	%r2377, %r1360;
	mov.u32 	%r2500, %r1360;
	mov.u32 	%r2488, %r1360;
	mov.u32 	%r2515, %r1360;
	mov.u32 	%r2381, %r1360;
	mov.u32 	%r2543, %r1360;
	mov.u32 	%r2383, %r1360;
	mov.u32 	%r2384, %r1360;
	mov.u32 	%r2385, %r1360;
	mov.u32 	%r2544, %r1360;
	mov.u32 	%r2387, %r1360;
	mov.u32 	%r2388, %r1360;
	mov.u32 	%r2389, %r1360;
	mov.u32 	%r2545, %r1360;
	mov.u32 	%r2546, %r1360;
	mov.u32 	%r2392, %r1360;
	mov.u32 	%r2393, %r1360;
	mov.u32 	%r2394, %r1360;
	mov.u32 	%r2395, %r1360;
	mov.u32 	%r2396, %r1360;
	mov.u32 	%r2547, %r1360;
	mov.u32 	%r2548, %r1360;
	mov.u32 	%r2399, %r1360;
	mov.u32 	%r2400, %r1360;
	mov.u32 	%r2401, %r1360;
	mov.u32 	%r2402, %r1360;
	mov.u32 	%r2403, %r1360;
	mov.u32 	%r2404, %r1360;
	mov.u32 	%r2405, %r1360;
	mov.u32 	%r2406, %r1360;
	mov.u32 	%r2407, %r1360;
	mov.u32 	%r2408, %r1360;
	mov.u32 	%r2409, %r1360;
	mov.u32 	%r2552, %r1360;
	mov.u32 	%r2411, %r1360;
	mov.u32 	%r2412, %r1360;
	mov.u32 	%r2413, %r1360;
	mov.u32 	%r2414, %r1360;
	mov.u32 	%r2415, %r1360;
	mov.u32 	%r2554, %r1360;
	mov.u32 	%r2417, %r1360;
	mov.u32 	%r2418, %r1360;
	mov.u32 	%r2419, %r1360;
	mov.u32 	%r2420, %r1360;
	mov.u32 	%r2421, %r1360;
	mov.u32 	%r2555, %r1360;
	mov.u32 	%r2423, %r1360;
	mov.u32 	%r2424, %r1360;
	mov.u32 	%r2425, %r1360;
	mov.u32 	%r2426, %r1360;
	mov.u32 	%r2427, %r1360;
	mov.u32 	%r2428, %r1360;
	mov.u32 	%r2556, %r1360;
	mov.u32 	%r2430, %r1360;
	mov.u32 	%r2431, %r1360;
	mov.u32 	%r2432, %r1360;
	mov.u32 	%r2433, %r1360;
	mov.u32 	%r2434, %r1360;
	mov.u32 	%r2435, %r1360;
	mov.u32 	%r2436, %r1360;
	mov.u32 	%r2437, %r1360;
	mov.u32 	%r2438, %r1360;
	mov.u32 	%r2439, %r1360;
	mov.u32 	%r2440, %r1360;
	mov.u32 	%r2441, %r1360;
	mov.u32 	%r2442, %r1360;
	mov.u32 	%r2443, %r1360;
	mov.u32 	%r2444, %r1360;
	mov.u32 	%r2445, %r1360;
	mov.u32 	%r2446, %r1360;
	mov.u32 	%r2447, %r1360;
	mov.u32 	%r2448, %r1360;
	mov.u32 	%r2449, %r1360;

$L__BB0_293:
	mov.u32 	%r513, %r2433;
	mov.u32 	%r512, %r2432;
	mov.u32 	%r509, %r2556;
	mov.u32 	%r508, %r2428;
	mov.u32 	%r506, %r2426;
	mov.u32 	%r505, %r2425;
	mov.u32 	%r502, %r2555;
	mov.u32 	%r501, %r2421;
	mov.u32 	%r499, %r2419;
	mov.u32 	%r496, %r2554;
	mov.u32 	%r493, %r2413;
	mov.u32 	%r490, %r2552;
	mov.u32 	%r2432, %r2403;
	mov.u32 	%r482, %r2402;
	mov.u32 	%r479, %r2399;
	mov.u32 	%r2428, %r2548;
	mov.u32 	%r477, %r2547;
	mov.u32 	%r2425, %r2396;
	mov.u32 	%r475, %r2395;
	mov.u32 	%r472, %r2392;
	mov.u32 	%r2421, %r2546;
	mov.u32 	%r470, %r2545;
	mov.u32 	%r469, %r2389;
	mov.u32 	%r466, %r2544;
	mov.u32 	%r465, %r2385;
	mov.u32 	%r462, %r2543;
	mov.u32 	%r453, %r2584;
	mov.u32 	%r2497, %r2369;
	mov.u32 	%r446, %r2582;
	mov.u32 	%r2495, %r2362;
	mov.u32 	%r2433, %r2580;
	mov.u32 	%r439, %r2359;
	mov.u32 	%r438, %r2489;
	mov.u32 	%r2399, %r2357;
	mov.u32 	%r2426, %r2579;
	mov.u32 	%r434, %r2354;
	mov.u32 	%r433, %r2493;
	mov.u32 	%r2392, %r2352;
	mov.u32 	%r2419, %r2570;
	mov.u32 	%r430, %r2569;
	mov.u32 	%r2389, %r2571;
	mov.u32 	%r427, %r2347;
	mov.u32 	%r2482, %r2346;
	mov.u32 	%r2352, %r2612;
	mov.u32 	%r2493, %r2344;
	mov.u32 	%r2413, %r2568;
	mov.u32 	%r422, %r2567;
	mov.u32 	%r2385, %r2572;
	mov.u32 	%r419, %r2339;
	mov.u32 	%r2481, %r2338;
	mov.u32 	%r2354, %r2337;
	mov.u32 	%r2395, %r2578;
	mov.u32 	%r2396, %r2505;
	mov.u32 	%r2357, %r2610;
	mov.u32 	%r2491, %r2327;
	mov.u32 	%r2490, %r2326;
	mov.u32 	%r2403, %r2503;
	mov.u32 	%r2402, %r2575;
	mov.u32 	%r2359, %r2323;
	mov.u32 	%r2489, %r2322;
	not.b32 	%r1416, %r36;
	add.s32 	%r1417, %r918, %r1416;
	mul.lo.s32 	%r1418, %r1417, %r920;
	add.s32 	%r1419, %r2450, %r1418;
	not.b32 	%r1421, %r37;
	add.s32 	%r1422, %r919, %r1421;
	mul.lo.s32 	%r1423, %r1422, %r920;
	add.s32 	%r1424, %r2450, %r1423;
	rem.s32 	%r531, %r1419, %r61;
	rem.s32 	%r532, %r1424, %r974;
	add.s32 	%r1428, %r1418, %r1423;
	add.s32 	%r1429, %r1428, %r921;
	not.b32 	%r1430, %r34;
	add.s32 	%r1431, %r916, %r1430;
	mad.lo.s32 	%r1432, %r1417, %r916, %r1431;
	not.b32 	%r1433, %r35;
	add.s32 	%r1434, %r917, %r1433;
	mad.lo.s32 	%r1435, %r1422, %r917, %r1434;
	add.s32 	%r1436, %r1432, %r1435;
	shl.b32 	%r1437, %r1436, 1;
	add.s32 	%r1438, %r1429, %r1437;
	add.s32 	%r1439, %r2450, %r1438;
	add.s32 	%r1440, %r2450, %r1428;
	div.s32 	%r1441, %r1439, %r921;
	mul.lo.s32 	%r1442, %r1441, %r921;
	sub.s32 	%r1443, %r41, %r921;
	sub.s32 	%r533, %r1439, %r1442;
	sub.s32 	%r1444, %r1432, %r1435;
	shl.b32 	%r1445, %r1444, 1;
	add.s32 	%r1446, %r1445, %r922;
	mad.lo.s32 	%r1447, %r1441, %r41, %r1446;
	mad.lo.s32 	%r1448, %r1441, %r1443, %r1440;
	div.s32 	%r1449, %r1447, %r922;
	mul.lo.s32 	%r1450, %r1449, %r922;
	sub.s32 	%r1453, %r943, %r922;
	sub.s32 	%r534, %r1447, %r1450;
	mad.lo.s32 	%r535, %r1449, %r1453, %r1448;
	setp.lt.s32 	%p175, %r34, 1;
	mov.u32 	%r2543, %r1360;
	mov.u32 	%r2544, %r1360;
	mov.u32 	%r2549, %r1360;
	mov.u32 	%r2550, %r1360;
	mov.u32 	%r2551, %r1360;
	mov.u32 	%r2552, %r1360;
	mov.u32 	%r2553, %r1360;
	mov.u32 	%r2554, %r1360;
	mov.u32 	%r2561, %r1360;
	mov.u32 	%r2562, %r1360;
	@%p175 bra 	$L__BB0_295;

	mul.lo.s32 	%r1454, %r917, 320;
	add.s32 	%r1455, %r34, -1;
	mul.lo.s32 	%r1456, %r35, 320;
	mad.lo.s32 	%r1457, %r1454, %r1455, %r1456;
	add.s32 	%r1460, %r976, -64;
	mad.lo.s32 	%r1465, %r1460, %r1348, %r1345;
	add.s32 	%r1466, %r1457, %r1465;
	shl.b32 	%r1467, %r1466, 2;
	mov.u32 	%r1468, _ZN6kernel5shmemE;
	add.s32 	%r1469, %r1468, %r1467;
	shl.b32 	%r1470, %r39, 4;
	add.s32 	%r1471, %r1469, %r1470;
	ld.shared.v4.u32 	{%r2554, %r2552, %r2544, %r2543}, [%r1471];
	shl.b32 	%r1476, %r39, 3;
	add.s32 	%r1477, %r1469, %r1476;
	ld.shared.v2.u32 	{%r2553, %r2551}, [%r1477+512];
	ld.shared.v4.u32 	{%r2562, %r2561, %r2550, %r2549}, [%r1471+768];

$L__BB0_295:
	setp.lt.s32 	%p176, %r35, 1;
	mov.u32 	%r2545, %r1360;
	mov.u32 	%r2546, %r1360;
	mov.u32 	%r2547, %r1360;
	mov.u32 	%r2548, %r1360;
	mov.u32 	%r2555, %r1360;
	mov.u32 	%r2556, %r1360;
	mov.u32 	%r2557, %r1360;
	mov.u32 	%r2558, %r1360;
	mov.u32 	%r2559, %r1360;
	mov.u32 	%r2560, %r1360;
	mov.u32 	%r2563, %r1360;
	mov.u32 	%r2564, %r1360;
	@%p176 bra 	$L__BB0_298;

	mad.lo.s32 	%r1489, %r1431, 384, %r1351;
	add.s32 	%r1492, %r35, -1;
	mad.lo.s32 	%r1493, %r1346, %r1492, %r1489;
	add.s32 	%r1499, %r1493, %r1349;
	shl.b32 	%r1500, %r1499, 2;
	mov.u32 	%r1501, _ZN6kernel5shmemE;
	add.s32 	%r1502, %r1501, %r1500;
	shl.b32 	%r1503, %r39, 4;
	add.s32 	%r1504, %r1502, %r1503;
	ld.shared.v4.u32 	{%r2564, %r2563, %r2559, %r2557}, [%r1504];
	shl.b32 	%r1509, %r39, 3;
	add.s32 	%r1510, %r1502, %r1509;
	ld.shared.v2.u32 	{%r2560, %r2558}, [%r1510+512];
	ld.shared.v4.u32 	{%r2556, %r2555, %r2547, %r2545}, [%r1504+768];
	mov.u32 	%r2546, %r1360;
	mov.u32 	%r2548, %r1360;
	@%p175 bra 	$L__BB0_298;

	add.s32 	%r2218, %r1510, 512;
	ld.shared.v2.u32 	{%r2548, %r2546}, [%r2218+768];

$L__BB0_298:
	setp.eq.s32 	%p178, %r34, 0;
	@%p178 bra 	$L__BB0_303;

	setp.eq.s32 	%p179, %r35, %r1348;
	@%p179 bra 	$L__BB0_301;

	sub.s32 	%r1520, %r916, %r34;
	mul.lo.s32 	%r1522, %r62, %r35;
	mad.lo.s32 	%r1523, %r1520, 384, %r1522;
	mad.lo.s32 	%r1526, %r1346, %r1348, %r1523;
	mad.lo.s32 	%r1529, %r1344, %r1343, %r1526;
	shl.b32 	%r1530, %r1529, 2;
	mov.u32 	%r1531, _ZN6kernel5shmemE;
	add.s32 	%r1532, %r1531, %r1530;
	shl.b32 	%r1533, %r39, 4;
	add.s32 	%r1534, %r1532, %r1533;
	ld.shared.v4.u32 	{%r2480, %r2478, %r2488, %r2487}, [%r1534];

$L__BB0_301:
	shl.b32 	%r1539, %r35, 8;
	shl.b32 	%r1543, %r917, 8;
	or.b32  	%r1544, %r1543, 128;
	add.s32 	%r1545, %r34, -1;
	mad.lo.s32 	%r1546, %r1544, %r1545, %r1351;
	add.s32 	%r1547, %r1546, %r1539;
	shl.b32 	%r1548, %r1547, 2;
	mov.u32 	%r1549, _ZN6kernel5shmemE;
	add.s32 	%r1550, %r1549, %r1548;
	setp.ne.s32 	%p180, %r35, %r1348;
	shl.b32 	%r1552, %r39, 4;
	add.s32 	%r589, %r1550, %r1552;
	ld.shared.v4.u32 	{%r2484, %r2486, %r2483, %r2485}, [%r589];
	ld.shared.v4.u32 	{%r2482, %r2481, %r2479, %r2477}, [%r589+512];
	@%p180 bra 	$L__BB0_303;

	ld.shared.v4.u32 	{%r2480, %r2478, %r2488, %r2487}, [%r589+1024];

$L__BB0_303:
	setp.eq.s32 	%p181, %r35, 0;
	@%p181 bra 	$L__BB0_306;

	mul.lo.s32 	%r1566, %r62, %r35;
	sub.s32 	%r1567, %r1566, %r62;
	mad.lo.s32 	%r1570, %r1431, 384, %r1567;
	mad.lo.s32 	%r1573, %r1346, %r1348, %r1570;
	mad.lo.s32 	%r1576, %r1344, %r1343, %r1573;
	shl.b32 	%r1577, %r1576, 2;
	mov.u32 	%r1578, _ZN6kernel5shmemE;
	add.s32 	%r1579, %r1578, %r1577;
	shl.b32 	%r1580, %r39, 4;
	add.s32 	%r1581, %r1579, %r1580;
	ld.shared.v4.u32 	{%r2498, %r2496, %r2491, %r2490}, [%r1581+512];
	ld.shared.v4.u32 	{%r2497, %r2495, %r2489, %r2493}, [%r1581+1024];
	@%p178 bra 	$L__BB0_306;

	add.s32 	%r2219, %r1581, 512;
	ld.shared.v4.u32 	{%r2499, %r2500, %r2357, %r2352}, [%r2219+1024];

$L__BB0_306:
	ld.param.u64 	%rd265, [%rd1+80];
	cvta.to.global.u64 	%rd26, %rd265;
	setp.ne.s32 	%p183, %r34, 0;
	mov.u32 	%r2503, %r2403;
	mov.u32 	%r2565, %r2331;
	mov.u32 	%r2505, %r2396;
	mov.u32 	%r2566, %r2335;
	mov.u32 	%r2567, %r422;
	mov.u32 	%r2568, %r2413;
	mov.u32 	%r2569, %r430;
	mov.u32 	%r2570, %r2419;
	mov.u32 	%r2571, %r2389;
	mov.u32 	%r2572, %r2385;
	mov.u32 	%r2573, %r2377;
	mov.u32 	%r2574, %r2381;
	@%p183 bra 	$L__BB0_311;

	mad.lo.s32 	%r1595, %r531, %r919, %r37;
	mul.lo.s32 	%r1596, %r917, %r1595;
	mul.lo.s32 	%r1597, %r1596, 768;
	mad.lo.s32 	%r1598, %r35, 384, %r1597;
	add.s32 	%r1599, %r1598, -64;
	mul.wide.s32 	%rd266, %r1599, 4;
	add.s64 	%rd267, %rd26, %rd266;
	add.s64 	%rd269, %rd267, %rd268;
	ld.global.v4.u32 	{%r2570, %r2568, %r2571, %r2572}, [%rd269+256];
	ld.global.v4.u32 	{%r2574, %r2573, %r2566, %r2565}, [%rd269+1024];
	add.s64 	%rd27, %rd267, %rd270;
	mov.u32 	%r2503, %r2403;
	mov.u32 	%r2505, %r2396;
	@%p181 bra 	$L__BB0_309;

	ld.global.v2.u32 	{%r2503, %r2505}, [%rd27];

$L__BB0_309:
	setp.ne.s32 	%p185, %r35, %r1348;
	ld.global.v2.u32 	{%r2569, %r2567}, [%rd27+768];
	@%p185 bra 	$L__BB0_311;

	ld.global.v2.u32 	{%r2515, %r2513}, [%rd27+1536];

$L__BB0_311:
	setp.ne.s32 	%p186, %r35, 0;
	mov.u32 	%r2575, %r2402;
	mov.u32 	%r2578, %r2395;
	mov.u32 	%r2579, %r2426;
	mov.u32 	%r2580, %r2433;
	mov.u32 	%r2581, %r2365;
	mov.u32 	%r2582, %r446;
	mov.u32 	%r2583, %r2372;
	mov.u32 	%r2584, %r453;
	mov.u32 	%r2585, %r2405;
	mov.u32 	%r2586, %r2407;
	@%p186 bra 	$L__BB0_313;

	mad.lo.s32 	%r1616, %r532, %r918, %r36;
	mul.lo.s32 	%r1620, %r1616, %r977;
	mad.lo.s32 	%r1623, %r1431, 384, %r1620;
	add.s32 	%r1624, %r1623, -64;
	mad.lo.s32 	%r1627, %r979, %r61, %r1624;
	mul.wide.s32 	%rd271, %r1627, 4;
	add.s64 	%rd272, %rd26, %rd271;
	add.s64 	%rd274, %rd272, %rd268;
	ld.global.v4.u32 	{%r2586, %r2585, %r2583, %r2581}, [%rd274+256];
	ld.global.v4.u32 	{%r2580, %r2579, %r2575, %r2578}, [%rd274+1024];
	add.s64 	%rd276, %rd272, %rd270;
	ld.global.v2.u32 	{%r2584, %r2582}, [%rd276+768];
	ld.global.v2.u32 	{%r2503, %r2505}, [%rd276+1536];

$L__BB0_313:
	add.s32 	%r1640, %r921, -1;
	setp.ge.s32 	%p187, %r533, %r1640;
	setp.lt.s32 	%p188, %r533, 2;
	or.pred  	%p189, %p188, %p187;
	setp.lt.s32 	%p190, %r534, 2;
	or.pred  	%p191, %p190, %p189;
	add.s32 	%r1641, %r922, -2;
	setp.ge.s32 	%p192, %r534, %r1641;
	or.pred  	%p193, %p192, %p191;
	@%p193 bra 	$L__BB0_324;

	ld.param.u64 	%rd541, [%rd1+88];
	cvta.to.global.u64 	%rd540, %rd541;
	mad.lo.s32 	%r701, %r534, %r921, %r533;
	shl.b32 	%r1642, %r701, 6;
	mul.wide.s32 	%rd279, %r1642, 4;
	add.s64 	%rd29, %rd540, %rd279;
	and.pred  	%p196, %p183, %p186;
	@%p196 bra 	$L__BB0_316;

	add.s64 	%rd281, %rd29, %rd270;
	ld.global.v2.u32 	{%r2548, %r2546}, [%rd281+256];

$L__BB0_316:
	@%p183 bra 	$L__BB0_318;

	shl.b32 	%r1645, %r921, 5;
	cvt.s64.s32 	%rd282, %r1645;
	cvt.s64.s32 	%rd283, %r39;
	add.s64 	%rd284, %rd282, %rd283;
	shl.b64 	%rd285, %rd284, 3;
	add.s64 	%rd286, %rd29, %rd285;
	ld.global.v2.u32 	{%r2553, %r2551}, [%rd286];

$L__BB0_318:
	@%p186 bra 	$L__BB0_320;

	shl.b32 	%r1648, %r921, 5;
	neg.s32 	%r1649, %r1648;
	cvt.s64.s32 	%rd287, %r1649;
	cvt.s64.s32 	%rd288, %r39;
	add.s64 	%rd289, %rd287, %rd288;
	shl.b64 	%rd290, %rd289, 3;
	add.s64 	%rd291, %rd29, %rd290;
	ld.global.v2.u32 	{%r2560, %r2558}, [%rd291];

$L__BB0_320:
	mad.lo.s32 	%r2230, %r534, %r921, %r533;
	ld.param.u64 	%rd537, [%rd1+88];
	cvta.to.global.u64 	%rd536, %rd537;
	shl.b32 	%r1652, %r922, 6;
	shl.b32 	%r1653, %r2230, 7;
	mad.lo.s32 	%r1654, %r1652, %r921, %r1653;
	mul.wide.s32 	%rd292, %r1654, 4;
	add.s64 	%rd30, %rd536, %rd292;
	@%p183 bra 	$L__BB0_322;

	shl.b32 	%r1655, %r921, 5;
	cvt.s64.s32 	%rd293, %r1655;
	cvt.s64.s32 	%rd294, %r39;
	add.s64 	%rd295, %rd293, %rd294;
	shl.b64 	%rd296, %rd295, 4;
	add.s64 	%rd297, %rd30, %rd296;
	ld.global.v4.u32 	{%r2554, %r2552, %r2544, %r2543}, [%rd297];
	shl.b32 	%r1660, %r921, 6;
	add.s32 	%r1661, %r1660, -32;
	cvt.s64.s32 	%rd298, %r1661;
	add.s64 	%rd299, %rd298, %rd294;
	shl.b64 	%rd300, %rd299, 4;
	add.s64 	%rd301, %rd30, %rd300;
	ld.global.v4.u32 	{%r2562, %r2561, %r2550, %r2549}, [%rd301];

$L__BB0_322:
	@%p186 bra 	$L__BB0_324;

	shl.b32 	%r1666, %r921, 5;
	xor.b32  	%r1667, %r1666, -32;
	cvt.s64.s32 	%rd302, %r1667;
	cvt.s64.s32 	%rd303, %r39;
	add.s64 	%rd304, %rd302, %rd303;
	shl.b64 	%rd305, %rd304, 4;
	add.s64 	%rd306, %rd30, %rd305;
	ld.global.v4.u32 	{%r2564, %r2563, %r2559, %r2557}, [%rd306];
	add.s64 	%rd308, %rd30, %rd268;
	ld.global.v4.u32 	{%r2556, %r2555, %r2547, %r2545}, [%rd308];

$L__BB0_324:
	bar.sync 	0;
	ld.param.u64 	%rd310, [%rd1+160];
	cvta.to.global.u64 	%rd31, %rd310;
	add.s32 	%r1676, %r930, 2;
	setp.lt.s32 	%p201, %r533, %r1676;
	add.s32 	%r1677, %r931, -1;
	setp.ge.s32 	%p202, %r533, %r1677;
	or.pred  	%p203, %p202, %p201;
	add.s32 	%r1678, %r932, 2;
	setp.lt.s32 	%p204, %r534, %r1678;
	or.pred  	%p205, %p203, %p204;
	add.s32 	%r1679, %r933, -2;
	setp.ge.s32 	%p206, %r534, %r1679;
	or.pred  	%p207, %p206, %p205;
	setp.lt.s32 	%p208, %r535, %r927;
	or.pred  	%p209, %p208, %p207;
	mad.lo.s32 	%r1680, %r929, %r928, %r927;
	setp.ge.s32 	%p210, %r535, %r1680;
	or.pred  	%p211, %p209, %p210;
	@%p211 bra 	$L__BB0_566;

	sub.s32 	%r760, %r535, %r927;
	rem.s32 	%r1681, %r760, %r928;
	setp.ne.s32 	%p212, %r1681, 0;
	@%p212 bra 	$L__BB0_566;

	div.s32 	%r1682, %r760, %r928;
	mul.lo.s32 	%r1684, %r1682, %r48;
	sub.s32 	%r761, %r533, %r930;
	sub.s32 	%r762, %r534, %r932;
	mul.lo.s32 	%r763, %r1684, 3;
	add.s32 	%r1685, %r761, %r763;
	add.s32 	%r1686, %r1685, -2;
	mul.lo.s32 	%r764, %r1686, %r49;
	add.s32 	%r1688, %r762, %r764;
	mul.lo.s32 	%r1689, %r1688, %r50;
	sub.s32 	%r765, %r1689, %r934;
	@%p15 bra 	$L__BB0_331;

	not.pred 	%p214, %p11;
	@%p214 bra 	$L__BB0_329;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2449;
  cvt.f32.f16 %f302, low;}

	// end inline asm
	add.s32 	%r1691, %r765, %r394;
	mul.wide.s32 	%rd311, %r1691, 4;
	add.s64 	%rd312, %rd31, %rd311;
	st.global.f32 	[%rd312], %f302;

$L__BB0_329:
	not.pred 	%p215, %p13;
	@%p215 bra 	$L__BB0_331;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2449;
  cvt.f32.f16 %f303, high;}

	// end inline asm
	add.s32 	%r1693, %r765, %r395;
	mul.wide.s32 	%rd313, %r1693, 4;
	add.s64 	%rd314, %rd31, %rd313;
	st.global.f32 	[%rd314], %f303;

$L__BB0_331:
	@%p15 bra 	$L__BB0_336;

	not.pred 	%p217, %p12;
	@%p217 bra 	$L__BB0_334;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2445;
  cvt.f32.f16 %f304, low;}

	// end inline asm
	add.s32 	%r1695, %r765, %r396;
	mul.wide.s32 	%rd315, %r1695, 4;
	add.s64 	%rd316, %rd31, %rd315;
	st.global.f32 	[%rd316], %f304;

$L__BB0_334:
	not.pred 	%p218, %p14;
	@%p218 bra 	$L__BB0_336;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2445;
  cvt.f32.f16 %f305, high;}

	// end inline asm
	add.s32 	%r1697, %r765, %r397;
	mul.wide.s32 	%rd317, %r1697, 4;
	add.s64 	%rd318, %rd31, %rd317;
	st.global.f32 	[%rd318], %f305;

$L__BB0_336:
	sub.s32 	%r2231, %r533, %r930;
	add.s32 	%r766, %r763, %r48;
	add.s32 	%r1699, %r2231, %r766;
	add.s32 	%r1700, %r1699, -2;
	mad.lo.s32 	%r1702, %r1700, %r49, %r762;
	mul.lo.s32 	%r1703, %r1702, %r50;
	sub.s32 	%r767, %r1703, %r934;
	@%p15 bra 	$L__BB0_341;

	not.pred 	%p220, %p11;
	@%p220 bra 	$L__BB0_339;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2448;
  cvt.f32.f16 %f306, low;}

	// end inline asm
	add.s32 	%r1705, %r767, %r394;
	mul.wide.s32 	%rd319, %r1705, 4;
	add.s64 	%rd320, %rd31, %rd319;
	st.global.f32 	[%rd320], %f306;

$L__BB0_339:
	not.pred 	%p221, %p13;
	@%p221 bra 	$L__BB0_341;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2448;
  cvt.f32.f16 %f307, high;}

	// end inline asm
	add.s32 	%r1707, %r767, %r395;
	mul.wide.s32 	%rd321, %r1707, 4;
	add.s64 	%rd322, %rd31, %rd321;
	st.global.f32 	[%rd322], %f307;

$L__BB0_341:
	@%p15 bra 	$L__BB0_346;

	not.pred 	%p223, %p12;
	@%p223 bra 	$L__BB0_344;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2444;
  cvt.f32.f16 %f308, low;}

	// end inline asm
	add.s32 	%r1709, %r767, %r396;
	mul.wide.s32 	%rd323, %r1709, 4;
	add.s64 	%rd324, %rd31, %rd323;
	st.global.f32 	[%rd324], %f308;

$L__BB0_344:
	not.pred 	%p224, %p14;
	@%p224 bra 	$L__BB0_346;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2444;
  cvt.f32.f16 %f309, high;}

	// end inline asm
	add.s32 	%r1711, %r767, %r397;
	mul.wide.s32 	%rd325, %r1711, 4;
	add.s64 	%rd326, %rd31, %rd325;
	st.global.f32 	[%rd326], %f309;

$L__BB0_346:
	add.s32 	%r768, %r762, 1;
	add.s32 	%r1712, %r768, %r764;
	mul.lo.s32 	%r1713, %r1712, %r50;
	sub.s32 	%r769, %r1713, %r934;
	@%p15 bra 	$L__BB0_351;

	not.pred 	%p226, %p11;
	@%p226 bra 	$L__BB0_349;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2441;
  cvt.f32.f16 %f310, low;}

	// end inline asm
	add.s32 	%r1715, %r769, %r394;
	mul.wide.s32 	%rd327, %r1715, 4;
	add.s64 	%rd328, %rd31, %rd327;
	st.global.f32 	[%rd328], %f310;

$L__BB0_349:
	not.pred 	%p227, %p13;
	@%p227 bra 	$L__BB0_351;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2441;
  cvt.f32.f16 %f311, high;}

	// end inline asm
	add.s32 	%r1717, %r769, %r395;
	mul.wide.s32 	%rd329, %r1717, 4;
	add.s64 	%rd330, %rd31, %rd329;
	st.global.f32 	[%rd330], %f311;

$L__BB0_351:
	@%p15 bra 	$L__BB0_356;

	not.pred 	%p229, %p12;
	@%p229 bra 	$L__BB0_354;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2439;
  cvt.f32.f16 %f312, low;}

	// end inline asm
	add.s32 	%r1719, %r769, %r396;
	mul.wide.s32 	%rd331, %r1719, 4;
	add.s64 	%rd332, %rd31, %rd331;
	st.global.f32 	[%rd332], %f312;

$L__BB0_354:
	not.pred 	%p230, %p14;
	@%p230 bra 	$L__BB0_356;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2439;
  cvt.f32.f16 %f313, high;}

	// end inline asm
	add.s32 	%r1721, %r769, %r397;
	mul.wide.s32 	%rd333, %r1721, 4;
	add.s64 	%rd334, %rd31, %rd333;
	st.global.f32 	[%rd334], %f313;

$L__BB0_356:
	not.b32 	%r1722, %r930;
	add.s32 	%r770, %r533, %r1722;
	not.b32 	%r1723, %r932;
	add.s32 	%r771, %r534, %r1723;
	add.s32 	%r1724, %r770, %r763;
	mul.lo.s32 	%r772, %r1724, %r49;
	add.s32 	%r1726, %r771, %r772;
	mul.lo.s32 	%r1727, %r1726, %r50;
	sub.s32 	%r773, %r1727, %r934;
	@%p15 bra 	$L__BB0_361;

	not.pred 	%p232, %p11;
	@%p232 bra 	$L__BB0_359;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2407;
  cvt.f32.f16 %f314, low;}

	// end inline asm
	add.s32 	%r1729, %r773, %r394;
	mul.wide.s32 	%rd335, %r1729, 4;
	add.s64 	%rd336, %rd31, %rd335;
	st.global.f32 	[%rd336], %f314;

$L__BB0_359:
	not.pred 	%p233, %p13;
	@%p233 bra 	$L__BB0_361;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2407;
  cvt.f32.f16 %f315, high;}

	// end inline asm
	add.s32 	%r1731, %r773, %r395;
	mul.wide.s32 	%rd337, %r1731, 4;
	add.s64 	%rd338, %rd31, %rd337;
	st.global.f32 	[%rd338], %f315;

$L__BB0_361:
	@%p15 bra 	$L__BB0_366;

	not.pred 	%p235, %p12;
	@%p235 bra 	$L__BB0_364;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2405;
  cvt.f32.f16 %f316, low;}

	// end inline asm
	add.s32 	%r1733, %r773, %r396;
	mul.wide.s32 	%rd339, %r1733, 4;
	add.s64 	%rd340, %rd31, %rd339;
	st.global.f32 	[%rd340], %f316;

$L__BB0_364:
	not.pred 	%p236, %p14;
	@%p236 bra 	$L__BB0_366;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2405;
  cvt.f32.f16 %f317, high;}

	// end inline asm
	add.s32 	%r1735, %r773, %r397;
	mul.wide.s32 	%rd341, %r1735, 4;
	add.s64 	%rd342, %rd31, %rd341;
	st.global.f32 	[%rd342], %f317;

$L__BB0_366:
	add.s32 	%r1737, %r770, %r766;
	mul.lo.s32 	%r774, %r1737, %r49;
	add.s32 	%r1738, %r771, %r774;
	mul.lo.s32 	%r1739, %r1738, %r50;
	sub.s32 	%r775, %r1739, %r934;
	@%p15 bra 	$L__BB0_371;

	not.pred 	%p238, %p11;
	@%p238 bra 	$L__BB0_369;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2437;
  cvt.f32.f16 %f318, low;}

	// end inline asm
	add.s32 	%r1741, %r775, %r394;
	mul.wide.s32 	%rd343, %r1741, 4;
	add.s64 	%rd344, %rd31, %rd343;
	st.global.f32 	[%rd344], %f318;

$L__BB0_369:
	not.pred 	%p239, %p13;
	@%p239 bra 	$L__BB0_371;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2437;
  cvt.f32.f16 %f319, high;}

	// end inline asm
	add.s32 	%r1743, %r775, %r395;
	mul.wide.s32 	%rd345, %r1743, 4;
	add.s64 	%rd346, %rd31, %rd345;
	st.global.f32 	[%rd346], %f319;

$L__BB0_371:
	@%p15 bra 	$L__BB0_376;

	not.pred 	%p241, %p12;
	@%p241 bra 	$L__BB0_374;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2435;
  cvt.f32.f16 %f320, low;}

	// end inline asm
	add.s32 	%r1745, %r775, %r396;
	mul.wide.s32 	%rd347, %r1745, 4;
	add.s64 	%rd348, %rd31, %rd347;
	st.global.f32 	[%rd348], %f320;

$L__BB0_374:
	not.pred 	%p242, %p14;
	@%p242 bra 	$L__BB0_376;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2435;
  cvt.f32.f16 %f321, high;}

	// end inline asm
	add.s32 	%r1747, %r775, %r397;
	mul.wide.s32 	%rd349, %r1747, 4;
	add.s64 	%rd350, %rd31, %rd349;
	st.global.f32 	[%rd350], %f321;

$L__BB0_376:
	add.s32 	%r1748, %r762, %r772;
	mul.lo.s32 	%r1749, %r1748, %r50;
	sub.s32 	%r776, %r1749, %r934;
	@%p15 bra 	$L__BB0_381;

	not.pred 	%p244, %p11;
	@%p244 bra 	$L__BB0_379;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r513;
  cvt.f32.f16 %f322, low;}

	// end inline asm
	add.s32 	%r1751, %r776, %r394;
	mul.wide.s32 	%rd351, %r1751, 4;
	add.s64 	%rd352, %rd31, %rd351;
	st.global.f32 	[%rd352], %f322;

$L__BB0_379:
	not.pred 	%p245, %p13;
	@%p245 bra 	$L__BB0_381;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r513;
  cvt.f32.f16 %f323, high;}

	// end inline asm
	add.s32 	%r1753, %r776, %r395;
	mul.wide.s32 	%rd353, %r1753, 4;
	add.s64 	%rd354, %rd31, %rd353;
	st.global.f32 	[%rd354], %f323;

$L__BB0_381:
	@%p15 bra 	$L__BB0_386;

	not.pred 	%p247, %p12;
	@%p247 bra 	$L__BB0_384;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r506;
  cvt.f32.f16 %f324, low;}

	// end inline asm
	add.s32 	%r1755, %r776, %r396;
	mul.wide.s32 	%rd355, %r1755, 4;
	add.s64 	%rd356, %rd31, %rd355;
	st.global.f32 	[%rd356], %f324;

$L__BB0_384:
	not.pred 	%p248, %p14;
	@%p248 bra 	$L__BB0_386;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r506;
  cvt.f32.f16 %f325, high;}

	// end inline asm
	add.s32 	%r1757, %r776, %r397;
	mul.wide.s32 	%rd357, %r1757, 4;
	add.s64 	%rd358, %rd31, %rd357;
	st.global.f32 	[%rd358], %f325;

$L__BB0_386:
	add.s32 	%r1758, %r762, %r774;
	mul.lo.s32 	%r1759, %r1758, %r50;
	sub.s32 	%r777, %r1759, %r934;
	@%p15 bra 	$L__BB0_391;

	not.pred 	%p250, %p11;
	@%p250 bra 	$L__BB0_389;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r512;
  cvt.f32.f16 %f326, low;}

	// end inline asm
	add.s32 	%r1761, %r777, %r394;
	mul.wide.s32 	%rd359, %r1761, 4;
	add.s64 	%rd360, %rd31, %rd359;
	st.global.f32 	[%rd360], %f326;

$L__BB0_389:
	not.pred 	%p251, %p13;
	@%p251 bra 	$L__BB0_391;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r512;
  cvt.f32.f16 %f327, high;}

	// end inline asm
	add.s32 	%r1763, %r777, %r395;
	mul.wide.s32 	%rd361, %r1763, 4;
	add.s64 	%rd362, %rd31, %rd361;
	st.global.f32 	[%rd362], %f327;

$L__BB0_391:
	@%p15 bra 	$L__BB0_396;

	not.pred 	%p253, %p12;
	@%p253 bra 	$L__BB0_394;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r505;
  cvt.f32.f16 %f328, low;}

	// end inline asm
	add.s32 	%r1765, %r777, %r396;
	mul.wide.s32 	%rd363, %r1765, 4;
	add.s64 	%rd364, %rd31, %rd363;
	st.global.f32 	[%rd364], %f328;

$L__BB0_394:
	not.pred 	%p254, %p14;
	@%p254 bra 	$L__BB0_396;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r505;
  cvt.f32.f16 %f329, high;}

	// end inline asm
	add.s32 	%r1767, %r777, %r397;
	mul.wide.s32 	%rd365, %r1767, 4;
	add.s64 	%rd366, %rd31, %rd365;
	st.global.f32 	[%rd366], %f329;

$L__BB0_396:
	add.s32 	%r778, %r766, %r48;
	add.s32 	%r1769, %r770, %r778;
	mul.lo.s32 	%r779, %r1769, %r49;
	add.s32 	%r1771, %r762, %r779;
	mul.lo.s32 	%r1772, %r1771, %r50;
	sub.s32 	%r780, %r1772, %r934;
	@%p15 bra 	$L__BB0_401;

	not.pred 	%p256, %p11;
	@%p256 bra 	$L__BB0_399;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2431;
  cvt.f32.f16 %f330, low;}

	// end inline asm
	add.s32 	%r1774, %r780, %r394;
	mul.wide.s32 	%rd367, %r1774, 4;
	add.s64 	%rd368, %rd31, %rd367;
	st.global.f32 	[%rd368], %f330;

$L__BB0_399:
	not.pred 	%p257, %p13;
	@%p257 bra 	$L__BB0_401;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2431;
  cvt.f32.f16 %f331, high;}

	// end inline asm
	add.s32 	%r1776, %r780, %r395;
	mul.wide.s32 	%rd369, %r1776, 4;
	add.s64 	%rd370, %rd31, %rd369;
	st.global.f32 	[%rd370], %f331;

$L__BB0_401:
	@%p15 bra 	$L__BB0_406;

	not.pred 	%p259, %p12;
	@%p259 bra 	$L__BB0_404;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2424;
  cvt.f32.f16 %f332, low;}

	// end inline asm
	add.s32 	%r1778, %r780, %r396;
	mul.wide.s32 	%rd371, %r1778, 4;
	add.s64 	%rd372, %rd31, %rd371;
	st.global.f32 	[%rd372], %f332;

$L__BB0_404:
	not.pred 	%p260, %p14;
	@%p260 bra 	$L__BB0_406;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2424;
  cvt.f32.f16 %f333, high;}

	// end inline asm
	add.s32 	%r1780, %r780, %r397;
	mul.wide.s32 	%rd373, %r1780, 4;
	add.s64 	%rd374, %rd31, %rd373;
	st.global.f32 	[%rd374], %f333;

$L__BB0_406:
	add.s32 	%r2223, %r762, 1;
	add.s32 	%r1781, %r2223, %r772;
	mul.lo.s32 	%r1782, %r1781, %r50;
	sub.s32 	%r781, %r1782, %r934;
	@%p15 bra 	$L__BB0_411;

	not.pred 	%p262, %p11;
	@%p262 bra 	$L__BB0_409;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r499;
  cvt.f32.f16 %f334, low;}

	// end inline asm
	add.s32 	%r1784, %r781, %r394;
	mul.wide.s32 	%rd375, %r1784, 4;
	add.s64 	%rd376, %rd31, %rd375;
	st.global.f32 	[%rd376], %f334;

$L__BB0_409:
	not.pred 	%p263, %p13;
	@%p263 bra 	$L__BB0_411;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r499;
  cvt.f32.f16 %f335, high;}

	// end inline asm
	add.s32 	%r1786, %r781, %r395;
	mul.wide.s32 	%rd377, %r1786, 4;
	add.s64 	%rd378, %rd31, %rd377;
	st.global.f32 	[%rd378], %f335;

$L__BB0_411:
	@%p15 bra 	$L__BB0_416;

	not.pred 	%p265, %p12;
	@%p265 bra 	$L__BB0_414;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r493;
  cvt.f32.f16 %f336, low;}

	// end inline asm
	add.s32 	%r1788, %r781, %r396;
	mul.wide.s32 	%rd379, %r1788, 4;
	add.s64 	%rd380, %rd31, %rd379;
	st.global.f32 	[%rd380], %f336;

$L__BB0_414:
	not.pred 	%p266, %p14;
	@%p266 bra 	$L__BB0_416;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r493;
  cvt.f32.f16 %f337, high;}

	// end inline asm
	add.s32 	%r1790, %r781, %r397;
	mul.wide.s32 	%rd381, %r1790, 4;
	add.s64 	%rd382, %rd31, %rd381;
	st.global.f32 	[%rd382], %f337;

$L__BB0_416:
	add.s32 	%r2224, %r762, 1;
	add.s32 	%r1791, %r2224, %r774;
	mul.lo.s32 	%r1792, %r1791, %r50;
	sub.s32 	%r782, %r1792, %r934;
	@%p15 bra 	$L__BB0_421;

	not.pred 	%p268, %p11;
	@%p268 bra 	$L__BB0_419;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2418;
  cvt.f32.f16 %f338, low;}

	// end inline asm
	add.s32 	%r1794, %r782, %r394;
	mul.wide.s32 	%rd383, %r1794, 4;
	add.s64 	%rd384, %rd31, %rd383;
	st.global.f32 	[%rd384], %f338;

$L__BB0_419:
	not.pred 	%p269, %p13;
	@%p269 bra 	$L__BB0_421;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2418;
  cvt.f32.f16 %f339, high;}

	// end inline asm
	add.s32 	%r1796, %r782, %r395;
	mul.wide.s32 	%rd385, %r1796, 4;
	add.s64 	%rd386, %rd31, %rd385;
	st.global.f32 	[%rd386], %f339;

$L__BB0_421:
	@%p15 bra 	$L__BB0_426;

	not.pred 	%p271, %p12;
	@%p271 bra 	$L__BB0_424;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2412;
  cvt.f32.f16 %f340, low;}

	// end inline asm
	add.s32 	%r1798, %r782, %r396;
	mul.wide.s32 	%rd387, %r1798, 4;
	add.s64 	%rd388, %rd31, %rd387;
	st.global.f32 	[%rd388], %f340;

$L__BB0_424:
	not.pred 	%p272, %p14;
	@%p272 bra 	$L__BB0_426;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2412;
  cvt.f32.f16 %f341, high;}

	// end inline asm
	add.s32 	%r1800, %r782, %r397;
	mul.wide.s32 	%rd389, %r1800, 4;
	add.s64 	%rd390, %rd31, %rd389;
	st.global.f32 	[%rd390], %f341;

$L__BB0_426:
	add.s32 	%r2225, %r762, 1;
	add.s32 	%r1801, %r2225, %r779;
	mul.lo.s32 	%r1802, %r1801, %r50;
	sub.s32 	%r783, %r1802, %r934;
	@%p15 bra 	$L__BB0_431;

	not.pred 	%p274, %p11;
	@%p274 bra 	$L__BB0_429;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2417;
  cvt.f32.f16 %f342, low;}

	// end inline asm
	add.s32 	%r1804, %r783, %r394;
	mul.wide.s32 	%rd391, %r1804, 4;
	add.s64 	%rd392, %rd31, %rd391;
	st.global.f32 	[%rd392], %f342;

$L__BB0_429:
	not.pred 	%p275, %p13;
	@%p275 bra 	$L__BB0_431;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2417;
  cvt.f32.f16 %f343, high;}

	// end inline asm
	add.s32 	%r1806, %r783, %r395;
	mul.wide.s32 	%rd393, %r1806, 4;
	add.s64 	%rd394, %rd31, %rd393;
	st.global.f32 	[%rd394], %f343;

$L__BB0_431:
	@%p15 bra 	$L__BB0_436;

	not.pred 	%p277, %p12;
	@%p277 bra 	$L__BB0_434;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2411;
  cvt.f32.f16 %f344, low;}

	// end inline asm
	add.s32 	%r1808, %r783, %r396;
	mul.wide.s32 	%rd395, %r1808, 4;
	add.s64 	%rd396, %rd31, %rd395;
	st.global.f32 	[%rd396], %f344;

$L__BB0_434:
	not.pred 	%p278, %p14;
	@%p278 bra 	$L__BB0_436;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2411;
  cvt.f32.f16 %f345, high;}

	// end inline asm
	add.s32 	%r1810, %r783, %r397;
	mul.wide.s32 	%rd397, %r1810, 4;
	add.s64 	%rd398, %rd31, %rd397;
	st.global.f32 	[%rd398], %f345;

$L__BB0_436:
	add.s32 	%r784, %r762, 2;
	add.s32 	%r1811, %r784, %r772;
	mul.lo.s32 	%r1812, %r1811, %r50;
	sub.s32 	%r785, %r1812, %r934;
	@%p15 bra 	$L__BB0_441;

	not.pred 	%p280, %p11;
	@%p280 bra 	$L__BB0_439;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2381;
  cvt.f32.f16 %f346, low;}

	// end inline asm
	add.s32 	%r1814, %r785, %r394;
	mul.wide.s32 	%rd399, %r1814, 4;
	add.s64 	%rd400, %rd31, %rd399;
	st.global.f32 	[%rd400], %f346;

$L__BB0_439:
	not.pred 	%p281, %p13;
	@%p281 bra 	$L__BB0_441;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2381;
  cvt.f32.f16 %f347, high;}

	// end inline asm
	add.s32 	%r1816, %r785, %r395;
	mul.wide.s32 	%rd401, %r1816, 4;
	add.s64 	%rd402, %rd31, %rd401;
	st.global.f32 	[%rd402], %f347;

$L__BB0_441:
	@%p15 bra 	$L__BB0_446;

	not.pred 	%p283, %p12;
	@%p283 bra 	$L__BB0_444;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2377;
  cvt.f32.f16 %f348, low;}

	// end inline asm
	add.s32 	%r1818, %r785, %r396;
	mul.wide.s32 	%rd403, %r1818, 4;
	add.s64 	%rd404, %rd31, %rd403;
	st.global.f32 	[%rd404], %f348;

$L__BB0_444:
	not.pred 	%p284, %p14;
	@%p284 bra 	$L__BB0_446;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2377;
  cvt.f32.f16 %f349, high;}

	// end inline asm
	add.s32 	%r1820, %r785, %r397;
	mul.wide.s32 	%rd405, %r1820, 4;
	add.s64 	%rd406, %rd31, %rd405;
	st.global.f32 	[%rd406], %f349;

$L__BB0_446:
	mul.lo.s32 	%r786, %r1699, %r49;
	add.s32 	%r1823, %r771, %r786;
	mul.lo.s32 	%r1824, %r1823, %r50;
	sub.s32 	%r787, %r1824, %r934;
	@%p15 bra 	$L__BB0_451;

	not.pred 	%p286, %p11;
	@%p286 bra 	$L__BB0_449;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r453;
  cvt.f32.f16 %f350, low;}

	// end inline asm
	add.s32 	%r1826, %r787, %r394;
	mul.wide.s32 	%rd407, %r1826, 4;
	add.s64 	%rd408, %rd31, %rd407;
	st.global.f32 	[%rd408], %f350;

$L__BB0_449:
	not.pred 	%p287, %p13;
	@%p287 bra 	$L__BB0_451;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r453;
  cvt.f32.f16 %f351, high;}

	// end inline asm
	add.s32 	%r1828, %r787, %r395;
	mul.wide.s32 	%rd409, %r1828, 4;
	add.s64 	%rd410, %rd31, %rd409;
	st.global.f32 	[%rd410], %f351;

$L__BB0_451:
	@%p15 bra 	$L__BB0_456;

	not.pred 	%p289, %p12;
	@%p289 bra 	$L__BB0_454;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r446;
  cvt.f32.f16 %f352, low;}

	// end inline asm
	add.s32 	%r1830, %r787, %r396;
	mul.wide.s32 	%rd411, %r1830, 4;
	add.s64 	%rd412, %rd31, %rd411;
	st.global.f32 	[%rd412], %f352;

$L__BB0_454:
	not.pred 	%p290, %p14;
	@%p290 bra 	$L__BB0_456;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r446;
  cvt.f32.f16 %f353, high;}

	// end inline asm
	add.s32 	%r1832, %r787, %r397;
	mul.wide.s32 	%rd413, %r1832, 4;
	add.s64 	%rd414, %rd31, %rd413;
	st.global.f32 	[%rd414], %f353;

$L__BB0_456:
	sub.s32 	%r2232, %r533, %r930;
	add.s32 	%r1834, %r2232, %r778;
	mul.lo.s32 	%r788, %r1834, %r49;
	add.s32 	%r1835, %r771, %r788;
	mul.lo.s32 	%r1836, %r1835, %r50;
	sub.s32 	%r789, %r1836, %r934;
	@%p15 bra 	$L__BB0_461;

	not.pred 	%p292, %p11;
	@%p292 bra 	$L__BB0_459;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2372;
  cvt.f32.f16 %f354, low;}

	// end inline asm
	add.s32 	%r1838, %r789, %r394;
	mul.wide.s32 	%rd415, %r1838, 4;
	add.s64 	%rd416, %rd31, %rd415;
	st.global.f32 	[%rd416], %f354;

$L__BB0_459:
	not.pred 	%p293, %p13;
	@%p293 bra 	$L__BB0_461;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2372;
  cvt.f32.f16 %f355, high;}

	// end inline asm
	add.s32 	%r1840, %r789, %r395;
	mul.wide.s32 	%rd417, %r1840, 4;
	add.s64 	%rd418, %rd31, %rd417;
	st.global.f32 	[%rd418], %f355;

$L__BB0_461:
	@%p15 bra 	$L__BB0_466;

	not.pred 	%p295, %p12;
	@%p295 bra 	$L__BB0_464;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2365;
  cvt.f32.f16 %f356, low;}

	// end inline asm
	add.s32 	%r1842, %r789, %r396;
	mul.wide.s32 	%rd419, %r1842, 4;
	add.s64 	%rd420, %rd31, %rd419;
	st.global.f32 	[%rd420], %f356;

$L__BB0_464:
	not.pred 	%p296, %p14;
	@%p296 bra 	$L__BB0_466;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2365;
  cvt.f32.f16 %f357, high;}

	// end inline asm
	add.s32 	%r1844, %r789, %r397;
	mul.wide.s32 	%rd421, %r1844, 4;
	add.s64 	%rd422, %rd31, %rd421;
	st.global.f32 	[%rd422], %f357;

$L__BB0_466:
	mul.lo.s32 	%r790, %r1685, %r49;
	add.s32 	%r1847, %r762, %r790;
	mul.lo.s32 	%r1848, %r1847, %r50;
	sub.s32 	%r791, %r1848, %r934;
	@%p15 bra 	$L__BB0_471;

	not.pred 	%p298, %p11;
	@%p298 bra 	$L__BB0_469;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2433;
  cvt.f32.f16 %f358, low;}

	// end inline asm
	add.s32 	%r1850, %r791, %r394;
	mul.wide.s32 	%rd423, %r1850, 4;
	add.s64 	%rd424, %rd31, %rd423;
	st.global.f32 	[%rd424], %f358;

$L__BB0_469:
	not.pred 	%p299, %p13;
	@%p299 bra 	$L__BB0_471;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2433;
  cvt.f32.f16 %f359, high;}

	// end inline asm
	add.s32 	%r1852, %r791, %r395;
	mul.wide.s32 	%rd425, %r1852, 4;
	add.s64 	%rd426, %rd31, %rd425;
	st.global.f32 	[%rd426], %f359;

$L__BB0_471:
	@%p15 bra 	$L__BB0_476;

	not.pred 	%p301, %p12;
	@%p301 bra 	$L__BB0_474;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2426;
  cvt.f32.f16 %f360, low;}

	// end inline asm
	add.s32 	%r1854, %r791, %r396;
	mul.wide.s32 	%rd427, %r1854, 4;
	add.s64 	%rd428, %rd31, %rd427;
	st.global.f32 	[%rd428], %f360;

$L__BB0_474:
	not.pred 	%p302, %p14;
	@%p302 bra 	$L__BB0_476;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2426;
  cvt.f32.f16 %f361, high;}

	// end inline asm
	add.s32 	%r1856, %r791, %r397;
	mul.wide.s32 	%rd429, %r1856, 4;
	add.s64 	%rd430, %rd31, %rd429;
	st.global.f32 	[%rd430], %f361;

$L__BB0_476:
	add.s32 	%r1857, %r762, %r786;
	mul.lo.s32 	%r1858, %r1857, %r50;
	sub.s32 	%r792, %r1858, %r934;
	@%p15 bra 	$L__BB0_481;

	not.pred 	%p304, %p11;
	@%p304 bra 	$L__BB0_479;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2432;
  cvt.f32.f16 %f362, low;}

	// end inline asm
	add.s32 	%r1860, %r792, %r394;
	mul.wide.s32 	%rd431, %r1860, 4;
	add.s64 	%rd432, %rd31, %rd431;
	st.global.f32 	[%rd432], %f362;

$L__BB0_479:
	not.pred 	%p305, %p13;
	@%p305 bra 	$L__BB0_481;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2432;
  cvt.f32.f16 %f363, high;}

	// end inline asm
	add.s32 	%r1862, %r792, %r395;
	mul.wide.s32 	%rd433, %r1862, 4;
	add.s64 	%rd434, %rd31, %rd433;
	st.global.f32 	[%rd434], %f363;

$L__BB0_481:
	@%p15 bra 	$L__BB0_486;

	not.pred 	%p307, %p12;
	@%p307 bra 	$L__BB0_484;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2425;
  cvt.f32.f16 %f364, low;}

	// end inline asm
	add.s32 	%r1864, %r792, %r396;
	mul.wide.s32 	%rd435, %r1864, 4;
	add.s64 	%rd436, %rd31, %rd435;
	st.global.f32 	[%rd436], %f364;

$L__BB0_484:
	not.pred 	%p308, %p14;
	@%p308 bra 	$L__BB0_486;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2425;
  cvt.f32.f16 %f365, high;}

	// end inline asm
	add.s32 	%r1866, %r792, %r397;
	mul.wide.s32 	%rd437, %r1866, 4;
	add.s64 	%rd438, %rd31, %rd437;
	st.global.f32 	[%rd438], %f365;

$L__BB0_486:
	add.s32 	%r1867, %r762, %r788;
	mul.lo.s32 	%r1868, %r1867, %r50;
	sub.s32 	%r793, %r1868, %r934;
	@%p15 bra 	$L__BB0_491;

	not.pred 	%p310, %p11;
	@%p310 bra 	$L__BB0_489;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r482;
  cvt.f32.f16 %f366, low;}

	// end inline asm
	add.s32 	%r1870, %r793, %r394;
	mul.wide.s32 	%rd439, %r1870, 4;
	add.s64 	%rd440, %rd31, %rd439;
	st.global.f32 	[%rd440], %f366;

$L__BB0_489:
	not.pred 	%p311, %p13;
	@%p311 bra 	$L__BB0_491;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r482;
  cvt.f32.f16 %f367, high;}

	// end inline asm
	add.s32 	%r1872, %r793, %r395;
	mul.wide.s32 	%rd441, %r1872, 4;
	add.s64 	%rd442, %rd31, %rd441;
	st.global.f32 	[%rd442], %f367;

$L__BB0_491:
	@%p15 bra 	$L__BB0_496;

	not.pred 	%p313, %p12;
	@%p313 bra 	$L__BB0_494;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r475;
  cvt.f32.f16 %f368, low;}

	// end inline asm
	add.s32 	%r1874, %r793, %r396;
	mul.wide.s32 	%rd443, %r1874, 4;
	add.s64 	%rd444, %rd31, %rd443;
	st.global.f32 	[%rd444], %f368;

$L__BB0_494:
	not.pred 	%p314, %p14;
	@%p314 bra 	$L__BB0_496;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r475;
  cvt.f32.f16 %f369, high;}

	// end inline asm
	add.s32 	%r1876, %r793, %r397;
	mul.wide.s32 	%rd445, %r1876, 4;
	add.s64 	%rd446, %rd31, %rd445;
	st.global.f32 	[%rd446], %f369;

$L__BB0_496:
	add.s32 	%r2226, %r762, 1;
	add.s32 	%r1877, %r2226, %r790;
	mul.lo.s32 	%r1878, %r1877, %r50;
	sub.s32 	%r794, %r1878, %r934;
	@%p15 bra 	$L__BB0_501;

	not.pred 	%p316, %p11;
	@%p316 bra 	$L__BB0_499;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2419;
  cvt.f32.f16 %f370, low;}

	// end inline asm
	add.s32 	%r1880, %r794, %r394;
	mul.wide.s32 	%rd447, %r1880, 4;
	add.s64 	%rd448, %rd31, %rd447;
	st.global.f32 	[%rd448], %f370;

$L__BB0_499:
	not.pred 	%p317, %p13;
	@%p317 bra 	$L__BB0_501;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2419;
  cvt.f32.f16 %f371, high;}

	// end inline asm
	add.s32 	%r1882, %r794, %r395;
	mul.wide.s32 	%rd449, %r1882, 4;
	add.s64 	%rd450, %rd31, %rd449;
	st.global.f32 	[%rd450], %f371;

$L__BB0_501:
	@%p15 bra 	$L__BB0_506;

	not.pred 	%p319, %p12;
	@%p319 bra 	$L__BB0_504;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2413;
  cvt.f32.f16 %f372, low;}

	// end inline asm
	add.s32 	%r1884, %r794, %r396;
	mul.wide.s32 	%rd451, %r1884, 4;
	add.s64 	%rd452, %rd31, %rd451;
	st.global.f32 	[%rd452], %f372;

$L__BB0_504:
	not.pred 	%p320, %p14;
	@%p320 bra 	$L__BB0_506;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2413;
  cvt.f32.f16 %f373, high;}

	// end inline asm
	add.s32 	%r1886, %r794, %r397;
	mul.wide.s32 	%rd453, %r1886, 4;
	add.s64 	%rd454, %rd31, %rd453;
	st.global.f32 	[%rd454], %f373;

$L__BB0_506:
	add.s32 	%r2227, %r762, 1;
	add.s32 	%r1887, %r2227, %r786;
	mul.lo.s32 	%r1888, %r1887, %r50;
	sub.s32 	%r795, %r1888, %r934;
	@%p15 bra 	$L__BB0_511;

	not.pred 	%p322, %p11;
	@%p322 bra 	$L__BB0_509;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r430;
  cvt.f32.f16 %f374, low;}

	// end inline asm
	add.s32 	%r1890, %r795, %r394;
	mul.wide.s32 	%rd455, %r1890, 4;
	add.s64 	%rd456, %rd31, %rd455;
	st.global.f32 	[%rd456], %f374;

$L__BB0_509:
	not.pred 	%p323, %p13;
	@%p323 bra 	$L__BB0_511;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r430;
  cvt.f32.f16 %f375, high;}

	// end inline asm
	add.s32 	%r1892, %r795, %r395;
	mul.wide.s32 	%rd457, %r1892, 4;
	add.s64 	%rd458, %rd31, %rd457;
	st.global.f32 	[%rd458], %f375;

$L__BB0_511:
	@%p15 bra 	$L__BB0_516;

	not.pred 	%p325, %p12;
	@%p325 bra 	$L__BB0_514;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r422;
  cvt.f32.f16 %f376, low;}

	// end inline asm
	add.s32 	%r1894, %r795, %r396;
	mul.wide.s32 	%rd459, %r1894, 4;
	add.s64 	%rd460, %rd31, %rd459;
	st.global.f32 	[%rd460], %f376;

$L__BB0_514:
	not.pred 	%p326, %p14;
	@%p326 bra 	$L__BB0_516;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r422;
  cvt.f32.f16 %f377, high;}

	// end inline asm
	add.s32 	%r1896, %r795, %r397;
	mul.wide.s32 	%rd461, %r1896, 4;
	add.s64 	%rd462, %rd31, %rd461;
	st.global.f32 	[%rd462], %f377;

$L__BB0_516:
	add.s32 	%r2228, %r762, 1;
	add.s32 	%r1897, %r2228, %r788;
	mul.lo.s32 	%r1898, %r1897, %r50;
	sub.s32 	%r796, %r1898, %r934;
	@%p15 bra 	$L__BB0_521;

	not.pred 	%p328, %p11;
	@%p328 bra 	$L__BB0_519;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r469;
  cvt.f32.f16 %f378, low;}

	// end inline asm
	add.s32 	%r1900, %r796, %r394;
	mul.wide.s32 	%rd463, %r1900, 4;
	add.s64 	%rd464, %rd31, %rd463;
	st.global.f32 	[%rd464], %f378;

$L__BB0_519:
	not.pred 	%p329, %p13;
	@%p329 bra 	$L__BB0_521;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r469;
  cvt.f32.f16 %f379, high;}

	// end inline asm
	add.s32 	%r1902, %r796, %r395;
	mul.wide.s32 	%rd465, %r1902, 4;
	add.s64 	%rd466, %rd31, %rd465;
	st.global.f32 	[%rd466], %f379;

$L__BB0_521:
	@%p15 bra 	$L__BB0_526;

	not.pred 	%p331, %p12;
	@%p331 bra 	$L__BB0_524;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r465;
  cvt.f32.f16 %f380, low;}

	// end inline asm
	add.s32 	%r1904, %r796, %r396;
	mul.wide.s32 	%rd467, %r1904, 4;
	add.s64 	%rd468, %rd31, %rd467;
	st.global.f32 	[%rd468], %f380;

$L__BB0_524:
	not.pred 	%p332, %p14;
	@%p332 bra 	$L__BB0_526;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r465;
  cvt.f32.f16 %f381, high;}

	// end inline asm
	add.s32 	%r1906, %r796, %r397;
	mul.wide.s32 	%rd469, %r1906, 4;
	add.s64 	%rd470, %rd31, %rd469;
	st.global.f32 	[%rd470], %f381;

$L__BB0_526:
	add.s32 	%r2234, %r762, 2;
	add.s32 	%r1907, %r2234, %r788;
	mul.lo.s32 	%r1908, %r1907, %r50;
	sub.s32 	%r797, %r1908, %r934;
	@%p15 bra 	$L__BB0_531;

	not.pred 	%p334, %p11;
	@%p334 bra 	$L__BB0_529;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2335;
  cvt.f32.f16 %f382, low;}

	// end inline asm
	add.s32 	%r1910, %r797, %r394;
	mul.wide.s32 	%rd471, %r1910, 4;
	add.s64 	%rd472, %rd31, %rd471;
	st.global.f32 	[%rd472], %f382;

$L__BB0_529:
	not.pred 	%p335, %p13;
	@%p335 bra 	$L__BB0_531;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2335;
  cvt.f32.f16 %f383, high;}

	// end inline asm
	add.s32 	%r1912, %r797, %r395;
	mul.wide.s32 	%rd473, %r1912, 4;
	add.s64 	%rd474, %rd31, %rd473;
	st.global.f32 	[%rd474], %f383;

$L__BB0_531:
	@%p15 bra 	$L__BB0_536;

	not.pred 	%p337, %p12;
	@%p337 bra 	$L__BB0_534;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2331;
  cvt.f32.f16 %f384, low;}

	// end inline asm
	add.s32 	%r1914, %r797, %r396;
	mul.wide.s32 	%rd475, %r1914, 4;
	add.s64 	%rd476, %rd31, %rd475;
	st.global.f32 	[%rd476], %f384;

$L__BB0_534:
	not.pred 	%p338, %p14;
	@%p338 bra 	$L__BB0_536;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2331;
  cvt.f32.f16 %f385, high;}

	// end inline asm
	add.s32 	%r1916, %r797, %r397;
	mul.wide.s32 	%rd477, %r1916, 4;
	add.s64 	%rd478, %rd31, %rd477;
	st.global.f32 	[%rd478], %f385;

$L__BB0_536:
	sub.s32 	%r2233, %r533, %r930;
	add.s32 	%r798, %r2233, 1;
	add.s32 	%r1917, %r798, %r766;
	mad.lo.s32 	%r1919, %r1917, %r49, %r762;
	mul.lo.s32 	%r1920, %r1919, %r50;
	sub.s32 	%r799, %r1920, %r934;
	@%p15 bra 	$L__BB0_541;

	not.pred 	%p340, %p11;
	@%p340 bra 	$L__BB0_539;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2403;
  cvt.f32.f16 %f386, low;}

	// end inline asm
	add.s32 	%r1922, %r799, %r394;
	mul.wide.s32 	%rd479, %r1922, 4;
	add.s64 	%rd480, %rd31, %rd479;
	st.global.f32 	[%rd480], %f386;

$L__BB0_539:
	not.pred 	%p341, %p13;
	@%p341 bra 	$L__BB0_541;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2403;
  cvt.f32.f16 %f387, high;}

	// end inline asm
	add.s32 	%r1924, %r799, %r395;
	mul.wide.s32 	%rd481, %r1924, 4;
	add.s64 	%rd482, %rd31, %rd481;
	st.global.f32 	[%rd482], %f387;

$L__BB0_541:
	@%p15 bra 	$L__BB0_546;

	not.pred 	%p343, %p12;
	@%p343 bra 	$L__BB0_544;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2396;
  cvt.f32.f16 %f388, low;}

	// end inline asm
	add.s32 	%r1926, %r799, %r396;
	mul.wide.s32 	%rd483, %r1926, 4;
	add.s64 	%rd484, %rd31, %rd483;
	st.global.f32 	[%rd484], %f388;

$L__BB0_544:
	not.pred 	%p344, %p14;
	@%p344 bra 	$L__BB0_546;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2396;
  cvt.f32.f16 %f389, high;}

	// end inline asm
	add.s32 	%r1928, %r799, %r397;
	mul.wide.s32 	%rd485, %r1928, 4;
	add.s64 	%rd486, %rd31, %rd485;
	st.global.f32 	[%rd486], %f389;

$L__BB0_546:
	add.s32 	%r1930, %r798, %r778;
	mul.lo.s32 	%r800, %r1930, %r49;
	add.s32 	%r1931, %r762, %r800;
	mul.lo.s32 	%r1932, %r1931, %r50;
	sub.s32 	%r801, %r1932, %r934;
	@%p15 bra 	$L__BB0_551;

	not.pred 	%p346, %p11;
	@%p346 bra 	$L__BB0_549;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2402;
  cvt.f32.f16 %f390, low;}

	// end inline asm
	add.s32 	%r1934, %r801, %r394;
	mul.wide.s32 	%rd487, %r1934, 4;
	add.s64 	%rd488, %rd31, %rd487;
	st.global.f32 	[%rd488], %f390;

$L__BB0_549:
	not.pred 	%p347, %p13;
	@%p347 bra 	$L__BB0_551;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2402;
  cvt.f32.f16 %f391, high;}

	// end inline asm
	add.s32 	%r1936, %r801, %r395;
	mul.wide.s32 	%rd489, %r1936, 4;
	add.s64 	%rd490, %rd31, %rd489;
	st.global.f32 	[%rd490], %f391;

$L__BB0_551:
	@%p15 bra 	$L__BB0_556;

	not.pred 	%p349, %p12;
	@%p349 bra 	$L__BB0_554;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2395;
  cvt.f32.f16 %f392, low;}

	// end inline asm
	add.s32 	%r1938, %r801, %r396;
	mul.wide.s32 	%rd491, %r1938, 4;
	add.s64 	%rd492, %rd31, %rd491;
	st.global.f32 	[%rd492], %f392;

$L__BB0_554:
	not.pred 	%p350, %p14;
	@%p350 bra 	$L__BB0_556;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2395;
  cvt.f32.f16 %f393, high;}

	// end inline asm
	add.s32 	%r1940, %r801, %r397;
	mul.wide.s32 	%rd493, %r1940, 4;
	add.s64 	%rd494, %rd31, %rd493;
	st.global.f32 	[%rd494], %f393;

$L__BB0_556:
	add.s32 	%r2229, %r762, 1;
	add.s32 	%r1941, %r2229, %r800;
	mul.lo.s32 	%r1942, %r1941, %r50;
	sub.s32 	%r802, %r1942, %r934;
	@%p15 bra 	$L__BB0_561;

	not.pred 	%p352, %p11;
	@%p352 bra 	$L__BB0_559;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2389;
  cvt.f32.f16 %f394, low;}

	// end inline asm
	add.s32 	%r1944, %r802, %r394;
	mul.wide.s32 	%rd495, %r1944, 4;
	add.s64 	%rd496, %rd31, %rd495;
	st.global.f32 	[%rd496], %f394;

$L__BB0_559:
	not.pred 	%p353, %p13;
	@%p353 bra 	$L__BB0_561;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2389;
  cvt.f32.f16 %f395, high;}

	// end inline asm
	add.s32 	%r1946, %r802, %r395;
	mul.wide.s32 	%rd497, %r1946, 4;
	add.s64 	%rd498, %rd31, %rd497;
	st.global.f32 	[%rd498], %f395;

$L__BB0_561:
	@%p15 bra 	$L__BB0_566;

	not.pred 	%p355, %p12;
	@%p355 bra 	$L__BB0_564;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2385;
  cvt.f32.f16 %f396, low;}

	// end inline asm
	add.s32 	%r1948, %r802, %r396;
	mul.wide.s32 	%rd499, %r1948, 4;
	add.s64 	%rd500, %rd31, %rd499;
	st.global.f32 	[%rd500], %f396;

$L__BB0_564:
	not.pred 	%p356, %p14;
	@%p356 bra 	$L__BB0_566;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2385;
  cvt.f32.f16 %f397, high;}

	// end inline asm
	add.s32 	%r1950, %r802, %r397;
	mul.wide.s32 	%rd501, %r1950, 4;
	add.s64 	%rd502, %rd31, %rd501;
	st.global.f32 	[%rd502], %f397;

$L__BB0_566:
	setp.eq.s32 	%p357, %r34, %r1343;
	@%p357 bra 	$L__BB0_568;

	mad.lo.s32 	%r1951, %r917, %r34, %r35;
	mov.u32 	%r1952, _ZN6kernel5shmemE;
	mad.lo.s32 	%r1953, %r1951, 1280, %r1952;
	add.s32 	%r1954, %r1953, -256;
	shl.b32 	%r1955, %r39, 4;
	add.s32 	%r1956, %r1954, %r1955;
	st.shared.v4.u32 	[%r1956+256], {%r2407, %r2405, %r2372, %r2365};
	st.shared.v4.u32 	[%r1956+1024], {%r2449, %r2445, %r2431, %r2424};
	shl.b32 	%r1957, %r39, 3;
	add.s32 	%r1958, %r1954, %r1957;
	st.shared.v2.u32 	[%r1958+768], {%r2437, %r2435};

$L__BB0_568:
	setp.eq.s32 	%p358, %r35, %r1348;
	@%p358 bra 	$L__BB0_572;

	mad.lo.s32 	%r1962, %r916, 384, -64;
	mul.lo.s32 	%r1963, %r1962, %r35;
	mad.lo.s32 	%r1965, %r1344, %r1343, %r1963;
	mad.lo.s32 	%r1966, %r1431, 384, %r1965;
	shl.b32 	%r1967, %r1966, 2;
	mov.u32 	%r1968, _ZN6kernel5shmemE;
	add.s32 	%r1969, %r1968, %r1967;
	add.s32 	%r1970, %r1969, -256;
	shl.b32 	%r1971, %r39, 4;
	add.s32 	%r1972, %r1970, %r1971;
	st.shared.v4.u32 	[%r1972+256], {%r2441, %r2439, %r2417, %r2411};
	st.shared.v4.u32 	[%r1972+1024], {%r2381, %r2377, %r2335, %r2331};
	shl.b32 	%r1973, %r39, 3;
	add.s32 	%r805, %r1970, %r1973;
	@%p357 bra 	$L__BB0_571;

	st.shared.v2.u32 	[%r805], {%r2448, %r2444};

$L__BB0_571:
	st.shared.v2.u32 	[%r805+768], {%r2418, %r2412};

$L__BB0_572:
	setp.ne.s32 	%p360, %r34, %r1343;
	ld.param.u64 	%rd503, [%rd1+80];
	cvta.to.global.u64 	%rd33, %rd503;
	@%p360 bra 	$L__BB0_574;

	mad.lo.s32 	%r1975, %r531, %r919, %r37;
	mul.lo.s32 	%r1976, %r917, %r1975;
	mul.lo.s32 	%r1977, %r1976, 768;
	mad.lo.s32 	%r1978, %r35, 384, %r1977;
	add.s32 	%r1979, %r1978, -64;
	mul.wide.s32 	%rd504, %r1979, 4;
	add.s64 	%rd505, %rd33, %rd504;
	add.s64 	%rd507, %rd505, %rd268;
	st.global.v4.u32 	[%rd507+256], {%r2407, %r2405, %r2372, %r2365};
	st.global.v4.u32 	[%rd507+1024], {%r2449, %r2445, %r2431, %r2424};
	add.s64 	%rd509, %rd505, %rd270;
	st.global.v2.u32 	[%rd509+768], {%r2437, %r2435};
	st.global.v2.u32 	[%rd509+1536], {%r2448, %r2444};

$L__BB0_574:
	setp.ne.s32 	%p361, %r35, %r1348;
	@%p361 bra 	$L__BB0_579;

	ld.param.u64 	%rd539, [%rd1+80];
	cvta.to.global.u64 	%rd538, %rd539;
	mad.lo.s32 	%r1982, %r532, %r918, %r36;
	mul.lo.s32 	%r1986, %r1982, %r977;
	mad.lo.s32 	%r1989, %r1431, 384, %r1986;
	add.s32 	%r1990, %r1989, -64;
	mad.lo.s32 	%r1993, %r979, %r61, %r1990;
	mul.wide.s32 	%rd510, %r1993, 4;
	add.s64 	%rd511, %rd538, %rd510;
	add.s64 	%rd513, %rd511, %rd268;
	st.global.v4.u32 	[%rd513+256], {%r2441, %r2439, %r2417, %r2411};
	st.global.v4.u32 	[%rd513+1024], {%r2381, %r2377, %r2335, %r2331};
	add.s64 	%rd34, %rd511, %rd270;
	@%p357 bra 	$L__BB0_577;

	st.global.v2.u32 	[%rd34], {%r2448, %r2444};

$L__BB0_577:
	st.global.v2.u32 	[%rd34+768], {%r2418, %r2412};
	@%p183 bra 	$L__BB0_579;

	st.global.v2.u32 	[%rd34+1536], {%r2515, %r2513};

$L__BB0_579:
	setp.ge.s32 	%p364, %r34, %r1343;
	@%p364 bra 	$L__BB0_581;

	mul.lo.s32 	%r1994, %r917, 320;
	mul.lo.s32 	%r1995, %r35, 320;
	mad.lo.s32 	%r1996, %r1994, %r34, %r1995;
	add.s32 	%r2000, %r976, -64;
	mad.lo.s32 	%r2004, %r2000, %r1348, %r1345;
	add.s32 	%r2005, %r1996, %r2004;
	shl.b32 	%r2006, %r2005, 2;
	mov.u32 	%r2007, _ZN6kernel5shmemE;
	add.s32 	%r2008, %r2007, %r2006;
	shl.b32 	%r2009, %r39, 4;
	add.s32 	%r2010, %r2008, %r2009;
	st.shared.v4.u32 	[%r2010], {%r2564, %r2563, %r2559, %r2557};
	shl.b32 	%r2011, %r39, 3;
	add.s32 	%r2012, %r2008, %r2011;
	st.shared.v2.u32 	[%r2012+512], {%r2436, %r2434};
	st.shared.v4.u32 	[%r2010+768], {%r2447, %r2443, %r2427, %r2420};

$L__BB0_581:
	setp.ge.s32 	%p365, %r35, %r1348;
	@%p365 bra 	$L__BB0_585;

	mad.lo.s32 	%r2018, %r1431, 384, %r1351;
	mad.lo.s32 	%r2021, %r1346, %r35, %r2018;
	add.s32 	%r2027, %r2021, %r1349;
	shl.b32 	%r2028, %r2027, 2;
	mov.u32 	%r2029, _ZN6kernel5shmemE;
	add.s32 	%r2030, %r2029, %r2028;
	shl.b32 	%r2031, %r39, 3;
	add.s32 	%r2032, %r2030, %r2031;
	@%p364 bra 	$L__BB0_584;

	add.s32 	%r2220, %r2032, -256;
	st.shared.v2.u32 	[%r2220], {%r2446, %r2442};

$L__BB0_584:
	shl.b32 	%r2051, %r39, 4;
	add.s32 	%r2052, %r2030, %r2051;
	st.shared.v4.u32 	[%r2052], {%r2440, %r2438, %r2414, %r2408};
	add.s32 	%r2221, %r2032, -256;
	st.shared.v2.u32 	[%r2221+768], {%r2415, %r2409};
	st.shared.v4.u32 	[%r2052+768], {%r2562, %r2561, %r2550, %r2549};

$L__BB0_585:
	bar.sync 	0;
	@%p178 bra 	$L__BB0_587;

	mul.lo.s32 	%r2053, %r917, 320;
	add.s32 	%r2054, %r34, -1;
	mul.lo.s32 	%r2055, %r35, 320;
	mad.lo.s32 	%r2056, %r2053, %r2054, %r2055;
	shl.b32 	%r2057, %r2056, 2;
	mov.u32 	%r2058, _ZN6kernel5shmemE;
	add.s32 	%r2059, %r2058, %r2057;
	add.s32 	%r2060, %r2059, -256;
	shl.b32 	%r2061, %r39, 4;
	add.s32 	%r2062, %r2060, %r2061;
	ld.shared.v4.u32 	{%r2570, %r2568, %r2571, %r2572}, [%r2062+256];
	ld.shared.v4.u32 	{%r2574, %r2573, %r2566, %r2565}, [%r2062+1024];
	shl.b32 	%r2071, %r39, 3;
	add.s32 	%r2072, %r2060, %r2071;
	ld.shared.v2.u32 	{%r2569, %r2567}, [%r2072+768];

$L__BB0_587:
	@%p181 bra 	$L__BB0_590;

	mad.lo.s32 	%r2077, %r916, 384, -64;
	add.s32 	%r2078, %r35, -1;
	mul.lo.s32 	%r2079, %r2077, %r2078;
	mad.lo.s32 	%r2082, %r1344, %r1343, %r2079;
	mad.lo.s32 	%r2083, %r1431, 384, %r2082;
	shl.b32 	%r2084, %r2083, 2;
	mov.u32 	%r2085, _ZN6kernel5shmemE;
	add.s32 	%r2086, %r2085, %r2084;
	add.s32 	%r2087, %r2086, -256;
	shl.b32 	%r2088, %r39, 4;
	add.s32 	%r2089, %r2087, %r2088;
	ld.shared.v4.u32 	{%r2586, %r2585, %r2583, %r2581}, [%r2089+256];
	ld.shared.v4.u32 	{%r2580, %r2579, %r2575, %r2578}, [%r2089+1024];
	shl.b32 	%r2098, %r39, 3;
	add.s32 	%r2099, %r2087, %r2098;
	ld.shared.v2.u32 	{%r2584, %r2582}, [%r2099+768];
	@%p178 bra 	$L__BB0_590;

	add.s32 	%r2222, %r2099, 768;
	ld.shared.v2.u32 	{%r2503, %r2505}, [%r2222+768];

$L__BB0_590:
	ld.param.u64 	%rd515, [%rd1+80];
	cvta.to.global.u64 	%rd35, %rd515;
	mov.u32 	%r2610, %r2357;
	mov.u32 	%r2592, %r2477;
	mov.u32 	%r2594, %r2479;
	mov.u32 	%r2338, %r2481;
	mov.u32 	%r2612, %r2352;
	mov.u32 	%r2346, %r2482;
	mov.u32 	%r2599, %r2483;
	mov.u32 	%r2600, %r2484;
	mov.u32 	%r2601, %r2485;
	mov.u32 	%r2602, %r2486;
	mov.u32 	%r2617, %r2499;
	mov.u32 	%r2618, %r2500;
	@%p183 bra 	$L__BB0_594;

	mad.lo.s32 	%r2105, %r531, %r919, %r37;
	mad.lo.s32 	%r2106, %r2105, 768, 384;
	mul.lo.s32 	%r2107, %r2106, %r917;
	mad.lo.s32 	%r2108, %r35, 384, %r2107;
	add.s32 	%r2109, %r2108, -128;
	mul.wide.s32 	%rd516, %r2109, 4;
	add.s64 	%rd517, %rd35, %rd516;
	add.s64 	%rd519, %rd517, %rd268;
	add.s64 	%rd36, %rd519, 512;
	mov.u32 	%r2610, %r2357;
	mov.u32 	%r2612, %r2352;
	mov.u32 	%r2617, %r2499;
	mov.u32 	%r2618, %r2500;
	@%p181 bra 	$L__BB0_593;

	ld.global.v4.u32 	{%r2617, %r2618, %r2610, %r2612}, [%rd36+-512];

$L__BB0_593:
	ld.global.v4.u32 	{%r2600, %r2602, %r2599, %r2601}, [%rd36];
	ld.global.v4.u32 	{%r2346, %r2338, %r2594, %r2592}, [%rd36+512];
	ld.global.v4.u32 	{%r2480, %r2478, %r2488, %r2487}, [%rd36+1024];

$L__BB0_594:
	mov.u32 	%r2322, %r2489;
	mov.u32 	%r2326, %r2490;
	mov.u32 	%r2327, %r2491;
	mov.u32 	%r2344, %r2493;
	mov.u32 	%r2362, %r2495;
	mov.u32 	%r2614, %r2496;
	mov.u32 	%r2369, %r2497;
	mov.u32 	%r2616, %r2498;
	@%p186 bra 	$L__BB0_596;

	mad.lo.s32 	%r2127, %r532, %r918, %r36;
	mad.lo.s32 	%r2133, %r1431, 384, %r62;
	mad.lo.s32 	%r2134, %r2127, %r977, %r2133;
	mad.lo.s32 	%r2137, %r979, %r61, %r2134;
	mul.wide.s32 	%rd520, %r2137, 4;
	add.s64 	%rd521, %rd35, %rd520;
	add.s64 	%rd523, %rd521, %rd268;
	ld.global.v4.u32 	{%r2616, %r2614, %r2327, %r2326}, [%rd523+512];
	ld.global.v4.u32 	{%r2369, %r2362, %r2322, %r2344}, [%rd523+1024];
	ld.global.v4.u32 	{%r2617, %r2618, %r2610, %r2612}, [%rd523+1536];

$L__BB0_596:
	add.s32 	%r912, %r2450, 1;
	bar.sync 	0;
	@%p357 bra 	$L__BB0_599;

	shl.b32 	%r2151, %r35, 8;
	shl.b32 	%r2155, %r917, 8;
	or.b32  	%r2156, %r2155, 128;
	mad.lo.s32 	%r2157, %r2156, %r34, %r1351;
	add.s32 	%r2158, %r2157, %r2151;
	shl.b32 	%r2159, %r2158, 2;
	mov.u32 	%r2160, _ZN6kernel5shmemE;
	add.s32 	%r2161, %r2160, %r2159;
	shl.b32 	%r2162, %r39, 4;
	add.s32 	%r913, %r2161, %r2162;
	st.shared.v4.u32 	[%r913], {%r2498, %r2496, %r2371, %r2364};
	st.shared.v4.u32 	[%r913+512], {%r2406, %r2404, %r2400, %r2393};
	@%p361 bra 	$L__BB0_599;

	st.shared.v4.u32 	[%r913+1024], {%r2401, %r2394, %r2430, %r2423};

$L__BB0_599:
	setp.eq.s32 	%p385, %r35, %r1348;
	@%p385 bra 	$L__BB0_601;

	mul.lo.s32 	%r2166, %r1431, 384;
	mad.lo.s32 	%r2167, %r62, %r35, %r2166;
	mad.lo.s32 	%r2170, %r1346, %r1348, %r2167;
	mad.lo.s32 	%r2173, %r1344, %r1343, %r2170;
	shl.b32 	%r2174, %r2173, 2;
	mov.u32 	%r2175, _ZN6kernel5shmemE;
	add.s32 	%r2176, %r2175, %r2174;
	shl.b32 	%r2177, %r39, 4;
	add.s32 	%r2178, %r2176, %r2177;
	st.shared.v4.u32 	[%r2178], {%r2401, %r2394, %r2430, %r2423};
	st.shared.v4.u32 	[%r2178+512], {%r2388, %r2384, %r2348, %r2340};
	st.shared.v4.u32 	[%r2178+1024], {%r2387, %r2383, %r2479, %r2477};

$L__BB0_601:
	setp.ne.s32 	%p386, %r34, %r1343;
	ld.param.u64 	%rd524, [%rd1+80];
	cvta.to.global.u64 	%rd37, %rd524;
	@%p386 bra 	$L__BB0_603;

	mad.lo.s32 	%r2180, %r531, %r919, %r37;
	mad.lo.s32 	%r2181, %r2180, 768, 384;
	mul.lo.s32 	%r2182, %r2181, %r917;
	mad.lo.s32 	%r2183, %r35, 384, %r2182;
	add.s32 	%r2184, %r2183, -128;
	mul.wide.s32 	%rd525, %r2184, 4;
	add.s64 	%rd526, %rd37, %rd525;
	add.s64 	%rd528, %rd526, %rd268;
	st.global.v4.u32 	[%rd528+512], {%r2498, %r2496, %r2371, %r2364};
	st.global.v4.u32 	[%rd528+1024], {%r2406, %r2404, %r2400, %r2393};
	st.global.v4.u32 	[%rd528+1536], {%r2401, %r2394, %r2430, %r2423};

$L__BB0_603:
	@%p361 bra 	$L__BB0_606;

	mad.lo.s32 	%r2186, %r532, %r918, %r36;
	mad.lo.s32 	%r2192, %r1431, 384, %r62;
	mad.lo.s32 	%r2193, %r2186, %r977, %r2192;
	mad.lo.s32 	%r2196, %r979, %r61, %r2193;
	mul.wide.s32 	%rd529, %r2196, 4;
	add.s64 	%rd530, %rd37, %rd529;
	add.s64 	%rd38, %rd530, %rd268;
	st.global.v4.u32 	[%rd38], {%r2401, %r2394, %r2430, %r2423};
	st.global.v4.u32 	[%rd38+512], {%r2388, %r2384, %r2348, %r2340};
	st.global.v4.u32 	[%rd38+1024], {%r2387, %r2383, %r2479, %r2477};
	@%p183 bra 	$L__BB0_606;

	st.global.v4.u32 	[%rd38+1536], {%r2480, %r2478, %r2488, %r2487};

$L__BB0_606:
	rem.s32 	%r2197, %r2450, %r920;
	setp.eq.s32 	%p379, %r2197, 0;
	@%p379 bra 	$L__BB0_608;

	bar.sync 	0;
	bra.uni 	$L__BB0_615;

$L__BB0_608:
	@%p162 bra 	$L__BB0_610;

	// begin inline asm
	trap;
	// end inline asm

$L__BB0_610:
	bar.sync 	0;
	@%p163 bra 	$L__BB0_614;

	membar.gl;
	setp.eq.s32 	%p382, %r399, %r400;
	mov.u32 	%r2212, -2147483647;
	sub.s32 	%r2213, %r2212, %r398;
	selp.b32 	%r2201, %r2213, 1, %p382;
	// begin inline asm
	atom.add.release.gpu.u32 %r2200,[%rd25],%r2201;
	// end inline asm

$L__BB0_612:
	ld.volatile.u32 	%r2214, [%rd25];
	xor.b32  	%r2215, %r2214, %r2200;
	setp.gt.s32 	%p383, %r2215, -1;
	@%p383 bra 	$L__BB0_612;

	// begin inline asm
	ld.acquire.gpu.u32 %r2216,[%rd25];
	// end inline asm

$L__BB0_614:
	bar.sync 	0;

$L__BB0_615:
	setp.lt.s32 	%p384, %r912, %r42;
	mov.u32 	%r2323, %r2499;
	mov.u32 	%r2477, %r2592;
	mov.u32 	%r2331, %r2565;
	mov.u32 	%r2479, %r2594;
	mov.u32 	%r2335, %r2566;
	mov.u32 	%r2337, %r2500;
	mov.u32 	%r2339, %r2486;
	mov.u32 	%r2340, %r2485;
	mov.u32 	%r2347, %r2484;
	mov.u32 	%r2348, %r2483;
	mov.u32 	%r2483, %r2599;
	mov.u32 	%r2484, %r2600;
	mov.u32 	%r2496, %r2614;
	mov.u32 	%r2364, %r2490;
	mov.u32 	%r2365, %r2581;
	mov.u32 	%r2485, %r2601;
	mov.u32 	%r2486, %r2602;
	mov.u32 	%r2498, %r2616;
	mov.u32 	%r2371, %r2491;
	mov.u32 	%r2372, %r2583;
	mov.u32 	%r2499, %r2617;
	mov.u32 	%r2377, %r2573;
	mov.u32 	%r2500, %r2618;
	mov.u32 	%r2381, %r2574;
	mov.u32 	%r2383, %r2481;
	mov.u32 	%r2384, %r419;
	mov.u32 	%r2387, %r2482;
	mov.u32 	%r2388, %r427;
	mov.u32 	%r2393, %r433;
	mov.u32 	%r2394, %r434;
	mov.u32 	%r2400, %r438;
	mov.u32 	%r2401, %r439;
	mov.u32 	%r2404, %r2495;
	mov.u32 	%r2405, %r2585;
	mov.u32 	%r2406, %r2497;
	mov.u32 	%r2407, %r2586;
	mov.u32 	%r2408, %r462;
	mov.u32 	%r2409, %r2551;
	mov.u32 	%r2411, %r465;
	mov.u32 	%r2412, %r422;
	mov.u32 	%r2414, %r466;
	mov.u32 	%r2415, %r2553;
	mov.u32 	%r2417, %r469;
	mov.u32 	%r2418, %r430;
	mov.u32 	%r2420, %r470;
	mov.u32 	%r2423, %r472;
	mov.u32 	%r2424, %r475;
	mov.u32 	%r2427, %r477;
	mov.u32 	%r2430, %r479;
	mov.u32 	%r2431, %r482;
	mov.u32 	%r2434, %r2558;
	mov.u32 	%r2435, %r446;
	mov.u32 	%r2436, %r2560;
	mov.u32 	%r2437, %r453;
	mov.u32 	%r2438, %r490;
	mov.u32 	%r2439, %r493;
	mov.u32 	%r2440, %r496;
	mov.u32 	%r2441, %r499;
	mov.u32 	%r2442, %r501;
	mov.u32 	%r2443, %r502;
	mov.u32 	%r2444, %r505;
	mov.u32 	%r2445, %r506;
	mov.u32 	%r2446, %r508;
	mov.u32 	%r2447, %r509;
	mov.u32 	%r2448, %r512;
	mov.u32 	%r2449, %r513;
	mov.u32 	%r2450, %r912;
	@%p384 bra 	$L__BB0_293;

$L__BB0_616:
	ret;

}

