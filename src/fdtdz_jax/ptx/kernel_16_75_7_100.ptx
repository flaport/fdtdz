//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31833905
// Cuda compilation tools, release 11.8, V11.8.89
// Based on NVVM 7.0.1
//

.version 7.8
.target sm_75
.address_size 64

	// .globl	_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE
.global .align 4 .b8 _ZZN4cuda3std3__48__detail21__stronger_order_cudaEiiE7__xform[16] = {3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE[24] = {254, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllJE[20] = {254, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllKE[8] = {0, 0, 0, 0, 1, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond6AllEhcE[12] = {0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond6AllXyzE[12] = {0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.extern .shared .align 16 .b8 _ZN6kernel5shmemE[];

.visible .entry _ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE(
	.param .align 8 .b8 _ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0[192]
)
{
	.reg .pred 	%p<426>;
	.reg .f32 	%f<437>;
	.reg .b32 	%r<2248>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<569>;


	mov.b64 	%rd41, _ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0;
	mov.u64 	%rd1, %rd41;
	ld.param.v2.u32 	{%r771, %r772}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0];
	ld.param.v2.u32 	{%r773, %r774}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+8];
	ld.param.v2.u32 	{%r775, %r776}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+16];
	ld.param.v2.u32 	{%r777, %r778}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+24];
	ld.param.v2.u32 	{%r779, %r780}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+32];
	ld.param.v2.u32 	{%r781, %r782}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+40];
	ld.param.v2.u32 	{%r783, %r784}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+48];
	ld.param.v2.u32 	{%r785, %r786}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+56];
	ld.param.v2.u32 	{%r787, %r788}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+64];
	ld.param.v2.u32 	{%r789, %r790}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+72];
	ld.param.v2.u32 	{%r791, %r792}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+80];
	ld.param.v2.u32 	{%r793, %r794}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+88];
	ld.param.v2.u32 	{%r795, %r796}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+96];
	mov.u32 	%r40, %tid.y;
	mov.u32 	%r41, %tid.z;
	mov.u32 	%r42, %ctaid.y;
	mov.u32 	%r43, %ctaid.z;
	mov.u32 	%r797, 32;
	sub.s32 	%r44, %r797, %r778;
	mov.u32 	%r45, %tid.x;
	setp.le.s32 	%p28, %r44, %r45;
	add.s32 	%r798, %r784, -1;
	add.s32 	%r799, %r782, %r776;
	add.s32 	%r800, %r799, %r777;
	add.s32 	%r801, %r800, 1;
	mad.lo.s32 	%r802, %r798, %r783, %r801;
	mul.lo.s32 	%r803, %r771, %r773;
	shl.b32 	%r46, %r803, 1;
	shl.b32 	%r804, %r803, 2;
	div.s32 	%r805, %r802, %r804;
	add.s32 	%r806, %r805, 1;
	mul.lo.s32 	%r807, %r806, %r777;
	mul.lo.s32 	%r808, %r772, %r774;
	shl.b32 	%r47, %r808, 1;
	div.s32 	%r809, %r807, %r47;
	add.s32 	%r810, %r809, 1;
	mul.lo.s32 	%r48, %r810, %r776;
	ld.param.u64 	%rd42, [%rd1+184];
	cvta.to.global.u64 	%rd2, %rd42;
	mad.lo.s32 	%r813, %r773, %r43, %r42;
	mad.lo.s32 	%r814, %r813, %r772, %r41;
	mul.lo.s32 	%r49, %r814, %r771;
	add.s32 	%r815, %r49, %r40;
	shl.b32 	%r50, %r815, 5;
	add.s32 	%r1946, %r50, %r45;
	mul.lo.s32 	%r816, %r808, %r803;
	shl.b32 	%r54, %r816, 5;
	mov.u32 	%r817, 8;
	sub.s32 	%r818, %r817, %r785;
	add.s32 	%r819, %r818, %r786;
	sub.s32 	%r820, %r817, %r787;
	add.s32 	%r821, %r820, %r788;
	sub.s32 	%r55, %r790, %r789;
	mul.lo.s32 	%r822, %r784, %r55;
	mul.lo.s32 	%r823, %r822, %r821;
	mul.lo.s32 	%r824, %r823, %r819;
	mul.lo.s32 	%r56, %r824, 3;
	setp.ge.s32 	%p29, %r1946, %r56;
	@%p29 bra 	$L__BB0_9;

	add.s32 	%r825, %r788, 8;
	sub.s32 	%r826, %r825, %r787;
	mul.lo.s32 	%r827, %r784, %r826;
	add.s32 	%r828, %r786, 8;
	sub.s32 	%r829, %r828, %r785;
	mul.lo.s32 	%r830, %r827, %r829;
	mul.lo.s32 	%r831, %r830, %r55;
	not.b32 	%r832, %r45;
	mad.lo.s32 	%r833, %r831, 3, %r832;
	sub.s32 	%r834, %r833, %r50;
	mul.lo.s32 	%r835, %r808, %r771;
	mul.lo.s32 	%r836, %r835, %r773;
	shl.b32 	%r57, %r836, 5;
	div.u32 	%r58, %r834, %r57;
	add.s32 	%r837, %r58, 1;
	and.b32  	%r1943, %r837, 3;
	setp.eq.s32 	%p30, %r1943, 0;
	mov.u32 	%r1944, %r1946;
	@%p30 bra 	$L__BB0_6;

	shl.b32 	%r838, %r49, 5;
	add.s32 	%r839, %r45, %r838;
	shl.b32 	%r840, %r40, 5;
	add.s32 	%r1944, %r839, %r840;
	mul.wide.s32 	%rd43, %r1946, 4;
	add.s64 	%rd566, %rd2, %rd43;
	mul.wide.s32 	%rd4, %r57, 4;

$L__BB0_5:
	.pragma "nounroll";
	mov.u32 	%r841, 0;
	st.global.u32 	[%rd566], %r841;
	add.s32 	%r1944, %r1944, %r57;
	add.s64 	%rd566, %rd566, %rd4;
	add.s32 	%r1943, %r1943, -1;
	setp.ne.s32 	%p31, %r1943, 0;
	@%p31 bra 	$L__BB0_5;

$L__BB0_6:
	setp.lt.u32 	%p32, %r58, 3;
	@%p32 bra 	$L__BB0_9;

	mul.wide.s32 	%rd46, %r54, 4;

$L__BB0_8:
	mul.wide.s32 	%rd44, %r1944, 4;
	add.s64 	%rd45, %rd2, %rd44;
	mov.u32 	%r842, 0;
	st.global.u32 	[%rd45], %r842;
	add.s64 	%rd47, %rd45, %rd46;
	st.global.u32 	[%rd47], %r842;
	add.s32 	%r843, %r1944, %r54;
	add.s32 	%r844, %r843, %r54;
	add.s64 	%rd48, %rd47, %rd46;
	st.global.u32 	[%rd48], %r842;
	add.s32 	%r845, %r844, %r54;
	add.s64 	%rd49, %rd48, %rd46;
	st.global.u32 	[%rd49], %r842;
	add.s32 	%r1944, %r845, %r54;
	setp.lt.s32 	%p33, %r1944, %r56;
	@%p33 bra 	$L__BB0_8;

$L__BB0_9:
	ld.param.u64 	%rd50, [%rd1+104];
	cvta.to.global.u64 	%rd7, %rd50;
	sub.s32 	%r846, %r777, %r46;
	div.s32 	%r847, %r846, %r47;
	mul.lo.s32 	%r848, %r847, %r776;
	sub.s32 	%r68, %r848, %r46;
	sub.s32 	%r849, %r776, %r47;
	mul.lo.s32 	%r850, %r849, %r773;
	mul.lo.s32 	%r69, %r771, 384;
	add.s32 	%r851, %r69, %r69;
	add.s32 	%r852, %r851, 128;
	mul.lo.s32 	%r854, %r808, 768;
	mul.lo.s32 	%r855, %r850, %r852;
	mad.lo.s32 	%r70, %r854, %r68, %r855;
	bra.uni 	$L__BB0_10;

$L__BB0_618:
	mov.f32 	%f424, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f424;
  cvt.rn.f16.f32 high, %f424;
  mov.b32 %r1910, {low,high};}

	// end inline asm
	mul.wide.s32 	%rd560, %r1946, 4;
	add.s64 	%rd561, %rd7, %rd560;
	st.global.u32 	[%rd561], %r1910;
	add.s32 	%r1946, %r1946, %r54;

$L__BB0_10:
	setp.lt.s32 	%p34, %r1946, %r70;
	@%p34 bra 	$L__BB0_618;

	ld.param.u64 	%rd51, [%rd1+144];
	cvta.to.global.u64 	%rd9, %rd51;
	ld.param.u64 	%rd52, [%rd1+112];
	cvta.to.global.u64 	%rd10, %rd52;
	mad.lo.s32 	%r1982, %r771, %r42, %r40;
	mul.lo.s32 	%r79, %r772, %r43;
	add.s32 	%r80, %r79, %r41;
	setp.ge.s32 	%p35, %r1982, %r776;
	@%p35 bra 	$L__BB0_65;

	setp.gt.s32 	%p36, %r44, %r45;
	mov.u32 	%r856, 31;
	sub.s32 	%r857, %r856, %r45;
	selp.b32 	%r858, %r45, %r857, %p36;
	shl.b32 	%r859, %r858, 2;
	mov.u32 	%r860, 2;
	sub.s32 	%r81, %r859, %r779;
	shl.b32 	%r861, %r778, 2;
	mov.u32 	%r862, 128;
	sub.s32 	%r82, %r862, %r861;
	sub.s32 	%r863, %r860, %r779;
	add.s32 	%r83, %r863, %r859;
	sub.s32 	%r84, %r786, %r785;
	sub.s32 	%r85, %r788, %r787;
	add.s32 	%r86, %r786, -1;
	add.s32 	%r87, %r788, -1;
	add.s32 	%r88, %r790, -1;
	mul.lo.s32 	%r864, %r777, %r776;
	shl.b32 	%r89, %r864, 6;
	add.s32 	%r90, %r776, -1;
	selp.f32 	%f1, 0f00000000, 0f3F800000, %p36;
	add.s32 	%r91, %r81, 1;
	add.s32 	%r92, %r83, 1;
	shl.b32 	%r93, %r45, 1;
	or.b32  	%r94, %r93, 1;
	shr.u32 	%r865, %r94, 31;
	add.s32 	%r866, %r94, %r865;
	shr.s32 	%r96, %r866, 1;
	and.b32  	%r867, %r866, -2;
	sub.s32 	%r868, %r94, %r867;
	add.s32 	%r95, %r868, %r89;
	rem.s32 	%r924, %r91, %r82;
	add.s32 	%r925, %r924, %r82;
	rem.s32 	%r926, %r925, %r82;
	rem.s32 	%r927, %r92, %r82;
	add.s32 	%r928, %r927, %r82;
	rem.s32 	%r929, %r928, %r82;
	mov.u32 	%r1947, %r1982;

$L__BB0_13:
	setp.ge.s32 	%p37, %r80, %r777;
	@%p37 bra 	$L__BB0_64;

	setp.ge.s32 	%p38, %r1947, %r791;
	setp.lt.s32 	%p39, %r1947, %r792;
	and.pred  	%p1, %p39, %p38;
	setp.lt.s32 	%p40, %r1947, %r786;
	setp.ge.s32 	%p41, %r1947, %r785;
	and.pred  	%p2, %p40, %p41;
	selp.b32 	%r869, %r1947, %r86, %p40;
	setp.lt.s32 	%p42, %r1947, %r785;
	selp.b32 	%r870, %r785, %r869, %p42;
	sub.s32 	%r871, %r870, %r785;
	add.s32 	%r98, %r90, %r1947;
	rem.s32 	%r872, %r81, %r82;
	add.s32 	%r873, %r872, %r82;
	rem.s32 	%r99, %r873, %r82;
	rem.s32 	%r874, %r83, %r82;
	add.s32 	%r875, %r874, %r82;
	rem.s32 	%r100, %r875, %r82;
	setp.lt.s32 	%p43, %r99, %r790;
	sub.s32 	%r101, %r99, %r789;
	setp.lt.s32 	%p44, %r99, %r789;
	selp.b32 	%r876, %r99, %r88, %p43;
	selp.b32 	%r877, %r789, %r876, %p44;
	sub.s32 	%r102, %r877, %r789;
	setp.lt.s32 	%p45, %r100, %r790;
	sub.s32 	%r103, %r100, %r789;
	setp.lt.s32 	%p46, %r100, %r789;
	selp.b32 	%r878, %r100, %r88, %p45;
	selp.b32 	%r879, %r789, %r878, %p46;
	sub.s32 	%r104, %r879, %r789;
	sub.s32 	%r880, %r1947, %r785;
	mul.lo.s32 	%r105, %r880, %r85;
	mul.lo.s32 	%r106, %r871, %r85;
	add.s32 	%r881, %r880, %r84;
	mul.lo.s32 	%r107, %r881, %r85;
	add.s32 	%r882, %r871, %r84;
	mul.lo.s32 	%r108, %r882, %r85;
	add.s32 	%r883, %r881, %r84;
	mul.lo.s32 	%r109, %r883, %r85;
	add.s32 	%r884, %r882, %r84;
	mul.lo.s32 	%r110, %r884, %r85;
	mov.u32 	%r1948, %r80;

$L__BB0_15:
	setp.ge.s32 	%p47, %r1948, %r793;
	and.pred  	%p48, %p1, %p47;
	setp.lt.s32 	%p49, %r1948, %r794;
	and.pred  	%p3, %p49, %p48;
	setp.ge.s32 	%p50, %r1948, %r787;
	and.pred  	%p51, %p2, %p50;
	setp.lt.s32 	%p52, %r1948, %r788;
	and.pred  	%p4, %p52, %p51;
	sub.s32 	%r112, %r1948, %r787;
	selp.b32 	%r885, %r1948, %r87, %p52;
	setp.lt.s32 	%p53, %r1948, %r787;
	selp.b32 	%r886, %r787, %r885, %p53;
	sub.s32 	%r113, %r886, %r787;
	mul.lo.s32 	%r114, %r1948, %r776;
	add.s32 	%r115, %r114, %r1947;
	shl.b32 	%r116, %r115, 6;
	setp.ge.s32 	%p54, %r99, %r795;
	and.pred  	%p55, %p3, %p54;
	setp.lt.s32 	%p56, %r99, %r796;
	and.pred  	%p57, %p56, %p55;
	setp.ge.s32 	%p58, %r99, %r789;
	and.pred  	%p59, %p4, %p58;
	and.pred  	%p5, %p43, %p59;
	setp.ge.s32 	%p61, %r100, %r789;
	and.pred  	%p62, %p4, %p61;
	and.pred  	%p6, %p45, %p62;
	and.pred  	%p7, %p36, %p57;
	not.pred 	%p65, %p7;
	mov.f32 	%f425, %f1;
	@%p65 bra 	$L__BB0_19;

	@%p5 bra 	$L__BB0_18;
	bra.uni 	$L__BB0_17;

$L__BB0_18:
	add.s32 	%r889, %r112, %r105;
	mad.lo.s32 	%r890, %r889, %r55, %r101;
	mul.wide.s32 	%rd55, %r890, 4;
	add.s64 	%rd56, %rd9, %rd55;
	ld.global.f32 	%f425, [%rd56];
	bra.uni 	$L__BB0_19;

$L__BB0_17:
	add.s32 	%r887, %r113, %r106;
	mad.lo.s32 	%r888, %r887, %r55, %r102;
	mul.wide.s32 	%rd53, %r888, 4;
	add.s64 	%rd54, %rd9, %rd53;
	ld.global.f32 	%f425, [%rd54];

$L__BB0_19:
	setp.lt.s32 	%p67, %r100, %r796;
	setp.ge.s32 	%p68, %r100, %r795;
	and.pred  	%p69, %p3, %p68;
	and.pred  	%p70, %p67, %p69;
	and.pred  	%p8, %p36, %p70;
	not.pred 	%p71, %p8;
	mov.f32 	%f426, %f1;
	@%p71 bra 	$L__BB0_23;

	@%p6 bra 	$L__BB0_22;
	bra.uni 	$L__BB0_21;

$L__BB0_22:
	add.s32 	%r893, %r112, %r105;
	mad.lo.s32 	%r894, %r893, %r55, %r103;
	mul.wide.s32 	%rd59, %r894, 4;
	add.s64 	%rd60, %rd9, %rd59;
	ld.global.f32 	%f426, [%rd60];
	bra.uni 	$L__BB0_23;

$L__BB0_21:
	add.s32 	%r891, %r113, %r106;
	mad.lo.s32 	%r892, %r891, %r55, %r104;
	mul.wide.s32 	%rd57, %r892, 4;
	add.s64 	%rd58, %rd9, %rd57;
	ld.global.f32 	%f426, [%rd58];

$L__BB0_23:
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f425;
  cvt.rn.f16.f32 high, %f426;
  mov.b32 %r895, {low,high};}

	// end inline asm
	shl.b32 	%r117, %r115, 5;
	add.s32 	%r896, %r117, %r45;
	shl.b32 	%r897, %r896, 2;
	add.s32 	%r898, %r89, %r897;
	mul.wide.s32 	%rd61, %r898, 4;
	add.s64 	%rd62, %rd10, %rd61;
	st.global.u32 	[%rd62], %r895;
	mov.f32 	%f427, %f1;
	@%p65 bra 	$L__BB0_27;

	@%p5 bra 	$L__BB0_26;
	bra.uni 	$L__BB0_25;

$L__BB0_26:
	add.s32 	%r901, %r112, %r107;
	mad.lo.s32 	%r902, %r901, %r55, %r101;
	mul.wide.s32 	%rd65, %r902, 4;
	add.s64 	%rd66, %rd9, %rd65;
	ld.global.f32 	%f427, [%rd66];
	bra.uni 	$L__BB0_27;

$L__BB0_25:
	add.s32 	%r899, %r113, %r108;
	mad.lo.s32 	%r900, %r899, %r55, %r102;
	mul.wide.s32 	%rd63, %r900, 4;
	add.s64 	%rd64, %rd9, %rd63;
	ld.global.f32 	%f427, [%rd64];

$L__BB0_27:
	mov.f32 	%f428, %f1;
	@%p71 bra 	$L__BB0_31;

	@%p6 bra 	$L__BB0_30;
	bra.uni 	$L__BB0_29;

$L__BB0_30:
	add.s32 	%r905, %r112, %r107;
	mad.lo.s32 	%r906, %r905, %r55, %r103;
	mul.wide.s32 	%rd69, %r906, 4;
	add.s64 	%rd70, %rd9, %rd69;
	ld.global.f32 	%f428, [%rd70];
	bra.uni 	$L__BB0_31;

$L__BB0_29:
	add.s32 	%r903, %r113, %r108;
	mad.lo.s32 	%r904, %r903, %r55, %r104;
	mul.wide.s32 	%rd67, %r904, 4;
	add.s64 	%rd68, %rd9, %rd67;
	ld.global.f32 	%f428, [%rd68];

$L__BB0_31:
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f427;
  cvt.rn.f16.f32 high, %f428;
  mov.b32 %r907, {low,high};}

	// end inline asm
	add.s32 	%r908, %r93, %r116;
	mul.wide.s32 	%rd71, %r908, 4;
	add.s64 	%rd72, %rd10, %rd71;
	st.global.u32 	[%rd72], %r907;
	mov.f32 	%f429, %f1;
	@%p65 bra 	$L__BB0_35;

	@%p5 bra 	$L__BB0_34;
	bra.uni 	$L__BB0_33;

$L__BB0_34:
	add.s32 	%r911, %r112, %r109;
	mad.lo.s32 	%r912, %r911, %r55, %r101;
	mul.wide.s32 	%rd75, %r912, 4;
	add.s64 	%rd76, %rd9, %rd75;
	ld.global.f32 	%f429, [%rd76];
	bra.uni 	$L__BB0_35;

$L__BB0_33:
	add.s32 	%r909, %r113, %r110;
	mad.lo.s32 	%r910, %r909, %r55, %r102;
	mul.wide.s32 	%rd73, %r910, 4;
	add.s64 	%rd74, %rd9, %rd73;
	ld.global.f32 	%f429, [%rd74];

$L__BB0_35:
	mov.f32 	%f430, %f1;
	@%p71 bra 	$L__BB0_39;

	@%p6 bra 	$L__BB0_38;
	bra.uni 	$L__BB0_37;

$L__BB0_38:
	add.s32 	%r915, %r112, %r109;
	mad.lo.s32 	%r916, %r915, %r55, %r103;
	mul.wide.s32 	%rd79, %r916, 4;
	add.s64 	%rd80, %rd9, %rd79;
	ld.global.f32 	%f430, [%rd80];
	bra.uni 	$L__BB0_39;

$L__BB0_37:
	add.s32 	%r913, %r113, %r110;
	mad.lo.s32 	%r914, %r913, %r55, %r104;
	mul.wide.s32 	%rd77, %r914, 4;
	add.s64 	%rd78, %rd9, %rd77;
	ld.global.f32 	%f430, [%rd78];

$L__BB0_39:
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f429;
  cvt.rn.f16.f32 high, %f430;
  mov.b32 %r917, {low,high};}

	// end inline asm
	rem.s32 	%r918, %r98, %r776;
	add.s32 	%r919, %r918, %r114;
	shl.b32 	%r118, %r919, 5;
	add.s32 	%r920, %r118, %r45;
	shl.b32 	%r921, %r920, 2;
	add.s32 	%r922, %r89, %r921;
	add.s32 	%r923, %r922, 2;
	mul.wide.s32 	%rd81, %r923, 4;
	add.s64 	%rd82, %rd10, %rd81;
	st.global.u32 	[%rd82], %r917;
	setp.ge.s32 	%p76, %r926, %r795;
	and.pred  	%p77, %p3, %p76;
	setp.lt.s32 	%p78, %r926, %r796;
	and.pred  	%p79, %p78, %p77;
	setp.ge.s32 	%p80, %r926, %r789;
	and.pred  	%p81, %p4, %p80;
	setp.lt.s32 	%p82, %r926, %r790;
	and.pred  	%p9, %p82, %p81;
	setp.ge.s32 	%p83, %r929, %r795;
	and.pred  	%p84, %p3, %p83;
	setp.lt.s32 	%p85, %r929, %r796;
	and.pred  	%p10, %p85, %p84;
	sub.s32 	%r119, %r926, %r789;
	setp.lt.s32 	%p86, %r926, %r789;
	selp.b32 	%r930, %r926, %r88, %p82;
	selp.b32 	%r931, %r789, %r930, %p86;
	sub.s32 	%r120, %r931, %r789;
	setp.ge.s32 	%p87, %r929, %r789;
	and.pred  	%p88, %p4, %p87;
	setp.lt.s32 	%p89, %r929, %r790;
	and.pred  	%p11, %p89, %p88;
	sub.s32 	%r121, %r929, %r789;
	setp.lt.s32 	%p90, %r929, %r789;
	selp.b32 	%r932, %r929, %r88, %p89;
	selp.b32 	%r933, %r789, %r932, %p90;
	sub.s32 	%r122, %r933, %r789;
	and.pred  	%p12, %p36, %p79;
	not.pred 	%p92, %p12;
	mov.f32 	%f431, %f1;
	@%p92 bra 	$L__BB0_43;

	@%p9 bra 	$L__BB0_42;
	bra.uni 	$L__BB0_41;

$L__BB0_42:
	add.s32 	%r936, %r112, %r105;
	mad.lo.s32 	%r937, %r936, %r55, %r119;
	mul.wide.s32 	%rd85, %r937, 4;
	add.s64 	%rd86, %rd9, %rd85;
	ld.global.f32 	%f431, [%rd86];
	bra.uni 	$L__BB0_43;

$L__BB0_41:
	add.s32 	%r934, %r113, %r106;
	mad.lo.s32 	%r935, %r934, %r55, %r120;
	mul.wide.s32 	%rd83, %r935, 4;
	add.s64 	%rd84, %rd9, %rd83;
	ld.global.f32 	%f431, [%rd84];

$L__BB0_43:
	and.pred  	%p13, %p36, %p10;
	not.pred 	%p94, %p13;
	mov.f32 	%f432, %f1;
	@%p94 bra 	$L__BB0_47;

	@%p11 bra 	$L__BB0_46;
	bra.uni 	$L__BB0_45;

$L__BB0_46:
	add.s32 	%r940, %r112, %r105;
	mad.lo.s32 	%r941, %r940, %r55, %r121;
	mul.wide.s32 	%rd89, %r941, 4;
	add.s64 	%rd90, %rd9, %rd89;
	ld.global.f32 	%f432, [%rd90];
	bra.uni 	$L__BB0_47;

$L__BB0_45:
	add.s32 	%r938, %r113, %r106;
	mad.lo.s32 	%r939, %r938, %r55, %r122;
	mul.wide.s32 	%rd87, %r939, 4;
	add.s64 	%rd88, %rd9, %rd87;
	ld.global.f32 	%f432, [%rd88];

$L__BB0_47:
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f431;
  cvt.rn.f16.f32 high, %f432;
  mov.b32 %r942, {low,high};}

	// end inline asm
	add.s32 	%r943, %r117, %r96;
	shl.b32 	%r944, %r943, 2;
	add.s32 	%r945, %r95, %r944;
	mul.wide.s32 	%rd91, %r945, 4;
	add.s64 	%rd92, %rd10, %rd91;
	st.global.u32 	[%rd92], %r942;
	mov.f32 	%f433, %f1;
	@%p92 bra 	$L__BB0_51;

	@%p9 bra 	$L__BB0_50;
	bra.uni 	$L__BB0_49;

$L__BB0_50:
	add.s32 	%r948, %r112, %r107;
	mad.lo.s32 	%r949, %r948, %r55, %r119;
	mul.wide.s32 	%rd95, %r949, 4;
	add.s64 	%rd96, %rd9, %rd95;
	ld.global.f32 	%f433, [%rd96];
	bra.uni 	$L__BB0_51;

$L__BB0_49:
	add.s32 	%r946, %r113, %r108;
	mad.lo.s32 	%r947, %r946, %r55, %r120;
	mul.wide.s32 	%rd93, %r947, 4;
	add.s64 	%rd94, %rd9, %rd93;
	ld.global.f32 	%f433, [%rd94];

$L__BB0_51:
	mov.f32 	%f434, %f1;
	@%p94 bra 	$L__BB0_55;

	@%p11 bra 	$L__BB0_54;
	bra.uni 	$L__BB0_53;

$L__BB0_54:
	add.s32 	%r952, %r112, %r107;
	mad.lo.s32 	%r953, %r952, %r55, %r121;
	mul.wide.s32 	%rd99, %r953, 4;
	add.s64 	%rd100, %rd9, %rd99;
	ld.global.f32 	%f434, [%rd100];
	bra.uni 	$L__BB0_55;

$L__BB0_53:
	add.s32 	%r950, %r113, %r108;
	mad.lo.s32 	%r951, %r950, %r55, %r122;
	mul.wide.s32 	%rd97, %r951, 4;
	add.s64 	%rd98, %rd9, %rd97;
	ld.global.f32 	%f434, [%rd98];

$L__BB0_55:
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f433;
  cvt.rn.f16.f32 high, %f434;
  mov.b32 %r954, {low,high};}

	// end inline asm
	add.s32 	%r955, %r94, %r116;
	mul.wide.s32 	%rd101, %r955, 4;
	add.s64 	%rd102, %rd10, %rd101;
	st.global.u32 	[%rd102], %r954;
	mov.f32 	%f435, %f1;
	@%p92 bra 	$L__BB0_59;

	@%p9 bra 	$L__BB0_58;
	bra.uni 	$L__BB0_57;

$L__BB0_58:
	add.s32 	%r958, %r112, %r109;
	mad.lo.s32 	%r959, %r958, %r55, %r119;
	mul.wide.s32 	%rd105, %r959, 4;
	add.s64 	%rd106, %rd9, %rd105;
	ld.global.f32 	%f435, [%rd106];
	bra.uni 	$L__BB0_59;

$L__BB0_57:
	add.s32 	%r956, %r113, %r110;
	mad.lo.s32 	%r957, %r956, %r55, %r120;
	mul.wide.s32 	%rd103, %r957, 4;
	add.s64 	%rd104, %rd9, %rd103;
	ld.global.f32 	%f435, [%rd104];

$L__BB0_59:
	mov.f32 	%f436, %f1;
	@%p94 bra 	$L__BB0_63;

	@%p11 bra 	$L__BB0_62;
	bra.uni 	$L__BB0_61;

$L__BB0_62:
	add.s32 	%r962, %r112, %r109;
	mad.lo.s32 	%r963, %r962, %r55, %r121;
	mul.wide.s32 	%rd109, %r963, 4;
	add.s64 	%rd110, %rd9, %rd109;
	ld.global.f32 	%f436, [%rd110];
	bra.uni 	$L__BB0_63;

$L__BB0_61:
	add.s32 	%r960, %r113, %r110;
	mad.lo.s32 	%r961, %r960, %r55, %r122;
	mul.wide.s32 	%rd107, %r961, 4;
	add.s64 	%rd108, %rd9, %rd107;
	ld.global.f32 	%f436, [%rd108];

$L__BB0_63:
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f435;
  cvt.rn.f16.f32 high, %f436;
  mov.b32 %r964, {low,high};}

	// end inline asm
	add.s32 	%r965, %r118, %r96;
	shl.b32 	%r966, %r965, 2;
	add.s32 	%r967, %r95, %r966;
	add.s32 	%r968, %r967, 2;
	mul.wide.s32 	%rd111, %r968, 4;
	add.s64 	%rd112, %rd10, %rd111;
	st.global.u32 	[%rd112], %r964;
	add.s32 	%r1948, %r1948, %r808;
	setp.lt.s32 	%p99, %r1948, %r777;
	@%p99 bra 	$L__BB0_15;

$L__BB0_64:
	add.s32 	%r1947, %r1947, %r803;
	setp.lt.s32 	%p100, %r1947, %r776;
	@%p100 bra 	$L__BB0_13;

$L__BB0_65:
	ld.param.u64 	%rd113, [%rd1+152];
	cvta.to.global.u64 	%rd11, %rd113;
	ld.param.u64 	%rd114, [%rd1+120];
	cvta.to.global.u64 	%rd12, %rd114;
	@%p35 bra 	$L__BB0_149;

	shl.b32 	%r125, %r80, 1;
	mov.u64 	%rd115, _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE;
	mov.u32 	%r1949, %r1982;

$L__BB0_67:
	setp.ge.s32 	%p102, %r125, %r777;
	@%p102 bra 	$L__BB0_148;

	mov.u32 	%r1950, %r125;

$L__BB0_69:
	setp.ne.s32 	%p103, %r45, 0;
	@%p103 bra 	$L__BB0_147;

	shr.u32 	%r970, %r1950, 31;
	add.s32 	%r971, %r1950, %r970;
	shr.s32 	%r972, %r971, 1;
	mad.lo.s32 	%r973, %r972, %r776, %r1949;
	shl.b32 	%r129, %r973, 5;
	add.s32 	%r130, %r1950, -2;
	mul.lo.s32 	%r131, %r130, %r776;
	add.s32 	%r974, %r777, %r130;
	mul.lo.s32 	%r132, %r974, %r776;
	add.s32 	%r975, %r974, %r777;
	mul.lo.s32 	%r133, %r975, %r776;
	add.s32 	%r134, %r131, %r776;
	add.s32 	%r135, %r1950, -1;
	add.s32 	%r976, %r777, %r135;
	mul.lo.s32 	%r136, %r976, %r776;
	add.s32 	%r977, %r976, %r777;
	mul.lo.s32 	%r137, %r977, %r776;
	add.s32 	%r978, %r777, %r1950;
	mul.lo.s32 	%r138, %r978, %r776;
	add.s32 	%r979, %r978, %r777;
	mul.lo.s32 	%r139, %r979, %r776;
	mul.lo.s32 	%r140, %r1950, %r776;
	add.s32 	%r141, %r140, %r776;
	add.s32 	%r142, %r1950, 1;
	add.s32 	%r980, %r777, %r142;
	mul.lo.s32 	%r143, %r980, %r776;
	add.s32 	%r981, %r980, %r777;
	mul.lo.s32 	%r144, %r981, %r776;
	add.s32 	%r145, %r141, %r776;
	add.s32 	%r146, %r1950, 2;
	add.s32 	%r982, %r777, %r146;
	mul.lo.s32 	%r147, %r982, %r776;
	add.s32 	%r983, %r982, %r777;
	mul.lo.s32 	%r148, %r983, %r776;
	mov.u32 	%r1953, 0;
	mov.u64 	%rd567, %rd115;

$L__BB0_71:
	ld.global.nc.u32 	%r984, [%rd567];
	cvt.rn.f64.s32 	%fd1, %r984;
	add.f64 	%fd3, %fd1, 0d3FE0000000000000;
	add.s32 	%r150, %r984, %r1949;
	setp.lt.s32 	%p104, %r150, %r776;
	or.b32  	%r985, %r130, %r150;
	setp.gt.s32 	%p105, %r985, -1;
	and.pred  	%p106, %p104, %p105;
	setp.lt.s32 	%p107, %r130, %r777;
	and.pred  	%p14, %p107, %p106;
	cvt.rn.f32.f64 	%f87, %fd3;
	add.f32 	%f88, %f87, 0f3E800000;
	abs.f32 	%f38, %f88;
	add.f32 	%f89, %f38, 0f40200000;
	setp.geu.f32 	%p108, %f89, 0f40000000;
	@%p108 bra 	$L__BB0_76;

	@%p14 bra 	$L__BB0_74;
	bra.uni 	$L__BB0_73;

$L__BB0_74:
	add.s32 	%r988, %r131, %r150;
	mul.wide.s32 	%rd116, %r988, 4;
	add.s64 	%rd117, %rd11, %rd116;
	ld.global.f32 	%f92, [%rd117];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f92;
  mov.b32 %r1952, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_75;

$L__BB0_73:
	mov.f32 	%f91, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f91;
  cvt.rn.f16.f32 high, %f91;
  mov.b32 %r1952, {low,high};}

	// end inline asm

$L__BB0_75:
	add.s32 	%r989, %r1953, %r129;
	mul.wide.s32 	%rd118, %r989, 4;
	add.s64 	%rd119, %rd12, %rd118;
	st.global.u32 	[%rd119], %r1952;
	add.s32 	%r1953, %r1953, 1;

$L__BB0_76:
	cvt.rn.f32.f64 	%f93, %fd1;
	add.f32 	%f94, %f93, 0f3E800000;
	abs.f32 	%f39, %f94;
	add.f32 	%f40, %f39, 0f40000000;
	setp.geu.f32 	%p109, %f40, 0f40000000;
	@%p109 bra 	$L__BB0_81;

	@%p14 bra 	$L__BB0_79;
	bra.uni 	$L__BB0_78;

$L__BB0_79:
	add.s32 	%r992, %r132, %r150;
	mul.wide.s32 	%rd120, %r992, 4;
	add.s64 	%rd121, %rd11, %rd120;
	ld.global.f32 	%f97, [%rd121];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f97;
  mov.b32 %r1954, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_80;

$L__BB0_78:
	mov.f32 	%f96, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f96;
  cvt.rn.f16.f32 high, %f96;
  mov.b32 %r1954, {low,high};}

	// end inline asm

$L__BB0_80:
	add.s32 	%r993, %r1953, %r129;
	mul.wide.s32 	%rd122, %r993, 4;
	add.s64 	%rd123, %rd12, %rd122;
	st.global.u32 	[%rd123], %r1954;
	add.s32 	%r1953, %r1953, 1;

$L__BB0_81:
	add.f32 	%f98, %f39, 0f40200000;
	setp.geu.f32 	%p110, %f98, 0f40000000;
	@%p110 bra 	$L__BB0_86;

	@%p14 bra 	$L__BB0_84;
	bra.uni 	$L__BB0_83;

$L__BB0_84:
	add.s32 	%r996, %r133, %r150;
	mul.wide.s32 	%rd124, %r996, 4;
	add.s64 	%rd125, %rd11, %rd124;
	ld.global.f32 	%f101, [%rd125];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f101;
  mov.b32 %r1956, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_85;

$L__BB0_83:
	mov.f32 	%f100, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f100;
  cvt.rn.f16.f32 high, %f100;
  mov.b32 %r1956, {low,high};}

	// end inline asm

$L__BB0_85:
	add.s32 	%r997, %r1953, %r129;
	mul.wide.s32 	%rd126, %r997, 4;
	add.s64 	%rd127, %rd12, %rd126;
	st.global.u32 	[%rd127], %r1956;
	add.s32 	%r1953, %r1953, 1;

$L__BB0_86:
	or.b32  	%r998, %r135, %r150;
	setp.gt.s32 	%p111, %r998, -1;
	and.pred  	%p113, %p104, %p111;
	setp.le.s32 	%p114, %r1950, %r777;
	and.pred  	%p15, %p114, %p113;
	add.f32 	%f41, %f38, 0f3FC00000;
	setp.geu.f32 	%p115, %f41, 0f40000000;
	@%p115 bra 	$L__BB0_91;

	@%p15 bra 	$L__BB0_89;
	bra.uni 	$L__BB0_88;

$L__BB0_89:
	add.s32 	%r1001, %r134, %r150;
	mul.wide.s32 	%rd128, %r1001, 4;
	add.s64 	%rd129, %rd11, %rd128;
	ld.global.f32 	%f104, [%rd129];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f104;
  mov.b32 %r1958, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_90;

$L__BB0_88:
	mov.f32 	%f103, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f103;
  cvt.rn.f16.f32 high, %f103;
  mov.b32 %r1958, {low,high};}

	// end inline asm

$L__BB0_90:
	add.s32 	%r1002, %r1953, %r129;
	mul.wide.s32 	%rd130, %r1002, 4;
	add.s64 	%rd131, %rd12, %rd130;
	st.global.u32 	[%rd131], %r1958;
	add.s32 	%r1953, %r1953, 1;

$L__BB0_91:
	add.f32 	%f42, %f39, 0f3F800000;
	setp.geu.f32 	%p116, %f42, 0f40000000;
	@%p116 bra 	$L__BB0_96;

	@%p15 bra 	$L__BB0_94;
	bra.uni 	$L__BB0_93;

$L__BB0_94:
	add.s32 	%r1005, %r136, %r150;
	mul.wide.s32 	%rd132, %r1005, 4;
	add.s64 	%rd133, %rd11, %rd132;
	ld.global.f32 	%f107, [%rd133];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f107;
  mov.b32 %r1960, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_95;

$L__BB0_93:
	mov.f32 	%f106, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f106;
  cvt.rn.f16.f32 high, %f106;
  mov.b32 %r1960, {low,high};}

	// end inline asm

$L__BB0_95:
	add.s32 	%r1006, %r1953, %r129;
	mul.wide.s32 	%rd134, %r1006, 4;
	add.s64 	%rd135, %rd12, %rd134;
	st.global.u32 	[%rd135], %r1960;
	add.s32 	%r1953, %r1953, 1;

$L__BB0_96:
	add.f32 	%f43, %f39, 0f3FC00000;
	setp.geu.f32 	%p117, %f43, 0f40000000;
	@%p117 bra 	$L__BB0_101;

	@%p15 bra 	$L__BB0_99;
	bra.uni 	$L__BB0_98;

$L__BB0_99:
	add.s32 	%r1009, %r137, %r150;
	mul.wide.s32 	%rd136, %r1009, 4;
	add.s64 	%rd137, %rd11, %rd136;
	ld.global.f32 	%f110, [%rd137];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f110;
  mov.b32 %r1962, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_100;

$L__BB0_98:
	mov.f32 	%f109, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f109;
  cvt.rn.f16.f32 high, %f109;
  mov.b32 %r1962, {low,high};}

	// end inline asm

$L__BB0_100:
	add.s32 	%r1010, %r1953, %r129;
	mul.wide.s32 	%rd138, %r1010, 4;
	add.s64 	%rd139, %rd12, %rd138;
	st.global.u32 	[%rd139], %r1962;
	add.s32 	%r1953, %r1953, 1;

$L__BB0_101:
	or.b32  	%r1011, %r1950, %r150;
	setp.gt.s32 	%p118, %r1011, -1;
	and.pred  	%p120, %p104, %p118;
	setp.lt.s32 	%p121, %r1950, %r777;
	and.pred  	%p16, %p121, %p120;
	add.f32 	%f44, %f38, 0f3F000000;
	setp.geu.f32 	%p122, %f44, 0f40000000;
	@%p122 bra 	$L__BB0_106;

	@%p16 bra 	$L__BB0_104;
	bra.uni 	$L__BB0_103;

$L__BB0_104:
	add.s32 	%r1014, %r140, %r150;
	mul.wide.s32 	%rd140, %r1014, 4;
	add.s64 	%rd141, %rd11, %rd140;
	ld.global.f32 	%f113, [%rd141];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f113;
  mov.b32 %r1964, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_105;

$L__BB0_103:
	mov.f32 	%f112, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f112;
  cvt.rn.f16.f32 high, %f112;
  mov.b32 %r1964, {low,high};}

	// end inline asm

$L__BB0_105:
	add.s32 	%r1015, %r1953, %r129;
	mul.wide.s32 	%rd142, %r1015, 4;
	add.s64 	%rd143, %rd12, %rd142;
	st.global.u32 	[%rd143], %r1964;
	add.s32 	%r1953, %r1953, 1;

$L__BB0_106:
	add.f32 	%f114, %f39, 0f00000000;
	setp.geu.f32 	%p123, %f114, 0f40000000;
	@%p123 bra 	$L__BB0_111;

	@%p16 bra 	$L__BB0_109;
	bra.uni 	$L__BB0_108;

$L__BB0_109:
	add.s32 	%r1018, %r138, %r150;
	mul.wide.s32 	%rd144, %r1018, 4;
	add.s64 	%rd145, %rd11, %rd144;
	ld.global.f32 	%f117, [%rd145];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f117;
  mov.b32 %r1966, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_110;

$L__BB0_108:
	mov.f32 	%f116, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f116;
  cvt.rn.f16.f32 high, %f116;
  mov.b32 %r1966, {low,high};}

	// end inline asm

$L__BB0_110:
	add.s32 	%r1019, %r1953, %r129;
	mul.wide.s32 	%rd146, %r1019, 4;
	add.s64 	%rd147, %rd12, %rd146;
	st.global.u32 	[%rd147], %r1966;
	add.s32 	%r1953, %r1953, 1;

$L__BB0_111:
	add.f32 	%f45, %f39, 0f3F000000;
	setp.geu.f32 	%p124, %f45, 0f40000000;
	@%p124 bra 	$L__BB0_116;

	@%p16 bra 	$L__BB0_114;
	bra.uni 	$L__BB0_113;

$L__BB0_114:
	add.s32 	%r1022, %r139, %r150;
	mul.wide.s32 	%rd148, %r1022, 4;
	add.s64 	%rd149, %rd11, %rd148;
	ld.global.f32 	%f120, [%rd149];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f120;
  mov.b32 %r1968, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_115;

$L__BB0_113:
	mov.f32 	%f119, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f119;
  cvt.rn.f16.f32 high, %f119;
  mov.b32 %r1968, {low,high};}

	// end inline asm

$L__BB0_115:
	add.s32 	%r1023, %r1953, %r129;
	mul.wide.s32 	%rd150, %r1023, 4;
	add.s64 	%rd151, %rd12, %rd150;
	st.global.u32 	[%rd151], %r1968;
	add.s32 	%r1953, %r1953, 1;

$L__BB0_116:
	or.b32  	%r1024, %r142, %r150;
	setp.gt.s32 	%p125, %r1024, -1;
	and.pred  	%p127, %p104, %p125;
	setp.lt.s32 	%p128, %r142, %r777;
	and.pred  	%p17, %p128, %p127;
	@%p122 bra 	$L__BB0_121;

	@%p17 bra 	$L__BB0_119;
	bra.uni 	$L__BB0_118;

$L__BB0_119:
	add.s32 	%r1027, %r141, %r150;
	mul.wide.s32 	%rd152, %r1027, 4;
	add.s64 	%rd153, %rd11, %rd152;
	ld.global.f32 	%f123, [%rd153];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f123;
  mov.b32 %r1970, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_120;

$L__BB0_118:
	mov.f32 	%f122, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f122;
  cvt.rn.f16.f32 high, %f122;
  mov.b32 %r1970, {low,high};}

	// end inline asm

$L__BB0_120:
	add.s32 	%r1028, %r1953, %r129;
	mul.wide.s32 	%rd154, %r1028, 4;
	add.s64 	%rd155, %rd12, %rd154;
	st.global.u32 	[%rd155], %r1970;
	add.s32 	%r1953, %r1953, 1;

$L__BB0_121:
	@%p116 bra 	$L__BB0_126;

	@%p17 bra 	$L__BB0_124;
	bra.uni 	$L__BB0_123;

$L__BB0_124:
	add.s32 	%r1031, %r143, %r150;
	mul.wide.s32 	%rd156, %r1031, 4;
	add.s64 	%rd157, %rd11, %rd156;
	ld.global.f32 	%f126, [%rd157];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f126;
  mov.b32 %r1972, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_125;

$L__BB0_123:
	mov.f32 	%f125, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f125;
  cvt.rn.f16.f32 high, %f125;
  mov.b32 %r1972, {low,high};}

	// end inline asm

$L__BB0_125:
	add.s32 	%r1032, %r1953, %r129;
	mul.wide.s32 	%rd158, %r1032, 4;
	add.s64 	%rd159, %rd12, %rd158;
	st.global.u32 	[%rd159], %r1972;
	add.s32 	%r1953, %r1953, 1;

$L__BB0_126:
	@%p124 bra 	$L__BB0_131;

	@%p17 bra 	$L__BB0_129;
	bra.uni 	$L__BB0_128;

$L__BB0_129:
	add.s32 	%r1035, %r144, %r150;
	mul.wide.s32 	%rd160, %r1035, 4;
	add.s64 	%rd161, %rd11, %rd160;
	ld.global.f32 	%f129, [%rd161];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f129;
  mov.b32 %r1974, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_130;

$L__BB0_128:
	mov.f32 	%f128, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f128;
  cvt.rn.f16.f32 high, %f128;
  mov.b32 %r1974, {low,high};}

	// end inline asm

$L__BB0_130:
	add.s32 	%r1036, %r1953, %r129;
	mul.wide.s32 	%rd162, %r1036, 4;
	add.s64 	%rd163, %rd12, %rd162;
	st.global.u32 	[%rd163], %r1974;
	add.s32 	%r1953, %r1953, 1;

$L__BB0_131:
	or.b32  	%r1037, %r146, %r150;
	setp.gt.s32 	%p132, %r1037, -1;
	and.pred  	%p134, %p104, %p132;
	setp.lt.s32 	%p135, %r146, %r777;
	and.pred  	%p18, %p135, %p134;
	@%p115 bra 	$L__BB0_136;

	@%p18 bra 	$L__BB0_134;
	bra.uni 	$L__BB0_133;

$L__BB0_134:
	add.s32 	%r1040, %r145, %r150;
	mul.wide.s32 	%rd164, %r1040, 4;
	add.s64 	%rd165, %rd11, %rd164;
	ld.global.f32 	%f132, [%rd165];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f132;
  mov.b32 %r1976, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_135;

$L__BB0_133:
	mov.f32 	%f131, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f131;
  cvt.rn.f16.f32 high, %f131;
  mov.b32 %r1976, {low,high};}

	// end inline asm

$L__BB0_135:
	add.s32 	%r1041, %r1953, %r129;
	mul.wide.s32 	%rd166, %r1041, 4;
	add.s64 	%rd167, %rd12, %rd166;
	st.global.u32 	[%rd167], %r1976;
	add.s32 	%r1953, %r1953, 1;

$L__BB0_136:
	@%p109 bra 	$L__BB0_141;

	@%p18 bra 	$L__BB0_139;
	bra.uni 	$L__BB0_138;

$L__BB0_139:
	add.s32 	%r1044, %r147, %r150;
	mul.wide.s32 	%rd168, %r1044, 4;
	add.s64 	%rd169, %rd11, %rd168;
	ld.global.f32 	%f135, [%rd169];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f135;
  mov.b32 %r1978, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_140;

$L__BB0_138:
	mov.f32 	%f134, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f134;
  cvt.rn.f16.f32 high, %f134;
  mov.b32 %r1978, {low,high};}

	// end inline asm

$L__BB0_140:
	add.s32 	%r1045, %r1953, %r129;
	mul.wide.s32 	%rd170, %r1045, 4;
	add.s64 	%rd171, %rd12, %rd170;
	st.global.u32 	[%rd171], %r1978;
	add.s32 	%r1953, %r1953, 1;

$L__BB0_141:
	@%p117 bra 	$L__BB0_146;

	@%p18 bra 	$L__BB0_144;
	bra.uni 	$L__BB0_143;

$L__BB0_144:
	add.s32 	%r1048, %r148, %r150;
	mul.wide.s32 	%rd172, %r1048, 4;
	add.s64 	%rd173, %rd11, %rd172;
	ld.global.f32 	%f138, [%rd173];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f138;
  mov.b32 %r1980, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_145;

$L__BB0_143:
	mov.f32 	%f137, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f137;
  cvt.rn.f16.f32 high, %f137;
  mov.b32 %r1980, {low,high};}

	// end inline asm

$L__BB0_145:
	add.s32 	%r1049, %r1953, %r129;
	mul.wide.s32 	%rd174, %r1049, 4;
	add.s64 	%rd175, %rd12, %rd174;
	st.global.u32 	[%rd175], %r1980;
	add.s32 	%r1953, %r1953, 1;

$L__BB0_146:
	add.s64 	%rd567, %rd567, 4;
	mov.u64 	%rd176, _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE;
	add.s64 	%rd177, %rd176, 24;
	setp.ne.s64 	%p139, %rd567, %rd177;
	@%p139 bra 	$L__BB0_71;

$L__BB0_147:
	add.s32 	%r1950, %r1950, %r47;
	setp.lt.s32 	%p140, %r1950, %r777;
	@%p140 bra 	$L__BB0_69;

$L__BB0_148:
	add.s32 	%r1949, %r1949, %r803;
	setp.lt.s32 	%p141, %r1949, %r776;
	@%p141 bra 	$L__BB0_67;

$L__BB0_149:
	setp.eq.s32 	%p142, %r780, 1;
	ld.param.u64 	%rd178, [%rd1+160];
	cvta.to.global.u64 	%rd15, %rd178;
	ld.param.u64 	%rd179, [%rd1+128];
	cvta.to.global.u64 	%rd16, %rd179;
	@%p142 bra 	$L__BB0_167;
	bra.uni 	$L__BB0_150;

$L__BB0_167:
	@%p35 bra 	$L__BB0_296;

	shl.b32 	%r254, %r80, 1;
	shr.u32 	%r1097, %r781, 31;
	add.s32 	%r1098, %r781, %r1097;
	shr.u32 	%r1099, %r1098, 1;
	and.b32  	%r255, %r1099, 1;
	mov.u64 	%rd198, _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE;
	add.s64 	%rd280, %rd198, 24;

$L__BB0_169:
	setp.ge.s32 	%p152, %r254, %r777;
	@%p152 bra 	$L__BB0_295;

	mov.u32 	%r1988, %r254;

$L__BB0_171:
	setp.ne.s32 	%p153, %r45, 0;
	@%p153 bra 	$L__BB0_294;

	shr.u32 	%r1101, %r1988, 31;
	add.s32 	%r1102, %r1988, %r1101;
	shr.s32 	%r1103, %r1102, 1;
	mad.lo.s32 	%r1104, %r1103, %r776, %r1982;
	shl.b32 	%r259, %r1104, 5;
	add.s32 	%r260, %r1988, -2;
	mul.lo.s32 	%r261, %r260, %r776;
	add.s32 	%r1105, %r777, %r260;
	mul.lo.s32 	%r262, %r1105, %r776;
	add.s32 	%r263, %r261, %r776;
	add.s32 	%r264, %r1988, -1;
	add.s32 	%r1106, %r777, %r264;
	mul.lo.s32 	%r265, %r1106, %r776;
	add.s32 	%r1107, %r777, %r1988;
	mul.lo.s32 	%r266, %r1107, %r776;
	mul.lo.s32 	%r267, %r1988, %r776;
	add.s32 	%r268, %r267, %r776;
	add.s32 	%r269, %r1988, 1;
	add.s32 	%r1108, %r777, %r269;
	mul.lo.s32 	%r270, %r1108, %r776;
	add.s32 	%r271, %r268, %r776;
	add.s32 	%r272, %r1988, 2;
	add.s32 	%r1109, %r777, %r272;
	mul.lo.s32 	%r273, %r1109, %r776;
	mov.u32 	%r1992, 0;
	mov.u64 	%rd568, %rd198;

$L__BB0_173:
	ld.global.nc.u32 	%r1110, [%rd568];
	cvt.rn.f64.s32 	%fd2, %r1110;
	add.f64 	%fd4, %fd2, 0d3FE0000000000000;
	add.s32 	%r275, %r1110, %r1982;
	setp.lt.s32 	%p154, %r275, %r776;
	or.b32  	%r1111, %r260, %r275;
	setp.gt.s32 	%p155, %r1111, -1;
	and.pred  	%p156, %p154, %p155;
	setp.lt.s32 	%p157, %r260, %r777;
	and.pred  	%p19, %p157, %p156;
	cvt.rn.f32.f64 	%f155, %fd4;
	add.f32 	%f156, %f155, 0f3E800000;
	abs.f32 	%f46, %f156;
	add.f32 	%f157, %f46, 0f40200000;
	setp.geu.f32 	%p158, %f157, 0f40000000;
	@%p158 bra 	$L__BB0_185;

	@%p19 bra 	$L__BB0_176;
	bra.uni 	$L__BB0_175;

$L__BB0_176:
	setp.eq.s32 	%p159, %r255, 0;
	add.s32 	%r1113, %r261, %r275;
	shl.b32 	%r1114, %r1113, 1;
	mul.wide.s32 	%rd199, %r1114, 4;
	add.s64 	%rd200, %rd15, %rd199;
	ld.global.f32 	%f47, [%rd200];
	@%p159 bra 	$L__BB0_178;
	bra.uni 	$L__BB0_177;

$L__BB0_178:
	mov.f32 	%f163, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f47;
  cvt.rn.f16.f32 high, %f163;
  mov.b32 %r1990, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_179;

$L__BB0_175:
	mov.f32 	%f159, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f159;
  cvt.rn.f16.f32 high, %f159;
  mov.b32 %r1990, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_179;

$L__BB0_177:
	mov.f32 	%f160, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f160;
  cvt.rn.f16.f32 high, %f47;
  mov.b32 %r1990, {low,high};}

	// end inline asm

$L__BB0_179:
	add.s32 	%r280, %r1992, %r259;
	mul.wide.s32 	%rd201, %r280, 4;
	add.s64 	%rd202, %rd16, %rd201;
	st.global.u32 	[%rd202], %r1990;
	@%p19 bra 	$L__BB0_181;
	bra.uni 	$L__BB0_180;

$L__BB0_181:
	setp.eq.s32 	%p160, %r255, 0;
	add.s32 	%r1118, %r262, %r275;
	shl.b32 	%r1119, %r1118, 1;
	mul.wide.s32 	%rd203, %r1119, 4;
	add.s64 	%rd204, %rd15, %rd203;
	ld.global.f32 	%f48, [%rd204];
	@%p160 bra 	$L__BB0_183;
	bra.uni 	$L__BB0_182;

$L__BB0_183:
	mov.f32 	%f169, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f48;
  cvt.rn.f16.f32 high, %f169;
  mov.b32 %r1991, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_184;

$L__BB0_180:
	mov.f32 	%f165, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f165;
  cvt.rn.f16.f32 high, %f165;
  mov.b32 %r1991, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_184;

$L__BB0_182:
	mov.f32 	%f166, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f166;
  cvt.rn.f16.f32 high, %f48;
  mov.b32 %r1991, {low,high};}

	// end inline asm

$L__BB0_184:
	add.s32 	%r1122, %r280, 1;
	mul.wide.s32 	%rd205, %r1122, 4;
	add.s64 	%rd206, %rd16, %rd205;
	st.global.u32 	[%rd206], %r1991;
	add.s32 	%r1992, %r1992, 2;

$L__BB0_185:
	cvt.rn.f32.f64 	%f170, %fd2;
	add.f32 	%f171, %f170, 0f3E800000;
	abs.f32 	%f49, %f171;
	add.f32 	%f50, %f49, 0f40000000;
	setp.geu.f32 	%p161, %f50, 0f40000000;
	@%p161 bra 	$L__BB0_197;

	@%p19 bra 	$L__BB0_188;
	bra.uni 	$L__BB0_187;

$L__BB0_188:
	setp.eq.s32 	%p162, %r255, 0;
	add.s32 	%r1124, %r261, %r275;
	shl.b32 	%r1125, %r1124, 1;
	or.b32  	%r1126, %r1125, 1;
	mul.wide.s32 	%rd207, %r1126, 4;
	add.s64 	%rd208, %rd15, %rd207;
	ld.global.f32 	%f51, [%rd208];
	@%p162 bra 	$L__BB0_190;
	bra.uni 	$L__BB0_189;

$L__BB0_190:
	mov.f32 	%f177, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f51;
  cvt.rn.f16.f32 high, %f177;
  mov.b32 %r1993, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_191;

$L__BB0_187:
	mov.f32 	%f173, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f173;
  cvt.rn.f16.f32 high, %f173;
  mov.b32 %r1993, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_191;

$L__BB0_189:
	mov.f32 	%f174, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f174;
  cvt.rn.f16.f32 high, %f51;
  mov.b32 %r1993, {low,high};}

	// end inline asm

$L__BB0_191:
	add.s32 	%r291, %r1992, %r259;
	mul.wide.s32 	%rd209, %r291, 4;
	add.s64 	%rd210, %rd16, %rd209;
	st.global.u32 	[%rd210], %r1993;
	@%p19 bra 	$L__BB0_193;
	bra.uni 	$L__BB0_192;

$L__BB0_193:
	setp.eq.s32 	%p163, %r255, 0;
	add.s32 	%r1130, %r262, %r275;
	shl.b32 	%r1131, %r1130, 1;
	or.b32  	%r1132, %r1131, 1;
	mul.wide.s32 	%rd211, %r1132, 4;
	add.s64 	%rd212, %rd15, %rd211;
	ld.global.f32 	%f52, [%rd212];
	@%p163 bra 	$L__BB0_195;
	bra.uni 	$L__BB0_194;

$L__BB0_195:
	mov.f32 	%f183, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f52;
  cvt.rn.f16.f32 high, %f183;
  mov.b32 %r1994, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_196;

$L__BB0_192:
	mov.f32 	%f179, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f179;
  cvt.rn.f16.f32 high, %f179;
  mov.b32 %r1994, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_196;

$L__BB0_194:
	mov.f32 	%f180, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f180;
  cvt.rn.f16.f32 high, %f52;
  mov.b32 %r1994, {low,high};}

	// end inline asm

$L__BB0_196:
	add.s32 	%r1135, %r291, 1;
	mul.wide.s32 	%rd213, %r1135, 4;
	add.s64 	%rd214, %rd16, %rd213;
	st.global.u32 	[%rd214], %r1994;
	add.s32 	%r1992, %r1992, 2;

$L__BB0_197:
	or.b32  	%r1136, %r264, %r275;
	setp.gt.s32 	%p164, %r1136, -1;
	and.pred  	%p166, %p154, %p164;
	setp.le.s32 	%p167, %r1988, %r777;
	and.pred  	%p20, %p167, %p166;
	add.f32 	%f53, %f46, 0f3FC00000;
	setp.geu.f32 	%p168, %f53, 0f40000000;
	@%p168 bra 	$L__BB0_209;

	@%p20 bra 	$L__BB0_200;
	bra.uni 	$L__BB0_199;

$L__BB0_200:
	setp.eq.s32 	%p169, %r255, 0;
	add.s32 	%r1138, %r263, %r275;
	shl.b32 	%r1139, %r1138, 1;
	mul.wide.s32 	%rd215, %r1139, 4;
	add.s64 	%rd216, %rd15, %rd215;
	ld.global.f32 	%f54, [%rd216];
	@%p169 bra 	$L__BB0_202;
	bra.uni 	$L__BB0_201;

$L__BB0_202:
	mov.f32 	%f189, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f54;
  cvt.rn.f16.f32 high, %f189;
  mov.b32 %r1996, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_203;

$L__BB0_199:
	mov.f32 	%f185, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f185;
  cvt.rn.f16.f32 high, %f185;
  mov.b32 %r1996, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_203;

$L__BB0_201:
	mov.f32 	%f186, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f186;
  cvt.rn.f16.f32 high, %f54;
  mov.b32 %r1996, {low,high};}

	// end inline asm

$L__BB0_203:
	add.s32 	%r302, %r1992, %r259;
	mul.wide.s32 	%rd217, %r302, 4;
	add.s64 	%rd218, %rd16, %rd217;
	st.global.u32 	[%rd218], %r1996;
	@%p20 bra 	$L__BB0_205;
	bra.uni 	$L__BB0_204;

$L__BB0_205:
	setp.eq.s32 	%p170, %r255, 0;
	add.s32 	%r1143, %r265, %r275;
	shl.b32 	%r1144, %r1143, 1;
	mul.wide.s32 	%rd219, %r1144, 4;
	add.s64 	%rd220, %rd15, %rd219;
	ld.global.f32 	%f55, [%rd220];
	@%p170 bra 	$L__BB0_207;
	bra.uni 	$L__BB0_206;

$L__BB0_207:
	mov.f32 	%f195, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f55;
  cvt.rn.f16.f32 high, %f195;
  mov.b32 %r1997, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_208;

$L__BB0_204:
	mov.f32 	%f191, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f191;
  cvt.rn.f16.f32 high, %f191;
  mov.b32 %r1997, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_208;

$L__BB0_206:
	mov.f32 	%f192, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f192;
  cvt.rn.f16.f32 high, %f55;
  mov.b32 %r1997, {low,high};}

	// end inline asm

$L__BB0_208:
	add.s32 	%r1147, %r302, 1;
	mul.wide.s32 	%rd221, %r1147, 4;
	add.s64 	%rd222, %rd16, %rd221;
	st.global.u32 	[%rd222], %r1997;
	add.s32 	%r1992, %r1992, 2;

$L__BB0_209:
	add.f32 	%f56, %f49, 0f3F800000;
	setp.geu.f32 	%p171, %f56, 0f40000000;
	@%p171 bra 	$L__BB0_221;

	@%p20 bra 	$L__BB0_212;
	bra.uni 	$L__BB0_211;

$L__BB0_212:
	setp.eq.s32 	%p172, %r255, 0;
	add.s32 	%r1149, %r263, %r275;
	shl.b32 	%r1150, %r1149, 1;
	or.b32  	%r1151, %r1150, 1;
	mul.wide.s32 	%rd223, %r1151, 4;
	add.s64 	%rd224, %rd15, %rd223;
	ld.global.f32 	%f57, [%rd224];
	@%p172 bra 	$L__BB0_214;
	bra.uni 	$L__BB0_213;

$L__BB0_214:
	mov.f32 	%f201, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f57;
  cvt.rn.f16.f32 high, %f201;
  mov.b32 %r1999, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_215;

$L__BB0_211:
	mov.f32 	%f197, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f197;
  cvt.rn.f16.f32 high, %f197;
  mov.b32 %r1999, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_215;

$L__BB0_213:
	mov.f32 	%f198, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f198;
  cvt.rn.f16.f32 high, %f57;
  mov.b32 %r1999, {low,high};}

	// end inline asm

$L__BB0_215:
	add.s32 	%r313, %r1992, %r259;
	mul.wide.s32 	%rd225, %r313, 4;
	add.s64 	%rd226, %rd16, %rd225;
	st.global.u32 	[%rd226], %r1999;
	@%p20 bra 	$L__BB0_217;
	bra.uni 	$L__BB0_216;

$L__BB0_217:
	setp.eq.s32 	%p173, %r255, 0;
	add.s32 	%r1155, %r265, %r275;
	shl.b32 	%r1156, %r1155, 1;
	or.b32  	%r1157, %r1156, 1;
	mul.wide.s32 	%rd227, %r1157, 4;
	add.s64 	%rd228, %rd15, %rd227;
	ld.global.f32 	%f58, [%rd228];
	@%p173 bra 	$L__BB0_219;
	bra.uni 	$L__BB0_218;

$L__BB0_219:
	mov.f32 	%f207, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f58;
  cvt.rn.f16.f32 high, %f207;
  mov.b32 %r2000, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_220;

$L__BB0_216:
	mov.f32 	%f203, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f203;
  cvt.rn.f16.f32 high, %f203;
  mov.b32 %r2000, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_220;

$L__BB0_218:
	mov.f32 	%f204, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f204;
  cvt.rn.f16.f32 high, %f58;
  mov.b32 %r2000, {low,high};}

	// end inline asm

$L__BB0_220:
	add.s32 	%r1160, %r313, 1;
	mul.wide.s32 	%rd229, %r1160, 4;
	add.s64 	%rd230, %rd16, %rd229;
	st.global.u32 	[%rd230], %r2000;
	add.s32 	%r1992, %r1992, 2;

$L__BB0_221:
	or.b32  	%r1161, %r1988, %r275;
	setp.gt.s32 	%p174, %r1161, -1;
	and.pred  	%p176, %p154, %p174;
	setp.lt.s32 	%p177, %r1988, %r777;
	and.pred  	%p21, %p177, %p176;
	add.f32 	%f59, %f46, 0f3F000000;
	setp.geu.f32 	%p178, %f59, 0f40000000;
	@%p178 bra 	$L__BB0_233;

	@%p21 bra 	$L__BB0_224;
	bra.uni 	$L__BB0_223;

$L__BB0_224:
	setp.eq.s32 	%p179, %r255, 0;
	add.s32 	%r1163, %r267, %r275;
	shl.b32 	%r1164, %r1163, 1;
	mul.wide.s32 	%rd231, %r1164, 4;
	add.s64 	%rd232, %rd15, %rd231;
	ld.global.f32 	%f60, [%rd232];
	@%p179 bra 	$L__BB0_226;
	bra.uni 	$L__BB0_225;

$L__BB0_226:
	mov.f32 	%f213, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f60;
  cvt.rn.f16.f32 high, %f213;
  mov.b32 %r2002, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_227;

$L__BB0_223:
	mov.f32 	%f209, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f209;
  cvt.rn.f16.f32 high, %f209;
  mov.b32 %r2002, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_227;

$L__BB0_225:
	mov.f32 	%f210, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f210;
  cvt.rn.f16.f32 high, %f60;
  mov.b32 %r2002, {low,high};}

	// end inline asm

$L__BB0_227:
	add.s32 	%r324, %r1992, %r259;
	mul.wide.s32 	%rd233, %r324, 4;
	add.s64 	%rd234, %rd16, %rd233;
	st.global.u32 	[%rd234], %r2002;
	@%p21 bra 	$L__BB0_229;
	bra.uni 	$L__BB0_228;

$L__BB0_229:
	setp.eq.s32 	%p180, %r255, 0;
	add.s32 	%r1168, %r266, %r275;
	shl.b32 	%r1169, %r1168, 1;
	mul.wide.s32 	%rd235, %r1169, 4;
	add.s64 	%rd236, %rd15, %rd235;
	ld.global.f32 	%f61, [%rd236];
	@%p180 bra 	$L__BB0_231;
	bra.uni 	$L__BB0_230;

$L__BB0_231:
	mov.f32 	%f219, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f61;
  cvt.rn.f16.f32 high, %f219;
  mov.b32 %r2003, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_232;

$L__BB0_228:
	mov.f32 	%f215, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f215;
  cvt.rn.f16.f32 high, %f215;
  mov.b32 %r2003, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_232;

$L__BB0_230:
	mov.f32 	%f216, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f216;
  cvt.rn.f16.f32 high, %f61;
  mov.b32 %r2003, {low,high};}

	// end inline asm

$L__BB0_232:
	add.s32 	%r1172, %r324, 1;
	mul.wide.s32 	%rd237, %r1172, 4;
	add.s64 	%rd238, %rd16, %rd237;
	st.global.u32 	[%rd238], %r2003;
	add.s32 	%r1992, %r1992, 2;

$L__BB0_233:
	add.f32 	%f220, %f49, 0f00000000;
	setp.geu.f32 	%p181, %f220, 0f40000000;
	@%p181 bra 	$L__BB0_245;

	@%p21 bra 	$L__BB0_236;
	bra.uni 	$L__BB0_235;

$L__BB0_236:
	setp.eq.s32 	%p182, %r255, 0;
	add.s32 	%r1174, %r267, %r275;
	shl.b32 	%r1175, %r1174, 1;
	or.b32  	%r1176, %r1175, 1;
	mul.wide.s32 	%rd239, %r1176, 4;
	add.s64 	%rd240, %rd15, %rd239;
	ld.global.f32 	%f62, [%rd240];
	@%p182 bra 	$L__BB0_238;
	bra.uni 	$L__BB0_237;

$L__BB0_238:
	mov.f32 	%f226, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f62;
  cvt.rn.f16.f32 high, %f226;
  mov.b32 %r2005, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_239;

$L__BB0_235:
	mov.f32 	%f222, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f222;
  cvt.rn.f16.f32 high, %f222;
  mov.b32 %r2005, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_239;

$L__BB0_237:
	mov.f32 	%f223, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f223;
  cvt.rn.f16.f32 high, %f62;
  mov.b32 %r2005, {low,high};}

	// end inline asm

$L__BB0_239:
	add.s32 	%r335, %r1992, %r259;
	mul.wide.s32 	%rd241, %r335, 4;
	add.s64 	%rd242, %rd16, %rd241;
	st.global.u32 	[%rd242], %r2005;
	@%p21 bra 	$L__BB0_241;
	bra.uni 	$L__BB0_240;

$L__BB0_241:
	setp.eq.s32 	%p183, %r255, 0;
	add.s32 	%r1180, %r266, %r275;
	shl.b32 	%r1181, %r1180, 1;
	or.b32  	%r1182, %r1181, 1;
	mul.wide.s32 	%rd243, %r1182, 4;
	add.s64 	%rd244, %rd15, %rd243;
	ld.global.f32 	%f63, [%rd244];
	@%p183 bra 	$L__BB0_243;
	bra.uni 	$L__BB0_242;

$L__BB0_243:
	mov.f32 	%f232, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f63;
  cvt.rn.f16.f32 high, %f232;
  mov.b32 %r2006, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_244;

$L__BB0_240:
	mov.f32 	%f228, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f228;
  cvt.rn.f16.f32 high, %f228;
  mov.b32 %r2006, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_244;

$L__BB0_242:
	mov.f32 	%f229, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f229;
  cvt.rn.f16.f32 high, %f63;
  mov.b32 %r2006, {low,high};}

	// end inline asm

$L__BB0_244:
	add.s32 	%r1185, %r335, 1;
	mul.wide.s32 	%rd245, %r1185, 4;
	add.s64 	%rd246, %rd16, %rd245;
	st.global.u32 	[%rd246], %r2006;
	add.s32 	%r1992, %r1992, 2;

$L__BB0_245:
	or.b32  	%r1186, %r269, %r275;
	setp.gt.s32 	%p184, %r1186, -1;
	and.pred  	%p186, %p154, %p184;
	setp.lt.s32 	%p187, %r269, %r777;
	and.pred  	%p22, %p187, %p186;
	@%p178 bra 	$L__BB0_257;

	@%p22 bra 	$L__BB0_248;
	bra.uni 	$L__BB0_247;

$L__BB0_248:
	setp.eq.s32 	%p189, %r255, 0;
	add.s32 	%r1188, %r268, %r275;
	shl.b32 	%r1189, %r1188, 1;
	mul.wide.s32 	%rd247, %r1189, 4;
	add.s64 	%rd248, %rd15, %rd247;
	ld.global.f32 	%f64, [%rd248];
	@%p189 bra 	$L__BB0_250;
	bra.uni 	$L__BB0_249;

$L__BB0_250:
	mov.f32 	%f238, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f64;
  cvt.rn.f16.f32 high, %f238;
  mov.b32 %r2008, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_251;

$L__BB0_247:
	mov.f32 	%f234, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f234;
  cvt.rn.f16.f32 high, %f234;
  mov.b32 %r2008, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_251;

$L__BB0_249:
	mov.f32 	%f235, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f235;
  cvt.rn.f16.f32 high, %f64;
  mov.b32 %r2008, {low,high};}

	// end inline asm

$L__BB0_251:
	add.s32 	%r346, %r1992, %r259;
	mul.wide.s32 	%rd249, %r346, 4;
	add.s64 	%rd250, %rd16, %rd249;
	st.global.u32 	[%rd250], %r2008;
	@%p22 bra 	$L__BB0_253;
	bra.uni 	$L__BB0_252;

$L__BB0_253:
	setp.eq.s32 	%p190, %r255, 0;
	add.s32 	%r1193, %r270, %r275;
	shl.b32 	%r1194, %r1193, 1;
	mul.wide.s32 	%rd251, %r1194, 4;
	add.s64 	%rd252, %rd15, %rd251;
	ld.global.f32 	%f65, [%rd252];
	@%p190 bra 	$L__BB0_255;
	bra.uni 	$L__BB0_254;

$L__BB0_255:
	mov.f32 	%f244, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f65;
  cvt.rn.f16.f32 high, %f244;
  mov.b32 %r2009, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_256;

$L__BB0_252:
	mov.f32 	%f240, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f240;
  cvt.rn.f16.f32 high, %f240;
  mov.b32 %r2009, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_256;

$L__BB0_254:
	mov.f32 	%f241, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f241;
  cvt.rn.f16.f32 high, %f65;
  mov.b32 %r2009, {low,high};}

	// end inline asm

$L__BB0_256:
	add.s32 	%r1197, %r346, 1;
	mul.wide.s32 	%rd253, %r1197, 4;
	add.s64 	%rd254, %rd16, %rd253;
	st.global.u32 	[%rd254], %r2009;
	add.s32 	%r1992, %r1992, 2;

$L__BB0_257:
	@%p171 bra 	$L__BB0_269;

	@%p22 bra 	$L__BB0_260;
	bra.uni 	$L__BB0_259;

$L__BB0_260:
	setp.eq.s32 	%p192, %r255, 0;
	add.s32 	%r1199, %r268, %r275;
	shl.b32 	%r1200, %r1199, 1;
	or.b32  	%r1201, %r1200, 1;
	mul.wide.s32 	%rd255, %r1201, 4;
	add.s64 	%rd256, %rd15, %rd255;
	ld.global.f32 	%f66, [%rd256];
	@%p192 bra 	$L__BB0_262;
	bra.uni 	$L__BB0_261;

$L__BB0_262:
	mov.f32 	%f250, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f66;
  cvt.rn.f16.f32 high, %f250;
  mov.b32 %r2011, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_263;

$L__BB0_259:
	mov.f32 	%f246, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f246;
  cvt.rn.f16.f32 high, %f246;
  mov.b32 %r2011, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_263;

$L__BB0_261:
	mov.f32 	%f247, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f247;
  cvt.rn.f16.f32 high, %f66;
  mov.b32 %r2011, {low,high};}

	// end inline asm

$L__BB0_263:
	add.s32 	%r357, %r1992, %r259;
	mul.wide.s32 	%rd257, %r357, 4;
	add.s64 	%rd258, %rd16, %rd257;
	st.global.u32 	[%rd258], %r2011;
	@%p22 bra 	$L__BB0_265;
	bra.uni 	$L__BB0_264;

$L__BB0_265:
	setp.eq.s32 	%p193, %r255, 0;
	add.s32 	%r1205, %r270, %r275;
	shl.b32 	%r1206, %r1205, 1;
	or.b32  	%r1207, %r1206, 1;
	mul.wide.s32 	%rd259, %r1207, 4;
	add.s64 	%rd260, %rd15, %rd259;
	ld.global.f32 	%f67, [%rd260];
	@%p193 bra 	$L__BB0_267;
	bra.uni 	$L__BB0_266;

$L__BB0_267:
	mov.f32 	%f256, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f67;
  cvt.rn.f16.f32 high, %f256;
  mov.b32 %r2012, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_268;

$L__BB0_264:
	mov.f32 	%f252, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f252;
  cvt.rn.f16.f32 high, %f252;
  mov.b32 %r2012, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_268;

$L__BB0_266:
	mov.f32 	%f253, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f253;
  cvt.rn.f16.f32 high, %f67;
  mov.b32 %r2012, {low,high};}

	// end inline asm

$L__BB0_268:
	add.s32 	%r1210, %r357, 1;
	mul.wide.s32 	%rd261, %r1210, 4;
	add.s64 	%rd262, %rd16, %rd261;
	st.global.u32 	[%rd262], %r2012;
	add.s32 	%r1992, %r1992, 2;

$L__BB0_269:
	or.b32  	%r1211, %r272, %r275;
	setp.gt.s32 	%p194, %r1211, -1;
	and.pred  	%p196, %p154, %p194;
	setp.lt.s32 	%p197, %r272, %r777;
	and.pred  	%p23, %p197, %p196;
	@%p168 bra 	$L__BB0_281;

	@%p23 bra 	$L__BB0_272;
	bra.uni 	$L__BB0_271;

$L__BB0_272:
	setp.eq.s32 	%p199, %r255, 0;
	add.s32 	%r1213, %r271, %r275;
	shl.b32 	%r1214, %r1213, 1;
	mul.wide.s32 	%rd263, %r1214, 4;
	add.s64 	%rd264, %rd15, %rd263;
	ld.global.f32 	%f68, [%rd264];
	@%p199 bra 	$L__BB0_274;
	bra.uni 	$L__BB0_273;

$L__BB0_274:
	mov.f32 	%f262, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f68;
  cvt.rn.f16.f32 high, %f262;
  mov.b32 %r2014, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_275;

$L__BB0_271:
	mov.f32 	%f258, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f258;
  cvt.rn.f16.f32 high, %f258;
  mov.b32 %r2014, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_275;

$L__BB0_273:
	mov.f32 	%f259, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f259;
  cvt.rn.f16.f32 high, %f68;
  mov.b32 %r2014, {low,high};}

	// end inline asm

$L__BB0_275:
	add.s32 	%r368, %r1992, %r259;
	mul.wide.s32 	%rd265, %r368, 4;
	add.s64 	%rd266, %rd16, %rd265;
	st.global.u32 	[%rd266], %r2014;
	@%p23 bra 	$L__BB0_277;
	bra.uni 	$L__BB0_276;

$L__BB0_277:
	setp.eq.s32 	%p200, %r255, 0;
	add.s32 	%r1218, %r273, %r275;
	shl.b32 	%r1219, %r1218, 1;
	mul.wide.s32 	%rd267, %r1219, 4;
	add.s64 	%rd268, %rd15, %rd267;
	ld.global.f32 	%f69, [%rd268];
	@%p200 bra 	$L__BB0_279;
	bra.uni 	$L__BB0_278;

$L__BB0_279:
	mov.f32 	%f268, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f69;
  cvt.rn.f16.f32 high, %f268;
  mov.b32 %r2015, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_280;

$L__BB0_276:
	mov.f32 	%f264, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f264;
  cvt.rn.f16.f32 high, %f264;
  mov.b32 %r2015, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_280;

$L__BB0_278:
	mov.f32 	%f265, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f265;
  cvt.rn.f16.f32 high, %f69;
  mov.b32 %r2015, {low,high};}

	// end inline asm

$L__BB0_280:
	add.s32 	%r1222, %r368, 1;
	mul.wide.s32 	%rd269, %r1222, 4;
	add.s64 	%rd270, %rd16, %rd269;
	st.global.u32 	[%rd270], %r2015;
	add.s32 	%r1992, %r1992, 2;

$L__BB0_281:
	@%p161 bra 	$L__BB0_293;

	@%p23 bra 	$L__BB0_284;
	bra.uni 	$L__BB0_283;

$L__BB0_284:
	setp.eq.s32 	%p202, %r255, 0;
	add.s32 	%r1224, %r271, %r275;
	shl.b32 	%r1225, %r1224, 1;
	or.b32  	%r1226, %r1225, 1;
	mul.wide.s32 	%rd271, %r1226, 4;
	add.s64 	%rd272, %rd15, %rd271;
	ld.global.f32 	%f70, [%rd272];
	@%p202 bra 	$L__BB0_286;
	bra.uni 	$L__BB0_285;

$L__BB0_286:
	mov.f32 	%f274, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f70;
  cvt.rn.f16.f32 high, %f274;
  mov.b32 %r2017, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_287;

$L__BB0_283:
	mov.f32 	%f270, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f270;
  cvt.rn.f16.f32 high, %f270;
  mov.b32 %r2017, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_287;

$L__BB0_285:
	mov.f32 	%f271, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f271;
  cvt.rn.f16.f32 high, %f70;
  mov.b32 %r2017, {low,high};}

	// end inline asm

$L__BB0_287:
	add.s32 	%r379, %r1992, %r259;
	mul.wide.s32 	%rd273, %r379, 4;
	add.s64 	%rd274, %rd16, %rd273;
	st.global.u32 	[%rd274], %r2017;
	@%p23 bra 	$L__BB0_289;
	bra.uni 	$L__BB0_288;

$L__BB0_289:
	setp.eq.s32 	%p203, %r255, 0;
	add.s32 	%r1230, %r273, %r275;
	shl.b32 	%r1231, %r1230, 1;
	or.b32  	%r1232, %r1231, 1;
	mul.wide.s32 	%rd275, %r1232, 4;
	add.s64 	%rd276, %rd15, %rd275;
	ld.global.f32 	%f71, [%rd276];
	@%p203 bra 	$L__BB0_291;
	bra.uni 	$L__BB0_290;

$L__BB0_291:
	mov.f32 	%f280, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f71;
  cvt.rn.f16.f32 high, %f280;
  mov.b32 %r2018, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_292;

$L__BB0_288:
	mov.f32 	%f276, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f276;
  cvt.rn.f16.f32 high, %f276;
  mov.b32 %r2018, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_292;

$L__BB0_290:
	mov.f32 	%f277, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f277;
  cvt.rn.f16.f32 high, %f71;
  mov.b32 %r2018, {low,high};}

	// end inline asm

$L__BB0_292:
	add.s32 	%r1235, %r379, 1;
	mul.wide.s32 	%rd277, %r1235, 4;
	add.s64 	%rd278, %rd16, %rd277;
	st.global.u32 	[%rd278], %r2018;
	add.s32 	%r1992, %r1992, 2;

$L__BB0_293:
	add.s64 	%rd568, %rd568, 4;
	setp.ne.s64 	%p204, %rd568, %rd280;
	@%p204 bra 	$L__BB0_173;

$L__BB0_294:
	add.s32 	%r1988, %r1988, %r47;
	setp.lt.s32 	%p205, %r1988, %r777;
	@%p205 bra 	$L__BB0_171;

$L__BB0_295:
	add.s32 	%r1982, %r1982, %r803;
	setp.lt.s32 	%p206, %r1982, %r776;
	@%p206 bra 	$L__BB0_169;
	bra.uni 	$L__BB0_296;

$L__BB0_150:
	@%p35 bra 	$L__BB0_296;

	neg.s32 	%r228, %r79;
	mov.u32 	%r1050, 31;
	sub.s32 	%r1051, %r1050, %r45;
	setp.gt.s32 	%p144, %r44, %r45;
	selp.b32 	%r1052, %r45, %r1051, %p144;
	shl.b32 	%r1053, %r1052, 2;
	mov.u32 	%r1054, 2;
	sub.s32 	%r229, %r1053, %r779;
	shl.b32 	%r1055, %r778, 2;
	mov.u32 	%r1056, 128;
	sub.s32 	%r230, %r1056, %r1055;
	sub.s32 	%r1057, %r1054, %r779;
	add.s32 	%r231, %r1057, %r1053;
	add.s32 	%r232, %r776, -1;
	add.s32 	%r233, %r229, 1;
	add.s32 	%r234, %r231, 1;
	rem.s32 	%r1082, %r233, %r230;
	add.s32 	%r1083, %r1082, %r230;
	rem.s32 	%r245, %r1083, %r230;
	rem.s32 	%r1084, %r234, %r230;
	add.s32 	%r1085, %r1084, %r230;
	rem.s32 	%r246, %r1085, %r230;

$L__BB0_152:
	setp.ne.s32 	%p145, %r41, %r228;
	@%p145 bra 	$L__BB0_166;

	shl.b32 	%r236, %r1982, 1;
	rem.s32 	%r1058, %r229, %r230;
	add.s32 	%r1059, %r1058, %r230;
	rem.s32 	%r237, %r1059, %r230;
	rem.s32 	%r1060, %r231, %r230;
	add.s32 	%r1061, %r1060, %r230;
	rem.s32 	%r238, %r1061, %r230;
	@%p144 bra 	$L__BB0_155;
	bra.uni 	$L__BB0_154;

$L__BB0_155:
	mul.lo.s32 	%r1064, %r236, %r230;
	add.s32 	%r1065, %r1064, %r237;
	mul.wide.s32 	%rd180, %r1065, 4;
	add.s64 	%rd181, %rd15, %rd180;
	ld.global.f32 	%f141, [%rd181];
	add.s32 	%r1066, %r1064, %r238;
	mul.wide.s32 	%rd182, %r1066, 4;
	add.s64 	%rd183, %rd15, %rd182;
	ld.global.f32 	%f142, [%rd183];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f141;
  cvt.rn.f16.f32 high, %f142;
  mov.b32 %r1983, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_156;

$L__BB0_154:
	mov.f32 	%f140, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f140;
  cvt.rn.f16.f32 high, %f140;
  mov.b32 %r1983, {low,high};}

	// end inline asm

$L__BB0_156:
	shl.b32 	%r1067, %r1982, 5;
	add.s32 	%r1068, %r1067, %r45;
	shl.b32 	%r1069, %r1068, 2;
	mul.wide.s32 	%rd184, %r1069, 4;
	add.s64 	%rd17, %rd16, %rd184;
	st.global.u32 	[%rd17], %r1983;
	@%p144 bra 	$L__BB0_158;
	bra.uni 	$L__BB0_157;

$L__BB0_158:
	add.s32 	%r1072, %r236, 1;
	mul.lo.s32 	%r1073, %r1072, %r230;
	add.s32 	%r1074, %r1073, %r237;
	mul.wide.s32 	%rd185, %r1074, 4;
	add.s64 	%rd186, %rd15, %rd185;
	ld.global.f32 	%f145, [%rd186];
	add.s32 	%r1075, %r1073, %r238;
	mul.wide.s32 	%rd187, %r1075, 4;
	add.s64 	%rd188, %rd15, %rd187;
	ld.global.f32 	%f146, [%rd188];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f145;
  cvt.rn.f16.f32 high, %f146;
  mov.b32 %r1984, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_159;

$L__BB0_157:
	mov.f32 	%f144, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f144;
  cvt.rn.f16.f32 high, %f144;
  mov.b32 %r1984, {low,high};}

	// end inline asm

$L__BB0_159:
	add.s32 	%r1076, %r232, %r1982;
	rem.s32 	%r1077, %r1076, %r776;
	shl.b32 	%r1078, %r1077, 5;
	add.s32 	%r1079, %r1078, %r45;
	shl.b32 	%r1080, %r1079, 2;
	or.b32  	%r1081, %r1080, 2;
	mul.wide.s32 	%rd189, %r1081, 4;
	add.s64 	%rd18, %rd16, %rd189;
	st.global.u32 	[%rd18], %r1984;
	@%p144 bra 	$L__BB0_161;
	bra.uni 	$L__BB0_160;

$L__BB0_161:
	mul.lo.s32 	%r1088, %r236, %r230;
	add.s32 	%r1089, %r1088, %r245;
	mul.wide.s32 	%rd190, %r1089, 4;
	add.s64 	%rd191, %rd15, %rd190;
	ld.global.f32 	%f149, [%rd191];
	add.s32 	%r1090, %r1088, %r246;
	mul.wide.s32 	%rd192, %r1090, 4;
	add.s64 	%rd193, %rd15, %rd192;
	ld.global.f32 	%f150, [%rd193];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f149;
  cvt.rn.f16.f32 high, %f150;
  mov.b32 %r1985, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_162;

$L__BB0_160:
	mov.f32 	%f148, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f148;
  cvt.rn.f16.f32 high, %f148;
  mov.b32 %r1985, {low,high};}

	// end inline asm

$L__BB0_162:
	st.global.u32 	[%rd17+4], %r1985;
	@%p144 bra 	$L__BB0_164;
	bra.uni 	$L__BB0_163;

$L__BB0_164:
	add.s32 	%r1093, %r236, 1;
	mul.lo.s32 	%r1094, %r1093, %r230;
	add.s32 	%r1095, %r1094, %r245;
	mul.wide.s32 	%rd194, %r1095, 4;
	add.s64 	%rd195, %rd15, %rd194;
	ld.global.f32 	%f153, [%rd195];
	add.s32 	%r1096, %r1094, %r246;
	mul.wide.s32 	%rd196, %r1096, 4;
	add.s64 	%rd197, %rd15, %rd196;
	ld.global.f32 	%f154, [%rd197];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f153;
  cvt.rn.f16.f32 high, %f154;
  mov.b32 %r1986, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_165;

$L__BB0_163:
	mov.f32 	%f152, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f152;
  cvt.rn.f16.f32 high, %f152;
  mov.b32 %r1986, {low,high};}

	// end inline asm

$L__BB0_165:
	st.global.u32 	[%rd18+4], %r1986;

$L__BB0_166:
	add.s32 	%r1982, %r1982, %r803;
	setp.lt.s32 	%p150, %r1982, %r776;
	@%p150 bra 	$L__BB0_152;

$L__BB0_296:
	add.s32 	%r1237, %r771, -1;
	mad.lo.s32 	%r1238, %r772, 576, 128;
	mul.lo.s32 	%r1239, %r1238, %r1237;
	add.s32 	%r1240, %r69, -64;
	add.s32 	%r1241, %r1240, %r69;
	add.s32 	%r1242, %r772, -1;
	mad.lo.s32 	%r1243, %r1241, %r1242, %r1239;
	mul.lo.s32 	%r1244, %r1237, %r772;
	mul.lo.s32 	%r1245, %r1244, 320;
	mad.lo.s32 	%r1246, %r1240, %r1242, %r1245;
	add.s32 	%r388, %r1246, %r1243;
	setp.lt.s32 	%p207, %r388, 1;
	mov.f32 	%f282, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f282;
  cvt.rn.f16.f32 high, %f282;
  mov.b32 %r2021, {low,high};}

	// end inline asm
	@%p207 bra 	$L__BB0_299;

	mov.u32 	%r2022, 0;
	mov.u32 	%r2020, _ZN6kernel5shmemE;

$L__BB0_298:
	st.shared.u32 	[%r2020], %r2021;
	mov.f32 	%f290, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f290;
  cvt.rn.f16.f32 high, %f290;
  mov.b32 %r1249, {low,high};}

	// end inline asm
	st.shared.u32 	[%r2020+4], %r1249;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f290;
  cvt.rn.f16.f32 high, %f290;
  mov.b32 %r1250, {low,high};}

	// end inline asm
	st.shared.u32 	[%r2020+8], %r1250;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f290;
  cvt.rn.f16.f32 high, %f290;
  mov.b32 %r1251, {low,high};}

	// end inline asm
	st.shared.u32 	[%r2020+12], %r1251;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f290;
  cvt.rn.f16.f32 high, %f290;
  mov.b32 %r2021, {low,high};}

	// end inline asm
	add.s32 	%r2020, %r2020, 16;
	add.s32 	%r2022, %r2022, 4;
	setp.lt.s32 	%p208, %r2022, %r388;
	@%p208 bra 	$L__BB0_298;

$L__BB0_299:
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f282;
  cvt.rn.f16.f32 high, %f282;
  mov.b32 %r1254, {low,high};}

	// end inline asm
	mov.u32 	%r1255, 31;
	sub.s32 	%r1256, %r1255, %r45;
	setp.gt.s32 	%p210, %r44, %r45;
	selp.b32 	%r1257, %r45, %r1256, %p210;
	shl.b32 	%r1258, %r1257, 2;
	sub.s32 	%r397, %r1258, %r779;
	shl.b32 	%r1259, %r778, 2;
	mov.u32 	%r1260, 128;
	sub.s32 	%r398, %r1260, %r1259;
	rem.s32 	%r1261, %r397, %r398;
	add.s32 	%r1262, %r1261, %r398;
	rem.s32 	%r399, %r1262, %r398;
	add.s32 	%r1263, %r397, 2;
	rem.s32 	%r1264, %r1263, %r398;
	add.s32 	%r1265, %r1264, %r398;
	rem.s32 	%r400, %r1265, %r398;
	add.s32 	%r1276, %r397, 1;
	rem.s32 	%r1277, %r1276, %r398;
	add.s32 	%r1278, %r1277, %r398;
	rem.s32 	%r401, %r1278, %r398;
	add.s32 	%r1279, %r397, 3;
	rem.s32 	%r1280, %r1279, %r398;
	add.s32 	%r1281, %r1280, %r398;
	rem.s32 	%r402, %r1281, %r398;
	// begin inline asm
	mov.u32 %r1292, %envreg2;
	// end inline asm
	cvt.u64.u32 	%rd286, %r1292;
	// begin inline asm
	mov.u32 %r1293, %envreg1;
	// end inline asm
	cvt.u64.u32 	%rd287, %r1293;
	bfi.b64 	%rd26, %rd287, %rd286, 32, 32;
	setp.ne.s64 	%p218, %rd26, 0;
	@%p218 bra 	$L__BB0_317;

	// begin inline asm
	trap;
	// end inline asm

$L__BB0_317:
	add.s64 	%rd27, %rd26, 4;
	mov.u32 	%r1294, %nctaid.y;
	mov.u32 	%r1295, %nctaid.x;
	mul.lo.s32 	%r1296, %r1295, %r1294;
	mov.u32 	%r1297, %nctaid.z;
	mul.lo.s32 	%r403, %r1296, %r1297;
	neg.s32 	%r1298, %r41;
	add.s32 	%r1299, %r45, %r40;
	setp.ne.s32 	%p219, %r1299, %r1298;
	mov.u32 	%r1300, %ctaid.x;
	add.s32 	%r404, %r1300, %r42;
	neg.s32 	%r405, %r43;
	bar.sync 	0;
	@%p219 bra 	$L__BB0_321;

	setp.eq.s32 	%p220, %r404, %r405;
	mov.u32 	%r1303, -2147483647;
	sub.s32 	%r1304, %r1303, %r403;
	selp.b32 	%r1302, %r1304, 1, %p220;
	membar.gl;
	// begin inline asm
	atom.add.release.gpu.u32 %r1301,[%rd27],%r1302;
	// end inline asm

$L__BB0_319:
	ld.volatile.u32 	%r1305, [%rd27];
	xor.b32  	%r1306, %r1305, %r1301;
	setp.gt.s32 	%p221, %r1306, -1;
	@%p221 bra 	$L__BB0_319;

	// begin inline asm
	ld.acquire.gpu.u32 %r1307,[%rd27];
	// end inline asm

$L__BB0_321:
	bar.sync 	0;
	setp.lt.s32 	%p222, %r48, 1;
	@%p222 bra 	$L__BB0_617;

	setp.lt.s32 	%p223, %r399, %r790;
	setp.ge.s32 	%p224, %r399, %r789;
	and.pred  	%p24, %p223, %p224;
	setp.lt.s32 	%p225, %r401, %r790;
	setp.ge.s32 	%p226, %r401, %r789;
	and.pred  	%p25, %p225, %p226;
	setp.lt.s32 	%p227, %r400, %r790;
	setp.ge.s32 	%p228, %r400, %r789;
	and.pred  	%p26, %p227, %p228;
	setp.lt.s32 	%p229, %r402, %r790;
	setp.ge.s32 	%p230, %r402, %r789;
	and.pred  	%p27, %p229, %p230;
	mov.u32 	%r2139, 0;
	mul.wide.s32 	%rd294, %r45, 16;
	mul.wide.s32 	%rd296, %r45, 8;
	mov.u32 	%r2023, %r1254;
	mov.u32 	%r2024, %r1254;
	mov.u32 	%r2154, %r1254;
	mov.u32 	%r2026, %r1254;
	mov.u32 	%r2027, %r1254;
	mov.u32 	%r2239, %r1254;
	mov.u32 	%r2029, %r1254;
	mov.u32 	%r2222, %r1254;
	mov.u32 	%r2031, %r1254;
	mov.u32 	%r2156, %r1254;
	mov.u32 	%r2033, %r1254;
	mov.u32 	%r2224, %r1254;
	mov.u32 	%r2035, %r1254;
	mov.u32 	%r2036, %r1254;
	mov.u32 	%r2037, %r1254;
	mov.u32 	%r2038, %r1254;
	mov.u32 	%r2039, %r1254;
	mov.u32 	%r2040, %r1254;
	mov.u32 	%r2041, %r1254;
	mov.u32 	%r2241, %r1254;
	mov.u32 	%r2043, %r1254;
	mov.u32 	%r2044, %r1254;
	mov.u32 	%r2045, %r1254;
	mov.u32 	%r2046, %r1254;
	mov.u32 	%r2047, %r1254;
	mov.u32 	%r2048, %r1254;
	mov.u32 	%r2049, %r1254;
	mov.u32 	%r2050, %r1254;
	mov.u32 	%r2051, %r1254;
	mov.u32 	%r2052, %r1254;
	mov.u32 	%r2053, %r1254;
	mov.u32 	%r2054, %r1254;
	mov.u32 	%r2055, %r1254;
	mov.u32 	%r2056, %r1254;
	mov.u32 	%r2057, %r1254;
	mov.u32 	%r2058, %r1254;
	mov.u32 	%r2059, %r1254;
	mov.u32 	%r2060, %r1254;
	mov.u32 	%r2061, %r1254;
	mov.u32 	%r2062, %r1254;
	mov.u32 	%r2063, %r1254;
	mov.u32 	%r2064, %r1254;
	mov.u32 	%r2065, %r1254;
	mov.u32 	%r2066, %r1254;
	mov.u32 	%r2246, %r1254;
	mov.u32 	%r2233, %r1254;
	mov.u32 	%r2164, %r1254;
	mov.u32 	%r2070, %r1254;
	mov.u32 	%r2247, %r1254;
	mov.u32 	%r2235, %r1254;
	mov.u32 	%r2166, %r1254;
	mov.u32 	%r2074, %r1254;
	mov.u32 	%r2194, %r1254;
	mov.u32 	%r2076, %r1254;
	mov.u32 	%r2077, %r1254;
	mov.u32 	%r2195, %r1254;
	mov.u32 	%r2079, %r1254;
	mov.u32 	%r2080, %r1254;
	mov.u32 	%r2196, %r1254;
	mov.u32 	%r2197, %r1254;
	mov.u32 	%r2083, %r1254;
	mov.u32 	%r2084, %r1254;
	mov.u32 	%r2085, %r1254;
	mov.u32 	%r2086, %r1254;
	mov.u32 	%r2198, %r1254;
	mov.u32 	%r2199, %r1254;
	mov.u32 	%r2089, %r1254;
	mov.u32 	%r2090, %r1254;
	mov.u32 	%r2091, %r1254;
	mov.u32 	%r2092, %r1254;
	mov.u32 	%r2093, %r1254;
	mov.u32 	%r2094, %r1254;
	mov.u32 	%r2095, %r1254;
	mov.u32 	%r2096, %r1254;
	mov.u32 	%r2097, %r1254;
	mov.u32 	%r2098, %r1254;
	mov.u32 	%r2203, %r1254;
	mov.u32 	%r2100, %r1254;
	mov.u32 	%r2101, %r1254;
	mov.u32 	%r2102, %r1254;
	mov.u32 	%r2103, %r1254;
	mov.u32 	%r2104, %r1254;
	mov.u32 	%r2205, %r1254;
	mov.u32 	%r2106, %r1254;
	mov.u32 	%r2107, %r1254;
	mov.u32 	%r2108, %r1254;
	mov.u32 	%r2109, %r1254;
	mov.u32 	%r2110, %r1254;
	mov.u32 	%r2206, %r1254;
	mov.u32 	%r2112, %r1254;
	mov.u32 	%r2113, %r1254;
	mov.u32 	%r2114, %r1254;
	mov.u32 	%r2115, %r1254;
	mov.u32 	%r2116, %r1254;
	mov.u32 	%r2117, %r1254;
	mov.u32 	%r2207, %r1254;
	mov.u32 	%r2119, %r1254;
	mov.u32 	%r2120, %r1254;
	mov.u32 	%r2121, %r1254;
	mov.u32 	%r2122, %r1254;
	mov.u32 	%r2123, %r1254;
	mov.u32 	%r2124, %r1254;
	mov.u32 	%r2125, %r1254;
	mov.u32 	%r2126, %r1254;
	mov.u32 	%r2127, %r1254;
	mov.u32 	%r2128, %r1254;
	mov.u32 	%r2129, %r1254;
	mov.u32 	%r2130, %r1254;
	mov.u32 	%r2131, %r1254;
	mov.u32 	%r2132, %r1254;
	mov.u32 	%r2133, %r1254;
	mov.u32 	%r2134, %r1254;
	mov.u32 	%r2135, %r1254;
	mov.u32 	%r2136, %r1254;
	mov.u32 	%r2137, %r1254;
	mov.u32 	%r2138, %r1254;
	mov.u32 	%r2140, %r1254;
	mov.u32 	%r2141, %r1254;
	mov.u32 	%r2142, %r1254;
	mov.u32 	%r2143, %r1254;
	mov.u32 	%r2144, %r1254;
	mov.u32 	%r2145, %r1254;
	mov.u32 	%r2146, %r1254;
	mov.u32 	%r2147, %r1254;
	mov.u32 	%r2148, %r1254;
	mov.u32 	%r2149, %r1254;
	mov.u32 	%r2150, %r1254;
	mov.u32 	%r2151, %r1254;
	mov.u32 	%r2155, %r2031;
	mov.u32 	%r2157, %r2035;
	mov.u32 	%r2165, %r2070;
	mov.u32 	%r2167, %r2074;

$L__BB0_323:
	mov.u32 	%r444, %r2147;
	mov.u32 	%r439, %r2146;
	mov.u32 	%r432, %r2144;
	mov.u32 	%r424, %r2142;
	mov.u32 	%r2146, %r2141;
	mov.u32 	%r2147, %r2140;
	mov.u32 	%r518, %r2122;
	mov.u32 	%r517, %r2121;
	mov.u32 	%r514, %r2207;
	mov.u32 	%r513, %r2117;
	mov.u32 	%r511, %r2115;
	mov.u32 	%r510, %r2114;
	mov.u32 	%r507, %r2206;
	mov.u32 	%r506, %r2110;
	mov.u32 	%r504, %r2108;
	mov.u32 	%r501, %r2205;
	mov.u32 	%r498, %r2102;
	mov.u32 	%r495, %r2203;
	mov.u32 	%r2121, %r2092;
	mov.u32 	%r487, %r2091;
	mov.u32 	%r484, %r2089;
	mov.u32 	%r2117, %r2199;
	mov.u32 	%r482, %r2198;
	mov.u32 	%r2114, %r2086;
	mov.u32 	%r480, %r2085;
	mov.u32 	%r477, %r2083;
	mov.u32 	%r2110, %r2197;
	mov.u32 	%r475, %r2196;
	mov.u32 	%r474, %r2080;
	mov.u32 	%r471, %r2195;
	mov.u32 	%r470, %r2077;
	mov.u32 	%r467, %r2194;
	mov.u32 	%r2141, %r2247;
	mov.u32 	%r2140, %r2246;
	mov.u32 	%r458, %r2066;
	mov.u32 	%r454, %r2062;
	mov.u32 	%r2142, %r2061;
	mov.u32 	%r452, %r2060;
	mov.u32 	%r451, %r2059;
	mov.u32 	%r447, %r2055;
	mov.u32 	%r2144, %r2054;
	mov.u32 	%r2122, %r2053;
	mov.u32 	%r443, %r2052;
	mov.u32 	%r2089, %r2051;
	mov.u32 	%r441, %r2050;
	mov.u32 	%r2115, %r2049;
	mov.u32 	%r438, %r2048;
	mov.u32 	%r2083, %r2047;
	mov.u32 	%r2108, %r2046;
	mov.u32 	%r435, %r2045;
	mov.u32 	%r2080, %r2044;
	mov.u32 	%r431, %r2043;
	mov.u32 	%r2047, %r2241;
	mov.u32 	%r2048, %r2041;
	mov.u32 	%r2102, %r2040;
	mov.u32 	%r427, %r2039;
	mov.u32 	%r2077, %r2038;
	mov.u32 	%r423, %r2037;
	mov.u32 	%r2085, %r2036;
	mov.u32 	%r2086, %r2156;
	mov.u32 	%r2051, %r2239;
	mov.u32 	%r412, %r2027;
	mov.u32 	%r411, %r2026;
	mov.u32 	%r2092, %r2154;
	mov.u32 	%r2091, %r2024;
	mov.u32 	%r2052, %r2023;
	not.b32 	%r1310, %r42;
	add.s32 	%r1311, %r773, %r1310;
	mul.lo.s32 	%r1312, %r1311, %r775;
	add.s32 	%r1313, %r2139, %r1312;
	not.b32 	%r1315, %r43;
	add.s32 	%r1316, %r774, %r1315;
	mul.lo.s32 	%r1317, %r1316, %r775;
	add.s32 	%r1318, %r2139, %r1317;
	rem.s32 	%r536, %r1313, %r68;
	rem.s32 	%r537, %r1318, %r849;
	add.s32 	%r1322, %r1312, %r1317;
	add.s32 	%r1323, %r1322, %r776;
	not.b32 	%r1324, %r40;
	add.s32 	%r1325, %r771, %r1324;
	mad.lo.s32 	%r1326, %r1311, %r771, %r1325;
	not.b32 	%r1328, %r41;
	add.s32 	%r1329, %r772, %r1328;
	mad.lo.s32 	%r1330, %r1316, %r772, %r1329;
	add.s32 	%r1331, %r1326, %r1330;
	shl.b32 	%r1332, %r1331, 1;
	add.s32 	%r1333, %r1323, %r1332;
	add.s32 	%r1334, %r2139, %r1333;
	add.s32 	%r1335, %r2139, %r1322;
	div.s32 	%r1336, %r1334, %r776;
	mul.lo.s32 	%r1337, %r1336, %r776;
	sub.s32 	%r1338, %r47, %r776;
	sub.s32 	%r538, %r1334, %r1337;
	sub.s32 	%r1339, %r1326, %r1330;
	shl.b32 	%r1340, %r1339, 1;
	add.s32 	%r1341, %r1340, %r777;
	mad.lo.s32 	%r1342, %r1336, %r47, %r1341;
	mad.lo.s32 	%r1343, %r1336, %r1338, %r1335;
	div.s32 	%r1344, %r1342, %r777;
	mul.lo.s32 	%r1345, %r1344, %r777;
	sub.s32 	%r1348, %r804, %r777;
	sub.s32 	%r539, %r1342, %r1345;
	mad.lo.s32 	%r540, %r1344, %r1348, %r1343;
	ld.param.u64 	%rd291, [%rd1+104];
	cvta.to.global.u64 	%rd28, %rd291;
	setp.ne.s32 	%p231, %r40, 0;
	@%p231 bra 	$L__BB0_328;

	setp.eq.s32 	%p232, %r41, 0;
	mad.lo.s32 	%r1351, %r536, %r774, %r43;
	mul.lo.s32 	%r1352, %r772, %r1351;
	mul.lo.s32 	%r1353, %r1352, 768;
	mad.lo.s32 	%r1354, %r41, 384, %r1353;
	add.s32 	%r1355, %r1354, -64;
	mul.wide.s32 	%rd292, %r1355, 4;
	add.s64 	%rd293, %rd28, %rd292;
	add.s64 	%rd295, %rd293, %rd294;
	ld.global.v4.u32 	{%r2046, %r2040, %r2044, %r2038}, [%rd295+256];
	ld.global.v4.u32 	{%r2167, %r2165, %r2157, %r2155}, [%rd295+1024];
	add.s64 	%rd29, %rd293, %rd296;
	mov.u32 	%r2154, %r2092;
	mov.u32 	%r2156, %r2086;
	@%p232 bra 	$L__BB0_326;

	ld.global.v2.u32 	{%r2154, %r2156}, [%rd29];

$L__BB0_326:
	setp.ne.s32 	%p233, %r41, %r1242;
	ld.global.v2.u32 	{%r2045, %r2039}, [%rd29+768];
	@%p233 bra 	$L__BB0_328;

	ld.global.v2.u32 	{%r2166, %r2164}, [%rd29+1536];

$L__BB0_328:
	setp.ne.s32 	%p234, %r41, 0;
	mov.u32 	%r2024, %r2091;
	mov.u32 	%r2036, %r2085;
	mov.u32 	%r2049, %r2115;
	mov.u32 	%r2053, %r2122;
	mov.u32 	%r2174, %r2058;
	mov.u32 	%r2059, %r451;
	mov.u32 	%r2176, %r2065;
	mov.u32 	%r2066, %r458;
	mov.u32 	%r2178, %r2094;
	mov.u32 	%r2179, %r2096;
	@%p234 bra 	$L__BB0_330;

	not.b32 	%r1929, %r40;
	add.s32 	%r1928, %r771, %r1929;
	mad.lo.s32 	%r1374, %r537, %r773, %r42;
	mul.lo.s32 	%r1378, %r1374, %r852;
	mad.lo.s32 	%r1381, %r1928, 384, %r1378;
	add.s32 	%r1382, %r1381, -64;
	mad.lo.s32 	%r1385, %r854, %r68, %r1382;
	mul.wide.s32 	%rd297, %r1385, 4;
	add.s64 	%rd298, %rd28, %rd297;
	add.s64 	%rd300, %rd298, %rd294;
	ld.global.v4.u32 	{%r2179, %r2178, %r2176, %r2174}, [%rd300+256];
	ld.global.v4.u32 	{%r2053, %r2049, %r2024, %r2036}, [%rd300+1024];
	add.s64 	%rd302, %rd298, %rd296;
	ld.global.v2.u32 	{%r2066, %r2059}, [%rd302+768];
	ld.global.v2.u32 	{%r2154, %r2156}, [%rd302+1536];

$L__BB0_330:
	ld.param.u64 	%rd304, [%rd1+112];
	cvta.to.global.u64 	%rd30, %rd304;
	add.s32 	%r1398, %r776, -1;
	setp.ge.s32 	%p235, %r538, %r1398;
	setp.lt.s32 	%p236, %r538, 2;
	or.pred  	%p237, %p236, %p235;
	setp.lt.s32 	%p238, %r539, 2;
	or.pred  	%p239, %p238, %p237;
	add.s32 	%r1399, %r777, -2;
	setp.ge.s32 	%p240, %r539, %r1399;
	or.pred  	%p241, %p240, %p239;
	mov.u32 	%r2194, %r1254;
	mov.u32 	%r2195, %r1254;
	mov.u32 	%r2196, %r1254;
	mov.u32 	%r2197, %r1254;
	mov.u32 	%r2198, %r1254;
	mov.u32 	%r2199, %r1254;
	mov.u32 	%r2200, %r1254;
	mov.u32 	%r2201, %r1254;
	mov.u32 	%r2202, %r1254;
	mov.u32 	%r2203, %r1254;
	mov.u32 	%r2204, %r1254;
	mov.u32 	%r2205, %r1254;
	mov.u32 	%r2206, %r1254;
	mov.u32 	%r2207, %r1254;
	mov.u32 	%r2208, %r1254;
	mov.u32 	%r2209, %r1254;
	mov.u32 	%r2210, %r1254;
	mov.u32 	%r2211, %r1254;
	mov.u32 	%r2212, %r1254;
	mov.u32 	%r2213, %r1254;
	mov.u32 	%r2214, %r1254;
	mov.u32 	%r2215, %r1254;
	@%p241 bra 	$L__BB0_341;

	mad.lo.s32 	%r603, %r539, %r776, %r538;
	shl.b32 	%r1400, %r603, 6;
	mul.wide.s32 	%rd305, %r1400, 4;
	add.s64 	%rd31, %rd30, %rd305;
	and.pred  	%p244, %p231, %p234;
	mov.u32 	%r2197, %r1254;
	mov.u32 	%r2199, %r1254;
	@%p244 bra 	$L__BB0_333;

	add.s64 	%rd307, %rd31, %rd296;
	ld.global.v2.u32 	{%r2199, %r2197}, [%rd307+256];

$L__BB0_333:
	mov.u32 	%r2202, %r1254;
	mov.u32 	%r2204, %r1254;
	@%p231 bra 	$L__BB0_335;

	shl.b32 	%r1404, %r776, 5;
	cvt.s64.s32 	%rd308, %r1404;
	cvt.s64.s32 	%rd309, %r45;
	add.s64 	%rd310, %rd308, %rd309;
	shl.b64 	%rd311, %rd310, 3;
	add.s64 	%rd312, %rd31, %rd311;
	ld.global.v2.u32 	{%r2204, %r2202}, [%rd312];

$L__BB0_335:
	mov.u32 	%r2209, %r1254;
	mov.u32 	%r2211, %r1254;
	@%p234 bra 	$L__BB0_337;

	shl.b32 	%r1408, %r776, 5;
	neg.s32 	%r1409, %r1408;
	cvt.s64.s32 	%rd313, %r1409;
	cvt.s64.s32 	%rd314, %r45;
	add.s64 	%rd315, %rd313, %rd314;
	shl.b64 	%rd316, %rd315, 3;
	add.s64 	%rd317, %rd31, %rd316;
	ld.global.v2.u32 	{%r2211, %r2209}, [%rd317];

$L__BB0_337:
	shl.b32 	%r1412, %r777, 6;
	shl.b32 	%r1413, %r603, 7;
	mad.lo.s32 	%r1414, %r1412, %r776, %r1413;
	mul.wide.s32 	%rd318, %r1414, 4;
	add.s64 	%rd32, %rd30, %rd318;
	mov.u32 	%r2194, %r1254;
	mov.u32 	%r2195, %r1254;
	mov.u32 	%r2200, %r1254;
	mov.u32 	%r2201, %r1254;
	mov.u32 	%r2203, %r1254;
	mov.u32 	%r2205, %r1254;
	mov.u32 	%r2212, %r1254;
	mov.u32 	%r2213, %r1254;
	@%p231 bra 	$L__BB0_339;

	shl.b32 	%r1415, %r776, 5;
	cvt.s64.s32 	%rd319, %r1415;
	cvt.s64.s32 	%rd320, %r45;
	add.s64 	%rd321, %rd319, %rd320;
	shl.b64 	%rd322, %rd321, 4;
	add.s64 	%rd323, %rd32, %rd322;
	ld.global.v4.u32 	{%r2205, %r2203, %r2195, %r2194}, [%rd323];
	shl.b32 	%r1420, %r776, 6;
	add.s32 	%r1421, %r1420, -32;
	cvt.s64.s32 	%rd324, %r1421;
	add.s64 	%rd325, %rd324, %rd320;
	shl.b64 	%rd326, %rd325, 4;
	add.s64 	%rd327, %rd32, %rd326;
	ld.global.v4.u32 	{%r2213, %r2212, %r2201, %r2200}, [%rd327];

$L__BB0_339:
	mov.u32 	%r2196, %r1254;
	mov.u32 	%r2198, %r1254;
	mov.u32 	%r2206, %r1254;
	mov.u32 	%r2207, %r1254;
	mov.u32 	%r2208, %r1254;
	mov.u32 	%r2210, %r1254;
	mov.u32 	%r2214, %r1254;
	mov.u32 	%r2215, %r1254;
	@%p234 bra 	$L__BB0_341;

	shl.b32 	%r1427, %r776, 5;
	xor.b32  	%r1428, %r1427, -32;
	cvt.s64.s32 	%rd328, %r1428;
	cvt.s64.s32 	%rd329, %r45;
	add.s64 	%rd330, %rd328, %rd329;
	shl.b64 	%rd331, %rd330, 4;
	add.s64 	%rd332, %rd32, %rd331;
	ld.global.v4.u32 	{%r2215, %r2214, %r2210, %r2208}, [%rd332];
	add.s64 	%rd334, %rd32, %rd294;
	ld.global.v4.u32 	{%r2207, %r2206, %r2198, %r2196}, [%rd334];

$L__BB0_341:
	bar.sync 	0;
	ld.param.u64 	%rd336, [%rd1+184];
	cvta.to.global.u64 	%rd33, %rd336;
	add.s32 	%r1437, %r785, -2;
	setp.lt.s32 	%p249, %r538, %r1437;
	add.s32 	%r1438, %r786, 3;
	setp.ge.s32 	%p250, %r538, %r1438;
	or.pred  	%p251, %p249, %p250;
	add.s32 	%r1439, %r787, -2;
	setp.lt.s32 	%p252, %r539, %r1439;
	or.pred  	%p253, %p251, %p252;
	add.s32 	%r1440, %r788, 2;
	setp.ge.s32 	%p254, %r539, %r1440;
	or.pred  	%p255, %p254, %p253;
	setp.lt.s32 	%p256, %r540, %r782;
	or.pred  	%p257, %p256, %p255;
	mad.lo.s32 	%r1441, %r784, %r783, %r782;
	setp.ge.s32 	%p258, %r540, %r1441;
	or.pred  	%p259, %p257, %p258;
	@%p259 bra 	$L__BB0_583;

	sub.s32 	%r662, %r540, %r782;
	rem.s32 	%r1442, %r662, %r783;
	setp.ne.s32 	%p260, %r1442, 0;
	@%p260 bra 	$L__BB0_583;

	div.s32 	%r1443, %r662, %r783;
	mov.u32 	%r1444, 8;
	sub.s32 	%r1445, %r1444, %r785;
	add.s32 	%r1446, %r1445, %r786;
	mul.lo.s32 	%r1447, %r1443, %r1446;
	mov.u32 	%r1448, 4;
	sub.s32 	%r1449, %r1448, %r785;
	add.s32 	%r663, %r1449, %r538;
	sub.s32 	%r1450, %r1448, %r787;
	add.s32 	%r664, %r1450, %r539;
	mul.lo.s32 	%r665, %r1447, 3;
	add.s32 	%r1451, %r663, %r665;
	add.s32 	%r1452, %r1451, -2;
	sub.s32 	%r1453, %r1444, %r787;
	add.s32 	%r1454, %r1453, %r788;
	mul.lo.s32 	%r666, %r1452, %r1454;
	add.s32 	%r1455, %r664, %r666;
	mul.lo.s32 	%r1456, %r1455, %r55;
	sub.s32 	%r667, %r1456, %r789;
	@%p28 bra 	$L__BB0_348;

	not.pred 	%p262, %p24;
	@%p262 bra 	$L__BB0_346;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2138;
  cvt.f32.f16 %f327, low;}

	// end inline asm
	add.s32 	%r1458, %r667, %r399;
	mul.wide.s32 	%rd337, %r1458, 4;
	add.s64 	%rd338, %rd33, %rd337;
	st.global.f32 	[%rd338], %f327;

$L__BB0_346:
	not.pred 	%p263, %p26;
	@%p263 bra 	$L__BB0_348;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2138;
  cvt.f32.f16 %f328, high;}

	// end inline asm
	add.s32 	%r1460, %r667, %r400;
	mul.wide.s32 	%rd339, %r1460, 4;
	add.s64 	%rd340, %rd33, %rd339;
	st.global.f32 	[%rd340], %f328;

$L__BB0_348:
	@%p28 bra 	$L__BB0_353;

	not.pred 	%p265, %p25;
	@%p265 bra 	$L__BB0_351;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2134;
  cvt.f32.f16 %f329, low;}

	// end inline asm
	add.s32 	%r1462, %r667, %r401;
	mul.wide.s32 	%rd341, %r1462, 4;
	add.s64 	%rd342, %rd33, %rd341;
	st.global.f32 	[%rd342], %f329;

$L__BB0_351:
	not.pred 	%p266, %p27;
	@%p266 bra 	$L__BB0_353;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2134;
  cvt.f32.f16 %f330, high;}

	// end inline asm
	add.s32 	%r1464, %r667, %r402;
	mul.wide.s32 	%rd343, %r1464, 4;
	add.s64 	%rd344, %rd33, %rd343;
	st.global.f32 	[%rd344], %f330;

$L__BB0_353:
	mov.u32 	%r1465, 8;
	sub.s32 	%r1466, %r1465, %r785;
	add.s32 	%r1467, %r1466, %r786;
	add.s32 	%r668, %r665, %r1467;
	add.s32 	%r1468, %r663, %r668;
	add.s32 	%r1469, %r1468, -2;
	sub.s32 	%r1470, %r1465, %r787;
	add.s32 	%r1471, %r1470, %r788;
	mad.lo.s32 	%r1472, %r1469, %r1471, %r664;
	mul.lo.s32 	%r1473, %r1472, %r55;
	sub.s32 	%r669, %r1473, %r789;
	@%p28 bra 	$L__BB0_358;

	not.pred 	%p268, %p24;
	@%p268 bra 	$L__BB0_356;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2137;
  cvt.f32.f16 %f331, low;}

	// end inline asm
	add.s32 	%r1475, %r669, %r399;
	mul.wide.s32 	%rd345, %r1475, 4;
	add.s64 	%rd346, %rd33, %rd345;
	st.global.f32 	[%rd346], %f331;

$L__BB0_356:
	not.pred 	%p269, %p26;
	@%p269 bra 	$L__BB0_358;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2137;
  cvt.f32.f16 %f332, high;}

	// end inline asm
	add.s32 	%r1477, %r669, %r400;
	mul.wide.s32 	%rd347, %r1477, 4;
	add.s64 	%rd348, %rd33, %rd347;
	st.global.f32 	[%rd348], %f332;

$L__BB0_358:
	@%p28 bra 	$L__BB0_363;

	not.pred 	%p271, %p25;
	@%p271 bra 	$L__BB0_361;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2133;
  cvt.f32.f16 %f333, low;}

	// end inline asm
	add.s32 	%r1479, %r669, %r401;
	mul.wide.s32 	%rd349, %r1479, 4;
	add.s64 	%rd350, %rd33, %rd349;
	st.global.f32 	[%rd350], %f333;

$L__BB0_361:
	not.pred 	%p272, %p27;
	@%p272 bra 	$L__BB0_363;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2133;
  cvt.f32.f16 %f334, high;}

	// end inline asm
	add.s32 	%r1481, %r669, %r402;
	mul.wide.s32 	%rd351, %r1481, 4;
	add.s64 	%rd352, %rd33, %rd351;
	st.global.f32 	[%rd352], %f334;

$L__BB0_363:
	add.s32 	%r670, %r664, 1;
	add.s32 	%r1482, %r670, %r666;
	mul.lo.s32 	%r1483, %r1482, %r55;
	sub.s32 	%r671, %r1483, %r789;
	@%p28 bra 	$L__BB0_368;

	not.pred 	%p274, %p24;
	@%p274 bra 	$L__BB0_366;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2130;
  cvt.f32.f16 %f335, low;}

	// end inline asm
	add.s32 	%r1485, %r671, %r399;
	mul.wide.s32 	%rd353, %r1485, 4;
	add.s64 	%rd354, %rd33, %rd353;
	st.global.f32 	[%rd354], %f335;

$L__BB0_366:
	not.pred 	%p275, %p26;
	@%p275 bra 	$L__BB0_368;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2130;
  cvt.f32.f16 %f336, high;}

	// end inline asm
	add.s32 	%r1487, %r671, %r400;
	mul.wide.s32 	%rd355, %r1487, 4;
	add.s64 	%rd356, %rd33, %rd355;
	st.global.f32 	[%rd356], %f336;

$L__BB0_368:
	@%p28 bra 	$L__BB0_373;

	not.pred 	%p277, %p25;
	@%p277 bra 	$L__BB0_371;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2128;
  cvt.f32.f16 %f337, low;}

	// end inline asm
	add.s32 	%r1489, %r671, %r401;
	mul.wide.s32 	%rd357, %r1489, 4;
	add.s64 	%rd358, %rd33, %rd357;
	st.global.f32 	[%rd358], %f337;

$L__BB0_371:
	not.pred 	%p278, %p27;
	@%p278 bra 	$L__BB0_373;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2128;
  cvt.f32.f16 %f338, high;}

	// end inline asm
	add.s32 	%r1491, %r671, %r402;
	mul.wide.s32 	%rd359, %r1491, 4;
	add.s64 	%rd360, %rd33, %rd359;
	st.global.f32 	[%rd360], %f338;

$L__BB0_373:
	add.s32 	%r672, %r663, -1;
	add.s32 	%r1492, %r672, %r665;
	mov.u32 	%r1493, 8;
	sub.s32 	%r1494, %r1493, %r787;
	add.s32 	%r1495, %r1494, %r788;
	mul.lo.s32 	%r673, %r1492, %r1495;
	add.s32 	%r1496, %r664, %r673;
	add.s32 	%r1497, %r1496, -1;
	mul.lo.s32 	%r1498, %r1497, %r55;
	sub.s32 	%r674, %r1498, %r789;
	@%p28 bra 	$L__BB0_378;

	not.pred 	%p280, %p24;
	@%p280 bra 	$L__BB0_376;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2096;
  cvt.f32.f16 %f339, low;}

	// end inline asm
	add.s32 	%r1500, %r674, %r399;
	mul.wide.s32 	%rd361, %r1500, 4;
	add.s64 	%rd362, %rd33, %rd361;
	st.global.f32 	[%rd362], %f339;

$L__BB0_376:
	not.pred 	%p281, %p26;
	@%p281 bra 	$L__BB0_378;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2096;
  cvt.f32.f16 %f340, high;}

	// end inline asm
	add.s32 	%r1502, %r674, %r400;
	mul.wide.s32 	%rd363, %r1502, 4;
	add.s64 	%rd364, %rd33, %rd363;
	st.global.f32 	[%rd364], %f340;

$L__BB0_378:
	@%p28 bra 	$L__BB0_383;

	not.pred 	%p283, %p25;
	@%p283 bra 	$L__BB0_381;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2094;
  cvt.f32.f16 %f341, low;}

	// end inline asm
	add.s32 	%r1504, %r674, %r401;
	mul.wide.s32 	%rd365, %r1504, 4;
	add.s64 	%rd366, %rd33, %rd365;
	st.global.f32 	[%rd366], %f341;

$L__BB0_381:
	not.pred 	%p284, %p27;
	@%p284 bra 	$L__BB0_383;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2094;
  cvt.f32.f16 %f342, high;}

	// end inline asm
	add.s32 	%r1506, %r674, %r402;
	mul.wide.s32 	%rd367, %r1506, 4;
	add.s64 	%rd368, %rd33, %rd367;
	st.global.f32 	[%rd368], %f342;

$L__BB0_383:
	add.s32 	%r1939, %r663, -1;
	mov.u32 	%r1507, 8;
	sub.s32 	%r1508, %r1507, %r787;
	add.s32 	%r1509, %r1508, %r788;
	add.s32 	%r1510, %r1939, %r668;
	mul.lo.s32 	%r675, %r1510, %r1509;
	add.s32 	%r1511, %r664, %r675;
	add.s32 	%r1512, %r1511, -1;
	mul.lo.s32 	%r1513, %r1512, %r55;
	sub.s32 	%r676, %r1513, %r789;
	@%p28 bra 	$L__BB0_388;

	not.pred 	%p286, %p24;
	@%p286 bra 	$L__BB0_386;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2126;
  cvt.f32.f16 %f343, low;}

	// end inline asm
	add.s32 	%r1515, %r676, %r399;
	mul.wide.s32 	%rd369, %r1515, 4;
	add.s64 	%rd370, %rd33, %rd369;
	st.global.f32 	[%rd370], %f343;

$L__BB0_386:
	not.pred 	%p287, %p26;
	@%p287 bra 	$L__BB0_388;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2126;
  cvt.f32.f16 %f344, high;}

	// end inline asm
	add.s32 	%r1517, %r676, %r400;
	mul.wide.s32 	%rd371, %r1517, 4;
	add.s64 	%rd372, %rd33, %rd371;
	st.global.f32 	[%rd372], %f344;

$L__BB0_388:
	@%p28 bra 	$L__BB0_393;

	not.pred 	%p289, %p25;
	@%p289 bra 	$L__BB0_391;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2124;
  cvt.f32.f16 %f345, low;}

	// end inline asm
	add.s32 	%r1519, %r676, %r401;
	mul.wide.s32 	%rd373, %r1519, 4;
	add.s64 	%rd374, %rd33, %rd373;
	st.global.f32 	[%rd374], %f345;

$L__BB0_391:
	not.pred 	%p290, %p27;
	@%p290 bra 	$L__BB0_393;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2124;
  cvt.f32.f16 %f346, high;}

	// end inline asm
	add.s32 	%r1521, %r676, %r402;
	mul.wide.s32 	%rd375, %r1521, 4;
	add.s64 	%rd376, %rd33, %rd375;
	st.global.f32 	[%rd376], %f346;

$L__BB0_393:
	mul.lo.s32 	%r1523, %r1496, %r55;
	sub.s32 	%r677, %r1523, %r789;
	@%p28 bra 	$L__BB0_398;

	not.pred 	%p292, %p24;
	@%p292 bra 	$L__BB0_396;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r518;
  cvt.f32.f16 %f347, low;}

	// end inline asm
	add.s32 	%r1525, %r677, %r399;
	mul.wide.s32 	%rd377, %r1525, 4;
	add.s64 	%rd378, %rd33, %rd377;
	st.global.f32 	[%rd378], %f347;

$L__BB0_396:
	not.pred 	%p293, %p26;
	@%p293 bra 	$L__BB0_398;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r518;
  cvt.f32.f16 %f348, high;}

	// end inline asm
	add.s32 	%r1527, %r677, %r400;
	mul.wide.s32 	%rd379, %r1527, 4;
	add.s64 	%rd380, %rd33, %rd379;
	st.global.f32 	[%rd380], %f348;

$L__BB0_398:
	@%p28 bra 	$L__BB0_403;

	not.pred 	%p295, %p25;
	@%p295 bra 	$L__BB0_401;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r511;
  cvt.f32.f16 %f349, low;}

	// end inline asm
	add.s32 	%r1529, %r677, %r401;
	mul.wide.s32 	%rd381, %r1529, 4;
	add.s64 	%rd382, %rd33, %rd381;
	st.global.f32 	[%rd382], %f349;

$L__BB0_401:
	not.pred 	%p296, %p27;
	@%p296 bra 	$L__BB0_403;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r511;
  cvt.f32.f16 %f350, high;}

	// end inline asm
	add.s32 	%r1531, %r677, %r402;
	mul.wide.s32 	%rd383, %r1531, 4;
	add.s64 	%rd384, %rd33, %rd383;
	st.global.f32 	[%rd384], %f350;

$L__BB0_403:
	mul.lo.s32 	%r1533, %r1511, %r55;
	sub.s32 	%r678, %r1533, %r789;
	@%p28 bra 	$L__BB0_408;

	not.pred 	%p298, %p24;
	@%p298 bra 	$L__BB0_406;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r517;
  cvt.f32.f16 %f351, low;}

	// end inline asm
	add.s32 	%r1535, %r678, %r399;
	mul.wide.s32 	%rd385, %r1535, 4;
	add.s64 	%rd386, %rd33, %rd385;
	st.global.f32 	[%rd386], %f351;

$L__BB0_406:
	not.pred 	%p299, %p26;
	@%p299 bra 	$L__BB0_408;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r517;
  cvt.f32.f16 %f352, high;}

	// end inline asm
	add.s32 	%r1537, %r678, %r400;
	mul.wide.s32 	%rd387, %r1537, 4;
	add.s64 	%rd388, %rd33, %rd387;
	st.global.f32 	[%rd388], %f352;

$L__BB0_408:
	@%p28 bra 	$L__BB0_413;

	not.pred 	%p301, %p25;
	@%p301 bra 	$L__BB0_411;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r510;
  cvt.f32.f16 %f353, low;}

	// end inline asm
	add.s32 	%r1539, %r678, %r401;
	mul.wide.s32 	%rd389, %r1539, 4;
	add.s64 	%rd390, %rd33, %rd389;
	st.global.f32 	[%rd390], %f353;

$L__BB0_411:
	not.pred 	%p302, %p27;
	@%p302 bra 	$L__BB0_413;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r510;
  cvt.f32.f16 %f354, high;}

	// end inline asm
	add.s32 	%r1541, %r678, %r402;
	mul.wide.s32 	%rd391, %r1541, 4;
	add.s64 	%rd392, %rd33, %rd391;
	st.global.f32 	[%rd392], %f354;

$L__BB0_413:
	add.s32 	%r1940, %r663, -1;
	mov.u32 	%r1542, 8;
	sub.s32 	%r1543, %r1542, %r785;
	add.s32 	%r1544, %r1543, %r786;
	add.s32 	%r679, %r668, %r1544;
	add.s32 	%r1545, %r1940, %r679;
	sub.s32 	%r1546, %r1542, %r787;
	add.s32 	%r1547, %r1546, %r788;
	mul.lo.s32 	%r680, %r1545, %r1547;
	add.s32 	%r1548, %r664, %r680;
	mul.lo.s32 	%r1549, %r1548, %r55;
	sub.s32 	%r681, %r1549, %r789;
	@%p28 bra 	$L__BB0_418;

	not.pred 	%p304, %p24;
	@%p304 bra 	$L__BB0_416;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2120;
  cvt.f32.f16 %f355, low;}

	// end inline asm
	add.s32 	%r1551, %r681, %r399;
	mul.wide.s32 	%rd393, %r1551, 4;
	add.s64 	%rd394, %rd33, %rd393;
	st.global.f32 	[%rd394], %f355;

$L__BB0_416:
	not.pred 	%p305, %p26;
	@%p305 bra 	$L__BB0_418;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2120;
  cvt.f32.f16 %f356, high;}

	// end inline asm
	add.s32 	%r1553, %r681, %r400;
	mul.wide.s32 	%rd395, %r1553, 4;
	add.s64 	%rd396, %rd33, %rd395;
	st.global.f32 	[%rd396], %f356;

$L__BB0_418:
	@%p28 bra 	$L__BB0_423;

	not.pred 	%p307, %p25;
	@%p307 bra 	$L__BB0_421;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2113;
  cvt.f32.f16 %f357, low;}

	// end inline asm
	add.s32 	%r1555, %r681, %r401;
	mul.wide.s32 	%rd397, %r1555, 4;
	add.s64 	%rd398, %rd33, %rd397;
	st.global.f32 	[%rd398], %f357;

$L__BB0_421:
	not.pred 	%p308, %p27;
	@%p308 bra 	$L__BB0_423;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2113;
  cvt.f32.f16 %f358, high;}

	// end inline asm
	add.s32 	%r1557, %r681, %r402;
	mul.wide.s32 	%rd399, %r1557, 4;
	add.s64 	%rd400, %rd33, %rd399;
	st.global.f32 	[%rd400], %f358;

$L__BB0_423:
	add.s32 	%r1913, %r664, 1;
	add.s32 	%r1558, %r1913, %r673;
	mul.lo.s32 	%r1559, %r1558, %r55;
	sub.s32 	%r682, %r1559, %r789;
	@%p28 bra 	$L__BB0_428;

	not.pred 	%p310, %p24;
	@%p310 bra 	$L__BB0_426;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r504;
  cvt.f32.f16 %f359, low;}

	// end inline asm
	add.s32 	%r1561, %r682, %r399;
	mul.wide.s32 	%rd401, %r1561, 4;
	add.s64 	%rd402, %rd33, %rd401;
	st.global.f32 	[%rd402], %f359;

$L__BB0_426:
	not.pred 	%p311, %p26;
	@%p311 bra 	$L__BB0_428;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r504;
  cvt.f32.f16 %f360, high;}

	// end inline asm
	add.s32 	%r1563, %r682, %r400;
	mul.wide.s32 	%rd403, %r1563, 4;
	add.s64 	%rd404, %rd33, %rd403;
	st.global.f32 	[%rd404], %f360;

$L__BB0_428:
	@%p28 bra 	$L__BB0_433;

	not.pred 	%p313, %p25;
	@%p313 bra 	$L__BB0_431;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r498;
  cvt.f32.f16 %f361, low;}

	// end inline asm
	add.s32 	%r1565, %r682, %r401;
	mul.wide.s32 	%rd405, %r1565, 4;
	add.s64 	%rd406, %rd33, %rd405;
	st.global.f32 	[%rd406], %f361;

$L__BB0_431:
	not.pred 	%p314, %p27;
	@%p314 bra 	$L__BB0_433;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r498;
  cvt.f32.f16 %f362, high;}

	// end inline asm
	add.s32 	%r1567, %r682, %r402;
	mul.wide.s32 	%rd407, %r1567, 4;
	add.s64 	%rd408, %rd33, %rd407;
	st.global.f32 	[%rd408], %f362;

$L__BB0_433:
	add.s32 	%r1914, %r664, 1;
	add.s32 	%r1568, %r1914, %r675;
	mul.lo.s32 	%r1569, %r1568, %r55;
	sub.s32 	%r683, %r1569, %r789;
	@%p28 bra 	$L__BB0_438;

	not.pred 	%p316, %p24;
	@%p316 bra 	$L__BB0_436;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2107;
  cvt.f32.f16 %f363, low;}

	// end inline asm
	add.s32 	%r1571, %r683, %r399;
	mul.wide.s32 	%rd409, %r1571, 4;
	add.s64 	%rd410, %rd33, %rd409;
	st.global.f32 	[%rd410], %f363;

$L__BB0_436:
	not.pred 	%p317, %p26;
	@%p317 bra 	$L__BB0_438;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2107;
  cvt.f32.f16 %f364, high;}

	// end inline asm
	add.s32 	%r1573, %r683, %r400;
	mul.wide.s32 	%rd411, %r1573, 4;
	add.s64 	%rd412, %rd33, %rd411;
	st.global.f32 	[%rd412], %f364;

$L__BB0_438:
	@%p28 bra 	$L__BB0_443;

	not.pred 	%p319, %p25;
	@%p319 bra 	$L__BB0_441;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2101;
  cvt.f32.f16 %f365, low;}

	// end inline asm
	add.s32 	%r1575, %r683, %r401;
	mul.wide.s32 	%rd413, %r1575, 4;
	add.s64 	%rd414, %rd33, %rd413;
	st.global.f32 	[%rd414], %f365;

$L__BB0_441:
	not.pred 	%p320, %p27;
	@%p320 bra 	$L__BB0_443;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2101;
  cvt.f32.f16 %f366, high;}

	// end inline asm
	add.s32 	%r1577, %r683, %r402;
	mul.wide.s32 	%rd415, %r1577, 4;
	add.s64 	%rd416, %rd33, %rd415;
	st.global.f32 	[%rd416], %f366;

$L__BB0_443:
	add.s32 	%r1915, %r664, 1;
	add.s32 	%r1578, %r1915, %r680;
	mul.lo.s32 	%r1579, %r1578, %r55;
	sub.s32 	%r684, %r1579, %r789;
	@%p28 bra 	$L__BB0_448;

	not.pred 	%p322, %p24;
	@%p322 bra 	$L__BB0_446;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2106;
  cvt.f32.f16 %f367, low;}

	// end inline asm
	add.s32 	%r1581, %r684, %r399;
	mul.wide.s32 	%rd417, %r1581, 4;
	add.s64 	%rd418, %rd33, %rd417;
	st.global.f32 	[%rd418], %f367;

$L__BB0_446:
	not.pred 	%p323, %p26;
	@%p323 bra 	$L__BB0_448;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2106;
  cvt.f32.f16 %f368, high;}

	// end inline asm
	add.s32 	%r1583, %r684, %r400;
	mul.wide.s32 	%rd419, %r1583, 4;
	add.s64 	%rd420, %rd33, %rd419;
	st.global.f32 	[%rd420], %f368;

$L__BB0_448:
	@%p28 bra 	$L__BB0_453;

	not.pred 	%p325, %p25;
	@%p325 bra 	$L__BB0_451;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2100;
  cvt.f32.f16 %f369, low;}

	// end inline asm
	add.s32 	%r1585, %r684, %r401;
	mul.wide.s32 	%rd421, %r1585, 4;
	add.s64 	%rd422, %rd33, %rd421;
	st.global.f32 	[%rd422], %f369;

$L__BB0_451:
	not.pred 	%p326, %p27;
	@%p326 bra 	$L__BB0_453;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2100;
  cvt.f32.f16 %f370, high;}

	// end inline asm
	add.s32 	%r1587, %r684, %r402;
	mul.wide.s32 	%rd423, %r1587, 4;
	add.s64 	%rd424, %rd33, %rd423;
	st.global.f32 	[%rd424], %f370;

$L__BB0_453:
	add.s32 	%r685, %r664, 2;
	add.s32 	%r1588, %r685, %r673;
	mul.lo.s32 	%r1589, %r1588, %r55;
	sub.s32 	%r686, %r1589, %r789;
	@%p28 bra 	$L__BB0_458;

	not.pred 	%p328, %p24;
	@%p328 bra 	$L__BB0_456;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2074;
  cvt.f32.f16 %f371, low;}

	// end inline asm
	add.s32 	%r1591, %r686, %r399;
	mul.wide.s32 	%rd425, %r1591, 4;
	add.s64 	%rd426, %rd33, %rd425;
	st.global.f32 	[%rd426], %f371;

$L__BB0_456:
	not.pred 	%p329, %p26;
	@%p329 bra 	$L__BB0_458;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2074;
  cvt.f32.f16 %f372, high;}

	// end inline asm
	add.s32 	%r1593, %r686, %r400;
	mul.wide.s32 	%rd427, %r1593, 4;
	add.s64 	%rd428, %rd33, %rd427;
	st.global.f32 	[%rd428], %f372;

$L__BB0_458:
	@%p28 bra 	$L__BB0_463;

	not.pred 	%p331, %p25;
	@%p331 bra 	$L__BB0_461;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2070;
  cvt.f32.f16 %f373, low;}

	// end inline asm
	add.s32 	%r1595, %r686, %r401;
	mul.wide.s32 	%rd429, %r1595, 4;
	add.s64 	%rd430, %rd33, %rd429;
	st.global.f32 	[%rd430], %f373;

$L__BB0_461:
	not.pred 	%p332, %p27;
	@%p332 bra 	$L__BB0_463;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2070;
  cvt.f32.f16 %f374, high;}

	// end inline asm
	add.s32 	%r1597, %r686, %r402;
	mul.wide.s32 	%rd431, %r1597, 4;
	add.s64 	%rd432, %rd33, %rd431;
	st.global.f32 	[%rd432], %f374;

$L__BB0_463:
	mov.u32 	%r1598, 8;
	sub.s32 	%r1599, %r1598, %r787;
	add.s32 	%r1600, %r1599, %r788;
	mul.lo.s32 	%r687, %r1468, %r1600;
	add.s32 	%r1602, %r664, %r687;
	add.s32 	%r1603, %r1602, -1;
	mul.lo.s32 	%r1604, %r1603, %r55;
	sub.s32 	%r688, %r1604, %r789;
	@%p28 bra 	$L__BB0_468;

	not.pred 	%p334, %p24;
	@%p334 bra 	$L__BB0_466;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r458;
  cvt.f32.f16 %f375, low;}

	// end inline asm
	add.s32 	%r1606, %r688, %r399;
	mul.wide.s32 	%rd433, %r1606, 4;
	add.s64 	%rd434, %rd33, %rd433;
	st.global.f32 	[%rd434], %f375;

$L__BB0_466:
	not.pred 	%p335, %p26;
	@%p335 bra 	$L__BB0_468;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r458;
  cvt.f32.f16 %f376, high;}

	// end inline asm
	add.s32 	%r1608, %r688, %r400;
	mul.wide.s32 	%rd435, %r1608, 4;
	add.s64 	%rd436, %rd33, %rd435;
	st.global.f32 	[%rd436], %f376;

$L__BB0_468:
	@%p28 bra 	$L__BB0_473;

	not.pred 	%p337, %p25;
	@%p337 bra 	$L__BB0_471;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r451;
  cvt.f32.f16 %f377, low;}

	// end inline asm
	add.s32 	%r1610, %r688, %r401;
	mul.wide.s32 	%rd437, %r1610, 4;
	add.s64 	%rd438, %rd33, %rd437;
	st.global.f32 	[%rd438], %f377;

$L__BB0_471:
	not.pred 	%p338, %p27;
	@%p338 bra 	$L__BB0_473;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r451;
  cvt.f32.f16 %f378, high;}

	// end inline asm
	add.s32 	%r1612, %r688, %r402;
	mul.wide.s32 	%rd439, %r1612, 4;
	add.s64 	%rd440, %rd33, %rd439;
	st.global.f32 	[%rd440], %f378;

$L__BB0_473:
	mov.u32 	%r1919, 8;
	sub.s32 	%r1918, %r1919, %r785;
	add.s32 	%r1917, %r1918, %r786;
	add.s32 	%r1916, %r668, %r1917;
	mov.u32 	%r1613, 8;
	sub.s32 	%r1614, %r1613, %r787;
	add.s32 	%r1615, %r1614, %r788;
	add.s32 	%r1616, %r663, %r1916;
	mul.lo.s32 	%r689, %r1616, %r1615;
	add.s32 	%r1617, %r664, %r689;
	add.s32 	%r1618, %r1617, -1;
	mul.lo.s32 	%r1619, %r1618, %r55;
	sub.s32 	%r690, %r1619, %r789;
	@%p28 bra 	$L__BB0_478;

	not.pred 	%p340, %p24;
	@%p340 bra 	$L__BB0_476;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2065;
  cvt.f32.f16 %f379, low;}

	// end inline asm
	add.s32 	%r1621, %r690, %r399;
	mul.wide.s32 	%rd441, %r1621, 4;
	add.s64 	%rd442, %rd33, %rd441;
	st.global.f32 	[%rd442], %f379;

$L__BB0_476:
	not.pred 	%p341, %p26;
	@%p341 bra 	$L__BB0_478;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2065;
  cvt.f32.f16 %f380, high;}

	// end inline asm
	add.s32 	%r1623, %r690, %r400;
	mul.wide.s32 	%rd443, %r1623, 4;
	add.s64 	%rd444, %rd33, %rd443;
	st.global.f32 	[%rd444], %f380;

$L__BB0_478:
	@%p28 bra 	$L__BB0_483;

	not.pred 	%p343, %p25;
	@%p343 bra 	$L__BB0_481;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2058;
  cvt.f32.f16 %f381, low;}

	// end inline asm
	add.s32 	%r1625, %r690, %r401;
	mul.wide.s32 	%rd445, %r1625, 4;
	add.s64 	%rd446, %rd33, %rd445;
	st.global.f32 	[%rd446], %f381;

$L__BB0_481:
	not.pred 	%p344, %p27;
	@%p344 bra 	$L__BB0_483;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2058;
  cvt.f32.f16 %f382, high;}

	// end inline asm
	add.s32 	%r1627, %r690, %r402;
	mul.wide.s32 	%rd447, %r1627, 4;
	add.s64 	%rd448, %rd33, %rd447;
	st.global.f32 	[%rd448], %f382;

$L__BB0_483:
	mov.u32 	%r1628, 8;
	sub.s32 	%r1629, %r1628, %r787;
	add.s32 	%r1630, %r1629, %r788;
	mul.lo.s32 	%r691, %r1451, %r1630;
	add.s32 	%r1632, %r664, %r691;
	mul.lo.s32 	%r1633, %r1632, %r55;
	sub.s32 	%r692, %r1633, %r789;
	@%p28 bra 	$L__BB0_488;

	not.pred 	%p346, %p24;
	@%p346 bra 	$L__BB0_486;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2122;
  cvt.f32.f16 %f383, low;}

	// end inline asm
	add.s32 	%r1635, %r692, %r399;
	mul.wide.s32 	%rd449, %r1635, 4;
	add.s64 	%rd450, %rd33, %rd449;
	st.global.f32 	[%rd450], %f383;

$L__BB0_486:
	not.pred 	%p347, %p26;
	@%p347 bra 	$L__BB0_488;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2122;
  cvt.f32.f16 %f384, high;}

	// end inline asm
	add.s32 	%r1637, %r692, %r400;
	mul.wide.s32 	%rd451, %r1637, 4;
	add.s64 	%rd452, %rd33, %rd451;
	st.global.f32 	[%rd452], %f384;

$L__BB0_488:
	@%p28 bra 	$L__BB0_493;

	not.pred 	%p349, %p25;
	@%p349 bra 	$L__BB0_491;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2115;
  cvt.f32.f16 %f385, low;}

	// end inline asm
	add.s32 	%r1639, %r692, %r401;
	mul.wide.s32 	%rd453, %r1639, 4;
	add.s64 	%rd454, %rd33, %rd453;
	st.global.f32 	[%rd454], %f385;

$L__BB0_491:
	not.pred 	%p350, %p27;
	@%p350 bra 	$L__BB0_493;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2115;
  cvt.f32.f16 %f386, high;}

	// end inline asm
	add.s32 	%r1641, %r692, %r402;
	mul.wide.s32 	%rd455, %r1641, 4;
	add.s64 	%rd456, %rd33, %rd455;
	st.global.f32 	[%rd456], %f386;

$L__BB0_493:
	mul.lo.s32 	%r1643, %r1602, %r55;
	sub.s32 	%r693, %r1643, %r789;
	@%p28 bra 	$L__BB0_498;

	not.pred 	%p352, %p24;
	@%p352 bra 	$L__BB0_496;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2121;
  cvt.f32.f16 %f387, low;}

	// end inline asm
	add.s32 	%r1645, %r693, %r399;
	mul.wide.s32 	%rd457, %r1645, 4;
	add.s64 	%rd458, %rd33, %rd457;
	st.global.f32 	[%rd458], %f387;

$L__BB0_496:
	not.pred 	%p353, %p26;
	@%p353 bra 	$L__BB0_498;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2121;
  cvt.f32.f16 %f388, high;}

	// end inline asm
	add.s32 	%r1647, %r693, %r400;
	mul.wide.s32 	%rd459, %r1647, 4;
	add.s64 	%rd460, %rd33, %rd459;
	st.global.f32 	[%rd460], %f388;

$L__BB0_498:
	@%p28 bra 	$L__BB0_503;

	not.pred 	%p355, %p25;
	@%p355 bra 	$L__BB0_501;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2114;
  cvt.f32.f16 %f389, low;}

	// end inline asm
	add.s32 	%r1649, %r693, %r401;
	mul.wide.s32 	%rd461, %r1649, 4;
	add.s64 	%rd462, %rd33, %rd461;
	st.global.f32 	[%rd462], %f389;

$L__BB0_501:
	not.pred 	%p356, %p27;
	@%p356 bra 	$L__BB0_503;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2114;
  cvt.f32.f16 %f390, high;}

	// end inline asm
	add.s32 	%r1651, %r693, %r402;
	mul.wide.s32 	%rd463, %r1651, 4;
	add.s64 	%rd464, %rd33, %rd463;
	st.global.f32 	[%rd464], %f390;

$L__BB0_503:
	mul.lo.s32 	%r1653, %r1617, %r55;
	sub.s32 	%r694, %r1653, %r789;
	@%p28 bra 	$L__BB0_508;

	not.pred 	%p358, %p24;
	@%p358 bra 	$L__BB0_506;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r487;
  cvt.f32.f16 %f391, low;}

	// end inline asm
	add.s32 	%r1655, %r694, %r399;
	mul.wide.s32 	%rd465, %r1655, 4;
	add.s64 	%rd466, %rd33, %rd465;
	st.global.f32 	[%rd466], %f391;

$L__BB0_506:
	not.pred 	%p359, %p26;
	@%p359 bra 	$L__BB0_508;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r487;
  cvt.f32.f16 %f392, high;}

	// end inline asm
	add.s32 	%r1657, %r694, %r400;
	mul.wide.s32 	%rd467, %r1657, 4;
	add.s64 	%rd468, %rd33, %rd467;
	st.global.f32 	[%rd468], %f392;

$L__BB0_508:
	@%p28 bra 	$L__BB0_513;

	not.pred 	%p361, %p25;
	@%p361 bra 	$L__BB0_511;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r480;
  cvt.f32.f16 %f393, low;}

	// end inline asm
	add.s32 	%r1659, %r694, %r401;
	mul.wide.s32 	%rd469, %r1659, 4;
	add.s64 	%rd470, %rd33, %rd469;
	st.global.f32 	[%rd470], %f393;

$L__BB0_511:
	not.pred 	%p362, %p27;
	@%p362 bra 	$L__BB0_513;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r480;
  cvt.f32.f16 %f394, high;}

	// end inline asm
	add.s32 	%r1661, %r694, %r402;
	mul.wide.s32 	%rd471, %r1661, 4;
	add.s64 	%rd472, %rd33, %rd471;
	st.global.f32 	[%rd472], %f394;

$L__BB0_513:
	add.s32 	%r1920, %r664, 1;
	add.s32 	%r1662, %r1920, %r691;
	mul.lo.s32 	%r1663, %r1662, %r55;
	sub.s32 	%r695, %r1663, %r789;
	@%p28 bra 	$L__BB0_518;

	not.pred 	%p364, %p24;
	@%p364 bra 	$L__BB0_516;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2108;
  cvt.f32.f16 %f395, low;}

	// end inline asm
	add.s32 	%r1665, %r695, %r399;
	mul.wide.s32 	%rd473, %r1665, 4;
	add.s64 	%rd474, %rd33, %rd473;
	st.global.f32 	[%rd474], %f395;

$L__BB0_516:
	not.pred 	%p365, %p26;
	@%p365 bra 	$L__BB0_518;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2108;
  cvt.f32.f16 %f396, high;}

	// end inline asm
	add.s32 	%r1667, %r695, %r400;
	mul.wide.s32 	%rd475, %r1667, 4;
	add.s64 	%rd476, %rd33, %rd475;
	st.global.f32 	[%rd476], %f396;

$L__BB0_518:
	@%p28 bra 	$L__BB0_523;

	not.pred 	%p367, %p25;
	@%p367 bra 	$L__BB0_521;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2102;
  cvt.f32.f16 %f397, low;}

	// end inline asm
	add.s32 	%r1669, %r695, %r401;
	mul.wide.s32 	%rd477, %r1669, 4;
	add.s64 	%rd478, %rd33, %rd477;
	st.global.f32 	[%rd478], %f397;

$L__BB0_521:
	not.pred 	%p368, %p27;
	@%p368 bra 	$L__BB0_523;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2102;
  cvt.f32.f16 %f398, high;}

	// end inline asm
	add.s32 	%r1671, %r695, %r402;
	mul.wide.s32 	%rd479, %r1671, 4;
	add.s64 	%rd480, %rd33, %rd479;
	st.global.f32 	[%rd480], %f398;

$L__BB0_523:
	add.s32 	%r1921, %r664, 1;
	add.s32 	%r1672, %r1921, %r687;
	mul.lo.s32 	%r1673, %r1672, %r55;
	sub.s32 	%r696, %r1673, %r789;
	@%p28 bra 	$L__BB0_528;

	not.pred 	%p370, %p24;
	@%p370 bra 	$L__BB0_526;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r435;
  cvt.f32.f16 %f399, low;}

	// end inline asm
	add.s32 	%r1675, %r696, %r399;
	mul.wide.s32 	%rd481, %r1675, 4;
	add.s64 	%rd482, %rd33, %rd481;
	st.global.f32 	[%rd482], %f399;

$L__BB0_526:
	not.pred 	%p371, %p26;
	@%p371 bra 	$L__BB0_528;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r435;
  cvt.f32.f16 %f400, high;}

	// end inline asm
	add.s32 	%r1677, %r696, %r400;
	mul.wide.s32 	%rd483, %r1677, 4;
	add.s64 	%rd484, %rd33, %rd483;
	st.global.f32 	[%rd484], %f400;

$L__BB0_528:
	@%p28 bra 	$L__BB0_533;

	not.pred 	%p373, %p25;
	@%p373 bra 	$L__BB0_531;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r427;
  cvt.f32.f16 %f401, low;}

	// end inline asm
	add.s32 	%r1679, %r696, %r401;
	mul.wide.s32 	%rd485, %r1679, 4;
	add.s64 	%rd486, %rd33, %rd485;
	st.global.f32 	[%rd486], %f401;

$L__BB0_531:
	not.pred 	%p374, %p27;
	@%p374 bra 	$L__BB0_533;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r427;
  cvt.f32.f16 %f402, high;}

	// end inline asm
	add.s32 	%r1681, %r696, %r402;
	mul.wide.s32 	%rd487, %r1681, 4;
	add.s64 	%rd488, %rd33, %rd487;
	st.global.f32 	[%rd488], %f402;

$L__BB0_533:
	add.s32 	%r1922, %r664, 1;
	add.s32 	%r1682, %r1922, %r689;
	mul.lo.s32 	%r1683, %r1682, %r55;
	sub.s32 	%r697, %r1683, %r789;
	@%p28 bra 	$L__BB0_538;

	not.pred 	%p376, %p24;
	@%p376 bra 	$L__BB0_536;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r474;
  cvt.f32.f16 %f403, low;}

	// end inline asm
	add.s32 	%r1685, %r697, %r399;
	mul.wide.s32 	%rd489, %r1685, 4;
	add.s64 	%rd490, %rd33, %rd489;
	st.global.f32 	[%rd490], %f403;

$L__BB0_536:
	not.pred 	%p377, %p26;
	@%p377 bra 	$L__BB0_538;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r474;
  cvt.f32.f16 %f404, high;}

	// end inline asm
	add.s32 	%r1687, %r697, %r400;
	mul.wide.s32 	%rd491, %r1687, 4;
	add.s64 	%rd492, %rd33, %rd491;
	st.global.f32 	[%rd492], %f404;

$L__BB0_538:
	@%p28 bra 	$L__BB0_543;

	not.pred 	%p379, %p25;
	@%p379 bra 	$L__BB0_541;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r470;
  cvt.f32.f16 %f405, low;}

	// end inline asm
	add.s32 	%r1689, %r697, %r401;
	mul.wide.s32 	%rd493, %r1689, 4;
	add.s64 	%rd494, %rd33, %rd493;
	st.global.f32 	[%rd494], %f405;

$L__BB0_541:
	not.pred 	%p380, %p27;
	@%p380 bra 	$L__BB0_543;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r470;
  cvt.f32.f16 %f406, high;}

	// end inline asm
	add.s32 	%r1691, %r697, %r402;
	mul.wide.s32 	%rd495, %r1691, 4;
	add.s64 	%rd496, %rd33, %rd495;
	st.global.f32 	[%rd496], %f406;

$L__BB0_543:
	add.s32 	%r1941, %r664, 2;
	add.s32 	%r1692, %r1941, %r689;
	mul.lo.s32 	%r1693, %r1692, %r55;
	sub.s32 	%r698, %r1693, %r789;
	@%p28 bra 	$L__BB0_548;

	not.pred 	%p382, %p24;
	@%p382 bra 	$L__BB0_546;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2035;
  cvt.f32.f16 %f407, low;}

	// end inline asm
	add.s32 	%r1695, %r698, %r399;
	mul.wide.s32 	%rd497, %r1695, 4;
	add.s64 	%rd498, %rd33, %rd497;
	st.global.f32 	[%rd498], %f407;

$L__BB0_546:
	not.pred 	%p383, %p26;
	@%p383 bra 	$L__BB0_548;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2035;
  cvt.f32.f16 %f408, high;}

	// end inline asm
	add.s32 	%r1697, %r698, %r400;
	mul.wide.s32 	%rd499, %r1697, 4;
	add.s64 	%rd500, %rd33, %rd499;
	st.global.f32 	[%rd500], %f408;

$L__BB0_548:
	@%p28 bra 	$L__BB0_553;

	not.pred 	%p385, %p25;
	@%p385 bra 	$L__BB0_551;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2031;
  cvt.f32.f16 %f409, low;}

	// end inline asm
	add.s32 	%r1699, %r698, %r401;
	mul.wide.s32 	%rd501, %r1699, 4;
	add.s64 	%rd502, %rd33, %rd501;
	st.global.f32 	[%rd502], %f409;

$L__BB0_551:
	not.pred 	%p386, %p27;
	@%p386 bra 	$L__BB0_553;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2031;
  cvt.f32.f16 %f410, high;}

	// end inline asm
	add.s32 	%r1701, %r698, %r402;
	mul.wide.s32 	%rd503, %r1701, 4;
	add.s64 	%rd504, %rd33, %rd503;
	st.global.f32 	[%rd504], %f410;

$L__BB0_553:
	add.s32 	%r699, %r663, 1;
	add.s32 	%r1702, %r699, %r668;
	mov.u32 	%r1703, 8;
	sub.s32 	%r1704, %r1703, %r787;
	add.s32 	%r1705, %r1704, %r788;
	mad.lo.s32 	%r1706, %r1702, %r1705, %r664;
	mul.lo.s32 	%r1707, %r1706, %r55;
	sub.s32 	%r700, %r1707, %r789;
	@%p28 bra 	$L__BB0_558;

	not.pred 	%p388, %p24;
	@%p388 bra 	$L__BB0_556;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2092;
  cvt.f32.f16 %f411, low;}

	// end inline asm
	add.s32 	%r1709, %r700, %r399;
	mul.wide.s32 	%rd505, %r1709, 4;
	add.s64 	%rd506, %rd33, %rd505;
	st.global.f32 	[%rd506], %f411;

$L__BB0_556:
	not.pred 	%p389, %p26;
	@%p389 bra 	$L__BB0_558;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2092;
  cvt.f32.f16 %f412, high;}

	// end inline asm
	add.s32 	%r1711, %r700, %r400;
	mul.wide.s32 	%rd507, %r1711, 4;
	add.s64 	%rd508, %rd33, %rd507;
	st.global.f32 	[%rd508], %f412;

$L__BB0_558:
	@%p28 bra 	$L__BB0_563;

	not.pred 	%p391, %p25;
	@%p391 bra 	$L__BB0_561;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2086;
  cvt.f32.f16 %f413, low;}

	// end inline asm
	add.s32 	%r1713, %r700, %r401;
	mul.wide.s32 	%rd509, %r1713, 4;
	add.s64 	%rd510, %rd33, %rd509;
	st.global.f32 	[%rd510], %f413;

$L__BB0_561:
	not.pred 	%p392, %p27;
	@%p392 bra 	$L__BB0_563;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2086;
  cvt.f32.f16 %f414, high;}

	// end inline asm
	add.s32 	%r1715, %r700, %r402;
	mul.wide.s32 	%rd511, %r1715, 4;
	add.s64 	%rd512, %rd33, %rd511;
	st.global.f32 	[%rd512], %f414;

$L__BB0_563:
	mov.u32 	%r1926, 8;
	sub.s32 	%r1925, %r1926, %r785;
	add.s32 	%r1924, %r1925, %r786;
	add.s32 	%r1923, %r668, %r1924;
	mov.u32 	%r1716, 8;
	sub.s32 	%r1717, %r1716, %r787;
	add.s32 	%r1718, %r1717, %r788;
	add.s32 	%r1719, %r699, %r1923;
	mul.lo.s32 	%r701, %r1719, %r1718;
	add.s32 	%r1720, %r664, %r701;
	mul.lo.s32 	%r1721, %r1720, %r55;
	sub.s32 	%r702, %r1721, %r789;
	@%p28 bra 	$L__BB0_568;

	not.pred 	%p394, %p24;
	@%p394 bra 	$L__BB0_566;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2091;
  cvt.f32.f16 %f415, low;}

	// end inline asm
	add.s32 	%r1723, %r702, %r399;
	mul.wide.s32 	%rd513, %r1723, 4;
	add.s64 	%rd514, %rd33, %rd513;
	st.global.f32 	[%rd514], %f415;

$L__BB0_566:
	not.pred 	%p395, %p26;
	@%p395 bra 	$L__BB0_568;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2091;
  cvt.f32.f16 %f416, high;}

	// end inline asm
	add.s32 	%r1725, %r702, %r400;
	mul.wide.s32 	%rd515, %r1725, 4;
	add.s64 	%rd516, %rd33, %rd515;
	st.global.f32 	[%rd516], %f416;

$L__BB0_568:
	@%p28 bra 	$L__BB0_573;

	not.pred 	%p397, %p25;
	@%p397 bra 	$L__BB0_571;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2085;
  cvt.f32.f16 %f417, low;}

	// end inline asm
	add.s32 	%r1727, %r702, %r401;
	mul.wide.s32 	%rd517, %r1727, 4;
	add.s64 	%rd518, %rd33, %rd517;
	st.global.f32 	[%rd518], %f417;

$L__BB0_571:
	not.pred 	%p398, %p27;
	@%p398 bra 	$L__BB0_573;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2085;
  cvt.f32.f16 %f418, high;}

	// end inline asm
	add.s32 	%r1729, %r702, %r402;
	mul.wide.s32 	%rd519, %r1729, 4;
	add.s64 	%rd520, %rd33, %rd519;
	st.global.f32 	[%rd520], %f418;

$L__BB0_573:
	add.s32 	%r1927, %r664, 1;
	add.s32 	%r1730, %r1927, %r701;
	mul.lo.s32 	%r1731, %r1730, %r55;
	sub.s32 	%r703, %r1731, %r789;
	@%p28 bra 	$L__BB0_578;

	not.pred 	%p400, %p24;
	@%p400 bra 	$L__BB0_576;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2080;
  cvt.f32.f16 %f419, low;}

	// end inline asm
	add.s32 	%r1733, %r703, %r399;
	mul.wide.s32 	%rd521, %r1733, 4;
	add.s64 	%rd522, %rd33, %rd521;
	st.global.f32 	[%rd522], %f419;

$L__BB0_576:
	not.pred 	%p401, %p26;
	@%p401 bra 	$L__BB0_578;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2080;
  cvt.f32.f16 %f420, high;}

	// end inline asm
	add.s32 	%r1735, %r703, %r400;
	mul.wide.s32 	%rd523, %r1735, 4;
	add.s64 	%rd524, %rd33, %rd523;
	st.global.f32 	[%rd524], %f420;

$L__BB0_578:
	@%p28 bra 	$L__BB0_583;

	not.pred 	%p403, %p25;
	@%p403 bra 	$L__BB0_581;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2077;
  cvt.f32.f16 %f421, low;}

	// end inline asm
	add.s32 	%r1737, %r703, %r401;
	mul.wide.s32 	%rd525, %r1737, 4;
	add.s64 	%rd526, %rd33, %rd525;
	st.global.f32 	[%rd526], %f421;

$L__BB0_581:
	not.pred 	%p404, %p27;
	@%p404 bra 	$L__BB0_583;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2077;
  cvt.f32.f16 %f422, high;}

	// end inline asm
	add.s32 	%r1739, %r703, %r402;
	mul.wide.s32 	%rd527, %r1739, 4;
	add.s64 	%rd528, %rd33, %rd527;
	st.global.f32 	[%rd528], %f422;

$L__BB0_583:
	setp.ne.s32 	%p405, %r40, %r1237;
	@%p405 bra 	$L__BB0_585;

	ld.param.u64 	%rd565, [%rd1+104];
	cvta.to.global.u64 	%rd564, %rd565;
	mad.lo.s32 	%r1741, %r536, %r774, %r43;
	mul.lo.s32 	%r1742, %r772, %r1741;
	mul.lo.s32 	%r1743, %r1742, 768;
	mad.lo.s32 	%r1745, %r41, 384, %r1743;
	add.s32 	%r1746, %r1745, -64;
	mul.wide.s32 	%rd530, %r1746, 4;
	add.s64 	%rd531, %rd564, %rd530;
	add.s64 	%rd533, %rd531, %rd294;
	st.global.v4.u32 	[%rd533+256], {%r2096, %r2094, %r2065, %r2058};
	st.global.v4.u32 	[%rd533+1024], {%r2138, %r2134, %r2120, %r2113};
	add.s64 	%rd535, %rd531, %rd296;
	st.global.v2.u32 	[%rd535+768], {%r2126, %r2124};
	st.global.v2.u32 	[%rd535+1536], {%r2137, %r2133};

$L__BB0_585:
	setp.ne.s32 	%p406, %r41, %r1242;
	@%p406 bra 	$L__BB0_590;

	ld.param.u64 	%rd563, [%rd1+104];
	cvta.to.global.u64 	%rd562, %rd563;
	not.b32 	%r1938, %r40;
	add.s32 	%r1937, %r771, %r1938;
	setp.eq.s32 	%p407, %r40, %r1237;
	mad.lo.s32 	%r1749, %r537, %r773, %r42;
	mul.lo.s32 	%r1753, %r1749, %r852;
	mad.lo.s32 	%r1756, %r1937, 384, %r1753;
	add.s32 	%r1757, %r1756, -64;
	mad.lo.s32 	%r1760, %r854, %r68, %r1757;
	mul.wide.s32 	%rd536, %r1760, 4;
	add.s64 	%rd537, %rd562, %rd536;
	add.s64 	%rd539, %rd537, %rd294;
	st.global.v4.u32 	[%rd539+256], {%r2130, %r2128, %r2106, %r2100};
	st.global.v4.u32 	[%rd539+1024], {%r2074, %r2070, %r2035, %r2031};
	add.s64 	%rd36, %rd537, %rd296;
	@%p407 bra 	$L__BB0_588;

	st.global.v2.u32 	[%rd36], {%r2137, %r2133};

$L__BB0_588:
	st.global.v2.u32 	[%rd36+768], {%r2107, %r2101};
	@%p231 bra 	$L__BB0_590;

	st.global.v2.u32 	[%rd36+1536], {%r2166, %r2164};

$L__BB0_590:
	setp.ge.s32 	%p409, %r40, %r1237;
	@%p409 bra 	$L__BB0_592;

	add.s32 	%r1936, %r69, %r69;
	mul.lo.s32 	%r1761, %r772, 320;
	mul.lo.s32 	%r1763, %r41, 320;
	mad.lo.s32 	%r1764, %r1761, %r40, %r1763;
	add.s32 	%r1767, %r1936, -64;
	mad.lo.s32 	%r1772, %r1767, %r1242, %r1239;
	add.s32 	%r1773, %r1764, %r1772;
	shl.b32 	%r1774, %r1773, 2;
	mov.u32 	%r1775, _ZN6kernel5shmemE;
	add.s32 	%r1776, %r1775, %r1774;
	shl.b32 	%r1777, %r45, 4;
	add.s32 	%r1778, %r1776, %r1777;
	st.shared.v4.u32 	[%r1778], {%r2215, %r2214, %r2210, %r2208};
	shl.b32 	%r1779, %r45, 3;
	add.s32 	%r1780, %r1776, %r1779;
	st.shared.v2.u32 	[%r1780+512], {%r2125, %r2123};
	st.shared.v4.u32 	[%r1778+768], {%r2136, %r2132, %r2116, %r2109};

$L__BB0_592:
	setp.ge.s32 	%p410, %r41, %r1242;
	@%p410 bra 	$L__BB0_596;

	not.b32 	%r1935, %r40;
	add.s32 	%r1934, %r771, %r1935;
	mad.lo.s32 	%r1786, %r1934, 384, %r1245;
	mad.lo.s32 	%r1790, %r1240, %r41, %r1786;
	add.s32 	%r1796, %r1790, %r1243;
	shl.b32 	%r1797, %r1796, 2;
	mov.u32 	%r1798, _ZN6kernel5shmemE;
	add.s32 	%r1799, %r1798, %r1797;
	shl.b32 	%r1800, %r45, 3;
	add.s32 	%r1801, %r1799, %r1800;
	@%p409 bra 	$L__BB0_595;

	add.s32 	%r1911, %r1801, -256;
	st.shared.v2.u32 	[%r1911], {%r2135, %r2131};

$L__BB0_595:
	shl.b32 	%r1821, %r45, 4;
	add.s32 	%r1822, %r1799, %r1821;
	st.shared.v4.u32 	[%r1822], {%r2129, %r2127, %r2103, %r2097};
	add.s32 	%r1912, %r1801, -256;
	st.shared.v2.u32 	[%r1912+768], {%r2104, %r2098};
	st.shared.v4.u32 	[%r1822+768], {%r2213, %r2212, %r2201, %r2200};

$L__BB0_596:
	bar.sync 	0;
	ld.param.u64 	%rd541, [%rd1+104];
	cvta.to.global.u64 	%rd37, %rd541;
	mov.u32 	%r2239, %r2051;
	mov.u32 	%r2221, %r2029;
	mov.u32 	%r2223, %r2033;
	mov.u32 	%r2037, %r423;
	mov.u32 	%r2241, %r2047;
	mov.u32 	%r2043, %r431;
	mov.u32 	%r2050, %r441;
	mov.u32 	%r2054, %r2144;
	mov.u32 	%r2060, %r452;
	mov.u32 	%r2061, %r2142;
	mov.u32 	%r2246, %r2140;
	mov.u32 	%r2247, %r2141;
	@%p231 bra 	$L__BB0_600;

	setp.eq.s32 	%p413, %r41, 0;
	mad.lo.s32 	%r1825, %r536, %r774, %r43;
	mad.lo.s32 	%r1826, %r1825, 768, 384;
	mul.lo.s32 	%r1827, %r1826, %r772;
	mad.lo.s32 	%r1828, %r41, 384, %r1827;
	add.s32 	%r1829, %r1828, -128;
	mul.wide.s32 	%rd542, %r1829, 4;
	add.s64 	%rd543, %rd37, %rd542;
	add.s64 	%rd545, %rd543, %rd294;
	add.s64 	%rd38, %rd545, 512;
	mov.u32 	%r2239, %r2051;
	mov.u32 	%r2241, %r2047;
	mov.u32 	%r2246, %r2140;
	mov.u32 	%r2247, %r2141;
	@%p413 bra 	$L__BB0_599;

	ld.global.v4.u32 	{%r2246, %r2247, %r2239, %r2241}, [%rd38+-512];

$L__BB0_599:
	ld.global.v4.u32 	{%r2054, %r2061, %r2050, %r2060}, [%rd38];
	ld.global.v4.u32 	{%r2043, %r2037, %r2223, %r2221}, [%rd38+512];
	ld.global.v4.u32 	{%r2224, %r2222, %r2235, %r2233}, [%rd38+1024];

$L__BB0_600:
	mov.u32 	%r2023, %r2052;
	mov.u32 	%r2026, %r411;
	mov.u32 	%r2027, %r412;
	mov.u32 	%r2041, %r2048;
	mov.u32 	%r2055, %r447;
	mov.u32 	%r2243, %r2056;
	mov.u32 	%r2062, %r454;
	mov.u32 	%r2245, %r2063;
	@%p234 bra 	$L__BB0_602;

	not.b32 	%r1933, %r40;
	add.s32 	%r1932, %r771, %r1933;
	mad.lo.s32 	%r1847, %r537, %r773, %r42;
	mad.lo.s32 	%r1853, %r1932, 384, %r69;
	mad.lo.s32 	%r1854, %r1847, %r852, %r1853;
	mad.lo.s32 	%r1857, %r854, %r68, %r1854;
	mul.wide.s32 	%rd546, %r1857, 4;
	add.s64 	%rd547, %rd37, %rd546;
	add.s64 	%rd549, %rd547, %rd294;
	ld.global.v4.u32 	{%r2245, %r2243, %r2027, %r2026}, [%rd549+512];
	ld.global.v4.u32 	{%r2062, %r2055, %r2023, %r2041}, [%rd549+1024];
	ld.global.v4.u32 	{%r2246, %r2247, %r2239, %r2241}, [%rd549+1536];

$L__BB0_602:
	setp.ne.s32 	%p424, %r40, %r1237;
	add.s32 	%r768, %r2139, 1;
	bar.sync 	0;
	ld.param.u64 	%rd550, [%rd1+104];
	cvta.to.global.u64 	%rd39, %rd550;
	@%p424 bra 	$L__BB0_604;

	mad.lo.s32 	%r1871, %r536, %r774, %r43;
	mad.lo.s32 	%r1872, %r1871, 768, 384;
	mul.lo.s32 	%r1873, %r1872, %r772;
	mad.lo.s32 	%r1875, %r41, 384, %r1873;
	add.s32 	%r1876, %r1875, -128;
	mul.wide.s32 	%rd551, %r1876, 4;
	add.s64 	%rd552, %rd39, %rd551;
	add.s64 	%rd554, %rd552, %rd294;
	st.global.v4.u32 	[%rd554+512], {%r2063, %r2056, %r2064, %r2057};
	st.global.v4.u32 	[%rd554+1024], {%r2095, %r2093, %r2090, %r2084};
	st.global.v4.u32 	[%rd554+1536], {%r2151, %r2150, %r2119, %r2112};

$L__BB0_604:
	setp.ne.s32 	%p425, %r41, %r1242;
	@%p425 bra 	$L__BB0_607;

	not.b32 	%r1931, %r40;
	add.s32 	%r1930, %r771, %r1931;
	mad.lo.s32 	%r1878, %r537, %r773, %r42;
	mad.lo.s32 	%r1884, %r1930, 384, %r69;
	mad.lo.s32 	%r1885, %r1878, %r852, %r1884;
	mad.lo.s32 	%r1888, %r854, %r68, %r1885;
	mul.wide.s32 	%rd555, %r1888, 4;
	add.s64 	%rd556, %rd39, %rd555;
	add.s64 	%rd40, %rd556, %rd294;
	st.global.v4.u32 	[%rd40], {%r2151, %r2150, %r2119, %r2112};
	st.global.v4.u32 	[%rd40+512], {%r2149, %r2148, %r2145, %r2143};
	st.global.v4.u32 	[%rd40+1024], {%r2079, %r2076, %r2033, %r2029};
	@%p231 bra 	$L__BB0_607;

	st.global.v4.u32 	[%rd40+1536], {%r2224, %r2222, %r2235, %r2233};

$L__BB0_607:
	rem.s32 	%r1889, %r2139, %r775;
	setp.eq.s32 	%p418, %r1889, 0;
	@%p418 bra 	$L__BB0_609;

	bar.sync 	0;
	bra.uni 	$L__BB0_616;

$L__BB0_609:
	@%p218 bra 	$L__BB0_611;

	// begin inline asm
	trap;
	// end inline asm

$L__BB0_611:
	bar.sync 	0;
	@%p219 bra 	$L__BB0_615;

	membar.gl;
	setp.eq.s32 	%p421, %r404, %r405;
	mov.u32 	%r1905, -2147483647;
	sub.s32 	%r1906, %r1905, %r403;
	selp.b32 	%r1894, %r1906, 1, %p421;
	// begin inline asm
	atom.add.release.gpu.u32 %r1893,[%rd27],%r1894;
	// end inline asm

$L__BB0_613:
	ld.volatile.u32 	%r1907, [%rd27];
	xor.b32  	%r1908, %r1907, %r1893;
	setp.gt.s32 	%p422, %r1908, -1;
	@%p422 bra 	$L__BB0_613;

	// begin inline asm
	ld.acquire.gpu.u32 %r1909,[%rd27];
	// end inline asm

$L__BB0_615:
	bar.sync 	0;

$L__BB0_616:
	setp.lt.s32 	%p423, %r768, %r48;
	mov.u32 	%r2029, %r2221;
	mov.u32 	%r2031, %r2155;
	mov.u32 	%r2033, %r2223;
	mov.u32 	%r2035, %r2157;
	mov.u32 	%r2056, %r2243;
	mov.u32 	%r2057, %r411;
	mov.u32 	%r2058, %r2174;
	mov.u32 	%r2063, %r2245;
	mov.u32 	%r2064, %r412;
	mov.u32 	%r2065, %r2176;
	mov.u32 	%r2070, %r2165;
	mov.u32 	%r2074, %r2167;
	mov.u32 	%r2076, %r423;
	mov.u32 	%r2079, %r431;
	mov.u32 	%r2084, %r438;
	mov.u32 	%r2090, %r443;
	mov.u32 	%r2093, %r447;
	mov.u32 	%r2094, %r2178;
	mov.u32 	%r2095, %r454;
	mov.u32 	%r2096, %r2179;
	mov.u32 	%r2097, %r467;
	mov.u32 	%r2098, %r2202;
	mov.u32 	%r2100, %r470;
	mov.u32 	%r2101, %r427;
	mov.u32 	%r2103, %r471;
	mov.u32 	%r2104, %r2204;
	mov.u32 	%r2106, %r474;
	mov.u32 	%r2107, %r435;
	mov.u32 	%r2109, %r475;
	mov.u32 	%r2112, %r477;
	mov.u32 	%r2113, %r480;
	mov.u32 	%r2116, %r482;
	mov.u32 	%r2119, %r484;
	mov.u32 	%r2120, %r487;
	mov.u32 	%r2123, %r2209;
	mov.u32 	%r2124, %r451;
	mov.u32 	%r2125, %r2211;
	mov.u32 	%r2126, %r458;
	mov.u32 	%r2127, %r495;
	mov.u32 	%r2128, %r498;
	mov.u32 	%r2129, %r501;
	mov.u32 	%r2130, %r504;
	mov.u32 	%r2131, %r506;
	mov.u32 	%r2132, %r507;
	mov.u32 	%r2133, %r510;
	mov.u32 	%r2134, %r511;
	mov.u32 	%r2135, %r513;
	mov.u32 	%r2136, %r514;
	mov.u32 	%r2137, %r517;
	mov.u32 	%r2138, %r518;
	mov.u32 	%r2139, %r768;
	mov.u32 	%r2143, %r452;
	mov.u32 	%r2145, %r441;
	mov.u32 	%r2148, %r424;
	mov.u32 	%r2149, %r432;
	mov.u32 	%r2150, %r439;
	mov.u32 	%r2151, %r444;
	@%p423 bra 	$L__BB0_323;

$L__BB0_617:
	ret;

}

