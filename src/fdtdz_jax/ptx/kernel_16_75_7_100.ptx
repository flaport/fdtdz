//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31833905
// Cuda compilation tools, release 11.8, V11.8.89
// Based on NVVM 7.0.1
//

.version 7.8
.target sm_75
.address_size 64

	// .globl	_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE
.global .align 4 .b8 _ZZN4cuda3std3__48__detail21__stronger_order_cudaEiiE7__xform[16] = {3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE[24] = {254, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllJE[20] = {254, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllKE[8] = {0, 0, 0, 0, 1, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond6AllEhcE[12] = {0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond6AllXyzE[12] = {0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.extern .shared .align 16 .b8 _ZN6kernel5shmemE[];

.visible .entry _ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE(
	.param .align 8 .b8 _ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0[168]
)
{
	.reg .pred 	%p<357>;
	.reg .f32 	%f<400>;
	.reg .b32 	%r<2158>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<543>;


	mov.b64 	%rd41, _ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0;
	mov.u64 	%rd1, %rd41;
	ld.param.v2.u32 	{%r760, %r761}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0];
	ld.param.v2.u32 	{%r762, %r763}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+8];
	ld.param.v2.u32 	{%r764, %r765}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+16];
	ld.param.v2.u32 	{%r766, %r767}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+24];
	ld.param.v2.u32 	{%r768, %r769}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+32];
	ld.param.v2.u32 	{%r770, %r771}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+40];
	ld.param.v2.u32 	{%r772, %r773}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+48];
	ld.param.v2.u32 	{%r774, %r775}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+56];
	ld.param.v2.u32 	{%r776, %r777}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+64];
	ld.param.v2.u32 	{%r778, %r779}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+72];
	mov.u32 	%r30, %tid.y;
	mov.u32 	%r31, %tid.z;
	mov.u32 	%r32, %ctaid.y;
	mov.u32 	%r33, %ctaid.z;
	mov.u32 	%r780, 32;
	sub.s32 	%r34, %r780, %r767;
	mov.u32 	%r35, %tid.x;
	setp.le.s32 	%p15, %r34, %r35;
	add.s32 	%r781, %r773, -1;
	add.s32 	%r782, %r771, %r765;
	add.s32 	%r783, %r782, %r766;
	add.s32 	%r784, %r783, 1;
	mad.lo.s32 	%r785, %r781, %r772, %r784;
	mul.lo.s32 	%r786, %r760, %r762;
	shl.b32 	%r36, %r786, 1;
	shl.b32 	%r787, %r786, 2;
	div.s32 	%r788, %r785, %r787;
	add.s32 	%r789, %r788, 1;
	mul.lo.s32 	%r790, %r789, %r766;
	mul.lo.s32 	%r791, %r761, %r763;
	shl.b32 	%r37, %r791, 1;
	div.s32 	%r792, %r790, %r37;
	add.s32 	%r793, %r792, 1;
	mul.lo.s32 	%r38, %r793, %r765;
	ld.param.u64 	%rd42, [%rd1+160];
	cvta.to.global.u64 	%rd2, %rd42;
	mad.lo.s32 	%r796, %r762, %r33, %r32;
	mad.lo.s32 	%r797, %r796, %r761, %r31;
	mul.lo.s32 	%r39, %r797, %r760;
	add.s32 	%r798, %r39, %r30;
	shl.b32 	%r40, %r798, 5;
	add.s32 	%r1850, %r40, %r35;
	mul.lo.s32 	%r799, %r791, %r786;
	shl.b32 	%r44, %r799, 5;
	sub.s32 	%r800, %r775, %r774;
	mul.lo.s32 	%r801, %r773, %r800;
	sub.s32 	%r802, %r777, %r776;
	mul.lo.s32 	%r803, %r801, %r802;
	sub.s32 	%r45, %r779, %r778;
	mul.lo.s32 	%r804, %r803, %r45;
	mul.lo.s32 	%r46, %r804, 3;
	setp.ge.s32 	%p16, %r1850, %r46;
	@%p16 bra 	$L__BB0_9;

	not.b32 	%r805, %r35;
	add.s32 	%r806, %r46, %r805;
	sub.s32 	%r807, %r806, %r40;
	mul.lo.s32 	%r808, %r791, %r760;
	mul.lo.s32 	%r809, %r808, %r762;
	shl.b32 	%r47, %r809, 5;
	div.u32 	%r48, %r807, %r47;
	add.s32 	%r810, %r48, 1;
	and.b32  	%r1847, %r810, 3;
	setp.eq.s32 	%p17, %r1847, 0;
	mov.u32 	%r1848, %r1850;
	@%p17 bra 	$L__BB0_6;

	shl.b32 	%r811, %r39, 5;
	add.s32 	%r812, %r35, %r811;
	shl.b32 	%r813, %r30, 5;
	add.s32 	%r1848, %r812, %r813;
	mul.wide.s32 	%rd43, %r1850, 4;
	add.s64 	%rd540, %rd2, %rd43;
	mul.wide.s32 	%rd4, %r47, 4;

$L__BB0_5:
	.pragma "nounroll";
	mov.u32 	%r814, 0;
	st.global.u32 	[%rd540], %r814;
	add.s32 	%r1848, %r1848, %r47;
	add.s64 	%rd540, %rd540, %rd4;
	add.s32 	%r1847, %r1847, -1;
	setp.ne.s32 	%p18, %r1847, 0;
	@%p18 bra 	$L__BB0_5;

$L__BB0_6:
	setp.lt.u32 	%p19, %r48, 3;
	@%p19 bra 	$L__BB0_9;

	mul.wide.s32 	%rd46, %r44, 4;

$L__BB0_8:
	mul.wide.s32 	%rd44, %r1848, 4;
	add.s64 	%rd45, %rd2, %rd44;
	mov.u32 	%r815, 0;
	st.global.u32 	[%rd45], %r815;
	add.s64 	%rd47, %rd45, %rd46;
	st.global.u32 	[%rd47], %r815;
	add.s32 	%r816, %r1848, %r44;
	add.s32 	%r817, %r816, %r44;
	add.s64 	%rd48, %rd47, %rd46;
	st.global.u32 	[%rd48], %r815;
	add.s32 	%r818, %r817, %r44;
	add.s64 	%rd49, %rd48, %rd46;
	st.global.u32 	[%rd49], %r815;
	add.s32 	%r1848, %r818, %r44;
	setp.lt.s32 	%p20, %r1848, %r46;
	@%p20 bra 	$L__BB0_8;

$L__BB0_9:
	ld.param.u64 	%rd50, [%rd1+80];
	cvta.to.global.u64 	%rd7, %rd50;
	sub.s32 	%r819, %r766, %r36;
	div.s32 	%r820, %r819, %r37;
	mul.lo.s32 	%r821, %r820, %r765;
	sub.s32 	%r58, %r821, %r36;
	sub.s32 	%r822, %r765, %r37;
	mul.lo.s32 	%r823, %r822, %r762;
	mul.lo.s32 	%r59, %r760, 384;
	add.s32 	%r824, %r59, %r59;
	add.s32 	%r825, %r824, 128;
	mul.lo.s32 	%r827, %r791, 768;
	mul.lo.s32 	%r828, %r823, %r825;
	mad.lo.s32 	%r60, %r827, %r58, %r828;
	bra.uni 	$L__BB0_10;

$L__BB0_588:
	mov.f32 	%f399, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f399;
  cvt.rn.f16.f32 high, %f399;
  mov.b32 %r1819, {low,high};}

	// end inline asm
	mul.wide.s32 	%rd536, %r1850, 4;
	add.s64 	%rd537, %rd7, %rd536;
	st.global.u32 	[%rd537], %r1819;
	add.s32 	%r1850, %r1850, %r44;

$L__BB0_10:
	setp.lt.s32 	%p21, %r1850, %r60;
	@%p21 bra 	$L__BB0_588;

	ld.param.u64 	%rd51, [%rd1+120];
	cvta.to.global.u64 	%rd9, %rd51;
	ld.param.u64 	%rd52, [%rd1+88];
	cvta.to.global.u64 	%rd10, %rd52;
	mad.lo.s32 	%r1892, %r760, %r32, %r30;
	mul.lo.s32 	%r65, %r761, %r33;
	add.s32 	%r66, %r65, %r31;
	setp.ge.s32 	%p22, %r1892, %r765;
	@%p22 bra 	$L__BB0_35;

	setp.gt.s32 	%p23, %r34, %r35;
	mov.u32 	%r829, 31;
	sub.s32 	%r830, %r829, %r35;
	selp.b32 	%r831, %r35, %r830, %p23;
	shl.b32 	%r832, %r831, 2;
	mov.u32 	%r833, 2;
	sub.s32 	%r67, %r832, %r768;
	shl.b32 	%r834, %r767, 2;
	mov.u32 	%r835, 128;
	sub.s32 	%r68, %r835, %r834;
	sub.s32 	%r836, %r833, %r768;
	add.s32 	%r69, %r836, %r832;
	mul.lo.s32 	%r837, %r766, %r765;
	shl.b32 	%r70, %r837, 6;
	add.s32 	%r71, %r765, -1;
	add.s32 	%r72, %r67, 1;
	add.s32 	%r73, %r69, 1;
	shl.b32 	%r74, %r35, 1;
	or.b32  	%r75, %r74, 1;
	shr.u32 	%r838, %r75, 31;
	add.s32 	%r839, %r75, %r838;
	shr.s32 	%r77, %r839, 1;
	and.b32  	%r840, %r839, -2;
	sub.s32 	%r841, %r75, %r840;
	add.s32 	%r76, %r841, %r70;
	rem.s32 	%r876, %r72, %r68;
	add.s32 	%r877, %r876, %r68;
	rem.s32 	%r100, %r877, %r68;
	rem.s32 	%r878, %r73, %r68;
	add.s32 	%r879, %r878, %r68;
	rem.s32 	%r101, %r879, %r68;
	mov.u32 	%r1851, %r1892;

$L__BB0_13:
	setp.ge.s32 	%p24, %r66, %r766;
	@%p24 bra 	$L__BB0_34;

	add.s32 	%r79, %r71, %r1851;
	rem.s32 	%r842, %r67, %r68;
	add.s32 	%r843, %r842, %r68;
	rem.s32 	%r80, %r843, %r68;
	rem.s32 	%r844, %r69, %r68;
	add.s32 	%r845, %r844, %r68;
	rem.s32 	%r81, %r845, %r68;
	mul.lo.s32 	%r82, %r1851, %r766;
	add.s32 	%r846, %r765, %r1851;
	mul.lo.s32 	%r83, %r846, %r766;
	add.s32 	%r847, %r846, %r765;
	mul.lo.s32 	%r84, %r847, %r766;
	mov.u32 	%r1852, %r66;

$L__BB0_15:
	mul.lo.s32 	%r86, %r1852, %r765;
	add.s32 	%r87, %r86, %r1851;
	shl.b32 	%r88, %r87, 6;
	@%p23 bra 	$L__BB0_17;
	bra.uni 	$L__BB0_16;

$L__BB0_17:
	add.s32 	%r850, %r82, %r1852;
	mul.lo.s32 	%r851, %r850, %r68;
	add.s32 	%r852, %r851, %r80;
	mul.wide.s32 	%rd53, %r852, 4;
	add.s64 	%rd54, %rd9, %rd53;
	ld.global.f32 	%f40, [%rd54];
	add.s32 	%r853, %r851, %r81;
	mul.wide.s32 	%rd55, %r853, 4;
	add.s64 	%rd56, %rd9, %rd55;
	ld.global.f32 	%f41, [%rd56];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f40;
  cvt.rn.f16.f32 high, %f41;
  mov.b32 %r1853, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_18;

$L__BB0_16:
	mov.f32 	%f39, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f39;
  cvt.rn.f16.f32 high, %f39;
  mov.b32 %r1853, {low,high};}

	// end inline asm

$L__BB0_18:
	shl.b32 	%r92, %r87, 5;
	add.s32 	%r854, %r92, %r35;
	shl.b32 	%r855, %r854, 2;
	add.s32 	%r856, %r70, %r855;
	mul.wide.s32 	%rd57, %r856, 4;
	add.s64 	%rd58, %rd10, %rd57;
	st.global.u32 	[%rd58], %r1853;
	@%p23 bra 	$L__BB0_20;
	bra.uni 	$L__BB0_19;

$L__BB0_20:
	add.s32 	%r859, %r83, %r1852;
	mul.lo.s32 	%r860, %r859, %r68;
	add.s32 	%r861, %r860, %r80;
	mul.wide.s32 	%rd59, %r861, 4;
	add.s64 	%rd60, %rd9, %rd59;
	ld.global.f32 	%f44, [%rd60];
	add.s32 	%r862, %r860, %r81;
	mul.wide.s32 	%rd61, %r862, 4;
	add.s64 	%rd62, %rd9, %rd61;
	ld.global.f32 	%f45, [%rd62];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f44;
  cvt.rn.f16.f32 high, %f45;
  mov.b32 %r1854, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_21;

$L__BB0_19:
	mov.f32 	%f43, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f43;
  cvt.rn.f16.f32 high, %f43;
  mov.b32 %r1854, {low,high};}

	// end inline asm

$L__BB0_21:
	add.s32 	%r863, %r74, %r88;
	mul.wide.s32 	%rd63, %r863, 4;
	add.s64 	%rd64, %rd10, %rd63;
	st.global.u32 	[%rd64], %r1854;
	@%p23 bra 	$L__BB0_23;
	bra.uni 	$L__BB0_22;

$L__BB0_23:
	add.s32 	%r866, %r84, %r1852;
	mul.lo.s32 	%r867, %r866, %r68;
	add.s32 	%r868, %r867, %r80;
	mul.wide.s32 	%rd65, %r868, 4;
	add.s64 	%rd66, %rd9, %rd65;
	ld.global.f32 	%f48, [%rd66];
	add.s32 	%r869, %r867, %r81;
	mul.wide.s32 	%rd67, %r869, 4;
	add.s64 	%rd68, %rd9, %rd67;
	ld.global.f32 	%f49, [%rd68];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f48;
  cvt.rn.f16.f32 high, %f49;
  mov.b32 %r1855, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_24;

$L__BB0_22:
	mov.f32 	%f47, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f47;
  cvt.rn.f16.f32 high, %f47;
  mov.b32 %r1855, {low,high};}

	// end inline asm

$L__BB0_24:
	rem.s32 	%r870, %r79, %r765;
	add.s32 	%r871, %r870, %r86;
	shl.b32 	%r99, %r871, 5;
	add.s32 	%r872, %r99, %r35;
	shl.b32 	%r873, %r872, 2;
	add.s32 	%r874, %r70, %r873;
	add.s32 	%r875, %r874, 2;
	mul.wide.s32 	%rd69, %r875, 4;
	add.s64 	%rd70, %rd10, %rd69;
	st.global.u32 	[%rd70], %r1855;
	@%p23 bra 	$L__BB0_26;
	bra.uni 	$L__BB0_25;

$L__BB0_26:
	add.s32 	%r882, %r82, %r1852;
	mul.lo.s32 	%r883, %r882, %r68;
	add.s32 	%r884, %r883, %r100;
	mul.wide.s32 	%rd71, %r884, 4;
	add.s64 	%rd72, %rd9, %rd71;
	ld.global.f32 	%f52, [%rd72];
	add.s32 	%r885, %r883, %r101;
	mul.wide.s32 	%rd73, %r885, 4;
	add.s64 	%rd74, %rd9, %rd73;
	ld.global.f32 	%f53, [%rd74];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f52;
  cvt.rn.f16.f32 high, %f53;
  mov.b32 %r1856, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_27;

$L__BB0_25:
	mov.f32 	%f51, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f51;
  cvt.rn.f16.f32 high, %f51;
  mov.b32 %r1856, {low,high};}

	// end inline asm

$L__BB0_27:
	add.s32 	%r886, %r92, %r77;
	shl.b32 	%r887, %r886, 2;
	add.s32 	%r888, %r76, %r887;
	mul.wide.s32 	%rd75, %r888, 4;
	add.s64 	%rd76, %rd10, %rd75;
	st.global.u32 	[%rd76], %r1856;
	@%p23 bra 	$L__BB0_29;
	bra.uni 	$L__BB0_28;

$L__BB0_29:
	add.s32 	%r891, %r83, %r1852;
	mul.lo.s32 	%r892, %r891, %r68;
	add.s32 	%r893, %r892, %r100;
	mul.wide.s32 	%rd77, %r893, 4;
	add.s64 	%rd78, %rd9, %rd77;
	ld.global.f32 	%f56, [%rd78];
	add.s32 	%r894, %r892, %r101;
	mul.wide.s32 	%rd79, %r894, 4;
	add.s64 	%rd80, %rd9, %rd79;
	ld.global.f32 	%f57, [%rd80];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f56;
  cvt.rn.f16.f32 high, %f57;
  mov.b32 %r1857, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_30;

$L__BB0_28:
	mov.f32 	%f55, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f55;
  cvt.rn.f16.f32 high, %f55;
  mov.b32 %r1857, {low,high};}

	// end inline asm

$L__BB0_30:
	add.s32 	%r895, %r75, %r88;
	mul.wide.s32 	%rd81, %r895, 4;
	add.s64 	%rd82, %rd10, %rd81;
	st.global.u32 	[%rd82], %r1857;
	@%p23 bra 	$L__BB0_32;
	bra.uni 	$L__BB0_31;

$L__BB0_32:
	add.s32 	%r898, %r84, %r1852;
	mul.lo.s32 	%r899, %r898, %r68;
	add.s32 	%r900, %r899, %r100;
	mul.wide.s32 	%rd83, %r900, 4;
	add.s64 	%rd84, %rd9, %rd83;
	ld.global.f32 	%f60, [%rd84];
	add.s32 	%r901, %r899, %r101;
	mul.wide.s32 	%rd85, %r901, 4;
	add.s64 	%rd86, %rd9, %rd85;
	ld.global.f32 	%f61, [%rd86];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f60;
  cvt.rn.f16.f32 high, %f61;
  mov.b32 %r1858, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_33;

$L__BB0_31:
	mov.f32 	%f59, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f59;
  cvt.rn.f16.f32 high, %f59;
  mov.b32 %r1858, {low,high};}

	// end inline asm

$L__BB0_33:
	add.s32 	%r902, %r99, %r77;
	shl.b32 	%r903, %r902, 2;
	add.s32 	%r904, %r76, %r903;
	add.s32 	%r905, %r904, 2;
	mul.wide.s32 	%rd87, %r905, 4;
	add.s64 	%rd88, %rd10, %rd87;
	st.global.u32 	[%rd88], %r1858;
	add.s32 	%r1852, %r1852, %r791;
	setp.lt.s32 	%p31, %r1852, %r766;
	@%p31 bra 	$L__BB0_15;

$L__BB0_34:
	add.s32 	%r1851, %r1851, %r786;
	setp.lt.s32 	%p32, %r1851, %r765;
	@%p32 bra 	$L__BB0_13;

$L__BB0_35:
	ld.param.u64 	%rd89, [%rd1+128];
	cvta.to.global.u64 	%rd11, %rd89;
	ld.param.u64 	%rd90, [%rd1+96];
	cvta.to.global.u64 	%rd12, %rd90;
	@%p22 bra 	$L__BB0_119;

	shl.b32 	%r113, %r66, 1;
	mov.u64 	%rd91, _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE;
	mov.u32 	%r1859, %r1892;

$L__BB0_37:
	setp.ge.s32 	%p34, %r113, %r766;
	@%p34 bra 	$L__BB0_118;

	mov.u32 	%r1860, %r113;

$L__BB0_39:
	setp.ne.s32 	%p35, %r35, 0;
	@%p35 bra 	$L__BB0_117;

	shr.u32 	%r907, %r1860, 31;
	add.s32 	%r908, %r1860, %r907;
	shr.s32 	%r909, %r908, 1;
	mad.lo.s32 	%r910, %r909, %r765, %r1859;
	shl.b32 	%r117, %r910, 5;
	add.s32 	%r118, %r1860, -2;
	mul.lo.s32 	%r119, %r118, %r765;
	add.s32 	%r911, %r766, %r118;
	mul.lo.s32 	%r120, %r911, %r765;
	add.s32 	%r912, %r911, %r766;
	mul.lo.s32 	%r121, %r912, %r765;
	add.s32 	%r122, %r119, %r765;
	add.s32 	%r123, %r1860, -1;
	add.s32 	%r913, %r766, %r123;
	mul.lo.s32 	%r124, %r913, %r765;
	add.s32 	%r914, %r913, %r766;
	mul.lo.s32 	%r125, %r914, %r765;
	add.s32 	%r915, %r766, %r1860;
	mul.lo.s32 	%r126, %r915, %r765;
	add.s32 	%r916, %r915, %r766;
	mul.lo.s32 	%r127, %r916, %r765;
	mul.lo.s32 	%r128, %r1860, %r765;
	add.s32 	%r129, %r128, %r765;
	add.s32 	%r130, %r1860, 1;
	add.s32 	%r917, %r766, %r130;
	mul.lo.s32 	%r131, %r917, %r765;
	add.s32 	%r918, %r917, %r766;
	mul.lo.s32 	%r132, %r918, %r765;
	add.s32 	%r133, %r129, %r765;
	add.s32 	%r134, %r1860, 2;
	add.s32 	%r919, %r766, %r134;
	mul.lo.s32 	%r135, %r919, %r765;
	add.s32 	%r920, %r919, %r766;
	mul.lo.s32 	%r136, %r920, %r765;
	mov.u32 	%r1863, 0;
	mov.u64 	%rd541, %rd91;

$L__BB0_41:
	ld.global.nc.u32 	%r921, [%rd541];
	cvt.rn.f64.s32 	%fd1, %r921;
	add.f64 	%fd3, %fd1, 0d3FE0000000000000;
	add.s32 	%r138, %r921, %r1859;
	setp.lt.s32 	%p36, %r138, %r765;
	or.b32  	%r922, %r118, %r138;
	setp.gt.s32 	%p37, %r922, -1;
	and.pred  	%p38, %p36, %p37;
	setp.lt.s32 	%p39, %r118, %r766;
	and.pred  	%p1, %p39, %p38;
	cvt.rn.f32.f64 	%f62, %fd3;
	add.f32 	%f63, %f62, 0f3E800000;
	abs.f32 	%f1, %f63;
	add.f32 	%f64, %f1, 0f40200000;
	setp.geu.f32 	%p40, %f64, 0f40000000;
	@%p40 bra 	$L__BB0_46;

	@%p1 bra 	$L__BB0_44;
	bra.uni 	$L__BB0_43;

$L__BB0_44:
	add.s32 	%r925, %r119, %r138;
	mul.wide.s32 	%rd92, %r925, 4;
	add.s64 	%rd93, %rd11, %rd92;
	ld.global.f32 	%f67, [%rd93];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f67;
  mov.b32 %r1862, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_45;

$L__BB0_43:
	mov.f32 	%f66, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f66;
  cvt.rn.f16.f32 high, %f66;
  mov.b32 %r1862, {low,high};}

	// end inline asm

$L__BB0_45:
	add.s32 	%r926, %r1863, %r117;
	mul.wide.s32 	%rd94, %r926, 4;
	add.s64 	%rd95, %rd12, %rd94;
	st.global.u32 	[%rd95], %r1862;
	add.s32 	%r1863, %r1863, 1;

$L__BB0_46:
	cvt.rn.f32.f64 	%f68, %fd1;
	add.f32 	%f69, %f68, 0f3E800000;
	abs.f32 	%f2, %f69;
	add.f32 	%f3, %f2, 0f40000000;
	setp.geu.f32 	%p41, %f3, 0f40000000;
	@%p41 bra 	$L__BB0_51;

	@%p1 bra 	$L__BB0_49;
	bra.uni 	$L__BB0_48;

$L__BB0_49:
	add.s32 	%r929, %r120, %r138;
	mul.wide.s32 	%rd96, %r929, 4;
	add.s64 	%rd97, %rd11, %rd96;
	ld.global.f32 	%f72, [%rd97];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f72;
  mov.b32 %r1864, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_50;

$L__BB0_48:
	mov.f32 	%f71, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f71;
  cvt.rn.f16.f32 high, %f71;
  mov.b32 %r1864, {low,high};}

	// end inline asm

$L__BB0_50:
	add.s32 	%r930, %r1863, %r117;
	mul.wide.s32 	%rd98, %r930, 4;
	add.s64 	%rd99, %rd12, %rd98;
	st.global.u32 	[%rd99], %r1864;
	add.s32 	%r1863, %r1863, 1;

$L__BB0_51:
	add.f32 	%f73, %f2, 0f40200000;
	setp.geu.f32 	%p42, %f73, 0f40000000;
	@%p42 bra 	$L__BB0_56;

	@%p1 bra 	$L__BB0_54;
	bra.uni 	$L__BB0_53;

$L__BB0_54:
	add.s32 	%r933, %r121, %r138;
	mul.wide.s32 	%rd100, %r933, 4;
	add.s64 	%rd101, %rd11, %rd100;
	ld.global.f32 	%f76, [%rd101];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f76;
  mov.b32 %r1866, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_55;

$L__BB0_53:
	mov.f32 	%f75, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f75;
  cvt.rn.f16.f32 high, %f75;
  mov.b32 %r1866, {low,high};}

	// end inline asm

$L__BB0_55:
	add.s32 	%r934, %r1863, %r117;
	mul.wide.s32 	%rd102, %r934, 4;
	add.s64 	%rd103, %rd12, %rd102;
	st.global.u32 	[%rd103], %r1866;
	add.s32 	%r1863, %r1863, 1;

$L__BB0_56:
	or.b32  	%r935, %r123, %r138;
	setp.gt.s32 	%p43, %r935, -1;
	and.pred  	%p45, %p36, %p43;
	setp.le.s32 	%p46, %r1860, %r766;
	and.pred  	%p2, %p46, %p45;
	add.f32 	%f4, %f1, 0f3FC00000;
	setp.geu.f32 	%p47, %f4, 0f40000000;
	@%p47 bra 	$L__BB0_61;

	@%p2 bra 	$L__BB0_59;
	bra.uni 	$L__BB0_58;

$L__BB0_59:
	add.s32 	%r938, %r122, %r138;
	mul.wide.s32 	%rd104, %r938, 4;
	add.s64 	%rd105, %rd11, %rd104;
	ld.global.f32 	%f79, [%rd105];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f79;
  mov.b32 %r1868, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_60;

$L__BB0_58:
	mov.f32 	%f78, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f78;
  cvt.rn.f16.f32 high, %f78;
  mov.b32 %r1868, {low,high};}

	// end inline asm

$L__BB0_60:
	add.s32 	%r939, %r1863, %r117;
	mul.wide.s32 	%rd106, %r939, 4;
	add.s64 	%rd107, %rd12, %rd106;
	st.global.u32 	[%rd107], %r1868;
	add.s32 	%r1863, %r1863, 1;

$L__BB0_61:
	add.f32 	%f5, %f2, 0f3F800000;
	setp.geu.f32 	%p48, %f5, 0f40000000;
	@%p48 bra 	$L__BB0_66;

	@%p2 bra 	$L__BB0_64;
	bra.uni 	$L__BB0_63;

$L__BB0_64:
	add.s32 	%r942, %r124, %r138;
	mul.wide.s32 	%rd108, %r942, 4;
	add.s64 	%rd109, %rd11, %rd108;
	ld.global.f32 	%f82, [%rd109];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f82;
  mov.b32 %r1870, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_65;

$L__BB0_63:
	mov.f32 	%f81, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f81;
  cvt.rn.f16.f32 high, %f81;
  mov.b32 %r1870, {low,high};}

	// end inline asm

$L__BB0_65:
	add.s32 	%r943, %r1863, %r117;
	mul.wide.s32 	%rd110, %r943, 4;
	add.s64 	%rd111, %rd12, %rd110;
	st.global.u32 	[%rd111], %r1870;
	add.s32 	%r1863, %r1863, 1;

$L__BB0_66:
	add.f32 	%f6, %f2, 0f3FC00000;
	setp.geu.f32 	%p49, %f6, 0f40000000;
	@%p49 bra 	$L__BB0_71;

	@%p2 bra 	$L__BB0_69;
	bra.uni 	$L__BB0_68;

$L__BB0_69:
	add.s32 	%r946, %r125, %r138;
	mul.wide.s32 	%rd112, %r946, 4;
	add.s64 	%rd113, %rd11, %rd112;
	ld.global.f32 	%f85, [%rd113];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f85;
  mov.b32 %r1872, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_70;

$L__BB0_68:
	mov.f32 	%f84, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f84;
  cvt.rn.f16.f32 high, %f84;
  mov.b32 %r1872, {low,high};}

	// end inline asm

$L__BB0_70:
	add.s32 	%r947, %r1863, %r117;
	mul.wide.s32 	%rd114, %r947, 4;
	add.s64 	%rd115, %rd12, %rd114;
	st.global.u32 	[%rd115], %r1872;
	add.s32 	%r1863, %r1863, 1;

$L__BB0_71:
	or.b32  	%r948, %r1860, %r138;
	setp.gt.s32 	%p50, %r948, -1;
	and.pred  	%p52, %p36, %p50;
	setp.lt.s32 	%p53, %r1860, %r766;
	and.pred  	%p3, %p53, %p52;
	add.f32 	%f7, %f1, 0f3F000000;
	setp.geu.f32 	%p54, %f7, 0f40000000;
	@%p54 bra 	$L__BB0_76;

	@%p3 bra 	$L__BB0_74;
	bra.uni 	$L__BB0_73;

$L__BB0_74:
	add.s32 	%r951, %r128, %r138;
	mul.wide.s32 	%rd116, %r951, 4;
	add.s64 	%rd117, %rd11, %rd116;
	ld.global.f32 	%f88, [%rd117];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f88;
  mov.b32 %r1874, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_75;

$L__BB0_73:
	mov.f32 	%f87, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f87;
  cvt.rn.f16.f32 high, %f87;
  mov.b32 %r1874, {low,high};}

	// end inline asm

$L__BB0_75:
	add.s32 	%r952, %r1863, %r117;
	mul.wide.s32 	%rd118, %r952, 4;
	add.s64 	%rd119, %rd12, %rd118;
	st.global.u32 	[%rd119], %r1874;
	add.s32 	%r1863, %r1863, 1;

$L__BB0_76:
	add.f32 	%f89, %f2, 0f00000000;
	setp.geu.f32 	%p55, %f89, 0f40000000;
	@%p55 bra 	$L__BB0_81;

	@%p3 bra 	$L__BB0_79;
	bra.uni 	$L__BB0_78;

$L__BB0_79:
	add.s32 	%r955, %r126, %r138;
	mul.wide.s32 	%rd120, %r955, 4;
	add.s64 	%rd121, %rd11, %rd120;
	ld.global.f32 	%f92, [%rd121];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f92;
  mov.b32 %r1876, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_80;

$L__BB0_78:
	mov.f32 	%f91, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f91;
  cvt.rn.f16.f32 high, %f91;
  mov.b32 %r1876, {low,high};}

	// end inline asm

$L__BB0_80:
	add.s32 	%r956, %r1863, %r117;
	mul.wide.s32 	%rd122, %r956, 4;
	add.s64 	%rd123, %rd12, %rd122;
	st.global.u32 	[%rd123], %r1876;
	add.s32 	%r1863, %r1863, 1;

$L__BB0_81:
	add.f32 	%f8, %f2, 0f3F000000;
	setp.geu.f32 	%p56, %f8, 0f40000000;
	@%p56 bra 	$L__BB0_86;

	@%p3 bra 	$L__BB0_84;
	bra.uni 	$L__BB0_83;

$L__BB0_84:
	add.s32 	%r959, %r127, %r138;
	mul.wide.s32 	%rd124, %r959, 4;
	add.s64 	%rd125, %rd11, %rd124;
	ld.global.f32 	%f95, [%rd125];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f95;
  mov.b32 %r1878, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_85;

$L__BB0_83:
	mov.f32 	%f94, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f94;
  cvt.rn.f16.f32 high, %f94;
  mov.b32 %r1878, {low,high};}

	// end inline asm

$L__BB0_85:
	add.s32 	%r960, %r1863, %r117;
	mul.wide.s32 	%rd126, %r960, 4;
	add.s64 	%rd127, %rd12, %rd126;
	st.global.u32 	[%rd127], %r1878;
	add.s32 	%r1863, %r1863, 1;

$L__BB0_86:
	or.b32  	%r961, %r130, %r138;
	setp.gt.s32 	%p57, %r961, -1;
	and.pred  	%p59, %p36, %p57;
	setp.lt.s32 	%p60, %r130, %r766;
	and.pred  	%p4, %p60, %p59;
	@%p54 bra 	$L__BB0_91;

	@%p4 bra 	$L__BB0_89;
	bra.uni 	$L__BB0_88;

$L__BB0_89:
	add.s32 	%r964, %r129, %r138;
	mul.wide.s32 	%rd128, %r964, 4;
	add.s64 	%rd129, %rd11, %rd128;
	ld.global.f32 	%f98, [%rd129];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f98;
  mov.b32 %r1880, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_90;

$L__BB0_88:
	mov.f32 	%f97, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f97;
  cvt.rn.f16.f32 high, %f97;
  mov.b32 %r1880, {low,high};}

	// end inline asm

$L__BB0_90:
	add.s32 	%r965, %r1863, %r117;
	mul.wide.s32 	%rd130, %r965, 4;
	add.s64 	%rd131, %rd12, %rd130;
	st.global.u32 	[%rd131], %r1880;
	add.s32 	%r1863, %r1863, 1;

$L__BB0_91:
	@%p48 bra 	$L__BB0_96;

	@%p4 bra 	$L__BB0_94;
	bra.uni 	$L__BB0_93;

$L__BB0_94:
	add.s32 	%r968, %r131, %r138;
	mul.wide.s32 	%rd132, %r968, 4;
	add.s64 	%rd133, %rd11, %rd132;
	ld.global.f32 	%f101, [%rd133];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f101;
  mov.b32 %r1882, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_95;

$L__BB0_93:
	mov.f32 	%f100, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f100;
  cvt.rn.f16.f32 high, %f100;
  mov.b32 %r1882, {low,high};}

	// end inline asm

$L__BB0_95:
	add.s32 	%r969, %r1863, %r117;
	mul.wide.s32 	%rd134, %r969, 4;
	add.s64 	%rd135, %rd12, %rd134;
	st.global.u32 	[%rd135], %r1882;
	add.s32 	%r1863, %r1863, 1;

$L__BB0_96:
	@%p56 bra 	$L__BB0_101;

	@%p4 bra 	$L__BB0_99;
	bra.uni 	$L__BB0_98;

$L__BB0_99:
	add.s32 	%r972, %r132, %r138;
	mul.wide.s32 	%rd136, %r972, 4;
	add.s64 	%rd137, %rd11, %rd136;
	ld.global.f32 	%f104, [%rd137];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f104;
  mov.b32 %r1884, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_100;

$L__BB0_98:
	mov.f32 	%f103, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f103;
  cvt.rn.f16.f32 high, %f103;
  mov.b32 %r1884, {low,high};}

	// end inline asm

$L__BB0_100:
	add.s32 	%r973, %r1863, %r117;
	mul.wide.s32 	%rd138, %r973, 4;
	add.s64 	%rd139, %rd12, %rd138;
	st.global.u32 	[%rd139], %r1884;
	add.s32 	%r1863, %r1863, 1;

$L__BB0_101:
	or.b32  	%r974, %r134, %r138;
	setp.gt.s32 	%p64, %r974, -1;
	and.pred  	%p66, %p36, %p64;
	setp.lt.s32 	%p67, %r134, %r766;
	and.pred  	%p5, %p67, %p66;
	@%p47 bra 	$L__BB0_106;

	@%p5 bra 	$L__BB0_104;
	bra.uni 	$L__BB0_103;

$L__BB0_104:
	add.s32 	%r977, %r133, %r138;
	mul.wide.s32 	%rd140, %r977, 4;
	add.s64 	%rd141, %rd11, %rd140;
	ld.global.f32 	%f107, [%rd141];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f107;
  mov.b32 %r1886, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_105;

$L__BB0_103:
	mov.f32 	%f106, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f106;
  cvt.rn.f16.f32 high, %f106;
  mov.b32 %r1886, {low,high};}

	// end inline asm

$L__BB0_105:
	add.s32 	%r978, %r1863, %r117;
	mul.wide.s32 	%rd142, %r978, 4;
	add.s64 	%rd143, %rd12, %rd142;
	st.global.u32 	[%rd143], %r1886;
	add.s32 	%r1863, %r1863, 1;

$L__BB0_106:
	@%p41 bra 	$L__BB0_111;

	@%p5 bra 	$L__BB0_109;
	bra.uni 	$L__BB0_108;

$L__BB0_109:
	add.s32 	%r981, %r135, %r138;
	mul.wide.s32 	%rd144, %r981, 4;
	add.s64 	%rd145, %rd11, %rd144;
	ld.global.f32 	%f110, [%rd145];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f110;
  mov.b32 %r1888, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_110;

$L__BB0_108:
	mov.f32 	%f109, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f109;
  cvt.rn.f16.f32 high, %f109;
  mov.b32 %r1888, {low,high};}

	// end inline asm

$L__BB0_110:
	add.s32 	%r982, %r1863, %r117;
	mul.wide.s32 	%rd146, %r982, 4;
	add.s64 	%rd147, %rd12, %rd146;
	st.global.u32 	[%rd147], %r1888;
	add.s32 	%r1863, %r1863, 1;

$L__BB0_111:
	@%p49 bra 	$L__BB0_116;

	@%p5 bra 	$L__BB0_114;
	bra.uni 	$L__BB0_113;

$L__BB0_114:
	add.s32 	%r985, %r136, %r138;
	mul.wide.s32 	%rd148, %r985, 4;
	add.s64 	%rd149, %rd11, %rd148;
	ld.global.f32 	%f113, [%rd149];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f113;
  mov.b32 %r1890, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_115;

$L__BB0_113:
	mov.f32 	%f112, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f112;
  cvt.rn.f16.f32 high, %f112;
  mov.b32 %r1890, {low,high};}

	// end inline asm

$L__BB0_115:
	add.s32 	%r986, %r1863, %r117;
	mul.wide.s32 	%rd150, %r986, 4;
	add.s64 	%rd151, %rd12, %rd150;
	st.global.u32 	[%rd151], %r1890;
	add.s32 	%r1863, %r1863, 1;

$L__BB0_116:
	add.s64 	%rd541, %rd541, 4;
	mov.u64 	%rd152, _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE;
	add.s64 	%rd153, %rd152, 24;
	setp.ne.s64 	%p71, %rd541, %rd153;
	@%p71 bra 	$L__BB0_41;

$L__BB0_117:
	add.s32 	%r1860, %r1860, %r37;
	setp.lt.s32 	%p72, %r1860, %r766;
	@%p72 bra 	$L__BB0_39;

$L__BB0_118:
	add.s32 	%r1859, %r1859, %r786;
	setp.lt.s32 	%p73, %r1859, %r765;
	@%p73 bra 	$L__BB0_37;

$L__BB0_119:
	setp.eq.s32 	%p74, %r769, 1;
	ld.param.u64 	%rd154, [%rd1+136];
	cvta.to.global.u64 	%rd15, %rd154;
	ld.param.u64 	%rd155, [%rd1+104];
	cvta.to.global.u64 	%rd16, %rd155;
	@%p74 bra 	$L__BB0_137;
	bra.uni 	$L__BB0_120;

$L__BB0_137:
	@%p22 bra 	$L__BB0_266;

	shl.b32 	%r242, %r66, 1;
	shr.u32 	%r1034, %r770, 31;
	add.s32 	%r1035, %r770, %r1034;
	shr.u32 	%r1036, %r1035, 1;
	and.b32  	%r243, %r1036, 1;
	mov.u64 	%rd174, _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE;
	add.s64 	%rd256, %rd174, 24;

$L__BB0_139:
	setp.ge.s32 	%p84, %r242, %r766;
	@%p84 bra 	$L__BB0_265;

	mov.u32 	%r1898, %r242;

$L__BB0_141:
	setp.ne.s32 	%p85, %r35, 0;
	@%p85 bra 	$L__BB0_264;

	shr.u32 	%r1038, %r1898, 31;
	add.s32 	%r1039, %r1898, %r1038;
	shr.s32 	%r1040, %r1039, 1;
	mad.lo.s32 	%r1041, %r1040, %r765, %r1892;
	shl.b32 	%r247, %r1041, 5;
	add.s32 	%r248, %r1898, -2;
	mul.lo.s32 	%r249, %r248, %r765;
	add.s32 	%r1042, %r766, %r248;
	mul.lo.s32 	%r250, %r1042, %r765;
	add.s32 	%r251, %r249, %r765;
	add.s32 	%r252, %r1898, -1;
	add.s32 	%r1043, %r766, %r252;
	mul.lo.s32 	%r253, %r1043, %r765;
	add.s32 	%r1044, %r766, %r1898;
	mul.lo.s32 	%r254, %r1044, %r765;
	mul.lo.s32 	%r255, %r1898, %r765;
	add.s32 	%r256, %r255, %r765;
	add.s32 	%r257, %r1898, 1;
	add.s32 	%r1045, %r766, %r257;
	mul.lo.s32 	%r258, %r1045, %r765;
	add.s32 	%r259, %r256, %r765;
	add.s32 	%r260, %r1898, 2;
	add.s32 	%r1046, %r766, %r260;
	mul.lo.s32 	%r261, %r1046, %r765;
	mov.u32 	%r1902, 0;
	mov.u64 	%rd542, %rd174;

$L__BB0_143:
	ld.global.nc.u32 	%r1047, [%rd542];
	cvt.rn.f64.s32 	%fd2, %r1047;
	add.f64 	%fd4, %fd2, 0d3FE0000000000000;
	add.s32 	%r263, %r1047, %r1892;
	setp.lt.s32 	%p86, %r263, %r765;
	or.b32  	%r1048, %r248, %r263;
	setp.gt.s32 	%p87, %r1048, -1;
	and.pred  	%p88, %p86, %p87;
	setp.lt.s32 	%p89, %r248, %r766;
	and.pred  	%p6, %p89, %p88;
	cvt.rn.f32.f64 	%f130, %fd4;
	add.f32 	%f131, %f130, 0f3E800000;
	abs.f32 	%f9, %f131;
	add.f32 	%f132, %f9, 0f40200000;
	setp.geu.f32 	%p90, %f132, 0f40000000;
	@%p90 bra 	$L__BB0_155;

	@%p6 bra 	$L__BB0_146;
	bra.uni 	$L__BB0_145;

$L__BB0_146:
	setp.eq.s32 	%p91, %r243, 0;
	add.s32 	%r1050, %r249, %r263;
	shl.b32 	%r1051, %r1050, 1;
	mul.wide.s32 	%rd175, %r1051, 4;
	add.s64 	%rd176, %rd15, %rd175;
	ld.global.f32 	%f10, [%rd176];
	@%p91 bra 	$L__BB0_148;
	bra.uni 	$L__BB0_147;

$L__BB0_148:
	mov.f32 	%f138, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f10;
  cvt.rn.f16.f32 high, %f138;
  mov.b32 %r1900, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_149;

$L__BB0_145:
	mov.f32 	%f134, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f134;
  cvt.rn.f16.f32 high, %f134;
  mov.b32 %r1900, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_149;

$L__BB0_147:
	mov.f32 	%f135, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f135;
  cvt.rn.f16.f32 high, %f10;
  mov.b32 %r1900, {low,high};}

	// end inline asm

$L__BB0_149:
	add.s32 	%r268, %r1902, %r247;
	mul.wide.s32 	%rd177, %r268, 4;
	add.s64 	%rd178, %rd16, %rd177;
	st.global.u32 	[%rd178], %r1900;
	@%p6 bra 	$L__BB0_151;
	bra.uni 	$L__BB0_150;

$L__BB0_151:
	setp.eq.s32 	%p92, %r243, 0;
	add.s32 	%r1055, %r250, %r263;
	shl.b32 	%r1056, %r1055, 1;
	mul.wide.s32 	%rd179, %r1056, 4;
	add.s64 	%rd180, %rd15, %rd179;
	ld.global.f32 	%f11, [%rd180];
	@%p92 bra 	$L__BB0_153;
	bra.uni 	$L__BB0_152;

$L__BB0_153:
	mov.f32 	%f144, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f11;
  cvt.rn.f16.f32 high, %f144;
  mov.b32 %r1901, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_154;

$L__BB0_150:
	mov.f32 	%f140, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f140;
  cvt.rn.f16.f32 high, %f140;
  mov.b32 %r1901, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_154;

$L__BB0_152:
	mov.f32 	%f141, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f141;
  cvt.rn.f16.f32 high, %f11;
  mov.b32 %r1901, {low,high};}

	// end inline asm

$L__BB0_154:
	add.s32 	%r1059, %r268, 1;
	mul.wide.s32 	%rd181, %r1059, 4;
	add.s64 	%rd182, %rd16, %rd181;
	st.global.u32 	[%rd182], %r1901;
	add.s32 	%r1902, %r1902, 2;

$L__BB0_155:
	cvt.rn.f32.f64 	%f145, %fd2;
	add.f32 	%f146, %f145, 0f3E800000;
	abs.f32 	%f12, %f146;
	add.f32 	%f13, %f12, 0f40000000;
	setp.geu.f32 	%p93, %f13, 0f40000000;
	@%p93 bra 	$L__BB0_167;

	@%p6 bra 	$L__BB0_158;
	bra.uni 	$L__BB0_157;

$L__BB0_158:
	setp.eq.s32 	%p94, %r243, 0;
	add.s32 	%r1061, %r249, %r263;
	shl.b32 	%r1062, %r1061, 1;
	or.b32  	%r1063, %r1062, 1;
	mul.wide.s32 	%rd183, %r1063, 4;
	add.s64 	%rd184, %rd15, %rd183;
	ld.global.f32 	%f14, [%rd184];
	@%p94 bra 	$L__BB0_160;
	bra.uni 	$L__BB0_159;

$L__BB0_160:
	mov.f32 	%f152, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f14;
  cvt.rn.f16.f32 high, %f152;
  mov.b32 %r1903, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_161;

$L__BB0_157:
	mov.f32 	%f148, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f148;
  cvt.rn.f16.f32 high, %f148;
  mov.b32 %r1903, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_161;

$L__BB0_159:
	mov.f32 	%f149, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f149;
  cvt.rn.f16.f32 high, %f14;
  mov.b32 %r1903, {low,high};}

	// end inline asm

$L__BB0_161:
	add.s32 	%r279, %r1902, %r247;
	mul.wide.s32 	%rd185, %r279, 4;
	add.s64 	%rd186, %rd16, %rd185;
	st.global.u32 	[%rd186], %r1903;
	@%p6 bra 	$L__BB0_163;
	bra.uni 	$L__BB0_162;

$L__BB0_163:
	setp.eq.s32 	%p95, %r243, 0;
	add.s32 	%r1067, %r250, %r263;
	shl.b32 	%r1068, %r1067, 1;
	or.b32  	%r1069, %r1068, 1;
	mul.wide.s32 	%rd187, %r1069, 4;
	add.s64 	%rd188, %rd15, %rd187;
	ld.global.f32 	%f15, [%rd188];
	@%p95 bra 	$L__BB0_165;
	bra.uni 	$L__BB0_164;

$L__BB0_165:
	mov.f32 	%f158, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f15;
  cvt.rn.f16.f32 high, %f158;
  mov.b32 %r1904, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_166;

$L__BB0_162:
	mov.f32 	%f154, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f154;
  cvt.rn.f16.f32 high, %f154;
  mov.b32 %r1904, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_166;

$L__BB0_164:
	mov.f32 	%f155, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f155;
  cvt.rn.f16.f32 high, %f15;
  mov.b32 %r1904, {low,high};}

	// end inline asm

$L__BB0_166:
	add.s32 	%r1072, %r279, 1;
	mul.wide.s32 	%rd189, %r1072, 4;
	add.s64 	%rd190, %rd16, %rd189;
	st.global.u32 	[%rd190], %r1904;
	add.s32 	%r1902, %r1902, 2;

$L__BB0_167:
	or.b32  	%r1073, %r252, %r263;
	setp.gt.s32 	%p96, %r1073, -1;
	and.pred  	%p98, %p86, %p96;
	setp.le.s32 	%p99, %r1898, %r766;
	and.pred  	%p7, %p99, %p98;
	add.f32 	%f16, %f9, 0f3FC00000;
	setp.geu.f32 	%p100, %f16, 0f40000000;
	@%p100 bra 	$L__BB0_179;

	@%p7 bra 	$L__BB0_170;
	bra.uni 	$L__BB0_169;

$L__BB0_170:
	setp.eq.s32 	%p101, %r243, 0;
	add.s32 	%r1075, %r251, %r263;
	shl.b32 	%r1076, %r1075, 1;
	mul.wide.s32 	%rd191, %r1076, 4;
	add.s64 	%rd192, %rd15, %rd191;
	ld.global.f32 	%f17, [%rd192];
	@%p101 bra 	$L__BB0_172;
	bra.uni 	$L__BB0_171;

$L__BB0_172:
	mov.f32 	%f164, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f17;
  cvt.rn.f16.f32 high, %f164;
  mov.b32 %r1906, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_173;

$L__BB0_169:
	mov.f32 	%f160, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f160;
  cvt.rn.f16.f32 high, %f160;
  mov.b32 %r1906, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_173;

$L__BB0_171:
	mov.f32 	%f161, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f161;
  cvt.rn.f16.f32 high, %f17;
  mov.b32 %r1906, {low,high};}

	// end inline asm

$L__BB0_173:
	add.s32 	%r290, %r1902, %r247;
	mul.wide.s32 	%rd193, %r290, 4;
	add.s64 	%rd194, %rd16, %rd193;
	st.global.u32 	[%rd194], %r1906;
	@%p7 bra 	$L__BB0_175;
	bra.uni 	$L__BB0_174;

$L__BB0_175:
	setp.eq.s32 	%p102, %r243, 0;
	add.s32 	%r1080, %r253, %r263;
	shl.b32 	%r1081, %r1080, 1;
	mul.wide.s32 	%rd195, %r1081, 4;
	add.s64 	%rd196, %rd15, %rd195;
	ld.global.f32 	%f18, [%rd196];
	@%p102 bra 	$L__BB0_177;
	bra.uni 	$L__BB0_176;

$L__BB0_177:
	mov.f32 	%f170, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f18;
  cvt.rn.f16.f32 high, %f170;
  mov.b32 %r1907, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_178;

$L__BB0_174:
	mov.f32 	%f166, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f166;
  cvt.rn.f16.f32 high, %f166;
  mov.b32 %r1907, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_178;

$L__BB0_176:
	mov.f32 	%f167, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f167;
  cvt.rn.f16.f32 high, %f18;
  mov.b32 %r1907, {low,high};}

	// end inline asm

$L__BB0_178:
	add.s32 	%r1084, %r290, 1;
	mul.wide.s32 	%rd197, %r1084, 4;
	add.s64 	%rd198, %rd16, %rd197;
	st.global.u32 	[%rd198], %r1907;
	add.s32 	%r1902, %r1902, 2;

$L__BB0_179:
	add.f32 	%f19, %f12, 0f3F800000;
	setp.geu.f32 	%p103, %f19, 0f40000000;
	@%p103 bra 	$L__BB0_191;

	@%p7 bra 	$L__BB0_182;
	bra.uni 	$L__BB0_181;

$L__BB0_182:
	setp.eq.s32 	%p104, %r243, 0;
	add.s32 	%r1086, %r251, %r263;
	shl.b32 	%r1087, %r1086, 1;
	or.b32  	%r1088, %r1087, 1;
	mul.wide.s32 	%rd199, %r1088, 4;
	add.s64 	%rd200, %rd15, %rd199;
	ld.global.f32 	%f20, [%rd200];
	@%p104 bra 	$L__BB0_184;
	bra.uni 	$L__BB0_183;

$L__BB0_184:
	mov.f32 	%f176, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f20;
  cvt.rn.f16.f32 high, %f176;
  mov.b32 %r1909, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_185;

$L__BB0_181:
	mov.f32 	%f172, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f172;
  cvt.rn.f16.f32 high, %f172;
  mov.b32 %r1909, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_185;

$L__BB0_183:
	mov.f32 	%f173, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f173;
  cvt.rn.f16.f32 high, %f20;
  mov.b32 %r1909, {low,high};}

	// end inline asm

$L__BB0_185:
	add.s32 	%r301, %r1902, %r247;
	mul.wide.s32 	%rd201, %r301, 4;
	add.s64 	%rd202, %rd16, %rd201;
	st.global.u32 	[%rd202], %r1909;
	@%p7 bra 	$L__BB0_187;
	bra.uni 	$L__BB0_186;

$L__BB0_187:
	setp.eq.s32 	%p105, %r243, 0;
	add.s32 	%r1092, %r253, %r263;
	shl.b32 	%r1093, %r1092, 1;
	or.b32  	%r1094, %r1093, 1;
	mul.wide.s32 	%rd203, %r1094, 4;
	add.s64 	%rd204, %rd15, %rd203;
	ld.global.f32 	%f21, [%rd204];
	@%p105 bra 	$L__BB0_189;
	bra.uni 	$L__BB0_188;

$L__BB0_189:
	mov.f32 	%f182, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f21;
  cvt.rn.f16.f32 high, %f182;
  mov.b32 %r1910, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_190;

$L__BB0_186:
	mov.f32 	%f178, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f178;
  cvt.rn.f16.f32 high, %f178;
  mov.b32 %r1910, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_190;

$L__BB0_188:
	mov.f32 	%f179, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f179;
  cvt.rn.f16.f32 high, %f21;
  mov.b32 %r1910, {low,high};}

	// end inline asm

$L__BB0_190:
	add.s32 	%r1097, %r301, 1;
	mul.wide.s32 	%rd205, %r1097, 4;
	add.s64 	%rd206, %rd16, %rd205;
	st.global.u32 	[%rd206], %r1910;
	add.s32 	%r1902, %r1902, 2;

$L__BB0_191:
	or.b32  	%r1098, %r1898, %r263;
	setp.gt.s32 	%p106, %r1098, -1;
	and.pred  	%p108, %p86, %p106;
	setp.lt.s32 	%p109, %r1898, %r766;
	and.pred  	%p8, %p109, %p108;
	add.f32 	%f22, %f9, 0f3F000000;
	setp.geu.f32 	%p110, %f22, 0f40000000;
	@%p110 bra 	$L__BB0_203;

	@%p8 bra 	$L__BB0_194;
	bra.uni 	$L__BB0_193;

$L__BB0_194:
	setp.eq.s32 	%p111, %r243, 0;
	add.s32 	%r1100, %r255, %r263;
	shl.b32 	%r1101, %r1100, 1;
	mul.wide.s32 	%rd207, %r1101, 4;
	add.s64 	%rd208, %rd15, %rd207;
	ld.global.f32 	%f23, [%rd208];
	@%p111 bra 	$L__BB0_196;
	bra.uni 	$L__BB0_195;

$L__BB0_196:
	mov.f32 	%f188, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f23;
  cvt.rn.f16.f32 high, %f188;
  mov.b32 %r1912, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_197;

$L__BB0_193:
	mov.f32 	%f184, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f184;
  cvt.rn.f16.f32 high, %f184;
  mov.b32 %r1912, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_197;

$L__BB0_195:
	mov.f32 	%f185, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f185;
  cvt.rn.f16.f32 high, %f23;
  mov.b32 %r1912, {low,high};}

	// end inline asm

$L__BB0_197:
	add.s32 	%r312, %r1902, %r247;
	mul.wide.s32 	%rd209, %r312, 4;
	add.s64 	%rd210, %rd16, %rd209;
	st.global.u32 	[%rd210], %r1912;
	@%p8 bra 	$L__BB0_199;
	bra.uni 	$L__BB0_198;

$L__BB0_199:
	setp.eq.s32 	%p112, %r243, 0;
	add.s32 	%r1105, %r254, %r263;
	shl.b32 	%r1106, %r1105, 1;
	mul.wide.s32 	%rd211, %r1106, 4;
	add.s64 	%rd212, %rd15, %rd211;
	ld.global.f32 	%f24, [%rd212];
	@%p112 bra 	$L__BB0_201;
	bra.uni 	$L__BB0_200;

$L__BB0_201:
	mov.f32 	%f194, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f24;
  cvt.rn.f16.f32 high, %f194;
  mov.b32 %r1913, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_202;

$L__BB0_198:
	mov.f32 	%f190, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f190;
  cvt.rn.f16.f32 high, %f190;
  mov.b32 %r1913, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_202;

$L__BB0_200:
	mov.f32 	%f191, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f191;
  cvt.rn.f16.f32 high, %f24;
  mov.b32 %r1913, {low,high};}

	// end inline asm

$L__BB0_202:
	add.s32 	%r1109, %r312, 1;
	mul.wide.s32 	%rd213, %r1109, 4;
	add.s64 	%rd214, %rd16, %rd213;
	st.global.u32 	[%rd214], %r1913;
	add.s32 	%r1902, %r1902, 2;

$L__BB0_203:
	add.f32 	%f195, %f12, 0f00000000;
	setp.geu.f32 	%p113, %f195, 0f40000000;
	@%p113 bra 	$L__BB0_215;

	@%p8 bra 	$L__BB0_206;
	bra.uni 	$L__BB0_205;

$L__BB0_206:
	setp.eq.s32 	%p114, %r243, 0;
	add.s32 	%r1111, %r255, %r263;
	shl.b32 	%r1112, %r1111, 1;
	or.b32  	%r1113, %r1112, 1;
	mul.wide.s32 	%rd215, %r1113, 4;
	add.s64 	%rd216, %rd15, %rd215;
	ld.global.f32 	%f25, [%rd216];
	@%p114 bra 	$L__BB0_208;
	bra.uni 	$L__BB0_207;

$L__BB0_208:
	mov.f32 	%f201, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f25;
  cvt.rn.f16.f32 high, %f201;
  mov.b32 %r1915, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_209;

$L__BB0_205:
	mov.f32 	%f197, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f197;
  cvt.rn.f16.f32 high, %f197;
  mov.b32 %r1915, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_209;

$L__BB0_207:
	mov.f32 	%f198, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f198;
  cvt.rn.f16.f32 high, %f25;
  mov.b32 %r1915, {low,high};}

	// end inline asm

$L__BB0_209:
	add.s32 	%r323, %r1902, %r247;
	mul.wide.s32 	%rd217, %r323, 4;
	add.s64 	%rd218, %rd16, %rd217;
	st.global.u32 	[%rd218], %r1915;
	@%p8 bra 	$L__BB0_211;
	bra.uni 	$L__BB0_210;

$L__BB0_211:
	setp.eq.s32 	%p115, %r243, 0;
	add.s32 	%r1117, %r254, %r263;
	shl.b32 	%r1118, %r1117, 1;
	or.b32  	%r1119, %r1118, 1;
	mul.wide.s32 	%rd219, %r1119, 4;
	add.s64 	%rd220, %rd15, %rd219;
	ld.global.f32 	%f26, [%rd220];
	@%p115 bra 	$L__BB0_213;
	bra.uni 	$L__BB0_212;

$L__BB0_213:
	mov.f32 	%f207, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f26;
  cvt.rn.f16.f32 high, %f207;
  mov.b32 %r1916, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_214;

$L__BB0_210:
	mov.f32 	%f203, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f203;
  cvt.rn.f16.f32 high, %f203;
  mov.b32 %r1916, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_214;

$L__BB0_212:
	mov.f32 	%f204, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f204;
  cvt.rn.f16.f32 high, %f26;
  mov.b32 %r1916, {low,high};}

	// end inline asm

$L__BB0_214:
	add.s32 	%r1122, %r323, 1;
	mul.wide.s32 	%rd221, %r1122, 4;
	add.s64 	%rd222, %rd16, %rd221;
	st.global.u32 	[%rd222], %r1916;
	add.s32 	%r1902, %r1902, 2;

$L__BB0_215:
	or.b32  	%r1123, %r257, %r263;
	setp.gt.s32 	%p116, %r1123, -1;
	and.pred  	%p118, %p86, %p116;
	setp.lt.s32 	%p119, %r257, %r766;
	and.pred  	%p9, %p119, %p118;
	@%p110 bra 	$L__BB0_227;

	@%p9 bra 	$L__BB0_218;
	bra.uni 	$L__BB0_217;

$L__BB0_218:
	setp.eq.s32 	%p121, %r243, 0;
	add.s32 	%r1125, %r256, %r263;
	shl.b32 	%r1126, %r1125, 1;
	mul.wide.s32 	%rd223, %r1126, 4;
	add.s64 	%rd224, %rd15, %rd223;
	ld.global.f32 	%f27, [%rd224];
	@%p121 bra 	$L__BB0_220;
	bra.uni 	$L__BB0_219;

$L__BB0_220:
	mov.f32 	%f213, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f27;
  cvt.rn.f16.f32 high, %f213;
  mov.b32 %r1918, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_221;

$L__BB0_217:
	mov.f32 	%f209, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f209;
  cvt.rn.f16.f32 high, %f209;
  mov.b32 %r1918, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_221;

$L__BB0_219:
	mov.f32 	%f210, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f210;
  cvt.rn.f16.f32 high, %f27;
  mov.b32 %r1918, {low,high};}

	// end inline asm

$L__BB0_221:
	add.s32 	%r334, %r1902, %r247;
	mul.wide.s32 	%rd225, %r334, 4;
	add.s64 	%rd226, %rd16, %rd225;
	st.global.u32 	[%rd226], %r1918;
	@%p9 bra 	$L__BB0_223;
	bra.uni 	$L__BB0_222;

$L__BB0_223:
	setp.eq.s32 	%p122, %r243, 0;
	add.s32 	%r1130, %r258, %r263;
	shl.b32 	%r1131, %r1130, 1;
	mul.wide.s32 	%rd227, %r1131, 4;
	add.s64 	%rd228, %rd15, %rd227;
	ld.global.f32 	%f28, [%rd228];
	@%p122 bra 	$L__BB0_225;
	bra.uni 	$L__BB0_224;

$L__BB0_225:
	mov.f32 	%f219, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f28;
  cvt.rn.f16.f32 high, %f219;
  mov.b32 %r1919, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_226;

$L__BB0_222:
	mov.f32 	%f215, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f215;
  cvt.rn.f16.f32 high, %f215;
  mov.b32 %r1919, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_226;

$L__BB0_224:
	mov.f32 	%f216, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f216;
  cvt.rn.f16.f32 high, %f28;
  mov.b32 %r1919, {low,high};}

	// end inline asm

$L__BB0_226:
	add.s32 	%r1134, %r334, 1;
	mul.wide.s32 	%rd229, %r1134, 4;
	add.s64 	%rd230, %rd16, %rd229;
	st.global.u32 	[%rd230], %r1919;
	add.s32 	%r1902, %r1902, 2;

$L__BB0_227:
	@%p103 bra 	$L__BB0_239;

	@%p9 bra 	$L__BB0_230;
	bra.uni 	$L__BB0_229;

$L__BB0_230:
	setp.eq.s32 	%p124, %r243, 0;
	add.s32 	%r1136, %r256, %r263;
	shl.b32 	%r1137, %r1136, 1;
	or.b32  	%r1138, %r1137, 1;
	mul.wide.s32 	%rd231, %r1138, 4;
	add.s64 	%rd232, %rd15, %rd231;
	ld.global.f32 	%f29, [%rd232];
	@%p124 bra 	$L__BB0_232;
	bra.uni 	$L__BB0_231;

$L__BB0_232:
	mov.f32 	%f225, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f29;
  cvt.rn.f16.f32 high, %f225;
  mov.b32 %r1921, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_233;

$L__BB0_229:
	mov.f32 	%f221, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f221;
  cvt.rn.f16.f32 high, %f221;
  mov.b32 %r1921, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_233;

$L__BB0_231:
	mov.f32 	%f222, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f222;
  cvt.rn.f16.f32 high, %f29;
  mov.b32 %r1921, {low,high};}

	// end inline asm

$L__BB0_233:
	add.s32 	%r345, %r1902, %r247;
	mul.wide.s32 	%rd233, %r345, 4;
	add.s64 	%rd234, %rd16, %rd233;
	st.global.u32 	[%rd234], %r1921;
	@%p9 bra 	$L__BB0_235;
	bra.uni 	$L__BB0_234;

$L__BB0_235:
	setp.eq.s32 	%p125, %r243, 0;
	add.s32 	%r1142, %r258, %r263;
	shl.b32 	%r1143, %r1142, 1;
	or.b32  	%r1144, %r1143, 1;
	mul.wide.s32 	%rd235, %r1144, 4;
	add.s64 	%rd236, %rd15, %rd235;
	ld.global.f32 	%f30, [%rd236];
	@%p125 bra 	$L__BB0_237;
	bra.uni 	$L__BB0_236;

$L__BB0_237:
	mov.f32 	%f231, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f30;
  cvt.rn.f16.f32 high, %f231;
  mov.b32 %r1922, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_238;

$L__BB0_234:
	mov.f32 	%f227, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f227;
  cvt.rn.f16.f32 high, %f227;
  mov.b32 %r1922, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_238;

$L__BB0_236:
	mov.f32 	%f228, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f228;
  cvt.rn.f16.f32 high, %f30;
  mov.b32 %r1922, {low,high};}

	// end inline asm

$L__BB0_238:
	add.s32 	%r1147, %r345, 1;
	mul.wide.s32 	%rd237, %r1147, 4;
	add.s64 	%rd238, %rd16, %rd237;
	st.global.u32 	[%rd238], %r1922;
	add.s32 	%r1902, %r1902, 2;

$L__BB0_239:
	or.b32  	%r1148, %r260, %r263;
	setp.gt.s32 	%p126, %r1148, -1;
	and.pred  	%p128, %p86, %p126;
	setp.lt.s32 	%p129, %r260, %r766;
	and.pred  	%p10, %p129, %p128;
	@%p100 bra 	$L__BB0_251;

	@%p10 bra 	$L__BB0_242;
	bra.uni 	$L__BB0_241;

$L__BB0_242:
	setp.eq.s32 	%p131, %r243, 0;
	add.s32 	%r1150, %r259, %r263;
	shl.b32 	%r1151, %r1150, 1;
	mul.wide.s32 	%rd239, %r1151, 4;
	add.s64 	%rd240, %rd15, %rd239;
	ld.global.f32 	%f31, [%rd240];
	@%p131 bra 	$L__BB0_244;
	bra.uni 	$L__BB0_243;

$L__BB0_244:
	mov.f32 	%f237, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f31;
  cvt.rn.f16.f32 high, %f237;
  mov.b32 %r1924, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_245;

$L__BB0_241:
	mov.f32 	%f233, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f233;
  cvt.rn.f16.f32 high, %f233;
  mov.b32 %r1924, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_245;

$L__BB0_243:
	mov.f32 	%f234, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f234;
  cvt.rn.f16.f32 high, %f31;
  mov.b32 %r1924, {low,high};}

	// end inline asm

$L__BB0_245:
	add.s32 	%r356, %r1902, %r247;
	mul.wide.s32 	%rd241, %r356, 4;
	add.s64 	%rd242, %rd16, %rd241;
	st.global.u32 	[%rd242], %r1924;
	@%p10 bra 	$L__BB0_247;
	bra.uni 	$L__BB0_246;

$L__BB0_247:
	setp.eq.s32 	%p132, %r243, 0;
	add.s32 	%r1155, %r261, %r263;
	shl.b32 	%r1156, %r1155, 1;
	mul.wide.s32 	%rd243, %r1156, 4;
	add.s64 	%rd244, %rd15, %rd243;
	ld.global.f32 	%f32, [%rd244];
	@%p132 bra 	$L__BB0_249;
	bra.uni 	$L__BB0_248;

$L__BB0_249:
	mov.f32 	%f243, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f32;
  cvt.rn.f16.f32 high, %f243;
  mov.b32 %r1925, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_250;

$L__BB0_246:
	mov.f32 	%f239, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f239;
  cvt.rn.f16.f32 high, %f239;
  mov.b32 %r1925, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_250;

$L__BB0_248:
	mov.f32 	%f240, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f240;
  cvt.rn.f16.f32 high, %f32;
  mov.b32 %r1925, {low,high};}

	// end inline asm

$L__BB0_250:
	add.s32 	%r1159, %r356, 1;
	mul.wide.s32 	%rd245, %r1159, 4;
	add.s64 	%rd246, %rd16, %rd245;
	st.global.u32 	[%rd246], %r1925;
	add.s32 	%r1902, %r1902, 2;

$L__BB0_251:
	@%p93 bra 	$L__BB0_263;

	@%p10 bra 	$L__BB0_254;
	bra.uni 	$L__BB0_253;

$L__BB0_254:
	setp.eq.s32 	%p134, %r243, 0;
	add.s32 	%r1161, %r259, %r263;
	shl.b32 	%r1162, %r1161, 1;
	or.b32  	%r1163, %r1162, 1;
	mul.wide.s32 	%rd247, %r1163, 4;
	add.s64 	%rd248, %rd15, %rd247;
	ld.global.f32 	%f33, [%rd248];
	@%p134 bra 	$L__BB0_256;
	bra.uni 	$L__BB0_255;

$L__BB0_256:
	mov.f32 	%f249, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f33;
  cvt.rn.f16.f32 high, %f249;
  mov.b32 %r1927, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_257;

$L__BB0_253:
	mov.f32 	%f245, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f245;
  cvt.rn.f16.f32 high, %f245;
  mov.b32 %r1927, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_257;

$L__BB0_255:
	mov.f32 	%f246, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f246;
  cvt.rn.f16.f32 high, %f33;
  mov.b32 %r1927, {low,high};}

	// end inline asm

$L__BB0_257:
	add.s32 	%r367, %r1902, %r247;
	mul.wide.s32 	%rd249, %r367, 4;
	add.s64 	%rd250, %rd16, %rd249;
	st.global.u32 	[%rd250], %r1927;
	@%p10 bra 	$L__BB0_259;
	bra.uni 	$L__BB0_258;

$L__BB0_259:
	setp.eq.s32 	%p135, %r243, 0;
	add.s32 	%r1167, %r261, %r263;
	shl.b32 	%r1168, %r1167, 1;
	or.b32  	%r1169, %r1168, 1;
	mul.wide.s32 	%rd251, %r1169, 4;
	add.s64 	%rd252, %rd15, %rd251;
	ld.global.f32 	%f34, [%rd252];
	@%p135 bra 	$L__BB0_261;
	bra.uni 	$L__BB0_260;

$L__BB0_261:
	mov.f32 	%f255, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f34;
  cvt.rn.f16.f32 high, %f255;
  mov.b32 %r1928, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_262;

$L__BB0_258:
	mov.f32 	%f251, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f251;
  cvt.rn.f16.f32 high, %f251;
  mov.b32 %r1928, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_262;

$L__BB0_260:
	mov.f32 	%f252, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f252;
  cvt.rn.f16.f32 high, %f34;
  mov.b32 %r1928, {low,high};}

	// end inline asm

$L__BB0_262:
	add.s32 	%r1172, %r367, 1;
	mul.wide.s32 	%rd253, %r1172, 4;
	add.s64 	%rd254, %rd16, %rd253;
	st.global.u32 	[%rd254], %r1928;
	add.s32 	%r1902, %r1902, 2;

$L__BB0_263:
	add.s64 	%rd542, %rd542, 4;
	setp.ne.s64 	%p136, %rd542, %rd256;
	@%p136 bra 	$L__BB0_143;

$L__BB0_264:
	add.s32 	%r1898, %r1898, %r37;
	setp.lt.s32 	%p137, %r1898, %r766;
	@%p137 bra 	$L__BB0_141;

$L__BB0_265:
	add.s32 	%r1892, %r1892, %r786;
	setp.lt.s32 	%p138, %r1892, %r765;
	@%p138 bra 	$L__BB0_139;
	bra.uni 	$L__BB0_266;

$L__BB0_120:
	@%p22 bra 	$L__BB0_266;

	neg.s32 	%r216, %r65;
	mov.u32 	%r987, 31;
	sub.s32 	%r988, %r987, %r35;
	setp.gt.s32 	%p76, %r34, %r35;
	selp.b32 	%r989, %r35, %r988, %p76;
	shl.b32 	%r990, %r989, 2;
	mov.u32 	%r991, 2;
	sub.s32 	%r217, %r990, %r768;
	shl.b32 	%r992, %r767, 2;
	mov.u32 	%r993, 128;
	sub.s32 	%r218, %r993, %r992;
	sub.s32 	%r994, %r991, %r768;
	add.s32 	%r219, %r994, %r990;
	add.s32 	%r220, %r765, -1;
	add.s32 	%r221, %r217, 1;
	add.s32 	%r222, %r219, 1;
	rem.s32 	%r1019, %r221, %r218;
	add.s32 	%r1020, %r1019, %r218;
	rem.s32 	%r233, %r1020, %r218;
	rem.s32 	%r1021, %r222, %r218;
	add.s32 	%r1022, %r1021, %r218;
	rem.s32 	%r234, %r1022, %r218;

$L__BB0_122:
	setp.ne.s32 	%p77, %r31, %r216;
	@%p77 bra 	$L__BB0_136;

	shl.b32 	%r224, %r1892, 1;
	rem.s32 	%r995, %r217, %r218;
	add.s32 	%r996, %r995, %r218;
	rem.s32 	%r225, %r996, %r218;
	rem.s32 	%r997, %r219, %r218;
	add.s32 	%r998, %r997, %r218;
	rem.s32 	%r226, %r998, %r218;
	@%p76 bra 	$L__BB0_125;
	bra.uni 	$L__BB0_124;

$L__BB0_125:
	mul.lo.s32 	%r1001, %r224, %r218;
	add.s32 	%r1002, %r1001, %r225;
	mul.wide.s32 	%rd156, %r1002, 4;
	add.s64 	%rd157, %rd15, %rd156;
	ld.global.f32 	%f116, [%rd157];
	add.s32 	%r1003, %r1001, %r226;
	mul.wide.s32 	%rd158, %r1003, 4;
	add.s64 	%rd159, %rd15, %rd158;
	ld.global.f32 	%f117, [%rd159];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f116;
  cvt.rn.f16.f32 high, %f117;
  mov.b32 %r1893, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_126;

$L__BB0_124:
	mov.f32 	%f115, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f115;
  cvt.rn.f16.f32 high, %f115;
  mov.b32 %r1893, {low,high};}

	// end inline asm

$L__BB0_126:
	shl.b32 	%r1004, %r1892, 5;
	add.s32 	%r1005, %r1004, %r35;
	shl.b32 	%r1006, %r1005, 2;
	mul.wide.s32 	%rd160, %r1006, 4;
	add.s64 	%rd17, %rd16, %rd160;
	st.global.u32 	[%rd17], %r1893;
	@%p76 bra 	$L__BB0_128;
	bra.uni 	$L__BB0_127;

$L__BB0_128:
	add.s32 	%r1009, %r224, 1;
	mul.lo.s32 	%r1010, %r1009, %r218;
	add.s32 	%r1011, %r1010, %r225;
	mul.wide.s32 	%rd161, %r1011, 4;
	add.s64 	%rd162, %rd15, %rd161;
	ld.global.f32 	%f120, [%rd162];
	add.s32 	%r1012, %r1010, %r226;
	mul.wide.s32 	%rd163, %r1012, 4;
	add.s64 	%rd164, %rd15, %rd163;
	ld.global.f32 	%f121, [%rd164];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f120;
  cvt.rn.f16.f32 high, %f121;
  mov.b32 %r1894, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_129;

$L__BB0_127:
	mov.f32 	%f119, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f119;
  cvt.rn.f16.f32 high, %f119;
  mov.b32 %r1894, {low,high};}

	// end inline asm

$L__BB0_129:
	add.s32 	%r1013, %r220, %r1892;
	rem.s32 	%r1014, %r1013, %r765;
	shl.b32 	%r1015, %r1014, 5;
	add.s32 	%r1016, %r1015, %r35;
	shl.b32 	%r1017, %r1016, 2;
	or.b32  	%r1018, %r1017, 2;
	mul.wide.s32 	%rd165, %r1018, 4;
	add.s64 	%rd18, %rd16, %rd165;
	st.global.u32 	[%rd18], %r1894;
	@%p76 bra 	$L__BB0_131;
	bra.uni 	$L__BB0_130;

$L__BB0_131:
	mul.lo.s32 	%r1025, %r224, %r218;
	add.s32 	%r1026, %r1025, %r233;
	mul.wide.s32 	%rd166, %r1026, 4;
	add.s64 	%rd167, %rd15, %rd166;
	ld.global.f32 	%f124, [%rd167];
	add.s32 	%r1027, %r1025, %r234;
	mul.wide.s32 	%rd168, %r1027, 4;
	add.s64 	%rd169, %rd15, %rd168;
	ld.global.f32 	%f125, [%rd169];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f124;
  cvt.rn.f16.f32 high, %f125;
  mov.b32 %r1895, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_132;

$L__BB0_130:
	mov.f32 	%f123, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f123;
  cvt.rn.f16.f32 high, %f123;
  mov.b32 %r1895, {low,high};}

	// end inline asm

$L__BB0_132:
	st.global.u32 	[%rd17+4], %r1895;
	@%p76 bra 	$L__BB0_134;
	bra.uni 	$L__BB0_133;

$L__BB0_134:
	add.s32 	%r1030, %r224, 1;
	mul.lo.s32 	%r1031, %r1030, %r218;
	add.s32 	%r1032, %r1031, %r233;
	mul.wide.s32 	%rd170, %r1032, 4;
	add.s64 	%rd171, %rd15, %rd170;
	ld.global.f32 	%f128, [%rd171];
	add.s32 	%r1033, %r1031, %r234;
	mul.wide.s32 	%rd172, %r1033, 4;
	add.s64 	%rd173, %rd15, %rd172;
	ld.global.f32 	%f129, [%rd173];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f128;
  cvt.rn.f16.f32 high, %f129;
  mov.b32 %r1896, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_135;

$L__BB0_133:
	mov.f32 	%f127, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f127;
  cvt.rn.f16.f32 high, %f127;
  mov.b32 %r1896, {low,high};}

	// end inline asm

$L__BB0_135:
	st.global.u32 	[%rd18+4], %r1896;

$L__BB0_136:
	add.s32 	%r1892, %r1892, %r786;
	setp.lt.s32 	%p82, %r1892, %r765;
	@%p82 bra 	$L__BB0_122;

$L__BB0_266:
	add.s32 	%r1174, %r760, -1;
	mad.lo.s32 	%r1175, %r761, 576, 128;
	mul.lo.s32 	%r1176, %r1175, %r1174;
	add.s32 	%r1177, %r59, -64;
	add.s32 	%r1178, %r1177, %r59;
	add.s32 	%r1179, %r761, -1;
	mad.lo.s32 	%r1180, %r1178, %r1179, %r1176;
	mul.lo.s32 	%r1181, %r1174, %r761;
	mul.lo.s32 	%r1182, %r1181, 320;
	mad.lo.s32 	%r1183, %r1177, %r1179, %r1182;
	add.s32 	%r376, %r1183, %r1180;
	setp.lt.s32 	%p139, %r376, 1;
	mov.f32 	%f257, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f257;
  cvt.rn.f16.f32 high, %f257;
  mov.b32 %r1931, {low,high};}

	// end inline asm
	@%p139 bra 	$L__BB0_269;

	mov.u32 	%r1932, 0;
	mov.u32 	%r1930, _ZN6kernel5shmemE;

$L__BB0_268:
	st.shared.u32 	[%r1930], %r1931;
	mov.f32 	%f265, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f265;
  cvt.rn.f16.f32 high, %f265;
  mov.b32 %r1186, {low,high};}

	// end inline asm
	st.shared.u32 	[%r1930+4], %r1186;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f265;
  cvt.rn.f16.f32 high, %f265;
  mov.b32 %r1187, {low,high};}

	// end inline asm
	st.shared.u32 	[%r1930+8], %r1187;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f265;
  cvt.rn.f16.f32 high, %f265;
  mov.b32 %r1188, {low,high};}

	// end inline asm
	st.shared.u32 	[%r1930+12], %r1188;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f265;
  cvt.rn.f16.f32 high, %f265;
  mov.b32 %r1931, {low,high};}

	// end inline asm
	add.s32 	%r1930, %r1930, 16;
	add.s32 	%r1932, %r1932, 4;
	setp.lt.s32 	%p140, %r1932, %r376;
	@%p140 bra 	$L__BB0_268;

$L__BB0_269:
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f257;
  cvt.rn.f16.f32 high, %f257;
  mov.b32 %r1191, {low,high};}

	// end inline asm
	mov.u32 	%r1192, 31;
	sub.s32 	%r1193, %r1192, %r35;
	setp.gt.s32 	%p142, %r34, %r35;
	selp.b32 	%r1194, %r35, %r1193, %p142;
	shl.b32 	%r1195, %r1194, 2;
	sub.s32 	%r385, %r1195, %r768;
	shl.b32 	%r1196, %r767, 2;
	mov.u32 	%r1197, 128;
	sub.s32 	%r386, %r1197, %r1196;
	rem.s32 	%r1198, %r385, %r386;
	add.s32 	%r1199, %r1198, %r386;
	rem.s32 	%r387, %r1199, %r386;
	add.s32 	%r1200, %r385, 2;
	rem.s32 	%r1201, %r1200, %r386;
	add.s32 	%r1202, %r1201, %r386;
	rem.s32 	%r388, %r1202, %r386;
	add.s32 	%r1213, %r385, 1;
	rem.s32 	%r1214, %r1213, %r386;
	add.s32 	%r1215, %r1214, %r386;
	rem.s32 	%r389, %r1215, %r386;
	add.s32 	%r1216, %r385, 3;
	rem.s32 	%r1217, %r1216, %r386;
	add.s32 	%r1218, %r1217, %r386;
	rem.s32 	%r390, %r1218, %r386;
	// begin inline asm
	mov.u32 %r1229, %envreg2;
	// end inline asm
	cvt.u64.u32 	%rd262, %r1229;
	// begin inline asm
	mov.u32 %r1230, %envreg1;
	// end inline asm
	cvt.u64.u32 	%rd263, %r1230;
	bfi.b64 	%rd26, %rd263, %rd262, 32, 32;
	setp.ne.s64 	%p150, %rd26, 0;
	@%p150 bra 	$L__BB0_287;

	// begin inline asm
	trap;
	// end inline asm

$L__BB0_287:
	add.s64 	%rd27, %rd26, 4;
	mov.u32 	%r1231, %nctaid.y;
	mov.u32 	%r1232, %nctaid.x;
	mul.lo.s32 	%r1233, %r1232, %r1231;
	mov.u32 	%r1234, %nctaid.z;
	mul.lo.s32 	%r391, %r1233, %r1234;
	neg.s32 	%r1235, %r31;
	add.s32 	%r1236, %r35, %r30;
	setp.ne.s32 	%p151, %r1236, %r1235;
	mov.u32 	%r1237, %ctaid.x;
	add.s32 	%r392, %r1237, %r32;
	neg.s32 	%r393, %r33;
	bar.sync 	0;
	@%p151 bra 	$L__BB0_291;

	setp.eq.s32 	%p152, %r392, %r393;
	mov.u32 	%r1240, -2147483647;
	sub.s32 	%r1241, %r1240, %r391;
	selp.b32 	%r1239, %r1241, 1, %p152;
	membar.gl;
	// begin inline asm
	atom.add.release.gpu.u32 %r1238,[%rd27],%r1239;
	// end inline asm

$L__BB0_289:
	ld.volatile.u32 	%r1242, [%rd27];
	xor.b32  	%r1243, %r1242, %r1238;
	setp.gt.s32 	%p153, %r1243, -1;
	@%p153 bra 	$L__BB0_289;

	// begin inline asm
	ld.acquire.gpu.u32 %r1244,[%rd27];
	// end inline asm

$L__BB0_291:
	bar.sync 	0;
	setp.lt.s32 	%p154, %r38, 1;
	@%p154 bra 	$L__BB0_587;

	setp.lt.s32 	%p155, %r387, %r779;
	setp.ge.s32 	%p156, %r387, %r778;
	and.pred  	%p11, %p155, %p156;
	setp.lt.s32 	%p157, %r389, %r779;
	setp.ge.s32 	%p158, %r389, %r778;
	and.pred  	%p12, %p157, %p158;
	setp.lt.s32 	%p159, %r388, %r779;
	setp.ge.s32 	%p160, %r388, %r778;
	and.pred  	%p13, %p159, %p160;
	setp.lt.s32 	%p161, %r390, %r779;
	setp.ge.s32 	%p162, %r390, %r778;
	and.pred  	%p14, %p161, %p162;
	mov.u32 	%r2049, 0;
	mul.wide.s32 	%rd270, %r35, 16;
	mul.wide.s32 	%rd272, %r35, 8;
	mov.u32 	%r1933, %r1191;
	mov.u32 	%r1934, %r1191;
	mov.u32 	%r2064, %r1191;
	mov.u32 	%r1936, %r1191;
	mov.u32 	%r1937, %r1191;
	mov.u32 	%r2149, %r1191;
	mov.u32 	%r1939, %r1191;
	mov.u32 	%r2132, %r1191;
	mov.u32 	%r1941, %r1191;
	mov.u32 	%r2066, %r1191;
	mov.u32 	%r1943, %r1191;
	mov.u32 	%r2134, %r1191;
	mov.u32 	%r1945, %r1191;
	mov.u32 	%r1946, %r1191;
	mov.u32 	%r1947, %r1191;
	mov.u32 	%r1948, %r1191;
	mov.u32 	%r1949, %r1191;
	mov.u32 	%r1950, %r1191;
	mov.u32 	%r1951, %r1191;
	mov.u32 	%r2151, %r1191;
	mov.u32 	%r1953, %r1191;
	mov.u32 	%r1954, %r1191;
	mov.u32 	%r1955, %r1191;
	mov.u32 	%r1956, %r1191;
	mov.u32 	%r1957, %r1191;
	mov.u32 	%r1958, %r1191;
	mov.u32 	%r1959, %r1191;
	mov.u32 	%r1960, %r1191;
	mov.u32 	%r1961, %r1191;
	mov.u32 	%r1962, %r1191;
	mov.u32 	%r1963, %r1191;
	mov.u32 	%r1964, %r1191;
	mov.u32 	%r1965, %r1191;
	mov.u32 	%r1966, %r1191;
	mov.u32 	%r1967, %r1191;
	mov.u32 	%r1968, %r1191;
	mov.u32 	%r1969, %r1191;
	mov.u32 	%r1970, %r1191;
	mov.u32 	%r1971, %r1191;
	mov.u32 	%r1972, %r1191;
	mov.u32 	%r1973, %r1191;
	mov.u32 	%r1974, %r1191;
	mov.u32 	%r1975, %r1191;
	mov.u32 	%r1976, %r1191;
	mov.u32 	%r2156, %r1191;
	mov.u32 	%r2143, %r1191;
	mov.u32 	%r2074, %r1191;
	mov.u32 	%r1980, %r1191;
	mov.u32 	%r2157, %r1191;
	mov.u32 	%r2145, %r1191;
	mov.u32 	%r2076, %r1191;
	mov.u32 	%r1984, %r1191;
	mov.u32 	%r2104, %r1191;
	mov.u32 	%r1986, %r1191;
	mov.u32 	%r1987, %r1191;
	mov.u32 	%r2105, %r1191;
	mov.u32 	%r1989, %r1191;
	mov.u32 	%r1990, %r1191;
	mov.u32 	%r2106, %r1191;
	mov.u32 	%r2107, %r1191;
	mov.u32 	%r1993, %r1191;
	mov.u32 	%r1994, %r1191;
	mov.u32 	%r1995, %r1191;
	mov.u32 	%r1996, %r1191;
	mov.u32 	%r2108, %r1191;
	mov.u32 	%r2109, %r1191;
	mov.u32 	%r1999, %r1191;
	mov.u32 	%r2000, %r1191;
	mov.u32 	%r2001, %r1191;
	mov.u32 	%r2002, %r1191;
	mov.u32 	%r2003, %r1191;
	mov.u32 	%r2004, %r1191;
	mov.u32 	%r2005, %r1191;
	mov.u32 	%r2006, %r1191;
	mov.u32 	%r2007, %r1191;
	mov.u32 	%r2008, %r1191;
	mov.u32 	%r2113, %r1191;
	mov.u32 	%r2010, %r1191;
	mov.u32 	%r2011, %r1191;
	mov.u32 	%r2012, %r1191;
	mov.u32 	%r2013, %r1191;
	mov.u32 	%r2014, %r1191;
	mov.u32 	%r2115, %r1191;
	mov.u32 	%r2016, %r1191;
	mov.u32 	%r2017, %r1191;
	mov.u32 	%r2018, %r1191;
	mov.u32 	%r2019, %r1191;
	mov.u32 	%r2020, %r1191;
	mov.u32 	%r2116, %r1191;
	mov.u32 	%r2022, %r1191;
	mov.u32 	%r2023, %r1191;
	mov.u32 	%r2024, %r1191;
	mov.u32 	%r2025, %r1191;
	mov.u32 	%r2026, %r1191;
	mov.u32 	%r2027, %r1191;
	mov.u32 	%r2117, %r1191;
	mov.u32 	%r2029, %r1191;
	mov.u32 	%r2030, %r1191;
	mov.u32 	%r2031, %r1191;
	mov.u32 	%r2032, %r1191;
	mov.u32 	%r2033, %r1191;
	mov.u32 	%r2034, %r1191;
	mov.u32 	%r2035, %r1191;
	mov.u32 	%r2036, %r1191;
	mov.u32 	%r2037, %r1191;
	mov.u32 	%r2038, %r1191;
	mov.u32 	%r2039, %r1191;
	mov.u32 	%r2040, %r1191;
	mov.u32 	%r2041, %r1191;
	mov.u32 	%r2042, %r1191;
	mov.u32 	%r2043, %r1191;
	mov.u32 	%r2044, %r1191;
	mov.u32 	%r2045, %r1191;
	mov.u32 	%r2046, %r1191;
	mov.u32 	%r2047, %r1191;
	mov.u32 	%r2048, %r1191;
	mov.u32 	%r2050, %r1191;
	mov.u32 	%r2051, %r1191;
	mov.u32 	%r2052, %r1191;
	mov.u32 	%r2053, %r1191;
	mov.u32 	%r2054, %r1191;
	mov.u32 	%r2055, %r1191;
	mov.u32 	%r2056, %r1191;
	mov.u32 	%r2057, %r1191;
	mov.u32 	%r2058, %r1191;
	mov.u32 	%r2059, %r1191;
	mov.u32 	%r2060, %r1191;
	mov.u32 	%r2061, %r1191;
	mov.u32 	%r2065, %r1941;
	mov.u32 	%r2067, %r1945;
	mov.u32 	%r2075, %r1980;
	mov.u32 	%r2077, %r1984;

$L__BB0_293:
	mov.u32 	%r432, %r2057;
	mov.u32 	%r427, %r2056;
	mov.u32 	%r420, %r2054;
	mov.u32 	%r412, %r2052;
	mov.u32 	%r2056, %r2051;
	mov.u32 	%r2057, %r2050;
	mov.u32 	%r506, %r2032;
	mov.u32 	%r505, %r2031;
	mov.u32 	%r502, %r2117;
	mov.u32 	%r501, %r2027;
	mov.u32 	%r499, %r2025;
	mov.u32 	%r498, %r2024;
	mov.u32 	%r495, %r2116;
	mov.u32 	%r494, %r2020;
	mov.u32 	%r492, %r2018;
	mov.u32 	%r489, %r2115;
	mov.u32 	%r486, %r2012;
	mov.u32 	%r483, %r2113;
	mov.u32 	%r2031, %r2002;
	mov.u32 	%r475, %r2001;
	mov.u32 	%r472, %r1999;
	mov.u32 	%r2027, %r2109;
	mov.u32 	%r470, %r2108;
	mov.u32 	%r2024, %r1996;
	mov.u32 	%r468, %r1995;
	mov.u32 	%r465, %r1993;
	mov.u32 	%r2020, %r2107;
	mov.u32 	%r463, %r2106;
	mov.u32 	%r462, %r1990;
	mov.u32 	%r459, %r2105;
	mov.u32 	%r458, %r1987;
	mov.u32 	%r455, %r2104;
	mov.u32 	%r2051, %r2157;
	mov.u32 	%r2050, %r2156;
	mov.u32 	%r446, %r1976;
	mov.u32 	%r442, %r1972;
	mov.u32 	%r2052, %r1971;
	mov.u32 	%r440, %r1970;
	mov.u32 	%r439, %r1969;
	mov.u32 	%r435, %r1965;
	mov.u32 	%r2054, %r1964;
	mov.u32 	%r2032, %r1963;
	mov.u32 	%r431, %r1962;
	mov.u32 	%r1999, %r1961;
	mov.u32 	%r429, %r1960;
	mov.u32 	%r2025, %r1959;
	mov.u32 	%r426, %r1958;
	mov.u32 	%r1993, %r1957;
	mov.u32 	%r2018, %r1956;
	mov.u32 	%r423, %r1955;
	mov.u32 	%r1990, %r1954;
	mov.u32 	%r419, %r1953;
	mov.u32 	%r1957, %r2151;
	mov.u32 	%r1958, %r1951;
	mov.u32 	%r2012, %r1950;
	mov.u32 	%r415, %r1949;
	mov.u32 	%r1987, %r1948;
	mov.u32 	%r411, %r1947;
	mov.u32 	%r1995, %r1946;
	mov.u32 	%r1996, %r2066;
	mov.u32 	%r1961, %r2149;
	mov.u32 	%r400, %r1937;
	mov.u32 	%r399, %r1936;
	mov.u32 	%r2002, %r2064;
	mov.u32 	%r2001, %r1934;
	mov.u32 	%r1962, %r1933;
	shl.b32 	%r1830, %r791, 1;
	sub.s32 	%r1829, %r765, %r1830;
	not.b32 	%r1247, %r32;
	add.s32 	%r1248, %r762, %r1247;
	mul.lo.s32 	%r1249, %r1248, %r764;
	add.s32 	%r1250, %r2049, %r1249;
	not.b32 	%r1252, %r33;
	add.s32 	%r1253, %r763, %r1252;
	mul.lo.s32 	%r1254, %r1253, %r764;
	add.s32 	%r1255, %r2049, %r1254;
	rem.s32 	%r524, %r1250, %r58;
	rem.s32 	%r525, %r1255, %r1829;
	add.s32 	%r1259, %r1249, %r1254;
	add.s32 	%r1260, %r1259, %r765;
	not.b32 	%r1261, %r30;
	add.s32 	%r1262, %r760, %r1261;
	mad.lo.s32 	%r1263, %r1248, %r760, %r1262;
	not.b32 	%r1265, %r31;
	add.s32 	%r1266, %r761, %r1265;
	mad.lo.s32 	%r1267, %r1253, %r761, %r1266;
	add.s32 	%r1268, %r1263, %r1267;
	shl.b32 	%r1269, %r1268, 1;
	add.s32 	%r1270, %r1260, %r1269;
	add.s32 	%r1271, %r2049, %r1270;
	add.s32 	%r1272, %r2049, %r1259;
	div.s32 	%r1273, %r1271, %r765;
	mul.lo.s32 	%r1274, %r1273, %r765;
	sub.s32 	%r1275, %r1830, %r765;
	sub.s32 	%r526, %r1271, %r1274;
	sub.s32 	%r1276, %r1263, %r1267;
	shl.b32 	%r1277, %r1276, 1;
	add.s32 	%r1278, %r1277, %r766;
	mad.lo.s32 	%r1279, %r1273, %r1830, %r1278;
	mad.lo.s32 	%r1280, %r1273, %r1275, %r1272;
	div.s32 	%r1281, %r1279, %r766;
	mul.lo.s32 	%r1282, %r1281, %r766;
	sub.s32 	%r1285, %r787, %r766;
	sub.s32 	%r527, %r1279, %r1282;
	mad.lo.s32 	%r528, %r1281, %r1285, %r1280;
	ld.param.u64 	%rd267, [%rd1+80];
	cvta.to.global.u64 	%rd28, %rd267;
	setp.ne.s32 	%p163, %r30, 0;
	@%p163 bra 	$L__BB0_298;

	setp.eq.s32 	%p164, %r31, 0;
	mad.lo.s32 	%r1288, %r524, %r763, %r33;
	mul.lo.s32 	%r1289, %r1288, %r761;
	mul.lo.s32 	%r1290, %r1289, 768;
	mad.lo.s32 	%r1291, %r31, 384, %r1290;
	add.s32 	%r1292, %r1291, -64;
	mul.wide.s32 	%rd268, %r1292, 4;
	add.s64 	%rd269, %rd28, %rd268;
	add.s64 	%rd271, %rd269, %rd270;
	ld.global.v4.u32 	{%r1956, %r1950, %r1954, %r1948}, [%rd271+256];
	ld.global.v4.u32 	{%r2077, %r2075, %r2067, %r2065}, [%rd271+1024];
	add.s64 	%rd29, %rd269, %rd272;
	mov.u32 	%r2064, %r2002;
	mov.u32 	%r2066, %r1996;
	@%p164 bra 	$L__BB0_296;

	ld.global.v2.u32 	{%r2064, %r2066}, [%rd29];

$L__BB0_296:
	setp.ne.s32 	%p165, %r31, %r1179;
	ld.global.v2.u32 	{%r1955, %r1949}, [%rd29+768];
	@%p165 bra 	$L__BB0_298;

	ld.global.v2.u32 	{%r2076, %r2074}, [%rd29+1536];

$L__BB0_298:
	setp.ne.s32 	%p166, %r31, 0;
	mov.u32 	%r1934, %r2001;
	mov.u32 	%r1946, %r1995;
	mov.u32 	%r1959, %r2025;
	mov.u32 	%r1963, %r2032;
	mov.u32 	%r2084, %r1968;
	mov.u32 	%r1969, %r439;
	mov.u32 	%r2086, %r1975;
	mov.u32 	%r1976, %r446;
	mov.u32 	%r2088, %r2004;
	mov.u32 	%r2089, %r2006;
	@%p166 bra 	$L__BB0_300;

	not.b32 	%r1832, %r30;
	add.s32 	%r1831, %r760, %r1832;
	mad.lo.s32 	%r1311, %r525, %r762, %r32;
	mul.lo.s32 	%r1318, %r791, %r58;
	mul.lo.s32 	%r1319, %r1318, 768;
	mad.lo.s32 	%r1320, %r1831, 384, %r1319;
	add.s32 	%r1321, %r1320, -64;
	mad.lo.s32 	%r1322, %r1311, %r825, %r1321;
	mul.wide.s32 	%rd273, %r1322, 4;
	add.s64 	%rd274, %rd28, %rd273;
	add.s64 	%rd276, %rd274, %rd270;
	ld.global.v4.u32 	{%r2089, %r2088, %r2086, %r2084}, [%rd276+256];
	ld.global.v4.u32 	{%r1963, %r1959, %r1934, %r1946}, [%rd276+1024];
	add.s64 	%rd278, %rd274, %rd272;
	ld.global.v2.u32 	{%r1976, %r1969}, [%rd278+768];
	ld.global.v2.u32 	{%r2064, %r2066}, [%rd278+1536];

$L__BB0_300:
	ld.param.u64 	%rd280, [%rd1+88];
	cvta.to.global.u64 	%rd30, %rd280;
	add.s32 	%r1335, %r765, -1;
	setp.ge.s32 	%p167, %r526, %r1335;
	setp.lt.s32 	%p168, %r526, 2;
	or.pred  	%p169, %p168, %p167;
	setp.lt.s32 	%p170, %r527, 2;
	or.pred  	%p171, %p170, %p169;
	add.s32 	%r1336, %r766, -2;
	setp.ge.s32 	%p172, %r527, %r1336;
	or.pred  	%p173, %p172, %p171;
	mov.u32 	%r2104, %r1191;
	mov.u32 	%r2105, %r1191;
	mov.u32 	%r2106, %r1191;
	mov.u32 	%r2107, %r1191;
	mov.u32 	%r2108, %r1191;
	mov.u32 	%r2109, %r1191;
	mov.u32 	%r2110, %r1191;
	mov.u32 	%r2111, %r1191;
	mov.u32 	%r2112, %r1191;
	mov.u32 	%r2113, %r1191;
	mov.u32 	%r2114, %r1191;
	mov.u32 	%r2115, %r1191;
	mov.u32 	%r2116, %r1191;
	mov.u32 	%r2117, %r1191;
	mov.u32 	%r2118, %r1191;
	mov.u32 	%r2119, %r1191;
	mov.u32 	%r2120, %r1191;
	mov.u32 	%r2121, %r1191;
	mov.u32 	%r2122, %r1191;
	mov.u32 	%r2123, %r1191;
	mov.u32 	%r2124, %r1191;
	mov.u32 	%r2125, %r1191;
	@%p173 bra 	$L__BB0_311;

	mad.lo.s32 	%r591, %r527, %r765, %r526;
	shl.b32 	%r1337, %r591, 6;
	mul.wide.s32 	%rd281, %r1337, 4;
	add.s64 	%rd31, %rd30, %rd281;
	and.pred  	%p176, %p163, %p166;
	mov.u32 	%r2107, %r1191;
	mov.u32 	%r2109, %r1191;
	@%p176 bra 	$L__BB0_303;

	add.s64 	%rd283, %rd31, %rd272;
	ld.global.v2.u32 	{%r2109, %r2107}, [%rd283+256];

$L__BB0_303:
	mov.u32 	%r2112, %r1191;
	mov.u32 	%r2114, %r1191;
	@%p163 bra 	$L__BB0_305;

	shl.b32 	%r1341, %r765, 5;
	cvt.s64.s32 	%rd284, %r1341;
	cvt.s64.s32 	%rd285, %r35;
	add.s64 	%rd286, %rd284, %rd285;
	shl.b64 	%rd287, %rd286, 3;
	add.s64 	%rd288, %rd31, %rd287;
	ld.global.v2.u32 	{%r2114, %r2112}, [%rd288];

$L__BB0_305:
	mov.u32 	%r2119, %r1191;
	mov.u32 	%r2121, %r1191;
	@%p166 bra 	$L__BB0_307;

	shl.b32 	%r1345, %r765, 5;
	neg.s32 	%r1346, %r1345;
	cvt.s64.s32 	%rd289, %r1346;
	cvt.s64.s32 	%rd290, %r35;
	add.s64 	%rd291, %rd289, %rd290;
	shl.b64 	%rd292, %rd291, 3;
	add.s64 	%rd293, %rd31, %rd292;
	ld.global.v2.u32 	{%r2121, %r2119}, [%rd293];

$L__BB0_307:
	shl.b32 	%r1349, %r766, 6;
	shl.b32 	%r1350, %r591, 7;
	mad.lo.s32 	%r1351, %r1349, %r765, %r1350;
	mul.wide.s32 	%rd294, %r1351, 4;
	add.s64 	%rd32, %rd30, %rd294;
	mov.u32 	%r2104, %r1191;
	mov.u32 	%r2105, %r1191;
	mov.u32 	%r2110, %r1191;
	mov.u32 	%r2111, %r1191;
	mov.u32 	%r2113, %r1191;
	mov.u32 	%r2115, %r1191;
	mov.u32 	%r2122, %r1191;
	mov.u32 	%r2123, %r1191;
	@%p163 bra 	$L__BB0_309;

	shl.b32 	%r1352, %r765, 5;
	cvt.s64.s32 	%rd295, %r1352;
	cvt.s64.s32 	%rd296, %r35;
	add.s64 	%rd297, %rd295, %rd296;
	shl.b64 	%rd298, %rd297, 4;
	add.s64 	%rd299, %rd32, %rd298;
	ld.global.v4.u32 	{%r2115, %r2113, %r2105, %r2104}, [%rd299];
	shl.b32 	%r1357, %r765, 6;
	add.s32 	%r1358, %r1357, -32;
	cvt.s64.s32 	%rd300, %r1358;
	add.s64 	%rd301, %rd300, %rd296;
	shl.b64 	%rd302, %rd301, 4;
	add.s64 	%rd303, %rd32, %rd302;
	ld.global.v4.u32 	{%r2123, %r2122, %r2111, %r2110}, [%rd303];

$L__BB0_309:
	mov.u32 	%r2106, %r1191;
	mov.u32 	%r2108, %r1191;
	mov.u32 	%r2116, %r1191;
	mov.u32 	%r2117, %r1191;
	mov.u32 	%r2118, %r1191;
	mov.u32 	%r2120, %r1191;
	mov.u32 	%r2124, %r1191;
	mov.u32 	%r2125, %r1191;
	@%p166 bra 	$L__BB0_311;

	shl.b32 	%r1364, %r765, 5;
	xor.b32  	%r1365, %r1364, -32;
	cvt.s64.s32 	%rd304, %r1365;
	cvt.s64.s32 	%rd305, %r35;
	add.s64 	%rd306, %rd304, %rd305;
	shl.b64 	%rd307, %rd306, 4;
	add.s64 	%rd308, %rd32, %rd307;
	ld.global.v4.u32 	{%r2125, %r2124, %r2120, %r2118}, [%rd308];
	add.s64 	%rd310, %rd32, %rd270;
	ld.global.v4.u32 	{%r2117, %r2116, %r2108, %r2106}, [%rd310];

$L__BB0_311:
	bar.sync 	0;
	ld.param.u64 	%rd312, [%rd1+160];
	cvta.to.global.u64 	%rd33, %rd312;
	add.s32 	%r1374, %r774, 2;
	setp.lt.s32 	%p181, %r526, %r1374;
	add.s32 	%r1375, %r775, -1;
	setp.ge.s32 	%p182, %r526, %r1375;
	or.pred  	%p183, %p182, %p181;
	add.s32 	%r1376, %r776, 2;
	setp.lt.s32 	%p184, %r527, %r1376;
	or.pred  	%p185, %p183, %p184;
	add.s32 	%r1377, %r777, -2;
	setp.ge.s32 	%p186, %r527, %r1377;
	or.pred  	%p187, %p186, %p185;
	setp.lt.s32 	%p188, %r528, %r771;
	or.pred  	%p189, %p188, %p187;
	mad.lo.s32 	%r1378, %r773, %r772, %r771;
	setp.ge.s32 	%p190, %r528, %r1378;
	or.pred  	%p191, %p189, %p190;
	@%p191 bra 	$L__BB0_553;

	sub.s32 	%r650, %r528, %r771;
	rem.s32 	%r1379, %r650, %r772;
	setp.ne.s32 	%p192, %r1379, 0;
	@%p192 bra 	$L__BB0_553;

	div.s32 	%r1380, %r650, %r772;
	mul.lo.s32 	%r1382, %r1380, %r800;
	sub.s32 	%r651, %r526, %r774;
	sub.s32 	%r652, %r527, %r776;
	mul.lo.s32 	%r653, %r1382, 3;
	add.s32 	%r1383, %r651, %r653;
	add.s32 	%r1384, %r1383, -2;
	mul.lo.s32 	%r654, %r1384, %r802;
	add.s32 	%r1386, %r652, %r654;
	mul.lo.s32 	%r1387, %r1386, %r45;
	sub.s32 	%r655, %r1387, %r778;
	@%p15 bra 	$L__BB0_318;

	not.pred 	%p194, %p11;
	@%p194 bra 	$L__BB0_316;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2048;
  cvt.f32.f16 %f302, low;}

	// end inline asm
	add.s32 	%r1389, %r655, %r387;
	mul.wide.s32 	%rd313, %r1389, 4;
	add.s64 	%rd314, %rd33, %rd313;
	st.global.f32 	[%rd314], %f302;

$L__BB0_316:
	not.pred 	%p195, %p13;
	@%p195 bra 	$L__BB0_318;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2048;
  cvt.f32.f16 %f303, high;}

	// end inline asm
	add.s32 	%r1391, %r655, %r388;
	mul.wide.s32 	%rd315, %r1391, 4;
	add.s64 	%rd316, %rd33, %rd315;
	st.global.f32 	[%rd316], %f303;

$L__BB0_318:
	@%p15 bra 	$L__BB0_323;

	not.pred 	%p197, %p12;
	@%p197 bra 	$L__BB0_321;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2044;
  cvt.f32.f16 %f304, low;}

	// end inline asm
	add.s32 	%r1393, %r655, %r389;
	mul.wide.s32 	%rd317, %r1393, 4;
	add.s64 	%rd318, %rd33, %rd317;
	st.global.f32 	[%rd318], %f304;

$L__BB0_321:
	not.pred 	%p198, %p14;
	@%p198 bra 	$L__BB0_323;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2044;
  cvt.f32.f16 %f305, high;}

	// end inline asm
	add.s32 	%r1395, %r655, %r390;
	mul.wide.s32 	%rd319, %r1395, 4;
	add.s64 	%rd320, %rd33, %rd319;
	st.global.f32 	[%rd320], %f305;

$L__BB0_323:
	sub.s32 	%r1842, %r526, %r774;
	add.s32 	%r656, %r653, %r800;
	add.s32 	%r1397, %r1842, %r656;
	add.s32 	%r1398, %r1397, -2;
	mad.lo.s32 	%r1400, %r1398, %r802, %r652;
	mul.lo.s32 	%r1401, %r1400, %r45;
	sub.s32 	%r657, %r1401, %r778;
	@%p15 bra 	$L__BB0_328;

	not.pred 	%p200, %p11;
	@%p200 bra 	$L__BB0_326;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2047;
  cvt.f32.f16 %f306, low;}

	// end inline asm
	add.s32 	%r1403, %r657, %r387;
	mul.wide.s32 	%rd321, %r1403, 4;
	add.s64 	%rd322, %rd33, %rd321;
	st.global.f32 	[%rd322], %f306;

$L__BB0_326:
	not.pred 	%p201, %p13;
	@%p201 bra 	$L__BB0_328;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2047;
  cvt.f32.f16 %f307, high;}

	// end inline asm
	add.s32 	%r1405, %r657, %r388;
	mul.wide.s32 	%rd323, %r1405, 4;
	add.s64 	%rd324, %rd33, %rd323;
	st.global.f32 	[%rd324], %f307;

$L__BB0_328:
	@%p15 bra 	$L__BB0_333;

	not.pred 	%p203, %p12;
	@%p203 bra 	$L__BB0_331;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2043;
  cvt.f32.f16 %f308, low;}

	// end inline asm
	add.s32 	%r1407, %r657, %r389;
	mul.wide.s32 	%rd325, %r1407, 4;
	add.s64 	%rd326, %rd33, %rd325;
	st.global.f32 	[%rd326], %f308;

$L__BB0_331:
	not.pred 	%p204, %p14;
	@%p204 bra 	$L__BB0_333;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2043;
  cvt.f32.f16 %f309, high;}

	// end inline asm
	add.s32 	%r1409, %r657, %r390;
	mul.wide.s32 	%rd327, %r1409, 4;
	add.s64 	%rd328, %rd33, %rd327;
	st.global.f32 	[%rd328], %f309;

$L__BB0_333:
	add.s32 	%r658, %r652, 1;
	add.s32 	%r1410, %r658, %r654;
	mul.lo.s32 	%r1411, %r1410, %r45;
	sub.s32 	%r659, %r1411, %r778;
	@%p15 bra 	$L__BB0_338;

	not.pred 	%p206, %p11;
	@%p206 bra 	$L__BB0_336;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2040;
  cvt.f32.f16 %f310, low;}

	// end inline asm
	add.s32 	%r1413, %r659, %r387;
	mul.wide.s32 	%rd329, %r1413, 4;
	add.s64 	%rd330, %rd33, %rd329;
	st.global.f32 	[%rd330], %f310;

$L__BB0_336:
	not.pred 	%p207, %p13;
	@%p207 bra 	$L__BB0_338;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2040;
  cvt.f32.f16 %f311, high;}

	// end inline asm
	add.s32 	%r1415, %r659, %r388;
	mul.wide.s32 	%rd331, %r1415, 4;
	add.s64 	%rd332, %rd33, %rd331;
	st.global.f32 	[%rd332], %f311;

$L__BB0_338:
	@%p15 bra 	$L__BB0_343;

	not.pred 	%p209, %p12;
	@%p209 bra 	$L__BB0_341;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2038;
  cvt.f32.f16 %f312, low;}

	// end inline asm
	add.s32 	%r1417, %r659, %r389;
	mul.wide.s32 	%rd333, %r1417, 4;
	add.s64 	%rd334, %rd33, %rd333;
	st.global.f32 	[%rd334], %f312;

$L__BB0_341:
	not.pred 	%p210, %p14;
	@%p210 bra 	$L__BB0_343;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2038;
  cvt.f32.f16 %f313, high;}

	// end inline asm
	add.s32 	%r1419, %r659, %r390;
	mul.wide.s32 	%rd335, %r1419, 4;
	add.s64 	%rd336, %rd33, %rd335;
	st.global.f32 	[%rd336], %f313;

$L__BB0_343:
	not.b32 	%r1420, %r774;
	add.s32 	%r660, %r526, %r1420;
	not.b32 	%r1421, %r776;
	add.s32 	%r661, %r527, %r1421;
	add.s32 	%r1422, %r660, %r653;
	mul.lo.s32 	%r662, %r1422, %r802;
	add.s32 	%r1424, %r661, %r662;
	mul.lo.s32 	%r1425, %r1424, %r45;
	sub.s32 	%r663, %r1425, %r778;
	@%p15 bra 	$L__BB0_348;

	not.pred 	%p212, %p11;
	@%p212 bra 	$L__BB0_346;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2006;
  cvt.f32.f16 %f314, low;}

	// end inline asm
	add.s32 	%r1427, %r663, %r387;
	mul.wide.s32 	%rd337, %r1427, 4;
	add.s64 	%rd338, %rd33, %rd337;
	st.global.f32 	[%rd338], %f314;

$L__BB0_346:
	not.pred 	%p213, %p13;
	@%p213 bra 	$L__BB0_348;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2006;
  cvt.f32.f16 %f315, high;}

	// end inline asm
	add.s32 	%r1429, %r663, %r388;
	mul.wide.s32 	%rd339, %r1429, 4;
	add.s64 	%rd340, %rd33, %rd339;
	st.global.f32 	[%rd340], %f315;

$L__BB0_348:
	@%p15 bra 	$L__BB0_353;

	not.pred 	%p215, %p12;
	@%p215 bra 	$L__BB0_351;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2004;
  cvt.f32.f16 %f316, low;}

	// end inline asm
	add.s32 	%r1431, %r663, %r389;
	mul.wide.s32 	%rd341, %r1431, 4;
	add.s64 	%rd342, %rd33, %rd341;
	st.global.f32 	[%rd342], %f316;

$L__BB0_351:
	not.pred 	%p216, %p14;
	@%p216 bra 	$L__BB0_353;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2004;
  cvt.f32.f16 %f317, high;}

	// end inline asm
	add.s32 	%r1433, %r663, %r390;
	mul.wide.s32 	%rd343, %r1433, 4;
	add.s64 	%rd344, %rd33, %rd343;
	st.global.f32 	[%rd344], %f317;

$L__BB0_353:
	add.s32 	%r1435, %r660, %r656;
	mul.lo.s32 	%r664, %r1435, %r802;
	add.s32 	%r1436, %r661, %r664;
	mul.lo.s32 	%r1437, %r1436, %r45;
	sub.s32 	%r665, %r1437, %r778;
	@%p15 bra 	$L__BB0_358;

	not.pred 	%p218, %p11;
	@%p218 bra 	$L__BB0_356;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2036;
  cvt.f32.f16 %f318, low;}

	// end inline asm
	add.s32 	%r1439, %r665, %r387;
	mul.wide.s32 	%rd345, %r1439, 4;
	add.s64 	%rd346, %rd33, %rd345;
	st.global.f32 	[%rd346], %f318;

$L__BB0_356:
	not.pred 	%p219, %p13;
	@%p219 bra 	$L__BB0_358;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2036;
  cvt.f32.f16 %f319, high;}

	// end inline asm
	add.s32 	%r1441, %r665, %r388;
	mul.wide.s32 	%rd347, %r1441, 4;
	add.s64 	%rd348, %rd33, %rd347;
	st.global.f32 	[%rd348], %f319;

$L__BB0_358:
	@%p15 bra 	$L__BB0_363;

	not.pred 	%p221, %p12;
	@%p221 bra 	$L__BB0_361;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2034;
  cvt.f32.f16 %f320, low;}

	// end inline asm
	add.s32 	%r1443, %r665, %r389;
	mul.wide.s32 	%rd349, %r1443, 4;
	add.s64 	%rd350, %rd33, %rd349;
	st.global.f32 	[%rd350], %f320;

$L__BB0_361:
	not.pred 	%p222, %p14;
	@%p222 bra 	$L__BB0_363;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2034;
  cvt.f32.f16 %f321, high;}

	// end inline asm
	add.s32 	%r1445, %r665, %r390;
	mul.wide.s32 	%rd351, %r1445, 4;
	add.s64 	%rd352, %rd33, %rd351;
	st.global.f32 	[%rd352], %f321;

$L__BB0_363:
	add.s32 	%r1446, %r652, %r662;
	mul.lo.s32 	%r1447, %r1446, %r45;
	sub.s32 	%r666, %r1447, %r778;
	@%p15 bra 	$L__BB0_368;

	not.pred 	%p224, %p11;
	@%p224 bra 	$L__BB0_366;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r506;
  cvt.f32.f16 %f322, low;}

	// end inline asm
	add.s32 	%r1449, %r666, %r387;
	mul.wide.s32 	%rd353, %r1449, 4;
	add.s64 	%rd354, %rd33, %rd353;
	st.global.f32 	[%rd354], %f322;

$L__BB0_366:
	not.pred 	%p225, %p13;
	@%p225 bra 	$L__BB0_368;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r506;
  cvt.f32.f16 %f323, high;}

	// end inline asm
	add.s32 	%r1451, %r666, %r388;
	mul.wide.s32 	%rd355, %r1451, 4;
	add.s64 	%rd356, %rd33, %rd355;
	st.global.f32 	[%rd356], %f323;

$L__BB0_368:
	@%p15 bra 	$L__BB0_373;

	not.pred 	%p227, %p12;
	@%p227 bra 	$L__BB0_371;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r499;
  cvt.f32.f16 %f324, low;}

	// end inline asm
	add.s32 	%r1453, %r666, %r389;
	mul.wide.s32 	%rd357, %r1453, 4;
	add.s64 	%rd358, %rd33, %rd357;
	st.global.f32 	[%rd358], %f324;

$L__BB0_371:
	not.pred 	%p228, %p14;
	@%p228 bra 	$L__BB0_373;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r499;
  cvt.f32.f16 %f325, high;}

	// end inline asm
	add.s32 	%r1455, %r666, %r390;
	mul.wide.s32 	%rd359, %r1455, 4;
	add.s64 	%rd360, %rd33, %rd359;
	st.global.f32 	[%rd360], %f325;

$L__BB0_373:
	add.s32 	%r1456, %r652, %r664;
	mul.lo.s32 	%r1457, %r1456, %r45;
	sub.s32 	%r667, %r1457, %r778;
	@%p15 bra 	$L__BB0_378;

	not.pred 	%p230, %p11;
	@%p230 bra 	$L__BB0_376;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r505;
  cvt.f32.f16 %f326, low;}

	// end inline asm
	add.s32 	%r1459, %r667, %r387;
	mul.wide.s32 	%rd361, %r1459, 4;
	add.s64 	%rd362, %rd33, %rd361;
	st.global.f32 	[%rd362], %f326;

$L__BB0_376:
	not.pred 	%p231, %p13;
	@%p231 bra 	$L__BB0_378;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r505;
  cvt.f32.f16 %f327, high;}

	// end inline asm
	add.s32 	%r1461, %r667, %r388;
	mul.wide.s32 	%rd363, %r1461, 4;
	add.s64 	%rd364, %rd33, %rd363;
	st.global.f32 	[%rd364], %f327;

$L__BB0_378:
	@%p15 bra 	$L__BB0_383;

	not.pred 	%p233, %p12;
	@%p233 bra 	$L__BB0_381;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r498;
  cvt.f32.f16 %f328, low;}

	// end inline asm
	add.s32 	%r1463, %r667, %r389;
	mul.wide.s32 	%rd365, %r1463, 4;
	add.s64 	%rd366, %rd33, %rd365;
	st.global.f32 	[%rd366], %f328;

$L__BB0_381:
	not.pred 	%p234, %p14;
	@%p234 bra 	$L__BB0_383;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r498;
  cvt.f32.f16 %f329, high;}

	// end inline asm
	add.s32 	%r1465, %r667, %r390;
	mul.wide.s32 	%rd367, %r1465, 4;
	add.s64 	%rd368, %rd33, %rd367;
	st.global.f32 	[%rd368], %f329;

$L__BB0_383:
	add.s32 	%r668, %r656, %r800;
	add.s32 	%r1467, %r660, %r668;
	mul.lo.s32 	%r669, %r1467, %r802;
	add.s32 	%r1469, %r652, %r669;
	mul.lo.s32 	%r1470, %r1469, %r45;
	sub.s32 	%r670, %r1470, %r778;
	@%p15 bra 	$L__BB0_388;

	not.pred 	%p236, %p11;
	@%p236 bra 	$L__BB0_386;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2030;
  cvt.f32.f16 %f330, low;}

	// end inline asm
	add.s32 	%r1472, %r670, %r387;
	mul.wide.s32 	%rd369, %r1472, 4;
	add.s64 	%rd370, %rd33, %rd369;
	st.global.f32 	[%rd370], %f330;

$L__BB0_386:
	not.pred 	%p237, %p13;
	@%p237 bra 	$L__BB0_388;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2030;
  cvt.f32.f16 %f331, high;}

	// end inline asm
	add.s32 	%r1474, %r670, %r388;
	mul.wide.s32 	%rd371, %r1474, 4;
	add.s64 	%rd372, %rd33, %rd371;
	st.global.f32 	[%rd372], %f331;

$L__BB0_388:
	@%p15 bra 	$L__BB0_393;

	not.pred 	%p239, %p12;
	@%p239 bra 	$L__BB0_391;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2023;
  cvt.f32.f16 %f332, low;}

	// end inline asm
	add.s32 	%r1476, %r670, %r389;
	mul.wide.s32 	%rd373, %r1476, 4;
	add.s64 	%rd374, %rd33, %rd373;
	st.global.f32 	[%rd374], %f332;

$L__BB0_391:
	not.pred 	%p240, %p14;
	@%p240 bra 	$L__BB0_393;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2023;
  cvt.f32.f16 %f333, high;}

	// end inline asm
	add.s32 	%r1478, %r670, %r390;
	mul.wide.s32 	%rd375, %r1478, 4;
	add.s64 	%rd376, %rd33, %rd375;
	st.global.f32 	[%rd376], %f333;

$L__BB0_393:
	add.s32 	%r1822, %r652, 1;
	add.s32 	%r1479, %r1822, %r662;
	mul.lo.s32 	%r1480, %r1479, %r45;
	sub.s32 	%r671, %r1480, %r778;
	@%p15 bra 	$L__BB0_398;

	not.pred 	%p242, %p11;
	@%p242 bra 	$L__BB0_396;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r492;
  cvt.f32.f16 %f334, low;}

	// end inline asm
	add.s32 	%r1482, %r671, %r387;
	mul.wide.s32 	%rd377, %r1482, 4;
	add.s64 	%rd378, %rd33, %rd377;
	st.global.f32 	[%rd378], %f334;

$L__BB0_396:
	not.pred 	%p243, %p13;
	@%p243 bra 	$L__BB0_398;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r492;
  cvt.f32.f16 %f335, high;}

	// end inline asm
	add.s32 	%r1484, %r671, %r388;
	mul.wide.s32 	%rd379, %r1484, 4;
	add.s64 	%rd380, %rd33, %rd379;
	st.global.f32 	[%rd380], %f335;

$L__BB0_398:
	@%p15 bra 	$L__BB0_403;

	not.pred 	%p245, %p12;
	@%p245 bra 	$L__BB0_401;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r486;
  cvt.f32.f16 %f336, low;}

	// end inline asm
	add.s32 	%r1486, %r671, %r389;
	mul.wide.s32 	%rd381, %r1486, 4;
	add.s64 	%rd382, %rd33, %rd381;
	st.global.f32 	[%rd382], %f336;

$L__BB0_401:
	not.pred 	%p246, %p14;
	@%p246 bra 	$L__BB0_403;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r486;
  cvt.f32.f16 %f337, high;}

	// end inline asm
	add.s32 	%r1488, %r671, %r390;
	mul.wide.s32 	%rd383, %r1488, 4;
	add.s64 	%rd384, %rd33, %rd383;
	st.global.f32 	[%rd384], %f337;

$L__BB0_403:
	add.s32 	%r1823, %r652, 1;
	add.s32 	%r1489, %r1823, %r664;
	mul.lo.s32 	%r1490, %r1489, %r45;
	sub.s32 	%r672, %r1490, %r778;
	@%p15 bra 	$L__BB0_408;

	not.pred 	%p248, %p11;
	@%p248 bra 	$L__BB0_406;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2017;
  cvt.f32.f16 %f338, low;}

	// end inline asm
	add.s32 	%r1492, %r672, %r387;
	mul.wide.s32 	%rd385, %r1492, 4;
	add.s64 	%rd386, %rd33, %rd385;
	st.global.f32 	[%rd386], %f338;

$L__BB0_406:
	not.pred 	%p249, %p13;
	@%p249 bra 	$L__BB0_408;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2017;
  cvt.f32.f16 %f339, high;}

	// end inline asm
	add.s32 	%r1494, %r672, %r388;
	mul.wide.s32 	%rd387, %r1494, 4;
	add.s64 	%rd388, %rd33, %rd387;
	st.global.f32 	[%rd388], %f339;

$L__BB0_408:
	@%p15 bra 	$L__BB0_413;

	not.pred 	%p251, %p12;
	@%p251 bra 	$L__BB0_411;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2011;
  cvt.f32.f16 %f340, low;}

	// end inline asm
	add.s32 	%r1496, %r672, %r389;
	mul.wide.s32 	%rd389, %r1496, 4;
	add.s64 	%rd390, %rd33, %rd389;
	st.global.f32 	[%rd390], %f340;

$L__BB0_411:
	not.pred 	%p252, %p14;
	@%p252 bra 	$L__BB0_413;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2011;
  cvt.f32.f16 %f341, high;}

	// end inline asm
	add.s32 	%r1498, %r672, %r390;
	mul.wide.s32 	%rd391, %r1498, 4;
	add.s64 	%rd392, %rd33, %rd391;
	st.global.f32 	[%rd392], %f341;

$L__BB0_413:
	add.s32 	%r1824, %r652, 1;
	add.s32 	%r1499, %r1824, %r669;
	mul.lo.s32 	%r1500, %r1499, %r45;
	sub.s32 	%r673, %r1500, %r778;
	@%p15 bra 	$L__BB0_418;

	not.pred 	%p254, %p11;
	@%p254 bra 	$L__BB0_416;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2016;
  cvt.f32.f16 %f342, low;}

	// end inline asm
	add.s32 	%r1502, %r673, %r387;
	mul.wide.s32 	%rd393, %r1502, 4;
	add.s64 	%rd394, %rd33, %rd393;
	st.global.f32 	[%rd394], %f342;

$L__BB0_416:
	not.pred 	%p255, %p13;
	@%p255 bra 	$L__BB0_418;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2016;
  cvt.f32.f16 %f343, high;}

	// end inline asm
	add.s32 	%r1504, %r673, %r388;
	mul.wide.s32 	%rd395, %r1504, 4;
	add.s64 	%rd396, %rd33, %rd395;
	st.global.f32 	[%rd396], %f343;

$L__BB0_418:
	@%p15 bra 	$L__BB0_423;

	not.pred 	%p257, %p12;
	@%p257 bra 	$L__BB0_421;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2010;
  cvt.f32.f16 %f344, low;}

	// end inline asm
	add.s32 	%r1506, %r673, %r389;
	mul.wide.s32 	%rd397, %r1506, 4;
	add.s64 	%rd398, %rd33, %rd397;
	st.global.f32 	[%rd398], %f344;

$L__BB0_421:
	not.pred 	%p258, %p14;
	@%p258 bra 	$L__BB0_423;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2010;
  cvt.f32.f16 %f345, high;}

	// end inline asm
	add.s32 	%r1508, %r673, %r390;
	mul.wide.s32 	%rd399, %r1508, 4;
	add.s64 	%rd400, %rd33, %rd399;
	st.global.f32 	[%rd400], %f345;

$L__BB0_423:
	add.s32 	%r674, %r652, 2;
	add.s32 	%r1509, %r674, %r662;
	mul.lo.s32 	%r1510, %r1509, %r45;
	sub.s32 	%r675, %r1510, %r778;
	@%p15 bra 	$L__BB0_428;

	not.pred 	%p260, %p11;
	@%p260 bra 	$L__BB0_426;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1984;
  cvt.f32.f16 %f346, low;}

	// end inline asm
	add.s32 	%r1512, %r675, %r387;
	mul.wide.s32 	%rd401, %r1512, 4;
	add.s64 	%rd402, %rd33, %rd401;
	st.global.f32 	[%rd402], %f346;

$L__BB0_426:
	not.pred 	%p261, %p13;
	@%p261 bra 	$L__BB0_428;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1984;
  cvt.f32.f16 %f347, high;}

	// end inline asm
	add.s32 	%r1514, %r675, %r388;
	mul.wide.s32 	%rd403, %r1514, 4;
	add.s64 	%rd404, %rd33, %rd403;
	st.global.f32 	[%rd404], %f347;

$L__BB0_428:
	@%p15 bra 	$L__BB0_433;

	not.pred 	%p263, %p12;
	@%p263 bra 	$L__BB0_431;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1980;
  cvt.f32.f16 %f348, low;}

	// end inline asm
	add.s32 	%r1516, %r675, %r389;
	mul.wide.s32 	%rd405, %r1516, 4;
	add.s64 	%rd406, %rd33, %rd405;
	st.global.f32 	[%rd406], %f348;

$L__BB0_431:
	not.pred 	%p264, %p14;
	@%p264 bra 	$L__BB0_433;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1980;
  cvt.f32.f16 %f349, high;}

	// end inline asm
	add.s32 	%r1518, %r675, %r390;
	mul.wide.s32 	%rd407, %r1518, 4;
	add.s64 	%rd408, %rd33, %rd407;
	st.global.f32 	[%rd408], %f349;

$L__BB0_433:
	mul.lo.s32 	%r676, %r1397, %r802;
	add.s32 	%r1521, %r661, %r676;
	mul.lo.s32 	%r1522, %r1521, %r45;
	sub.s32 	%r677, %r1522, %r778;
	@%p15 bra 	$L__BB0_438;

	not.pred 	%p266, %p11;
	@%p266 bra 	$L__BB0_436;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r446;
  cvt.f32.f16 %f350, low;}

	// end inline asm
	add.s32 	%r1524, %r677, %r387;
	mul.wide.s32 	%rd409, %r1524, 4;
	add.s64 	%rd410, %rd33, %rd409;
	st.global.f32 	[%rd410], %f350;

$L__BB0_436:
	not.pred 	%p267, %p13;
	@%p267 bra 	$L__BB0_438;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r446;
  cvt.f32.f16 %f351, high;}

	// end inline asm
	add.s32 	%r1526, %r677, %r388;
	mul.wide.s32 	%rd411, %r1526, 4;
	add.s64 	%rd412, %rd33, %rd411;
	st.global.f32 	[%rd412], %f351;

$L__BB0_438:
	@%p15 bra 	$L__BB0_443;

	not.pred 	%p269, %p12;
	@%p269 bra 	$L__BB0_441;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r439;
  cvt.f32.f16 %f352, low;}

	// end inline asm
	add.s32 	%r1528, %r677, %r389;
	mul.wide.s32 	%rd413, %r1528, 4;
	add.s64 	%rd414, %rd33, %rd413;
	st.global.f32 	[%rd414], %f352;

$L__BB0_441:
	not.pred 	%p270, %p14;
	@%p270 bra 	$L__BB0_443;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r439;
  cvt.f32.f16 %f353, high;}

	// end inline asm
	add.s32 	%r1530, %r677, %r390;
	mul.wide.s32 	%rd415, %r1530, 4;
	add.s64 	%rd416, %rd33, %rd415;
	st.global.f32 	[%rd416], %f353;

$L__BB0_443:
	sub.s32 	%r1843, %r526, %r774;
	add.s32 	%r1532, %r1843, %r668;
	mul.lo.s32 	%r678, %r1532, %r802;
	add.s32 	%r1533, %r661, %r678;
	mul.lo.s32 	%r1534, %r1533, %r45;
	sub.s32 	%r679, %r1534, %r778;
	@%p15 bra 	$L__BB0_448;

	not.pred 	%p272, %p11;
	@%p272 bra 	$L__BB0_446;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1975;
  cvt.f32.f16 %f354, low;}

	// end inline asm
	add.s32 	%r1536, %r679, %r387;
	mul.wide.s32 	%rd417, %r1536, 4;
	add.s64 	%rd418, %rd33, %rd417;
	st.global.f32 	[%rd418], %f354;

$L__BB0_446:
	not.pred 	%p273, %p13;
	@%p273 bra 	$L__BB0_448;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1975;
  cvt.f32.f16 %f355, high;}

	// end inline asm
	add.s32 	%r1538, %r679, %r388;
	mul.wide.s32 	%rd419, %r1538, 4;
	add.s64 	%rd420, %rd33, %rd419;
	st.global.f32 	[%rd420], %f355;

$L__BB0_448:
	@%p15 bra 	$L__BB0_453;

	not.pred 	%p275, %p12;
	@%p275 bra 	$L__BB0_451;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1968;
  cvt.f32.f16 %f356, low;}

	// end inline asm
	add.s32 	%r1540, %r679, %r389;
	mul.wide.s32 	%rd421, %r1540, 4;
	add.s64 	%rd422, %rd33, %rd421;
	st.global.f32 	[%rd422], %f356;

$L__BB0_451:
	not.pred 	%p276, %p14;
	@%p276 bra 	$L__BB0_453;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1968;
  cvt.f32.f16 %f357, high;}

	// end inline asm
	add.s32 	%r1542, %r679, %r390;
	mul.wide.s32 	%rd423, %r1542, 4;
	add.s64 	%rd424, %rd33, %rd423;
	st.global.f32 	[%rd424], %f357;

$L__BB0_453:
	mul.lo.s32 	%r680, %r1383, %r802;
	add.s32 	%r1545, %r652, %r680;
	mul.lo.s32 	%r1546, %r1545, %r45;
	sub.s32 	%r681, %r1546, %r778;
	@%p15 bra 	$L__BB0_458;

	not.pred 	%p278, %p11;
	@%p278 bra 	$L__BB0_456;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2032;
  cvt.f32.f16 %f358, low;}

	// end inline asm
	add.s32 	%r1548, %r681, %r387;
	mul.wide.s32 	%rd425, %r1548, 4;
	add.s64 	%rd426, %rd33, %rd425;
	st.global.f32 	[%rd426], %f358;

$L__BB0_456:
	not.pred 	%p279, %p13;
	@%p279 bra 	$L__BB0_458;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2032;
  cvt.f32.f16 %f359, high;}

	// end inline asm
	add.s32 	%r1550, %r681, %r388;
	mul.wide.s32 	%rd427, %r1550, 4;
	add.s64 	%rd428, %rd33, %rd427;
	st.global.f32 	[%rd428], %f359;

$L__BB0_458:
	@%p15 bra 	$L__BB0_463;

	not.pred 	%p281, %p12;
	@%p281 bra 	$L__BB0_461;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2025;
  cvt.f32.f16 %f360, low;}

	// end inline asm
	add.s32 	%r1552, %r681, %r389;
	mul.wide.s32 	%rd429, %r1552, 4;
	add.s64 	%rd430, %rd33, %rd429;
	st.global.f32 	[%rd430], %f360;

$L__BB0_461:
	not.pred 	%p282, %p14;
	@%p282 bra 	$L__BB0_463;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2025;
  cvt.f32.f16 %f361, high;}

	// end inline asm
	add.s32 	%r1554, %r681, %r390;
	mul.wide.s32 	%rd431, %r1554, 4;
	add.s64 	%rd432, %rd33, %rd431;
	st.global.f32 	[%rd432], %f361;

$L__BB0_463:
	add.s32 	%r1555, %r652, %r676;
	mul.lo.s32 	%r1556, %r1555, %r45;
	sub.s32 	%r682, %r1556, %r778;
	@%p15 bra 	$L__BB0_468;

	not.pred 	%p284, %p11;
	@%p284 bra 	$L__BB0_466;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2031;
  cvt.f32.f16 %f362, low;}

	// end inline asm
	add.s32 	%r1558, %r682, %r387;
	mul.wide.s32 	%rd433, %r1558, 4;
	add.s64 	%rd434, %rd33, %rd433;
	st.global.f32 	[%rd434], %f362;

$L__BB0_466:
	not.pred 	%p285, %p13;
	@%p285 bra 	$L__BB0_468;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2031;
  cvt.f32.f16 %f363, high;}

	// end inline asm
	add.s32 	%r1560, %r682, %r388;
	mul.wide.s32 	%rd435, %r1560, 4;
	add.s64 	%rd436, %rd33, %rd435;
	st.global.f32 	[%rd436], %f363;

$L__BB0_468:
	@%p15 bra 	$L__BB0_473;

	not.pred 	%p287, %p12;
	@%p287 bra 	$L__BB0_471;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2024;
  cvt.f32.f16 %f364, low;}

	// end inline asm
	add.s32 	%r1562, %r682, %r389;
	mul.wide.s32 	%rd437, %r1562, 4;
	add.s64 	%rd438, %rd33, %rd437;
	st.global.f32 	[%rd438], %f364;

$L__BB0_471:
	not.pred 	%p288, %p14;
	@%p288 bra 	$L__BB0_473;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2024;
  cvt.f32.f16 %f365, high;}

	// end inline asm
	add.s32 	%r1564, %r682, %r390;
	mul.wide.s32 	%rd439, %r1564, 4;
	add.s64 	%rd440, %rd33, %rd439;
	st.global.f32 	[%rd440], %f365;

$L__BB0_473:
	add.s32 	%r1565, %r652, %r678;
	mul.lo.s32 	%r1566, %r1565, %r45;
	sub.s32 	%r683, %r1566, %r778;
	@%p15 bra 	$L__BB0_478;

	not.pred 	%p290, %p11;
	@%p290 bra 	$L__BB0_476;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r475;
  cvt.f32.f16 %f366, low;}

	// end inline asm
	add.s32 	%r1568, %r683, %r387;
	mul.wide.s32 	%rd441, %r1568, 4;
	add.s64 	%rd442, %rd33, %rd441;
	st.global.f32 	[%rd442], %f366;

$L__BB0_476:
	not.pred 	%p291, %p13;
	@%p291 bra 	$L__BB0_478;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r475;
  cvt.f32.f16 %f367, high;}

	// end inline asm
	add.s32 	%r1570, %r683, %r388;
	mul.wide.s32 	%rd443, %r1570, 4;
	add.s64 	%rd444, %rd33, %rd443;
	st.global.f32 	[%rd444], %f367;

$L__BB0_478:
	@%p15 bra 	$L__BB0_483;

	not.pred 	%p293, %p12;
	@%p293 bra 	$L__BB0_481;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r468;
  cvt.f32.f16 %f368, low;}

	// end inline asm
	add.s32 	%r1572, %r683, %r389;
	mul.wide.s32 	%rd445, %r1572, 4;
	add.s64 	%rd446, %rd33, %rd445;
	st.global.f32 	[%rd446], %f368;

$L__BB0_481:
	not.pred 	%p294, %p14;
	@%p294 bra 	$L__BB0_483;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r468;
  cvt.f32.f16 %f369, high;}

	// end inline asm
	add.s32 	%r1574, %r683, %r390;
	mul.wide.s32 	%rd447, %r1574, 4;
	add.s64 	%rd448, %rd33, %rd447;
	st.global.f32 	[%rd448], %f369;

$L__BB0_483:
	add.s32 	%r1825, %r652, 1;
	add.s32 	%r1575, %r1825, %r680;
	mul.lo.s32 	%r1576, %r1575, %r45;
	sub.s32 	%r684, %r1576, %r778;
	@%p15 bra 	$L__BB0_488;

	not.pred 	%p296, %p11;
	@%p296 bra 	$L__BB0_486;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2018;
  cvt.f32.f16 %f370, low;}

	// end inline asm
	add.s32 	%r1578, %r684, %r387;
	mul.wide.s32 	%rd449, %r1578, 4;
	add.s64 	%rd450, %rd33, %rd449;
	st.global.f32 	[%rd450], %f370;

$L__BB0_486:
	not.pred 	%p297, %p13;
	@%p297 bra 	$L__BB0_488;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2018;
  cvt.f32.f16 %f371, high;}

	// end inline asm
	add.s32 	%r1580, %r684, %r388;
	mul.wide.s32 	%rd451, %r1580, 4;
	add.s64 	%rd452, %rd33, %rd451;
	st.global.f32 	[%rd452], %f371;

$L__BB0_488:
	@%p15 bra 	$L__BB0_493;

	not.pred 	%p299, %p12;
	@%p299 bra 	$L__BB0_491;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2012;
  cvt.f32.f16 %f372, low;}

	// end inline asm
	add.s32 	%r1582, %r684, %r389;
	mul.wide.s32 	%rd453, %r1582, 4;
	add.s64 	%rd454, %rd33, %rd453;
	st.global.f32 	[%rd454], %f372;

$L__BB0_491:
	not.pred 	%p300, %p14;
	@%p300 bra 	$L__BB0_493;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2012;
  cvt.f32.f16 %f373, high;}

	// end inline asm
	add.s32 	%r1584, %r684, %r390;
	mul.wide.s32 	%rd455, %r1584, 4;
	add.s64 	%rd456, %rd33, %rd455;
	st.global.f32 	[%rd456], %f373;

$L__BB0_493:
	add.s32 	%r1826, %r652, 1;
	add.s32 	%r1585, %r1826, %r676;
	mul.lo.s32 	%r1586, %r1585, %r45;
	sub.s32 	%r685, %r1586, %r778;
	@%p15 bra 	$L__BB0_498;

	not.pred 	%p302, %p11;
	@%p302 bra 	$L__BB0_496;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r423;
  cvt.f32.f16 %f374, low;}

	// end inline asm
	add.s32 	%r1588, %r685, %r387;
	mul.wide.s32 	%rd457, %r1588, 4;
	add.s64 	%rd458, %rd33, %rd457;
	st.global.f32 	[%rd458], %f374;

$L__BB0_496:
	not.pred 	%p303, %p13;
	@%p303 bra 	$L__BB0_498;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r423;
  cvt.f32.f16 %f375, high;}

	// end inline asm
	add.s32 	%r1590, %r685, %r388;
	mul.wide.s32 	%rd459, %r1590, 4;
	add.s64 	%rd460, %rd33, %rd459;
	st.global.f32 	[%rd460], %f375;

$L__BB0_498:
	@%p15 bra 	$L__BB0_503;

	not.pred 	%p305, %p12;
	@%p305 bra 	$L__BB0_501;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r415;
  cvt.f32.f16 %f376, low;}

	// end inline asm
	add.s32 	%r1592, %r685, %r389;
	mul.wide.s32 	%rd461, %r1592, 4;
	add.s64 	%rd462, %rd33, %rd461;
	st.global.f32 	[%rd462], %f376;

$L__BB0_501:
	not.pred 	%p306, %p14;
	@%p306 bra 	$L__BB0_503;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r415;
  cvt.f32.f16 %f377, high;}

	// end inline asm
	add.s32 	%r1594, %r685, %r390;
	mul.wide.s32 	%rd463, %r1594, 4;
	add.s64 	%rd464, %rd33, %rd463;
	st.global.f32 	[%rd464], %f377;

$L__BB0_503:
	add.s32 	%r1827, %r652, 1;
	add.s32 	%r1595, %r1827, %r678;
	mul.lo.s32 	%r1596, %r1595, %r45;
	sub.s32 	%r686, %r1596, %r778;
	@%p15 bra 	$L__BB0_508;

	not.pred 	%p308, %p11;
	@%p308 bra 	$L__BB0_506;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r462;
  cvt.f32.f16 %f378, low;}

	// end inline asm
	add.s32 	%r1598, %r686, %r387;
	mul.wide.s32 	%rd465, %r1598, 4;
	add.s64 	%rd466, %rd33, %rd465;
	st.global.f32 	[%rd466], %f378;

$L__BB0_506:
	not.pred 	%p309, %p13;
	@%p309 bra 	$L__BB0_508;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r462;
  cvt.f32.f16 %f379, high;}

	// end inline asm
	add.s32 	%r1600, %r686, %r388;
	mul.wide.s32 	%rd467, %r1600, 4;
	add.s64 	%rd468, %rd33, %rd467;
	st.global.f32 	[%rd468], %f379;

$L__BB0_508:
	@%p15 bra 	$L__BB0_513;

	not.pred 	%p311, %p12;
	@%p311 bra 	$L__BB0_511;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r458;
  cvt.f32.f16 %f380, low;}

	// end inline asm
	add.s32 	%r1602, %r686, %r389;
	mul.wide.s32 	%rd469, %r1602, 4;
	add.s64 	%rd470, %rd33, %rd469;
	st.global.f32 	[%rd470], %f380;

$L__BB0_511:
	not.pred 	%p312, %p14;
	@%p312 bra 	$L__BB0_513;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r458;
  cvt.f32.f16 %f381, high;}

	// end inline asm
	add.s32 	%r1604, %r686, %r390;
	mul.wide.s32 	%rd471, %r1604, 4;
	add.s64 	%rd472, %rd33, %rd471;
	st.global.f32 	[%rd472], %f381;

$L__BB0_513:
	add.s32 	%r1845, %r652, 2;
	add.s32 	%r1605, %r1845, %r678;
	mul.lo.s32 	%r1606, %r1605, %r45;
	sub.s32 	%r687, %r1606, %r778;
	@%p15 bra 	$L__BB0_518;

	not.pred 	%p314, %p11;
	@%p314 bra 	$L__BB0_516;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1945;
  cvt.f32.f16 %f382, low;}

	// end inline asm
	add.s32 	%r1608, %r687, %r387;
	mul.wide.s32 	%rd473, %r1608, 4;
	add.s64 	%rd474, %rd33, %rd473;
	st.global.f32 	[%rd474], %f382;

$L__BB0_516:
	not.pred 	%p315, %p13;
	@%p315 bra 	$L__BB0_518;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1945;
  cvt.f32.f16 %f383, high;}

	// end inline asm
	add.s32 	%r1610, %r687, %r388;
	mul.wide.s32 	%rd475, %r1610, 4;
	add.s64 	%rd476, %rd33, %rd475;
	st.global.f32 	[%rd476], %f383;

$L__BB0_518:
	@%p15 bra 	$L__BB0_523;

	not.pred 	%p317, %p12;
	@%p317 bra 	$L__BB0_521;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1941;
  cvt.f32.f16 %f384, low;}

	// end inline asm
	add.s32 	%r1612, %r687, %r389;
	mul.wide.s32 	%rd477, %r1612, 4;
	add.s64 	%rd478, %rd33, %rd477;
	st.global.f32 	[%rd478], %f384;

$L__BB0_521:
	not.pred 	%p318, %p14;
	@%p318 bra 	$L__BB0_523;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1941;
  cvt.f32.f16 %f385, high;}

	// end inline asm
	add.s32 	%r1614, %r687, %r390;
	mul.wide.s32 	%rd479, %r1614, 4;
	add.s64 	%rd480, %rd33, %rd479;
	st.global.f32 	[%rd480], %f385;

$L__BB0_523:
	sub.s32 	%r1844, %r526, %r774;
	add.s32 	%r688, %r1844, 1;
	add.s32 	%r1615, %r688, %r656;
	mad.lo.s32 	%r1617, %r1615, %r802, %r652;
	mul.lo.s32 	%r1618, %r1617, %r45;
	sub.s32 	%r689, %r1618, %r778;
	@%p15 bra 	$L__BB0_528;

	not.pred 	%p320, %p11;
	@%p320 bra 	$L__BB0_526;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2002;
  cvt.f32.f16 %f386, low;}

	// end inline asm
	add.s32 	%r1620, %r689, %r387;
	mul.wide.s32 	%rd481, %r1620, 4;
	add.s64 	%rd482, %rd33, %rd481;
	st.global.f32 	[%rd482], %f386;

$L__BB0_526:
	not.pred 	%p321, %p13;
	@%p321 bra 	$L__BB0_528;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2002;
  cvt.f32.f16 %f387, high;}

	// end inline asm
	add.s32 	%r1622, %r689, %r388;
	mul.wide.s32 	%rd483, %r1622, 4;
	add.s64 	%rd484, %rd33, %rd483;
	st.global.f32 	[%rd484], %f387;

$L__BB0_528:
	@%p15 bra 	$L__BB0_533;

	not.pred 	%p323, %p12;
	@%p323 bra 	$L__BB0_531;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1996;
  cvt.f32.f16 %f388, low;}

	// end inline asm
	add.s32 	%r1624, %r689, %r389;
	mul.wide.s32 	%rd485, %r1624, 4;
	add.s64 	%rd486, %rd33, %rd485;
	st.global.f32 	[%rd486], %f388;

$L__BB0_531:
	not.pred 	%p324, %p14;
	@%p324 bra 	$L__BB0_533;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1996;
  cvt.f32.f16 %f389, high;}

	// end inline asm
	add.s32 	%r1626, %r689, %r390;
	mul.wide.s32 	%rd487, %r1626, 4;
	add.s64 	%rd488, %rd33, %rd487;
	st.global.f32 	[%rd488], %f389;

$L__BB0_533:
	add.s32 	%r1628, %r688, %r668;
	mul.lo.s32 	%r690, %r1628, %r802;
	add.s32 	%r1629, %r652, %r690;
	mul.lo.s32 	%r1630, %r1629, %r45;
	sub.s32 	%r691, %r1630, %r778;
	@%p15 bra 	$L__BB0_538;

	not.pred 	%p326, %p11;
	@%p326 bra 	$L__BB0_536;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2001;
  cvt.f32.f16 %f390, low;}

	// end inline asm
	add.s32 	%r1632, %r691, %r387;
	mul.wide.s32 	%rd489, %r1632, 4;
	add.s64 	%rd490, %rd33, %rd489;
	st.global.f32 	[%rd490], %f390;

$L__BB0_536:
	not.pred 	%p327, %p13;
	@%p327 bra 	$L__BB0_538;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2001;
  cvt.f32.f16 %f391, high;}

	// end inline asm
	add.s32 	%r1634, %r691, %r388;
	mul.wide.s32 	%rd491, %r1634, 4;
	add.s64 	%rd492, %rd33, %rd491;
	st.global.f32 	[%rd492], %f391;

$L__BB0_538:
	@%p15 bra 	$L__BB0_543;

	not.pred 	%p329, %p12;
	@%p329 bra 	$L__BB0_541;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1995;
  cvt.f32.f16 %f392, low;}

	// end inline asm
	add.s32 	%r1636, %r691, %r389;
	mul.wide.s32 	%rd493, %r1636, 4;
	add.s64 	%rd494, %rd33, %rd493;
	st.global.f32 	[%rd494], %f392;

$L__BB0_541:
	not.pred 	%p330, %p14;
	@%p330 bra 	$L__BB0_543;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1995;
  cvt.f32.f16 %f393, high;}

	// end inline asm
	add.s32 	%r1638, %r691, %r390;
	mul.wide.s32 	%rd495, %r1638, 4;
	add.s64 	%rd496, %rd33, %rd495;
	st.global.f32 	[%rd496], %f393;

$L__BB0_543:
	add.s32 	%r1828, %r652, 1;
	add.s32 	%r1639, %r1828, %r690;
	mul.lo.s32 	%r1640, %r1639, %r45;
	sub.s32 	%r692, %r1640, %r778;
	@%p15 bra 	$L__BB0_548;

	not.pred 	%p332, %p11;
	@%p332 bra 	$L__BB0_546;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1990;
  cvt.f32.f16 %f394, low;}

	// end inline asm
	add.s32 	%r1642, %r692, %r387;
	mul.wide.s32 	%rd497, %r1642, 4;
	add.s64 	%rd498, %rd33, %rd497;
	st.global.f32 	[%rd498], %f394;

$L__BB0_546:
	not.pred 	%p333, %p13;
	@%p333 bra 	$L__BB0_548;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1990;
  cvt.f32.f16 %f395, high;}

	// end inline asm
	add.s32 	%r1644, %r692, %r388;
	mul.wide.s32 	%rd499, %r1644, 4;
	add.s64 	%rd500, %rd33, %rd499;
	st.global.f32 	[%rd500], %f395;

$L__BB0_548:
	@%p15 bra 	$L__BB0_553;

	not.pred 	%p335, %p12;
	@%p335 bra 	$L__BB0_551;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1987;
  cvt.f32.f16 %f396, low;}

	// end inline asm
	add.s32 	%r1646, %r692, %r389;
	mul.wide.s32 	%rd501, %r1646, 4;
	add.s64 	%rd502, %rd33, %rd501;
	st.global.f32 	[%rd502], %f396;

$L__BB0_551:
	not.pred 	%p336, %p14;
	@%p336 bra 	$L__BB0_553;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1987;
  cvt.f32.f16 %f397, high;}

	// end inline asm
	add.s32 	%r1648, %r692, %r390;
	mul.wide.s32 	%rd503, %r1648, 4;
	add.s64 	%rd504, %rd33, %rd503;
	st.global.f32 	[%rd504], %f397;

$L__BB0_553:
	setp.ne.s32 	%p337, %r30, %r1174;
	ld.param.u64 	%rd505, [%rd1+80];
	cvta.to.global.u64 	%rd35, %rd505;
	@%p337 bra 	$L__BB0_555;

	mad.lo.s32 	%r1650, %r524, %r763, %r33;
	mul.lo.s32 	%r1651, %r761, %r1650;
	mul.lo.s32 	%r1652, %r1651, 768;
	mad.lo.s32 	%r1654, %r31, 384, %r1652;
	add.s32 	%r1655, %r1654, -64;
	mul.wide.s32 	%rd506, %r1655, 4;
	add.s64 	%rd507, %rd35, %rd506;
	add.s64 	%rd509, %rd507, %rd270;
	st.global.v4.u32 	[%rd509+256], {%r2006, %r2004, %r1975, %r1968};
	st.global.v4.u32 	[%rd509+1024], {%r2048, %r2044, %r2030, %r2023};
	add.s64 	%rd511, %rd507, %rd272;
	st.global.v2.u32 	[%rd511+768], {%r2036, %r2034};
	st.global.v2.u32 	[%rd511+1536], {%r2047, %r2043};

$L__BB0_555:
	setp.ne.s32 	%p338, %r31, %r1179;
	@%p338 bra 	$L__BB0_560;

	ld.param.u64 	%rd539, [%rd1+80];
	cvta.to.global.u64 	%rd538, %rd539;
	not.b32 	%r1841, %r30;
	add.s32 	%r1840, %r760, %r1841;
	setp.eq.s32 	%p339, %r30, %r1174;
	mad.lo.s32 	%r1658, %r525, %r762, %r32;
	mul.lo.s32 	%r1665, %r791, %r58;
	mul.lo.s32 	%r1666, %r1665, 768;
	mad.lo.s32 	%r1667, %r1840, 384, %r1666;
	add.s32 	%r1668, %r1667, -64;
	mad.lo.s32 	%r1669, %r1658, %r825, %r1668;
	mul.wide.s32 	%rd512, %r1669, 4;
	add.s64 	%rd513, %rd538, %rd512;
	add.s64 	%rd515, %rd513, %rd270;
	st.global.v4.u32 	[%rd515+256], {%r2040, %r2038, %r2016, %r2010};
	st.global.v4.u32 	[%rd515+1024], {%r1984, %r1980, %r1945, %r1941};
	add.s64 	%rd36, %rd513, %rd272;
	@%p339 bra 	$L__BB0_558;

	st.global.v2.u32 	[%rd36], {%r2047, %r2043};

$L__BB0_558:
	st.global.v2.u32 	[%rd36+768], {%r2017, %r2011};
	@%p163 bra 	$L__BB0_560;

	st.global.v2.u32 	[%rd36+1536], {%r2076, %r2074};

$L__BB0_560:
	setp.ge.s32 	%p341, %r30, %r1174;
	@%p341 bra 	$L__BB0_562;

	add.s32 	%r1839, %r59, %r59;
	mul.lo.s32 	%r1670, %r761, 320;
	mul.lo.s32 	%r1672, %r31, 320;
	mad.lo.s32 	%r1673, %r1670, %r30, %r1672;
	add.s32 	%r1676, %r1839, -64;
	mad.lo.s32 	%r1681, %r1676, %r1179, %r1176;
	add.s32 	%r1682, %r1673, %r1681;
	shl.b32 	%r1683, %r1682, 2;
	mov.u32 	%r1684, _ZN6kernel5shmemE;
	add.s32 	%r1685, %r1684, %r1683;
	shl.b32 	%r1686, %r35, 4;
	add.s32 	%r1687, %r1685, %r1686;
	st.shared.v4.u32 	[%r1687], {%r2125, %r2124, %r2120, %r2118};
	shl.b32 	%r1688, %r35, 3;
	add.s32 	%r1689, %r1685, %r1688;
	st.shared.v2.u32 	[%r1689+512], {%r2035, %r2033};
	st.shared.v4.u32 	[%r1687+768], {%r2046, %r2042, %r2026, %r2019};

$L__BB0_562:
	setp.ge.s32 	%p342, %r31, %r1179;
	@%p342 bra 	$L__BB0_566;

	not.b32 	%r1838, %r30;
	add.s32 	%r1837, %r760, %r1838;
	mad.lo.s32 	%r1695, %r1837, 384, %r1182;
	mad.lo.s32 	%r1699, %r1177, %r31, %r1695;
	add.s32 	%r1705, %r1699, %r1180;
	shl.b32 	%r1706, %r1705, 2;
	mov.u32 	%r1707, _ZN6kernel5shmemE;
	add.s32 	%r1708, %r1707, %r1706;
	shl.b32 	%r1709, %r35, 3;
	add.s32 	%r1710, %r1708, %r1709;
	@%p341 bra 	$L__BB0_565;

	add.s32 	%r1820, %r1710, -256;
	st.shared.v2.u32 	[%r1820], {%r2045, %r2041};

$L__BB0_565:
	shl.b32 	%r1730, %r35, 4;
	add.s32 	%r1731, %r1708, %r1730;
	st.shared.v4.u32 	[%r1731], {%r2039, %r2037, %r2013, %r2007};
	add.s32 	%r1821, %r1710, -256;
	st.shared.v2.u32 	[%r1821+768], {%r2014, %r2008};
	st.shared.v4.u32 	[%r1731+768], {%r2123, %r2122, %r2111, %r2110};

$L__BB0_566:
	bar.sync 	0;
	ld.param.u64 	%rd517, [%rd1+80];
	cvta.to.global.u64 	%rd37, %rd517;
	mov.u32 	%r2149, %r1961;
	mov.u32 	%r2131, %r1939;
	mov.u32 	%r2133, %r1943;
	mov.u32 	%r1947, %r411;
	mov.u32 	%r2151, %r1957;
	mov.u32 	%r1953, %r419;
	mov.u32 	%r1960, %r429;
	mov.u32 	%r1964, %r2054;
	mov.u32 	%r1970, %r440;
	mov.u32 	%r1971, %r2052;
	mov.u32 	%r2156, %r2050;
	mov.u32 	%r2157, %r2051;
	@%p163 bra 	$L__BB0_570;

	setp.eq.s32 	%p345, %r31, 0;
	mad.lo.s32 	%r1734, %r524, %r763, %r33;
	mad.lo.s32 	%r1735, %r1734, 768, 384;
	mul.lo.s32 	%r1736, %r1735, %r761;
	mad.lo.s32 	%r1737, %r31, 384, %r1736;
	add.s32 	%r1738, %r1737, -128;
	mul.wide.s32 	%rd518, %r1738, 4;
	add.s64 	%rd519, %rd37, %rd518;
	add.s64 	%rd521, %rd519, %rd270;
	add.s64 	%rd38, %rd521, 512;
	mov.u32 	%r2149, %r1961;
	mov.u32 	%r2151, %r1957;
	mov.u32 	%r2156, %r2050;
	mov.u32 	%r2157, %r2051;
	@%p345 bra 	$L__BB0_569;

	ld.global.v4.u32 	{%r2156, %r2157, %r2149, %r2151}, [%rd38+-512];

$L__BB0_569:
	ld.global.v4.u32 	{%r1964, %r1971, %r1960, %r1970}, [%rd38];
	ld.global.v4.u32 	{%r1953, %r1947, %r2133, %r2131}, [%rd38+512];
	ld.global.v4.u32 	{%r2134, %r2132, %r2145, %r2143}, [%rd38+1024];

$L__BB0_570:
	mov.u32 	%r1933, %r1962;
	mov.u32 	%r1936, %r399;
	mov.u32 	%r1937, %r400;
	mov.u32 	%r1951, %r1958;
	mov.u32 	%r1965, %r435;
	mov.u32 	%r2153, %r1966;
	mov.u32 	%r1972, %r442;
	mov.u32 	%r2155, %r1973;
	@%p166 bra 	$L__BB0_572;

	not.b32 	%r1836, %r30;
	add.s32 	%r1835, %r760, %r1836;
	mad.lo.s32 	%r1756, %r525, %r762, %r32;
	mad.lo.s32 	%r1762, %r1835, 384, %r59;
	mad.lo.s32 	%r1763, %r1756, %r825, %r1762;
	mad.lo.s32 	%r1766, %r827, %r58, %r1763;
	mul.wide.s32 	%rd522, %r1766, 4;
	add.s64 	%rd523, %rd37, %rd522;
	add.s64 	%rd525, %rd523, %rd270;
	ld.global.v4.u32 	{%r2155, %r2153, %r1937, %r1936}, [%rd525+512];
	ld.global.v4.u32 	{%r1972, %r1965, %r1933, %r1951}, [%rd525+1024];
	ld.global.v4.u32 	{%r2156, %r2157, %r2149, %r2151}, [%rd525+1536];

$L__BB0_572:
	setp.ne.s32 	%p356, %r30, %r1174;
	add.s32 	%r757, %r2049, 1;
	bar.sync 	0;
	ld.param.u64 	%rd526, [%rd1+80];
	cvta.to.global.u64 	%rd39, %rd526;
	@%p356 bra 	$L__BB0_574;

	mad.lo.s32 	%r1780, %r524, %r763, %r33;
	mad.lo.s32 	%r1781, %r1780, 768, 384;
	mul.lo.s32 	%r1782, %r1781, %r761;
	mad.lo.s32 	%r1784, %r31, 384, %r1782;
	add.s32 	%r1785, %r1784, -128;
	mul.wide.s32 	%rd527, %r1785, 4;
	add.s64 	%rd528, %rd39, %rd527;
	add.s64 	%rd530, %rd528, %rd270;
	st.global.v4.u32 	[%rd530+512], {%r1973, %r1966, %r1974, %r1967};
	st.global.v4.u32 	[%rd530+1024], {%r2005, %r2003, %r2000, %r1994};
	st.global.v4.u32 	[%rd530+1536], {%r2061, %r2060, %r2029, %r2022};

$L__BB0_574:
	@%p338 bra 	$L__BB0_577;

	not.b32 	%r1834, %r30;
	add.s32 	%r1833, %r760, %r1834;
	mad.lo.s32 	%r1787, %r525, %r762, %r32;
	mad.lo.s32 	%r1793, %r1833, 384, %r59;
	mad.lo.s32 	%r1794, %r1787, %r825, %r1793;
	mad.lo.s32 	%r1797, %r827, %r58, %r1794;
	mul.wide.s32 	%rd531, %r1797, 4;
	add.s64 	%rd532, %rd39, %rd531;
	add.s64 	%rd40, %rd532, %rd270;
	st.global.v4.u32 	[%rd40], {%r2061, %r2060, %r2029, %r2022};
	st.global.v4.u32 	[%rd40+512], {%r2059, %r2058, %r2055, %r2053};
	st.global.v4.u32 	[%rd40+1024], {%r1989, %r1986, %r1943, %r1939};
	@%p163 bra 	$L__BB0_577;

	st.global.v4.u32 	[%rd40+1536], {%r2134, %r2132, %r2145, %r2143};

$L__BB0_577:
	rem.s32 	%r1798, %r2049, %r764;
	setp.eq.s32 	%p350, %r1798, 0;
	@%p350 bra 	$L__BB0_579;

	bar.sync 	0;
	bra.uni 	$L__BB0_586;

$L__BB0_579:
	@%p150 bra 	$L__BB0_581;

	// begin inline asm
	trap;
	// end inline asm

$L__BB0_581:
	bar.sync 	0;
	@%p151 bra 	$L__BB0_585;

	membar.gl;
	setp.eq.s32 	%p353, %r392, %r393;
	mov.u32 	%r1814, -2147483647;
	sub.s32 	%r1815, %r1814, %r391;
	selp.b32 	%r1803, %r1815, 1, %p353;
	// begin inline asm
	atom.add.release.gpu.u32 %r1802,[%rd27],%r1803;
	// end inline asm

$L__BB0_583:
	ld.volatile.u32 	%r1816, [%rd27];
	xor.b32  	%r1817, %r1816, %r1802;
	setp.gt.s32 	%p354, %r1817, -1;
	@%p354 bra 	$L__BB0_583;

	// begin inline asm
	ld.acquire.gpu.u32 %r1818,[%rd27];
	// end inline asm

$L__BB0_585:
	bar.sync 	0;

$L__BB0_586:
	setp.lt.s32 	%p355, %r757, %r38;
	mov.u32 	%r1939, %r2131;
	mov.u32 	%r1941, %r2065;
	mov.u32 	%r1943, %r2133;
	mov.u32 	%r1945, %r2067;
	mov.u32 	%r1966, %r2153;
	mov.u32 	%r1967, %r399;
	mov.u32 	%r1968, %r2084;
	mov.u32 	%r1973, %r2155;
	mov.u32 	%r1974, %r400;
	mov.u32 	%r1975, %r2086;
	mov.u32 	%r1980, %r2075;
	mov.u32 	%r1984, %r2077;
	mov.u32 	%r1986, %r411;
	mov.u32 	%r1989, %r419;
	mov.u32 	%r1994, %r426;
	mov.u32 	%r2000, %r431;
	mov.u32 	%r2003, %r435;
	mov.u32 	%r2004, %r2088;
	mov.u32 	%r2005, %r442;
	mov.u32 	%r2006, %r2089;
	mov.u32 	%r2007, %r455;
	mov.u32 	%r2008, %r2112;
	mov.u32 	%r2010, %r458;
	mov.u32 	%r2011, %r415;
	mov.u32 	%r2013, %r459;
	mov.u32 	%r2014, %r2114;
	mov.u32 	%r2016, %r462;
	mov.u32 	%r2017, %r423;
	mov.u32 	%r2019, %r463;
	mov.u32 	%r2022, %r465;
	mov.u32 	%r2023, %r468;
	mov.u32 	%r2026, %r470;
	mov.u32 	%r2029, %r472;
	mov.u32 	%r2030, %r475;
	mov.u32 	%r2033, %r2119;
	mov.u32 	%r2034, %r439;
	mov.u32 	%r2035, %r2121;
	mov.u32 	%r2036, %r446;
	mov.u32 	%r2037, %r483;
	mov.u32 	%r2038, %r486;
	mov.u32 	%r2039, %r489;
	mov.u32 	%r2040, %r492;
	mov.u32 	%r2041, %r494;
	mov.u32 	%r2042, %r495;
	mov.u32 	%r2043, %r498;
	mov.u32 	%r2044, %r499;
	mov.u32 	%r2045, %r501;
	mov.u32 	%r2046, %r502;
	mov.u32 	%r2047, %r505;
	mov.u32 	%r2048, %r506;
	mov.u32 	%r2049, %r757;
	mov.u32 	%r2053, %r440;
	mov.u32 	%r2055, %r429;
	mov.u32 	%r2058, %r412;
	mov.u32 	%r2059, %r420;
	mov.u32 	%r2060, %r427;
	mov.u32 	%r2061, %r432;
	@%p355 bra 	$L__BB0_293;

$L__BB0_587:
	ret;

}

