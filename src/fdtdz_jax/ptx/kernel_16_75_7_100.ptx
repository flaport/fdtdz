//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31833905
// Cuda compilation tools, release 11.8, V11.8.89
// Based on NVVM 7.0.1
//

.version 7.8
.target sm_75
.address_size 64

	// .globl	_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE
.global .align 4 .b8 _ZZN4cuda3std3__48__detail21__stronger_order_cudaEiiE7__xform[16] = {3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE[24] = {254, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllJE[20] = {254, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllKE[8] = {0, 0, 0, 0, 1, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond6AllEhcE[12] = {0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond6AllXyzE[12] = {0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.extern .shared .align 16 .b8 _ZN6kernel5shmemE[];

.visible .entry _ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE(
	.param .align 8 .b8 _ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0[168]
)
{
	.reg .pred 	%p<369>;
	.reg .f32 	%f<400>;
	.reg .b32 	%r<2183>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<543>;


	mov.b64 	%rd41, _ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0;
	mov.u64 	%rd1, %rd41;
	ld.param.v2.u32 	{%r770, %r771}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0];
	ld.param.v2.u32 	{%r772, %r773}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+8];
	ld.param.v2.u32 	{%r774, %r775}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+16];
	ld.param.v2.u32 	{%r776, %r777}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+24];
	ld.param.v2.u32 	{%r778, %r779}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+32];
	ld.param.v2.u32 	{%r780, %r781}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+40];
	ld.param.v2.u32 	{%r782, %r783}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+48];
	ld.param.v2.u32 	{%r784, %r785}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+56];
	ld.param.v2.u32 	{%r786, %r787}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+64];
	ld.param.v2.u32 	{%r788, %r789}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+72];
	mov.u32 	%r34, %tid.y;
	mov.u32 	%r35, %tid.z;
	mov.u32 	%r36, %ctaid.y;
	mov.u32 	%r37, %ctaid.z;
	mov.u32 	%r790, 32;
	sub.s32 	%r38, %r790, %r777;
	mov.u32 	%r39, %tid.x;
	setp.le.s32 	%p15, %r38, %r39;
	add.s32 	%r791, %r783, -1;
	add.s32 	%r792, %r781, %r775;
	add.s32 	%r793, %r792, %r776;
	add.s32 	%r794, %r793, 1;
	mad.lo.s32 	%r795, %r791, %r782, %r794;
	mul.lo.s32 	%r796, %r770, %r772;
	shl.b32 	%r40, %r796, 1;
	shl.b32 	%r797, %r796, 2;
	div.s32 	%r798, %r795, %r797;
	add.s32 	%r799, %r798, 1;
	mul.lo.s32 	%r800, %r799, %r776;
	mul.lo.s32 	%r801, %r771, %r773;
	shl.b32 	%r41, %r801, 1;
	div.s32 	%r802, %r800, %r41;
	add.s32 	%r803, %r802, 1;
	mul.lo.s32 	%r42, %r803, %r775;
	ld.param.u64 	%rd42, [%rd1+160];
	cvta.to.global.u64 	%rd2, %rd42;
	mad.lo.s32 	%r806, %r772, %r37, %r36;
	mad.lo.s32 	%r807, %r806, %r771, %r35;
	mul.lo.s32 	%r43, %r807, %r770;
	add.s32 	%r808, %r43, %r34;
	shl.b32 	%r44, %r808, 5;
	add.s32 	%r1875, %r44, %r39;
	mul.lo.s32 	%r809, %r801, %r796;
	shl.b32 	%r48, %r809, 5;
	sub.s32 	%r49, %r785, %r784;
	mul.lo.s32 	%r810, %r783, %r49;
	sub.s32 	%r50, %r787, %r786;
	mul.lo.s32 	%r811, %r810, %r50;
	sub.s32 	%r51, %r789, %r788;
	mul.lo.s32 	%r812, %r811, %r51;
	mul.lo.s32 	%r52, %r812, 3;
	setp.ge.s32 	%p16, %r1875, %r52;
	@%p16 bra 	$L__BB0_9;

	not.b32 	%r813, %r39;
	add.s32 	%r814, %r52, %r813;
	sub.s32 	%r815, %r814, %r44;
	mul.lo.s32 	%r816, %r801, %r770;
	mul.lo.s32 	%r817, %r816, %r772;
	shl.b32 	%r53, %r817, 5;
	div.u32 	%r54, %r815, %r53;
	add.s32 	%r818, %r54, 1;
	and.b32  	%r1872, %r818, 3;
	setp.eq.s32 	%p17, %r1872, 0;
	mov.u32 	%r1873, %r1875;
	@%p17 bra 	$L__BB0_6;

	shl.b32 	%r819, %r43, 5;
	add.s32 	%r820, %r39, %r819;
	shl.b32 	%r821, %r34, 5;
	add.s32 	%r1873, %r820, %r821;
	mul.wide.s32 	%rd43, %r1875, 4;
	add.s64 	%rd540, %rd2, %rd43;
	mul.wide.s32 	%rd4, %r53, 4;

$L__BB0_5:
	.pragma "nounroll";
	mov.u32 	%r822, 0;
	st.global.u32 	[%rd540], %r822;
	add.s32 	%r1873, %r1873, %r53;
	add.s64 	%rd540, %rd540, %rd4;
	add.s32 	%r1872, %r1872, -1;
	setp.ne.s32 	%p18, %r1872, 0;
	@%p18 bra 	$L__BB0_5;

$L__BB0_6:
	setp.lt.u32 	%p19, %r54, 3;
	@%p19 bra 	$L__BB0_9;

	mul.wide.s32 	%rd46, %r48, 4;

$L__BB0_8:
	mul.wide.s32 	%rd44, %r1873, 4;
	add.s64 	%rd45, %rd2, %rd44;
	mov.u32 	%r823, 0;
	st.global.u32 	[%rd45], %r823;
	add.s64 	%rd47, %rd45, %rd46;
	st.global.u32 	[%rd47], %r823;
	add.s32 	%r824, %r1873, %r48;
	add.s32 	%r825, %r824, %r48;
	add.s64 	%rd48, %rd47, %rd46;
	st.global.u32 	[%rd48], %r823;
	add.s32 	%r826, %r825, %r48;
	add.s64 	%rd49, %rd48, %rd46;
	st.global.u32 	[%rd49], %r823;
	add.s32 	%r1873, %r826, %r48;
	setp.lt.s32 	%p20, %r1873, %r52;
	@%p20 bra 	$L__BB0_8;

$L__BB0_9:
	ld.param.u64 	%rd50, [%rd1+80];
	cvta.to.global.u64 	%rd7, %rd50;
	sub.s32 	%r827, %r776, %r40;
	div.s32 	%r828, %r827, %r41;
	mul.lo.s32 	%r829, %r828, %r775;
	sub.s32 	%r64, %r829, %r40;
	sub.s32 	%r830, %r775, %r41;
	mul.lo.s32 	%r831, %r830, %r772;
	mul.lo.s32 	%r65, %r770, 384;
	add.s32 	%r832, %r65, %r65;
	add.s32 	%r833, %r832, 128;
	mul.lo.s32 	%r835, %r801, 768;
	mul.lo.s32 	%r836, %r831, %r833;
	mad.lo.s32 	%r66, %r835, %r64, %r836;
	bra.uni 	$L__BB0_10;

$L__BB0_588:
	mov.f32 	%f399, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f399;
  cvt.rn.f16.f32 high, %f399;
  mov.b32 %r1844, {low,high};}

	// end inline asm
	mul.wide.s32 	%rd536, %r1875, 4;
	add.s64 	%rd537, %rd7, %rd536;
	st.global.u32 	[%rd537], %r1844;
	add.s32 	%r1875, %r1875, %r48;

$L__BB0_10:
	setp.lt.s32 	%p21, %r1875, %r66;
	@%p21 bra 	$L__BB0_588;

	ld.param.u64 	%rd51, [%rd1+120];
	cvta.to.global.u64 	%rd9, %rd51;
	ld.param.u64 	%rd52, [%rd1+88];
	cvta.to.global.u64 	%rd10, %rd52;
	mad.lo.s32 	%r1917, %r770, %r36, %r34;
	mul.lo.s32 	%r71, %r771, %r37;
	add.s32 	%r72, %r71, %r35;
	setp.ge.s32 	%p22, %r1917, %r775;
	@%p22 bra 	$L__BB0_35;

	setp.gt.s32 	%p23, %r38, %r39;
	mov.u32 	%r837, 31;
	sub.s32 	%r838, %r837, %r39;
	selp.b32 	%r839, %r39, %r838, %p23;
	shl.b32 	%r840, %r839, 2;
	mov.u32 	%r841, 2;
	sub.s32 	%r73, %r840, %r778;
	shl.b32 	%r842, %r777, 2;
	mov.u32 	%r843, 128;
	sub.s32 	%r74, %r843, %r842;
	add.s32 	%r75, %r785, -1;
	add.s32 	%r76, %r787, -1;
	add.s32 	%r77, %r789, -1;
	sub.s32 	%r844, %r841, %r778;
	add.s32 	%r78, %r844, %r840;
	mul.lo.s32 	%r845, %r776, %r775;
	shl.b32 	%r79, %r845, 6;
	add.s32 	%r80, %r775, -1;
	add.s32 	%r81, %r73, 1;
	add.s32 	%r82, %r78, 1;
	shl.b32 	%r83, %r39, 1;
	or.b32  	%r84, %r83, 1;
	shr.u32 	%r846, %r84, 31;
	add.s32 	%r847, %r84, %r846;
	shr.s32 	%r86, %r847, 1;
	and.b32  	%r848, %r847, -2;
	sub.s32 	%r849, %r84, %r848;
	add.s32 	%r85, %r849, %r79;
	rem.s32 	%r895, %r81, %r74;
	add.s32 	%r896, %r895, %r74;
	rem.s32 	%r897, %r896, %r74;
	rem.s32 	%r900, %r82, %r74;
	add.s32 	%r901, %r900, %r74;
	rem.s32 	%r902, %r901, %r74;
	mov.u32 	%r1876, %r1917;

$L__BB0_13:
	setp.ge.s32 	%p24, %r72, %r776;
	@%p24 bra 	$L__BB0_34;

	setp.gt.s32 	%p25, %r784, %r1876;
	setp.gt.s32 	%p26, %r785, %r1876;
	selp.b32 	%r850, %r1876, %r75, %p26;
	selp.b32 	%r851, %r784, %r850, %p25;
	sub.s32 	%r852, %r851, %r784;
	add.s32 	%r88, %r80, %r1876;
	rem.s32 	%r853, %r73, %r74;
	add.s32 	%r854, %r853, %r74;
	rem.s32 	%r855, %r854, %r74;
	setp.gt.s32 	%p27, %r788, %r855;
	setp.gt.s32 	%p28, %r789, %r855;
	selp.b32 	%r856, %r855, %r77, %p28;
	selp.b32 	%r857, %r788, %r856, %p27;
	rem.s32 	%r858, %r78, %r74;
	add.s32 	%r859, %r858, %r74;
	rem.s32 	%r860, %r859, %r74;
	setp.gt.s32 	%p29, %r788, %r860;
	setp.gt.s32 	%p30, %r789, %r860;
	selp.b32 	%r861, %r860, %r77, %p30;
	selp.b32 	%r862, %r788, %r861, %p29;
	sub.s32 	%r89, %r857, %r788;
	sub.s32 	%r90, %r862, %r788;
	mul.lo.s32 	%r91, %r852, %r50;
	add.s32 	%r863, %r852, %r49;
	mul.lo.s32 	%r92, %r863, %r50;
	add.s32 	%r864, %r863, %r49;
	mul.lo.s32 	%r93, %r864, %r50;
	mov.u32 	%r1877, %r72;

$L__BB0_15:
	setp.gt.s32 	%p31, %r787, %r1877;
	selp.b32 	%r865, %r1877, %r76, %p31;
	setp.gt.s32 	%p32, %r786, %r1877;
	selp.b32 	%r866, %r786, %r865, %p32;
	sub.s32 	%r95, %r866, %r786;
	mul.lo.s32 	%r96, %r1877, %r775;
	add.s32 	%r97, %r96, %r1876;
	shl.b32 	%r98, %r97, 6;
	@%p23 bra 	$L__BB0_17;
	bra.uni 	$L__BB0_16;

$L__BB0_17:
	add.s32 	%r869, %r95, %r91;
	mul.lo.s32 	%r870, %r869, %r51;
	add.s32 	%r871, %r89, %r870;
	mul.wide.s32 	%rd53, %r871, 4;
	add.s64 	%rd54, %rd9, %rd53;
	ld.global.f32 	%f40, [%rd54];
	add.s32 	%r872, %r90, %r870;
	mul.wide.s32 	%rd55, %r872, 4;
	add.s64 	%rd56, %rd9, %rd55;
	ld.global.f32 	%f41, [%rd56];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f40;
  cvt.rn.f16.f32 high, %f41;
  mov.b32 %r1878, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_18;

$L__BB0_16:
	mov.f32 	%f39, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f39;
  cvt.rn.f16.f32 high, %f39;
  mov.b32 %r1878, {low,high};}

	// end inline asm

$L__BB0_18:
	shl.b32 	%r102, %r97, 5;
	add.s32 	%r873, %r102, %r39;
	shl.b32 	%r874, %r873, 2;
	add.s32 	%r875, %r79, %r874;
	mul.wide.s32 	%rd57, %r875, 4;
	add.s64 	%rd58, %rd10, %rd57;
	st.global.u32 	[%rd58], %r1878;
	@%p23 bra 	$L__BB0_20;
	bra.uni 	$L__BB0_19;

$L__BB0_20:
	add.s32 	%r878, %r95, %r92;
	mul.lo.s32 	%r879, %r878, %r51;
	add.s32 	%r880, %r89, %r879;
	mul.wide.s32 	%rd59, %r880, 4;
	add.s64 	%rd60, %rd9, %rd59;
	ld.global.f32 	%f44, [%rd60];
	add.s32 	%r881, %r90, %r879;
	mul.wide.s32 	%rd61, %r881, 4;
	add.s64 	%rd62, %rd9, %rd61;
	ld.global.f32 	%f45, [%rd62];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f44;
  cvt.rn.f16.f32 high, %f45;
  mov.b32 %r1879, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_21;

$L__BB0_19:
	mov.f32 	%f43, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f43;
  cvt.rn.f16.f32 high, %f43;
  mov.b32 %r1879, {low,high};}

	// end inline asm

$L__BB0_21:
	add.s32 	%r882, %r83, %r98;
	mul.wide.s32 	%rd63, %r882, 4;
	add.s64 	%rd64, %rd10, %rd63;
	st.global.u32 	[%rd64], %r1879;
	@%p23 bra 	$L__BB0_23;
	bra.uni 	$L__BB0_22;

$L__BB0_23:
	add.s32 	%r885, %r95, %r93;
	mul.lo.s32 	%r886, %r885, %r51;
	add.s32 	%r887, %r89, %r886;
	mul.wide.s32 	%rd65, %r887, 4;
	add.s64 	%rd66, %rd9, %rd65;
	ld.global.f32 	%f48, [%rd66];
	add.s32 	%r888, %r90, %r886;
	mul.wide.s32 	%rd67, %r888, 4;
	add.s64 	%rd68, %rd9, %rd67;
	ld.global.f32 	%f49, [%rd68];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f48;
  cvt.rn.f16.f32 high, %f49;
  mov.b32 %r1880, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_24;

$L__BB0_22:
	mov.f32 	%f47, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f47;
  cvt.rn.f16.f32 high, %f47;
  mov.b32 %r1880, {low,high};}

	// end inline asm

$L__BB0_24:
	rem.s32 	%r889, %r88, %r775;
	add.s32 	%r890, %r889, %r96;
	shl.b32 	%r109, %r890, 5;
	add.s32 	%r891, %r109, %r39;
	shl.b32 	%r892, %r891, 2;
	add.s32 	%r893, %r79, %r892;
	add.s32 	%r894, %r893, 2;
	mul.wide.s32 	%rd69, %r894, 4;
	add.s64 	%rd70, %rd10, %rd69;
	st.global.u32 	[%rd70], %r1880;
	setp.gt.s32 	%p36, %r788, %r897;
	setp.gt.s32 	%p37, %r789, %r897;
	selp.b32 	%r898, %r897, %r77, %p37;
	selp.b32 	%r899, %r788, %r898, %p36;
	setp.gt.s32 	%p38, %r788, %r902;
	setp.gt.s32 	%p39, %r789, %r902;
	selp.b32 	%r903, %r902, %r77, %p39;
	selp.b32 	%r904, %r788, %r903, %p38;
	sub.s32 	%r110, %r899, %r788;
	sub.s32 	%r111, %r904, %r788;
	@%p23 bra 	$L__BB0_26;
	bra.uni 	$L__BB0_25;

$L__BB0_26:
	add.s32 	%r907, %r95, %r91;
	mul.lo.s32 	%r908, %r907, %r51;
	add.s32 	%r909, %r110, %r908;
	mul.wide.s32 	%rd71, %r909, 4;
	add.s64 	%rd72, %rd9, %rd71;
	ld.global.f32 	%f52, [%rd72];
	add.s32 	%r910, %r111, %r908;
	mul.wide.s32 	%rd73, %r910, 4;
	add.s64 	%rd74, %rd9, %rd73;
	ld.global.f32 	%f53, [%rd74];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f52;
  cvt.rn.f16.f32 high, %f53;
  mov.b32 %r1881, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_27;

$L__BB0_25:
	mov.f32 	%f51, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f51;
  cvt.rn.f16.f32 high, %f51;
  mov.b32 %r1881, {low,high};}

	// end inline asm

$L__BB0_27:
	add.s32 	%r911, %r102, %r86;
	shl.b32 	%r912, %r911, 2;
	add.s32 	%r913, %r85, %r912;
	mul.wide.s32 	%rd75, %r913, 4;
	add.s64 	%rd76, %rd10, %rd75;
	st.global.u32 	[%rd76], %r1881;
	@%p23 bra 	$L__BB0_29;
	bra.uni 	$L__BB0_28;

$L__BB0_29:
	add.s32 	%r916, %r95, %r92;
	mul.lo.s32 	%r917, %r916, %r51;
	add.s32 	%r918, %r110, %r917;
	mul.wide.s32 	%rd77, %r918, 4;
	add.s64 	%rd78, %rd9, %rd77;
	ld.global.f32 	%f56, [%rd78];
	add.s32 	%r919, %r111, %r917;
	mul.wide.s32 	%rd79, %r919, 4;
	add.s64 	%rd80, %rd9, %rd79;
	ld.global.f32 	%f57, [%rd80];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f56;
  cvt.rn.f16.f32 high, %f57;
  mov.b32 %r1882, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_30;

$L__BB0_28:
	mov.f32 	%f55, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f55;
  cvt.rn.f16.f32 high, %f55;
  mov.b32 %r1882, {low,high};}

	// end inline asm

$L__BB0_30:
	add.s32 	%r920, %r84, %r98;
	mul.wide.s32 	%rd81, %r920, 4;
	add.s64 	%rd82, %rd10, %rd81;
	st.global.u32 	[%rd82], %r1882;
	@%p23 bra 	$L__BB0_32;
	bra.uni 	$L__BB0_31;

$L__BB0_32:
	add.s32 	%r923, %r95, %r93;
	mul.lo.s32 	%r924, %r923, %r51;
	add.s32 	%r925, %r110, %r924;
	mul.wide.s32 	%rd83, %r925, 4;
	add.s64 	%rd84, %rd9, %rd83;
	ld.global.f32 	%f60, [%rd84];
	add.s32 	%r926, %r111, %r924;
	mul.wide.s32 	%rd85, %r926, 4;
	add.s64 	%rd86, %rd9, %rd85;
	ld.global.f32 	%f61, [%rd86];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f60;
  cvt.rn.f16.f32 high, %f61;
  mov.b32 %r1883, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_33;

$L__BB0_31:
	mov.f32 	%f59, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f59;
  cvt.rn.f16.f32 high, %f59;
  mov.b32 %r1883, {low,high};}

	// end inline asm

$L__BB0_33:
	add.s32 	%r927, %r109, %r86;
	shl.b32 	%r928, %r927, 2;
	add.s32 	%r929, %r85, %r928;
	add.s32 	%r930, %r929, 2;
	mul.wide.s32 	%rd87, %r930, 4;
	add.s64 	%rd88, %rd10, %rd87;
	st.global.u32 	[%rd88], %r1883;
	add.s32 	%r1877, %r1877, %r801;
	setp.lt.s32 	%p43, %r1877, %r776;
	@%p43 bra 	$L__BB0_15;

$L__BB0_34:
	add.s32 	%r1876, %r1876, %r796;
	setp.lt.s32 	%p44, %r1876, %r775;
	@%p44 bra 	$L__BB0_13;

$L__BB0_35:
	ld.param.u64 	%rd89, [%rd1+128];
	cvta.to.global.u64 	%rd11, %rd89;
	ld.param.u64 	%rd90, [%rd1+96];
	cvta.to.global.u64 	%rd12, %rd90;
	@%p22 bra 	$L__BB0_119;

	shl.b32 	%r123, %r72, 1;
	mov.u64 	%rd91, _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE;
	mov.u32 	%r1884, %r1917;

$L__BB0_37:
	setp.ge.s32 	%p46, %r123, %r776;
	@%p46 bra 	$L__BB0_118;

	mov.u32 	%r1885, %r123;

$L__BB0_39:
	setp.ne.s32 	%p47, %r39, 0;
	@%p47 bra 	$L__BB0_117;

	shr.u32 	%r932, %r1885, 31;
	add.s32 	%r933, %r1885, %r932;
	shr.s32 	%r934, %r933, 1;
	mad.lo.s32 	%r935, %r934, %r775, %r1884;
	shl.b32 	%r127, %r935, 5;
	add.s32 	%r128, %r1885, -2;
	mul.lo.s32 	%r129, %r128, %r775;
	add.s32 	%r936, %r776, %r128;
	mul.lo.s32 	%r130, %r936, %r775;
	add.s32 	%r937, %r936, %r776;
	mul.lo.s32 	%r131, %r937, %r775;
	add.s32 	%r132, %r129, %r775;
	add.s32 	%r133, %r1885, -1;
	add.s32 	%r938, %r776, %r133;
	mul.lo.s32 	%r134, %r938, %r775;
	add.s32 	%r939, %r938, %r776;
	mul.lo.s32 	%r135, %r939, %r775;
	add.s32 	%r940, %r776, %r1885;
	mul.lo.s32 	%r136, %r940, %r775;
	add.s32 	%r941, %r940, %r776;
	mul.lo.s32 	%r137, %r941, %r775;
	mul.lo.s32 	%r138, %r1885, %r775;
	add.s32 	%r139, %r138, %r775;
	add.s32 	%r140, %r1885, 1;
	add.s32 	%r942, %r776, %r140;
	mul.lo.s32 	%r141, %r942, %r775;
	add.s32 	%r943, %r942, %r776;
	mul.lo.s32 	%r142, %r943, %r775;
	add.s32 	%r143, %r139, %r775;
	add.s32 	%r144, %r1885, 2;
	add.s32 	%r944, %r776, %r144;
	mul.lo.s32 	%r145, %r944, %r775;
	add.s32 	%r945, %r944, %r776;
	mul.lo.s32 	%r146, %r945, %r775;
	mov.u32 	%r1888, 0;
	mov.u64 	%rd541, %rd91;

$L__BB0_41:
	ld.global.nc.u32 	%r946, [%rd541];
	cvt.rn.f64.s32 	%fd1, %r946;
	add.f64 	%fd3, %fd1, 0d3FE0000000000000;
	add.s32 	%r148, %r946, %r1884;
	setp.lt.s32 	%p48, %r148, %r775;
	or.b32  	%r947, %r128, %r148;
	setp.gt.s32 	%p49, %r947, -1;
	and.pred  	%p50, %p48, %p49;
	setp.lt.s32 	%p51, %r128, %r776;
	and.pred  	%p1, %p51, %p50;
	cvt.rn.f32.f64 	%f62, %fd3;
	add.f32 	%f63, %f62, 0f3E800000;
	abs.f32 	%f1, %f63;
	add.f32 	%f64, %f1, 0f40200000;
	setp.geu.f32 	%p52, %f64, 0f40000000;
	@%p52 bra 	$L__BB0_46;

	@%p1 bra 	$L__BB0_44;
	bra.uni 	$L__BB0_43;

$L__BB0_44:
	add.s32 	%r950, %r129, %r148;
	mul.wide.s32 	%rd92, %r950, 4;
	add.s64 	%rd93, %rd11, %rd92;
	ld.global.f32 	%f67, [%rd93];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f67;
  mov.b32 %r1887, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_45;

$L__BB0_43:
	mov.f32 	%f66, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f66;
  cvt.rn.f16.f32 high, %f66;
  mov.b32 %r1887, {low,high};}

	// end inline asm

$L__BB0_45:
	add.s32 	%r951, %r1888, %r127;
	mul.wide.s32 	%rd94, %r951, 4;
	add.s64 	%rd95, %rd12, %rd94;
	st.global.u32 	[%rd95], %r1887;
	add.s32 	%r1888, %r1888, 1;

$L__BB0_46:
	cvt.rn.f32.f64 	%f68, %fd1;
	add.f32 	%f69, %f68, 0f3E800000;
	abs.f32 	%f2, %f69;
	add.f32 	%f3, %f2, 0f40000000;
	setp.geu.f32 	%p53, %f3, 0f40000000;
	@%p53 bra 	$L__BB0_51;

	@%p1 bra 	$L__BB0_49;
	bra.uni 	$L__BB0_48;

$L__BB0_49:
	add.s32 	%r954, %r130, %r148;
	mul.wide.s32 	%rd96, %r954, 4;
	add.s64 	%rd97, %rd11, %rd96;
	ld.global.f32 	%f72, [%rd97];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f72;
  mov.b32 %r1889, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_50;

$L__BB0_48:
	mov.f32 	%f71, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f71;
  cvt.rn.f16.f32 high, %f71;
  mov.b32 %r1889, {low,high};}

	// end inline asm

$L__BB0_50:
	add.s32 	%r955, %r1888, %r127;
	mul.wide.s32 	%rd98, %r955, 4;
	add.s64 	%rd99, %rd12, %rd98;
	st.global.u32 	[%rd99], %r1889;
	add.s32 	%r1888, %r1888, 1;

$L__BB0_51:
	add.f32 	%f73, %f2, 0f40200000;
	setp.geu.f32 	%p54, %f73, 0f40000000;
	@%p54 bra 	$L__BB0_56;

	@%p1 bra 	$L__BB0_54;
	bra.uni 	$L__BB0_53;

$L__BB0_54:
	add.s32 	%r958, %r131, %r148;
	mul.wide.s32 	%rd100, %r958, 4;
	add.s64 	%rd101, %rd11, %rd100;
	ld.global.f32 	%f76, [%rd101];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f76;
  mov.b32 %r1891, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_55;

$L__BB0_53:
	mov.f32 	%f75, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f75;
  cvt.rn.f16.f32 high, %f75;
  mov.b32 %r1891, {low,high};}

	// end inline asm

$L__BB0_55:
	add.s32 	%r959, %r1888, %r127;
	mul.wide.s32 	%rd102, %r959, 4;
	add.s64 	%rd103, %rd12, %rd102;
	st.global.u32 	[%rd103], %r1891;
	add.s32 	%r1888, %r1888, 1;

$L__BB0_56:
	or.b32  	%r960, %r133, %r148;
	setp.gt.s32 	%p55, %r960, -1;
	and.pred  	%p57, %p48, %p55;
	setp.le.s32 	%p58, %r1885, %r776;
	and.pred  	%p2, %p58, %p57;
	add.f32 	%f4, %f1, 0f3FC00000;
	setp.geu.f32 	%p59, %f4, 0f40000000;
	@%p59 bra 	$L__BB0_61;

	@%p2 bra 	$L__BB0_59;
	bra.uni 	$L__BB0_58;

$L__BB0_59:
	add.s32 	%r963, %r132, %r148;
	mul.wide.s32 	%rd104, %r963, 4;
	add.s64 	%rd105, %rd11, %rd104;
	ld.global.f32 	%f79, [%rd105];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f79;
  mov.b32 %r1893, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_60;

$L__BB0_58:
	mov.f32 	%f78, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f78;
  cvt.rn.f16.f32 high, %f78;
  mov.b32 %r1893, {low,high};}

	// end inline asm

$L__BB0_60:
	add.s32 	%r964, %r1888, %r127;
	mul.wide.s32 	%rd106, %r964, 4;
	add.s64 	%rd107, %rd12, %rd106;
	st.global.u32 	[%rd107], %r1893;
	add.s32 	%r1888, %r1888, 1;

$L__BB0_61:
	add.f32 	%f5, %f2, 0f3F800000;
	setp.geu.f32 	%p60, %f5, 0f40000000;
	@%p60 bra 	$L__BB0_66;

	@%p2 bra 	$L__BB0_64;
	bra.uni 	$L__BB0_63;

$L__BB0_64:
	add.s32 	%r967, %r134, %r148;
	mul.wide.s32 	%rd108, %r967, 4;
	add.s64 	%rd109, %rd11, %rd108;
	ld.global.f32 	%f82, [%rd109];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f82;
  mov.b32 %r1895, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_65;

$L__BB0_63:
	mov.f32 	%f81, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f81;
  cvt.rn.f16.f32 high, %f81;
  mov.b32 %r1895, {low,high};}

	// end inline asm

$L__BB0_65:
	add.s32 	%r968, %r1888, %r127;
	mul.wide.s32 	%rd110, %r968, 4;
	add.s64 	%rd111, %rd12, %rd110;
	st.global.u32 	[%rd111], %r1895;
	add.s32 	%r1888, %r1888, 1;

$L__BB0_66:
	add.f32 	%f6, %f2, 0f3FC00000;
	setp.geu.f32 	%p61, %f6, 0f40000000;
	@%p61 bra 	$L__BB0_71;

	@%p2 bra 	$L__BB0_69;
	bra.uni 	$L__BB0_68;

$L__BB0_69:
	add.s32 	%r971, %r135, %r148;
	mul.wide.s32 	%rd112, %r971, 4;
	add.s64 	%rd113, %rd11, %rd112;
	ld.global.f32 	%f85, [%rd113];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f85;
  mov.b32 %r1897, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_70;

$L__BB0_68:
	mov.f32 	%f84, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f84;
  cvt.rn.f16.f32 high, %f84;
  mov.b32 %r1897, {low,high};}

	// end inline asm

$L__BB0_70:
	add.s32 	%r972, %r1888, %r127;
	mul.wide.s32 	%rd114, %r972, 4;
	add.s64 	%rd115, %rd12, %rd114;
	st.global.u32 	[%rd115], %r1897;
	add.s32 	%r1888, %r1888, 1;

$L__BB0_71:
	or.b32  	%r973, %r1885, %r148;
	setp.gt.s32 	%p62, %r973, -1;
	and.pred  	%p64, %p48, %p62;
	setp.lt.s32 	%p65, %r1885, %r776;
	and.pred  	%p3, %p65, %p64;
	add.f32 	%f7, %f1, 0f3F000000;
	setp.geu.f32 	%p66, %f7, 0f40000000;
	@%p66 bra 	$L__BB0_76;

	@%p3 bra 	$L__BB0_74;
	bra.uni 	$L__BB0_73;

$L__BB0_74:
	add.s32 	%r976, %r138, %r148;
	mul.wide.s32 	%rd116, %r976, 4;
	add.s64 	%rd117, %rd11, %rd116;
	ld.global.f32 	%f88, [%rd117];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f88;
  mov.b32 %r1899, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_75;

$L__BB0_73:
	mov.f32 	%f87, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f87;
  cvt.rn.f16.f32 high, %f87;
  mov.b32 %r1899, {low,high};}

	// end inline asm

$L__BB0_75:
	add.s32 	%r977, %r1888, %r127;
	mul.wide.s32 	%rd118, %r977, 4;
	add.s64 	%rd119, %rd12, %rd118;
	st.global.u32 	[%rd119], %r1899;
	add.s32 	%r1888, %r1888, 1;

$L__BB0_76:
	add.f32 	%f89, %f2, 0f00000000;
	setp.geu.f32 	%p67, %f89, 0f40000000;
	@%p67 bra 	$L__BB0_81;

	@%p3 bra 	$L__BB0_79;
	bra.uni 	$L__BB0_78;

$L__BB0_79:
	add.s32 	%r980, %r136, %r148;
	mul.wide.s32 	%rd120, %r980, 4;
	add.s64 	%rd121, %rd11, %rd120;
	ld.global.f32 	%f92, [%rd121];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f92;
  mov.b32 %r1901, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_80;

$L__BB0_78:
	mov.f32 	%f91, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f91;
  cvt.rn.f16.f32 high, %f91;
  mov.b32 %r1901, {low,high};}

	// end inline asm

$L__BB0_80:
	add.s32 	%r981, %r1888, %r127;
	mul.wide.s32 	%rd122, %r981, 4;
	add.s64 	%rd123, %rd12, %rd122;
	st.global.u32 	[%rd123], %r1901;
	add.s32 	%r1888, %r1888, 1;

$L__BB0_81:
	add.f32 	%f8, %f2, 0f3F000000;
	setp.geu.f32 	%p68, %f8, 0f40000000;
	@%p68 bra 	$L__BB0_86;

	@%p3 bra 	$L__BB0_84;
	bra.uni 	$L__BB0_83;

$L__BB0_84:
	add.s32 	%r984, %r137, %r148;
	mul.wide.s32 	%rd124, %r984, 4;
	add.s64 	%rd125, %rd11, %rd124;
	ld.global.f32 	%f95, [%rd125];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f95;
  mov.b32 %r1903, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_85;

$L__BB0_83:
	mov.f32 	%f94, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f94;
  cvt.rn.f16.f32 high, %f94;
  mov.b32 %r1903, {low,high};}

	// end inline asm

$L__BB0_85:
	add.s32 	%r985, %r1888, %r127;
	mul.wide.s32 	%rd126, %r985, 4;
	add.s64 	%rd127, %rd12, %rd126;
	st.global.u32 	[%rd127], %r1903;
	add.s32 	%r1888, %r1888, 1;

$L__BB0_86:
	or.b32  	%r986, %r140, %r148;
	setp.gt.s32 	%p69, %r986, -1;
	and.pred  	%p71, %p48, %p69;
	setp.lt.s32 	%p72, %r140, %r776;
	and.pred  	%p4, %p72, %p71;
	@%p66 bra 	$L__BB0_91;

	@%p4 bra 	$L__BB0_89;
	bra.uni 	$L__BB0_88;

$L__BB0_89:
	add.s32 	%r989, %r139, %r148;
	mul.wide.s32 	%rd128, %r989, 4;
	add.s64 	%rd129, %rd11, %rd128;
	ld.global.f32 	%f98, [%rd129];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f98;
  mov.b32 %r1905, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_90;

$L__BB0_88:
	mov.f32 	%f97, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f97;
  cvt.rn.f16.f32 high, %f97;
  mov.b32 %r1905, {low,high};}

	// end inline asm

$L__BB0_90:
	add.s32 	%r990, %r1888, %r127;
	mul.wide.s32 	%rd130, %r990, 4;
	add.s64 	%rd131, %rd12, %rd130;
	st.global.u32 	[%rd131], %r1905;
	add.s32 	%r1888, %r1888, 1;

$L__BB0_91:
	@%p60 bra 	$L__BB0_96;

	@%p4 bra 	$L__BB0_94;
	bra.uni 	$L__BB0_93;

$L__BB0_94:
	add.s32 	%r993, %r141, %r148;
	mul.wide.s32 	%rd132, %r993, 4;
	add.s64 	%rd133, %rd11, %rd132;
	ld.global.f32 	%f101, [%rd133];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f101;
  mov.b32 %r1907, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_95;

$L__BB0_93:
	mov.f32 	%f100, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f100;
  cvt.rn.f16.f32 high, %f100;
  mov.b32 %r1907, {low,high};}

	// end inline asm

$L__BB0_95:
	add.s32 	%r994, %r1888, %r127;
	mul.wide.s32 	%rd134, %r994, 4;
	add.s64 	%rd135, %rd12, %rd134;
	st.global.u32 	[%rd135], %r1907;
	add.s32 	%r1888, %r1888, 1;

$L__BB0_96:
	@%p68 bra 	$L__BB0_101;

	@%p4 bra 	$L__BB0_99;
	bra.uni 	$L__BB0_98;

$L__BB0_99:
	add.s32 	%r997, %r142, %r148;
	mul.wide.s32 	%rd136, %r997, 4;
	add.s64 	%rd137, %rd11, %rd136;
	ld.global.f32 	%f104, [%rd137];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f104;
  mov.b32 %r1909, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_100;

$L__BB0_98:
	mov.f32 	%f103, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f103;
  cvt.rn.f16.f32 high, %f103;
  mov.b32 %r1909, {low,high};}

	// end inline asm

$L__BB0_100:
	add.s32 	%r998, %r1888, %r127;
	mul.wide.s32 	%rd138, %r998, 4;
	add.s64 	%rd139, %rd12, %rd138;
	st.global.u32 	[%rd139], %r1909;
	add.s32 	%r1888, %r1888, 1;

$L__BB0_101:
	or.b32  	%r999, %r144, %r148;
	setp.gt.s32 	%p76, %r999, -1;
	and.pred  	%p78, %p48, %p76;
	setp.lt.s32 	%p79, %r144, %r776;
	and.pred  	%p5, %p79, %p78;
	@%p59 bra 	$L__BB0_106;

	@%p5 bra 	$L__BB0_104;
	bra.uni 	$L__BB0_103;

$L__BB0_104:
	add.s32 	%r1002, %r143, %r148;
	mul.wide.s32 	%rd140, %r1002, 4;
	add.s64 	%rd141, %rd11, %rd140;
	ld.global.f32 	%f107, [%rd141];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f107;
  mov.b32 %r1911, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_105;

$L__BB0_103:
	mov.f32 	%f106, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f106;
  cvt.rn.f16.f32 high, %f106;
  mov.b32 %r1911, {low,high};}

	// end inline asm

$L__BB0_105:
	add.s32 	%r1003, %r1888, %r127;
	mul.wide.s32 	%rd142, %r1003, 4;
	add.s64 	%rd143, %rd12, %rd142;
	st.global.u32 	[%rd143], %r1911;
	add.s32 	%r1888, %r1888, 1;

$L__BB0_106:
	@%p53 bra 	$L__BB0_111;

	@%p5 bra 	$L__BB0_109;
	bra.uni 	$L__BB0_108;

$L__BB0_109:
	add.s32 	%r1006, %r145, %r148;
	mul.wide.s32 	%rd144, %r1006, 4;
	add.s64 	%rd145, %rd11, %rd144;
	ld.global.f32 	%f110, [%rd145];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f110;
  mov.b32 %r1913, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_110;

$L__BB0_108:
	mov.f32 	%f109, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f109;
  cvt.rn.f16.f32 high, %f109;
  mov.b32 %r1913, {low,high};}

	// end inline asm

$L__BB0_110:
	add.s32 	%r1007, %r1888, %r127;
	mul.wide.s32 	%rd146, %r1007, 4;
	add.s64 	%rd147, %rd12, %rd146;
	st.global.u32 	[%rd147], %r1913;
	add.s32 	%r1888, %r1888, 1;

$L__BB0_111:
	@%p61 bra 	$L__BB0_116;

	@%p5 bra 	$L__BB0_114;
	bra.uni 	$L__BB0_113;

$L__BB0_114:
	add.s32 	%r1010, %r146, %r148;
	mul.wide.s32 	%rd148, %r1010, 4;
	add.s64 	%rd149, %rd11, %rd148;
	ld.global.f32 	%f113, [%rd149];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f113;
  mov.b32 %r1915, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_115;

$L__BB0_113:
	mov.f32 	%f112, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f112;
  cvt.rn.f16.f32 high, %f112;
  mov.b32 %r1915, {low,high};}

	// end inline asm

$L__BB0_115:
	add.s32 	%r1011, %r1888, %r127;
	mul.wide.s32 	%rd150, %r1011, 4;
	add.s64 	%rd151, %rd12, %rd150;
	st.global.u32 	[%rd151], %r1915;
	add.s32 	%r1888, %r1888, 1;

$L__BB0_116:
	add.s64 	%rd541, %rd541, 4;
	mov.u64 	%rd152, _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE;
	add.s64 	%rd153, %rd152, 24;
	setp.ne.s64 	%p83, %rd541, %rd153;
	@%p83 bra 	$L__BB0_41;

$L__BB0_117:
	add.s32 	%r1885, %r1885, %r41;
	setp.lt.s32 	%p84, %r1885, %r776;
	@%p84 bra 	$L__BB0_39;

$L__BB0_118:
	add.s32 	%r1884, %r1884, %r796;
	setp.lt.s32 	%p85, %r1884, %r775;
	@%p85 bra 	$L__BB0_37;

$L__BB0_119:
	setp.eq.s32 	%p86, %r779, 1;
	ld.param.u64 	%rd154, [%rd1+136];
	cvta.to.global.u64 	%rd15, %rd154;
	ld.param.u64 	%rd155, [%rd1+104];
	cvta.to.global.u64 	%rd16, %rd155;
	@%p86 bra 	$L__BB0_137;
	bra.uni 	$L__BB0_120;

$L__BB0_137:
	@%p22 bra 	$L__BB0_266;

	shl.b32 	%r252, %r72, 1;
	shr.u32 	%r1059, %r780, 31;
	add.s32 	%r1060, %r780, %r1059;
	shr.u32 	%r1061, %r1060, 1;
	and.b32  	%r253, %r1061, 1;
	mov.u64 	%rd174, _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE;
	add.s64 	%rd256, %rd174, 24;

$L__BB0_139:
	setp.ge.s32 	%p96, %r252, %r776;
	@%p96 bra 	$L__BB0_265;

	mov.u32 	%r1923, %r252;

$L__BB0_141:
	setp.ne.s32 	%p97, %r39, 0;
	@%p97 bra 	$L__BB0_264;

	shr.u32 	%r1063, %r1923, 31;
	add.s32 	%r1064, %r1923, %r1063;
	shr.s32 	%r1065, %r1064, 1;
	mad.lo.s32 	%r1066, %r1065, %r775, %r1917;
	shl.b32 	%r257, %r1066, 5;
	add.s32 	%r258, %r1923, -2;
	mul.lo.s32 	%r259, %r258, %r775;
	add.s32 	%r1067, %r776, %r258;
	mul.lo.s32 	%r260, %r1067, %r775;
	add.s32 	%r261, %r259, %r775;
	add.s32 	%r262, %r1923, -1;
	add.s32 	%r1068, %r776, %r262;
	mul.lo.s32 	%r263, %r1068, %r775;
	add.s32 	%r1069, %r776, %r1923;
	mul.lo.s32 	%r264, %r1069, %r775;
	mul.lo.s32 	%r265, %r1923, %r775;
	add.s32 	%r266, %r265, %r775;
	add.s32 	%r267, %r1923, 1;
	add.s32 	%r1070, %r776, %r267;
	mul.lo.s32 	%r268, %r1070, %r775;
	add.s32 	%r269, %r266, %r775;
	add.s32 	%r270, %r1923, 2;
	add.s32 	%r1071, %r776, %r270;
	mul.lo.s32 	%r271, %r1071, %r775;
	mov.u32 	%r1927, 0;
	mov.u64 	%rd542, %rd174;

$L__BB0_143:
	ld.global.nc.u32 	%r1072, [%rd542];
	cvt.rn.f64.s32 	%fd2, %r1072;
	add.f64 	%fd4, %fd2, 0d3FE0000000000000;
	add.s32 	%r273, %r1072, %r1917;
	setp.lt.s32 	%p98, %r273, %r775;
	or.b32  	%r1073, %r258, %r273;
	setp.gt.s32 	%p99, %r1073, -1;
	and.pred  	%p100, %p98, %p99;
	setp.lt.s32 	%p101, %r258, %r776;
	and.pred  	%p6, %p101, %p100;
	cvt.rn.f32.f64 	%f130, %fd4;
	add.f32 	%f131, %f130, 0f3E800000;
	abs.f32 	%f9, %f131;
	add.f32 	%f132, %f9, 0f40200000;
	setp.geu.f32 	%p102, %f132, 0f40000000;
	@%p102 bra 	$L__BB0_155;

	@%p6 bra 	$L__BB0_146;
	bra.uni 	$L__BB0_145;

$L__BB0_146:
	setp.eq.s32 	%p103, %r253, 0;
	add.s32 	%r1075, %r259, %r273;
	shl.b32 	%r1076, %r1075, 1;
	mul.wide.s32 	%rd175, %r1076, 4;
	add.s64 	%rd176, %rd15, %rd175;
	ld.global.f32 	%f10, [%rd176];
	@%p103 bra 	$L__BB0_148;
	bra.uni 	$L__BB0_147;

$L__BB0_148:
	mov.f32 	%f138, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f10;
  cvt.rn.f16.f32 high, %f138;
  mov.b32 %r1925, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_149;

$L__BB0_145:
	mov.f32 	%f134, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f134;
  cvt.rn.f16.f32 high, %f134;
  mov.b32 %r1925, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_149;

$L__BB0_147:
	mov.f32 	%f135, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f135;
  cvt.rn.f16.f32 high, %f10;
  mov.b32 %r1925, {low,high};}

	// end inline asm

$L__BB0_149:
	add.s32 	%r278, %r1927, %r257;
	mul.wide.s32 	%rd177, %r278, 4;
	add.s64 	%rd178, %rd16, %rd177;
	st.global.u32 	[%rd178], %r1925;
	@%p6 bra 	$L__BB0_151;
	bra.uni 	$L__BB0_150;

$L__BB0_151:
	setp.eq.s32 	%p104, %r253, 0;
	add.s32 	%r1080, %r260, %r273;
	shl.b32 	%r1081, %r1080, 1;
	mul.wide.s32 	%rd179, %r1081, 4;
	add.s64 	%rd180, %rd15, %rd179;
	ld.global.f32 	%f11, [%rd180];
	@%p104 bra 	$L__BB0_153;
	bra.uni 	$L__BB0_152;

$L__BB0_153:
	mov.f32 	%f144, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f11;
  cvt.rn.f16.f32 high, %f144;
  mov.b32 %r1926, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_154;

$L__BB0_150:
	mov.f32 	%f140, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f140;
  cvt.rn.f16.f32 high, %f140;
  mov.b32 %r1926, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_154;

$L__BB0_152:
	mov.f32 	%f141, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f141;
  cvt.rn.f16.f32 high, %f11;
  mov.b32 %r1926, {low,high};}

	// end inline asm

$L__BB0_154:
	add.s32 	%r1084, %r278, 1;
	mul.wide.s32 	%rd181, %r1084, 4;
	add.s64 	%rd182, %rd16, %rd181;
	st.global.u32 	[%rd182], %r1926;
	add.s32 	%r1927, %r1927, 2;

$L__BB0_155:
	cvt.rn.f32.f64 	%f145, %fd2;
	add.f32 	%f146, %f145, 0f3E800000;
	abs.f32 	%f12, %f146;
	add.f32 	%f13, %f12, 0f40000000;
	setp.geu.f32 	%p105, %f13, 0f40000000;
	@%p105 bra 	$L__BB0_167;

	@%p6 bra 	$L__BB0_158;
	bra.uni 	$L__BB0_157;

$L__BB0_158:
	setp.eq.s32 	%p106, %r253, 0;
	add.s32 	%r1086, %r259, %r273;
	shl.b32 	%r1087, %r1086, 1;
	or.b32  	%r1088, %r1087, 1;
	mul.wide.s32 	%rd183, %r1088, 4;
	add.s64 	%rd184, %rd15, %rd183;
	ld.global.f32 	%f14, [%rd184];
	@%p106 bra 	$L__BB0_160;
	bra.uni 	$L__BB0_159;

$L__BB0_160:
	mov.f32 	%f152, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f14;
  cvt.rn.f16.f32 high, %f152;
  mov.b32 %r1928, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_161;

$L__BB0_157:
	mov.f32 	%f148, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f148;
  cvt.rn.f16.f32 high, %f148;
  mov.b32 %r1928, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_161;

$L__BB0_159:
	mov.f32 	%f149, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f149;
  cvt.rn.f16.f32 high, %f14;
  mov.b32 %r1928, {low,high};}

	// end inline asm

$L__BB0_161:
	add.s32 	%r289, %r1927, %r257;
	mul.wide.s32 	%rd185, %r289, 4;
	add.s64 	%rd186, %rd16, %rd185;
	st.global.u32 	[%rd186], %r1928;
	@%p6 bra 	$L__BB0_163;
	bra.uni 	$L__BB0_162;

$L__BB0_163:
	setp.eq.s32 	%p107, %r253, 0;
	add.s32 	%r1092, %r260, %r273;
	shl.b32 	%r1093, %r1092, 1;
	or.b32  	%r1094, %r1093, 1;
	mul.wide.s32 	%rd187, %r1094, 4;
	add.s64 	%rd188, %rd15, %rd187;
	ld.global.f32 	%f15, [%rd188];
	@%p107 bra 	$L__BB0_165;
	bra.uni 	$L__BB0_164;

$L__BB0_165:
	mov.f32 	%f158, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f15;
  cvt.rn.f16.f32 high, %f158;
  mov.b32 %r1929, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_166;

$L__BB0_162:
	mov.f32 	%f154, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f154;
  cvt.rn.f16.f32 high, %f154;
  mov.b32 %r1929, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_166;

$L__BB0_164:
	mov.f32 	%f155, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f155;
  cvt.rn.f16.f32 high, %f15;
  mov.b32 %r1929, {low,high};}

	// end inline asm

$L__BB0_166:
	add.s32 	%r1097, %r289, 1;
	mul.wide.s32 	%rd189, %r1097, 4;
	add.s64 	%rd190, %rd16, %rd189;
	st.global.u32 	[%rd190], %r1929;
	add.s32 	%r1927, %r1927, 2;

$L__BB0_167:
	or.b32  	%r1098, %r262, %r273;
	setp.gt.s32 	%p108, %r1098, -1;
	and.pred  	%p110, %p98, %p108;
	setp.le.s32 	%p111, %r1923, %r776;
	and.pred  	%p7, %p111, %p110;
	add.f32 	%f16, %f9, 0f3FC00000;
	setp.geu.f32 	%p112, %f16, 0f40000000;
	@%p112 bra 	$L__BB0_179;

	@%p7 bra 	$L__BB0_170;
	bra.uni 	$L__BB0_169;

$L__BB0_170:
	setp.eq.s32 	%p113, %r253, 0;
	add.s32 	%r1100, %r261, %r273;
	shl.b32 	%r1101, %r1100, 1;
	mul.wide.s32 	%rd191, %r1101, 4;
	add.s64 	%rd192, %rd15, %rd191;
	ld.global.f32 	%f17, [%rd192];
	@%p113 bra 	$L__BB0_172;
	bra.uni 	$L__BB0_171;

$L__BB0_172:
	mov.f32 	%f164, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f17;
  cvt.rn.f16.f32 high, %f164;
  mov.b32 %r1931, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_173;

$L__BB0_169:
	mov.f32 	%f160, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f160;
  cvt.rn.f16.f32 high, %f160;
  mov.b32 %r1931, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_173;

$L__BB0_171:
	mov.f32 	%f161, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f161;
  cvt.rn.f16.f32 high, %f17;
  mov.b32 %r1931, {low,high};}

	// end inline asm

$L__BB0_173:
	add.s32 	%r300, %r1927, %r257;
	mul.wide.s32 	%rd193, %r300, 4;
	add.s64 	%rd194, %rd16, %rd193;
	st.global.u32 	[%rd194], %r1931;
	@%p7 bra 	$L__BB0_175;
	bra.uni 	$L__BB0_174;

$L__BB0_175:
	setp.eq.s32 	%p114, %r253, 0;
	add.s32 	%r1105, %r263, %r273;
	shl.b32 	%r1106, %r1105, 1;
	mul.wide.s32 	%rd195, %r1106, 4;
	add.s64 	%rd196, %rd15, %rd195;
	ld.global.f32 	%f18, [%rd196];
	@%p114 bra 	$L__BB0_177;
	bra.uni 	$L__BB0_176;

$L__BB0_177:
	mov.f32 	%f170, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f18;
  cvt.rn.f16.f32 high, %f170;
  mov.b32 %r1932, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_178;

$L__BB0_174:
	mov.f32 	%f166, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f166;
  cvt.rn.f16.f32 high, %f166;
  mov.b32 %r1932, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_178;

$L__BB0_176:
	mov.f32 	%f167, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f167;
  cvt.rn.f16.f32 high, %f18;
  mov.b32 %r1932, {low,high};}

	// end inline asm

$L__BB0_178:
	add.s32 	%r1109, %r300, 1;
	mul.wide.s32 	%rd197, %r1109, 4;
	add.s64 	%rd198, %rd16, %rd197;
	st.global.u32 	[%rd198], %r1932;
	add.s32 	%r1927, %r1927, 2;

$L__BB0_179:
	add.f32 	%f19, %f12, 0f3F800000;
	setp.geu.f32 	%p115, %f19, 0f40000000;
	@%p115 bra 	$L__BB0_191;

	@%p7 bra 	$L__BB0_182;
	bra.uni 	$L__BB0_181;

$L__BB0_182:
	setp.eq.s32 	%p116, %r253, 0;
	add.s32 	%r1111, %r261, %r273;
	shl.b32 	%r1112, %r1111, 1;
	or.b32  	%r1113, %r1112, 1;
	mul.wide.s32 	%rd199, %r1113, 4;
	add.s64 	%rd200, %rd15, %rd199;
	ld.global.f32 	%f20, [%rd200];
	@%p116 bra 	$L__BB0_184;
	bra.uni 	$L__BB0_183;

$L__BB0_184:
	mov.f32 	%f176, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f20;
  cvt.rn.f16.f32 high, %f176;
  mov.b32 %r1934, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_185;

$L__BB0_181:
	mov.f32 	%f172, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f172;
  cvt.rn.f16.f32 high, %f172;
  mov.b32 %r1934, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_185;

$L__BB0_183:
	mov.f32 	%f173, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f173;
  cvt.rn.f16.f32 high, %f20;
  mov.b32 %r1934, {low,high};}

	// end inline asm

$L__BB0_185:
	add.s32 	%r311, %r1927, %r257;
	mul.wide.s32 	%rd201, %r311, 4;
	add.s64 	%rd202, %rd16, %rd201;
	st.global.u32 	[%rd202], %r1934;
	@%p7 bra 	$L__BB0_187;
	bra.uni 	$L__BB0_186;

$L__BB0_187:
	setp.eq.s32 	%p117, %r253, 0;
	add.s32 	%r1117, %r263, %r273;
	shl.b32 	%r1118, %r1117, 1;
	or.b32  	%r1119, %r1118, 1;
	mul.wide.s32 	%rd203, %r1119, 4;
	add.s64 	%rd204, %rd15, %rd203;
	ld.global.f32 	%f21, [%rd204];
	@%p117 bra 	$L__BB0_189;
	bra.uni 	$L__BB0_188;

$L__BB0_189:
	mov.f32 	%f182, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f21;
  cvt.rn.f16.f32 high, %f182;
  mov.b32 %r1935, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_190;

$L__BB0_186:
	mov.f32 	%f178, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f178;
  cvt.rn.f16.f32 high, %f178;
  mov.b32 %r1935, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_190;

$L__BB0_188:
	mov.f32 	%f179, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f179;
  cvt.rn.f16.f32 high, %f21;
  mov.b32 %r1935, {low,high};}

	// end inline asm

$L__BB0_190:
	add.s32 	%r1122, %r311, 1;
	mul.wide.s32 	%rd205, %r1122, 4;
	add.s64 	%rd206, %rd16, %rd205;
	st.global.u32 	[%rd206], %r1935;
	add.s32 	%r1927, %r1927, 2;

$L__BB0_191:
	or.b32  	%r1123, %r1923, %r273;
	setp.gt.s32 	%p118, %r1123, -1;
	and.pred  	%p120, %p98, %p118;
	setp.lt.s32 	%p121, %r1923, %r776;
	and.pred  	%p8, %p121, %p120;
	add.f32 	%f22, %f9, 0f3F000000;
	setp.geu.f32 	%p122, %f22, 0f40000000;
	@%p122 bra 	$L__BB0_203;

	@%p8 bra 	$L__BB0_194;
	bra.uni 	$L__BB0_193;

$L__BB0_194:
	setp.eq.s32 	%p123, %r253, 0;
	add.s32 	%r1125, %r265, %r273;
	shl.b32 	%r1126, %r1125, 1;
	mul.wide.s32 	%rd207, %r1126, 4;
	add.s64 	%rd208, %rd15, %rd207;
	ld.global.f32 	%f23, [%rd208];
	@%p123 bra 	$L__BB0_196;
	bra.uni 	$L__BB0_195;

$L__BB0_196:
	mov.f32 	%f188, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f23;
  cvt.rn.f16.f32 high, %f188;
  mov.b32 %r1937, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_197;

$L__BB0_193:
	mov.f32 	%f184, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f184;
  cvt.rn.f16.f32 high, %f184;
  mov.b32 %r1937, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_197;

$L__BB0_195:
	mov.f32 	%f185, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f185;
  cvt.rn.f16.f32 high, %f23;
  mov.b32 %r1937, {low,high};}

	// end inline asm

$L__BB0_197:
	add.s32 	%r322, %r1927, %r257;
	mul.wide.s32 	%rd209, %r322, 4;
	add.s64 	%rd210, %rd16, %rd209;
	st.global.u32 	[%rd210], %r1937;
	@%p8 bra 	$L__BB0_199;
	bra.uni 	$L__BB0_198;

$L__BB0_199:
	setp.eq.s32 	%p124, %r253, 0;
	add.s32 	%r1130, %r264, %r273;
	shl.b32 	%r1131, %r1130, 1;
	mul.wide.s32 	%rd211, %r1131, 4;
	add.s64 	%rd212, %rd15, %rd211;
	ld.global.f32 	%f24, [%rd212];
	@%p124 bra 	$L__BB0_201;
	bra.uni 	$L__BB0_200;

$L__BB0_201:
	mov.f32 	%f194, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f24;
  cvt.rn.f16.f32 high, %f194;
  mov.b32 %r1938, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_202;

$L__BB0_198:
	mov.f32 	%f190, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f190;
  cvt.rn.f16.f32 high, %f190;
  mov.b32 %r1938, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_202;

$L__BB0_200:
	mov.f32 	%f191, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f191;
  cvt.rn.f16.f32 high, %f24;
  mov.b32 %r1938, {low,high};}

	// end inline asm

$L__BB0_202:
	add.s32 	%r1134, %r322, 1;
	mul.wide.s32 	%rd213, %r1134, 4;
	add.s64 	%rd214, %rd16, %rd213;
	st.global.u32 	[%rd214], %r1938;
	add.s32 	%r1927, %r1927, 2;

$L__BB0_203:
	add.f32 	%f195, %f12, 0f00000000;
	setp.geu.f32 	%p125, %f195, 0f40000000;
	@%p125 bra 	$L__BB0_215;

	@%p8 bra 	$L__BB0_206;
	bra.uni 	$L__BB0_205;

$L__BB0_206:
	setp.eq.s32 	%p126, %r253, 0;
	add.s32 	%r1136, %r265, %r273;
	shl.b32 	%r1137, %r1136, 1;
	or.b32  	%r1138, %r1137, 1;
	mul.wide.s32 	%rd215, %r1138, 4;
	add.s64 	%rd216, %rd15, %rd215;
	ld.global.f32 	%f25, [%rd216];
	@%p126 bra 	$L__BB0_208;
	bra.uni 	$L__BB0_207;

$L__BB0_208:
	mov.f32 	%f201, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f25;
  cvt.rn.f16.f32 high, %f201;
  mov.b32 %r1940, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_209;

$L__BB0_205:
	mov.f32 	%f197, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f197;
  cvt.rn.f16.f32 high, %f197;
  mov.b32 %r1940, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_209;

$L__BB0_207:
	mov.f32 	%f198, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f198;
  cvt.rn.f16.f32 high, %f25;
  mov.b32 %r1940, {low,high};}

	// end inline asm

$L__BB0_209:
	add.s32 	%r333, %r1927, %r257;
	mul.wide.s32 	%rd217, %r333, 4;
	add.s64 	%rd218, %rd16, %rd217;
	st.global.u32 	[%rd218], %r1940;
	@%p8 bra 	$L__BB0_211;
	bra.uni 	$L__BB0_210;

$L__BB0_211:
	setp.eq.s32 	%p127, %r253, 0;
	add.s32 	%r1142, %r264, %r273;
	shl.b32 	%r1143, %r1142, 1;
	or.b32  	%r1144, %r1143, 1;
	mul.wide.s32 	%rd219, %r1144, 4;
	add.s64 	%rd220, %rd15, %rd219;
	ld.global.f32 	%f26, [%rd220];
	@%p127 bra 	$L__BB0_213;
	bra.uni 	$L__BB0_212;

$L__BB0_213:
	mov.f32 	%f207, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f26;
  cvt.rn.f16.f32 high, %f207;
  mov.b32 %r1941, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_214;

$L__BB0_210:
	mov.f32 	%f203, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f203;
  cvt.rn.f16.f32 high, %f203;
  mov.b32 %r1941, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_214;

$L__BB0_212:
	mov.f32 	%f204, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f204;
  cvt.rn.f16.f32 high, %f26;
  mov.b32 %r1941, {low,high};}

	// end inline asm

$L__BB0_214:
	add.s32 	%r1147, %r333, 1;
	mul.wide.s32 	%rd221, %r1147, 4;
	add.s64 	%rd222, %rd16, %rd221;
	st.global.u32 	[%rd222], %r1941;
	add.s32 	%r1927, %r1927, 2;

$L__BB0_215:
	or.b32  	%r1148, %r267, %r273;
	setp.gt.s32 	%p128, %r1148, -1;
	and.pred  	%p130, %p98, %p128;
	setp.lt.s32 	%p131, %r267, %r776;
	and.pred  	%p9, %p131, %p130;
	@%p122 bra 	$L__BB0_227;

	@%p9 bra 	$L__BB0_218;
	bra.uni 	$L__BB0_217;

$L__BB0_218:
	setp.eq.s32 	%p133, %r253, 0;
	add.s32 	%r1150, %r266, %r273;
	shl.b32 	%r1151, %r1150, 1;
	mul.wide.s32 	%rd223, %r1151, 4;
	add.s64 	%rd224, %rd15, %rd223;
	ld.global.f32 	%f27, [%rd224];
	@%p133 bra 	$L__BB0_220;
	bra.uni 	$L__BB0_219;

$L__BB0_220:
	mov.f32 	%f213, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f27;
  cvt.rn.f16.f32 high, %f213;
  mov.b32 %r1943, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_221;

$L__BB0_217:
	mov.f32 	%f209, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f209;
  cvt.rn.f16.f32 high, %f209;
  mov.b32 %r1943, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_221;

$L__BB0_219:
	mov.f32 	%f210, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f210;
  cvt.rn.f16.f32 high, %f27;
  mov.b32 %r1943, {low,high};}

	// end inline asm

$L__BB0_221:
	add.s32 	%r344, %r1927, %r257;
	mul.wide.s32 	%rd225, %r344, 4;
	add.s64 	%rd226, %rd16, %rd225;
	st.global.u32 	[%rd226], %r1943;
	@%p9 bra 	$L__BB0_223;
	bra.uni 	$L__BB0_222;

$L__BB0_223:
	setp.eq.s32 	%p134, %r253, 0;
	add.s32 	%r1155, %r268, %r273;
	shl.b32 	%r1156, %r1155, 1;
	mul.wide.s32 	%rd227, %r1156, 4;
	add.s64 	%rd228, %rd15, %rd227;
	ld.global.f32 	%f28, [%rd228];
	@%p134 bra 	$L__BB0_225;
	bra.uni 	$L__BB0_224;

$L__BB0_225:
	mov.f32 	%f219, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f28;
  cvt.rn.f16.f32 high, %f219;
  mov.b32 %r1944, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_226;

$L__BB0_222:
	mov.f32 	%f215, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f215;
  cvt.rn.f16.f32 high, %f215;
  mov.b32 %r1944, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_226;

$L__BB0_224:
	mov.f32 	%f216, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f216;
  cvt.rn.f16.f32 high, %f28;
  mov.b32 %r1944, {low,high};}

	// end inline asm

$L__BB0_226:
	add.s32 	%r1159, %r344, 1;
	mul.wide.s32 	%rd229, %r1159, 4;
	add.s64 	%rd230, %rd16, %rd229;
	st.global.u32 	[%rd230], %r1944;
	add.s32 	%r1927, %r1927, 2;

$L__BB0_227:
	@%p115 bra 	$L__BB0_239;

	@%p9 bra 	$L__BB0_230;
	bra.uni 	$L__BB0_229;

$L__BB0_230:
	setp.eq.s32 	%p136, %r253, 0;
	add.s32 	%r1161, %r266, %r273;
	shl.b32 	%r1162, %r1161, 1;
	or.b32  	%r1163, %r1162, 1;
	mul.wide.s32 	%rd231, %r1163, 4;
	add.s64 	%rd232, %rd15, %rd231;
	ld.global.f32 	%f29, [%rd232];
	@%p136 bra 	$L__BB0_232;
	bra.uni 	$L__BB0_231;

$L__BB0_232:
	mov.f32 	%f225, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f29;
  cvt.rn.f16.f32 high, %f225;
  mov.b32 %r1946, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_233;

$L__BB0_229:
	mov.f32 	%f221, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f221;
  cvt.rn.f16.f32 high, %f221;
  mov.b32 %r1946, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_233;

$L__BB0_231:
	mov.f32 	%f222, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f222;
  cvt.rn.f16.f32 high, %f29;
  mov.b32 %r1946, {low,high};}

	// end inline asm

$L__BB0_233:
	add.s32 	%r355, %r1927, %r257;
	mul.wide.s32 	%rd233, %r355, 4;
	add.s64 	%rd234, %rd16, %rd233;
	st.global.u32 	[%rd234], %r1946;
	@%p9 bra 	$L__BB0_235;
	bra.uni 	$L__BB0_234;

$L__BB0_235:
	setp.eq.s32 	%p137, %r253, 0;
	add.s32 	%r1167, %r268, %r273;
	shl.b32 	%r1168, %r1167, 1;
	or.b32  	%r1169, %r1168, 1;
	mul.wide.s32 	%rd235, %r1169, 4;
	add.s64 	%rd236, %rd15, %rd235;
	ld.global.f32 	%f30, [%rd236];
	@%p137 bra 	$L__BB0_237;
	bra.uni 	$L__BB0_236;

$L__BB0_237:
	mov.f32 	%f231, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f30;
  cvt.rn.f16.f32 high, %f231;
  mov.b32 %r1947, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_238;

$L__BB0_234:
	mov.f32 	%f227, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f227;
  cvt.rn.f16.f32 high, %f227;
  mov.b32 %r1947, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_238;

$L__BB0_236:
	mov.f32 	%f228, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f228;
  cvt.rn.f16.f32 high, %f30;
  mov.b32 %r1947, {low,high};}

	// end inline asm

$L__BB0_238:
	add.s32 	%r1172, %r355, 1;
	mul.wide.s32 	%rd237, %r1172, 4;
	add.s64 	%rd238, %rd16, %rd237;
	st.global.u32 	[%rd238], %r1947;
	add.s32 	%r1927, %r1927, 2;

$L__BB0_239:
	or.b32  	%r1173, %r270, %r273;
	setp.gt.s32 	%p138, %r1173, -1;
	and.pred  	%p140, %p98, %p138;
	setp.lt.s32 	%p141, %r270, %r776;
	and.pred  	%p10, %p141, %p140;
	@%p112 bra 	$L__BB0_251;

	@%p10 bra 	$L__BB0_242;
	bra.uni 	$L__BB0_241;

$L__BB0_242:
	setp.eq.s32 	%p143, %r253, 0;
	add.s32 	%r1175, %r269, %r273;
	shl.b32 	%r1176, %r1175, 1;
	mul.wide.s32 	%rd239, %r1176, 4;
	add.s64 	%rd240, %rd15, %rd239;
	ld.global.f32 	%f31, [%rd240];
	@%p143 bra 	$L__BB0_244;
	bra.uni 	$L__BB0_243;

$L__BB0_244:
	mov.f32 	%f237, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f31;
  cvt.rn.f16.f32 high, %f237;
  mov.b32 %r1949, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_245;

$L__BB0_241:
	mov.f32 	%f233, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f233;
  cvt.rn.f16.f32 high, %f233;
  mov.b32 %r1949, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_245;

$L__BB0_243:
	mov.f32 	%f234, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f234;
  cvt.rn.f16.f32 high, %f31;
  mov.b32 %r1949, {low,high};}

	// end inline asm

$L__BB0_245:
	add.s32 	%r366, %r1927, %r257;
	mul.wide.s32 	%rd241, %r366, 4;
	add.s64 	%rd242, %rd16, %rd241;
	st.global.u32 	[%rd242], %r1949;
	@%p10 bra 	$L__BB0_247;
	bra.uni 	$L__BB0_246;

$L__BB0_247:
	setp.eq.s32 	%p144, %r253, 0;
	add.s32 	%r1180, %r271, %r273;
	shl.b32 	%r1181, %r1180, 1;
	mul.wide.s32 	%rd243, %r1181, 4;
	add.s64 	%rd244, %rd15, %rd243;
	ld.global.f32 	%f32, [%rd244];
	@%p144 bra 	$L__BB0_249;
	bra.uni 	$L__BB0_248;

$L__BB0_249:
	mov.f32 	%f243, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f32;
  cvt.rn.f16.f32 high, %f243;
  mov.b32 %r1950, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_250;

$L__BB0_246:
	mov.f32 	%f239, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f239;
  cvt.rn.f16.f32 high, %f239;
  mov.b32 %r1950, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_250;

$L__BB0_248:
	mov.f32 	%f240, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f240;
  cvt.rn.f16.f32 high, %f32;
  mov.b32 %r1950, {low,high};}

	// end inline asm

$L__BB0_250:
	add.s32 	%r1184, %r366, 1;
	mul.wide.s32 	%rd245, %r1184, 4;
	add.s64 	%rd246, %rd16, %rd245;
	st.global.u32 	[%rd246], %r1950;
	add.s32 	%r1927, %r1927, 2;

$L__BB0_251:
	@%p105 bra 	$L__BB0_263;

	@%p10 bra 	$L__BB0_254;
	bra.uni 	$L__BB0_253;

$L__BB0_254:
	setp.eq.s32 	%p146, %r253, 0;
	add.s32 	%r1186, %r269, %r273;
	shl.b32 	%r1187, %r1186, 1;
	or.b32  	%r1188, %r1187, 1;
	mul.wide.s32 	%rd247, %r1188, 4;
	add.s64 	%rd248, %rd15, %rd247;
	ld.global.f32 	%f33, [%rd248];
	@%p146 bra 	$L__BB0_256;
	bra.uni 	$L__BB0_255;

$L__BB0_256:
	mov.f32 	%f249, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f33;
  cvt.rn.f16.f32 high, %f249;
  mov.b32 %r1952, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_257;

$L__BB0_253:
	mov.f32 	%f245, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f245;
  cvt.rn.f16.f32 high, %f245;
  mov.b32 %r1952, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_257;

$L__BB0_255:
	mov.f32 	%f246, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f246;
  cvt.rn.f16.f32 high, %f33;
  mov.b32 %r1952, {low,high};}

	// end inline asm

$L__BB0_257:
	add.s32 	%r377, %r1927, %r257;
	mul.wide.s32 	%rd249, %r377, 4;
	add.s64 	%rd250, %rd16, %rd249;
	st.global.u32 	[%rd250], %r1952;
	@%p10 bra 	$L__BB0_259;
	bra.uni 	$L__BB0_258;

$L__BB0_259:
	setp.eq.s32 	%p147, %r253, 0;
	add.s32 	%r1192, %r271, %r273;
	shl.b32 	%r1193, %r1192, 1;
	or.b32  	%r1194, %r1193, 1;
	mul.wide.s32 	%rd251, %r1194, 4;
	add.s64 	%rd252, %rd15, %rd251;
	ld.global.f32 	%f34, [%rd252];
	@%p147 bra 	$L__BB0_261;
	bra.uni 	$L__BB0_260;

$L__BB0_261:
	mov.f32 	%f255, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f34;
  cvt.rn.f16.f32 high, %f255;
  mov.b32 %r1953, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_262;

$L__BB0_258:
	mov.f32 	%f251, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f251;
  cvt.rn.f16.f32 high, %f251;
  mov.b32 %r1953, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_262;

$L__BB0_260:
	mov.f32 	%f252, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f252;
  cvt.rn.f16.f32 high, %f34;
  mov.b32 %r1953, {low,high};}

	// end inline asm

$L__BB0_262:
	add.s32 	%r1197, %r377, 1;
	mul.wide.s32 	%rd253, %r1197, 4;
	add.s64 	%rd254, %rd16, %rd253;
	st.global.u32 	[%rd254], %r1953;
	add.s32 	%r1927, %r1927, 2;

$L__BB0_263:
	add.s64 	%rd542, %rd542, 4;
	setp.ne.s64 	%p148, %rd542, %rd256;
	@%p148 bra 	$L__BB0_143;

$L__BB0_264:
	add.s32 	%r1923, %r1923, %r41;
	setp.lt.s32 	%p149, %r1923, %r776;
	@%p149 bra 	$L__BB0_141;

$L__BB0_265:
	add.s32 	%r1917, %r1917, %r796;
	setp.lt.s32 	%p150, %r1917, %r775;
	@%p150 bra 	$L__BB0_139;
	bra.uni 	$L__BB0_266;

$L__BB0_120:
	@%p22 bra 	$L__BB0_266;

	neg.s32 	%r226, %r71;
	mov.u32 	%r1012, 31;
	sub.s32 	%r1013, %r1012, %r39;
	setp.gt.s32 	%p88, %r38, %r39;
	selp.b32 	%r1014, %r39, %r1013, %p88;
	shl.b32 	%r1015, %r1014, 2;
	mov.u32 	%r1016, 2;
	sub.s32 	%r227, %r1015, %r778;
	shl.b32 	%r1017, %r777, 2;
	mov.u32 	%r1018, 128;
	sub.s32 	%r228, %r1018, %r1017;
	sub.s32 	%r1019, %r1016, %r778;
	add.s32 	%r229, %r1019, %r1015;
	add.s32 	%r230, %r775, -1;
	add.s32 	%r231, %r227, 1;
	add.s32 	%r232, %r229, 1;
	rem.s32 	%r1044, %r231, %r228;
	add.s32 	%r1045, %r1044, %r228;
	rem.s32 	%r243, %r1045, %r228;
	rem.s32 	%r1046, %r232, %r228;
	add.s32 	%r1047, %r1046, %r228;
	rem.s32 	%r244, %r1047, %r228;

$L__BB0_122:
	setp.ne.s32 	%p89, %r35, %r226;
	@%p89 bra 	$L__BB0_136;

	shl.b32 	%r234, %r1917, 1;
	rem.s32 	%r1020, %r227, %r228;
	add.s32 	%r1021, %r1020, %r228;
	rem.s32 	%r235, %r1021, %r228;
	rem.s32 	%r1022, %r229, %r228;
	add.s32 	%r1023, %r1022, %r228;
	rem.s32 	%r236, %r1023, %r228;
	@%p88 bra 	$L__BB0_125;
	bra.uni 	$L__BB0_124;

$L__BB0_125:
	mul.lo.s32 	%r1026, %r234, %r228;
	add.s32 	%r1027, %r1026, %r235;
	mul.wide.s32 	%rd156, %r1027, 4;
	add.s64 	%rd157, %rd15, %rd156;
	ld.global.f32 	%f116, [%rd157];
	add.s32 	%r1028, %r1026, %r236;
	mul.wide.s32 	%rd158, %r1028, 4;
	add.s64 	%rd159, %rd15, %rd158;
	ld.global.f32 	%f117, [%rd159];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f116;
  cvt.rn.f16.f32 high, %f117;
  mov.b32 %r1918, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_126;

$L__BB0_124:
	mov.f32 	%f115, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f115;
  cvt.rn.f16.f32 high, %f115;
  mov.b32 %r1918, {low,high};}

	// end inline asm

$L__BB0_126:
	shl.b32 	%r1029, %r1917, 5;
	add.s32 	%r1030, %r1029, %r39;
	shl.b32 	%r1031, %r1030, 2;
	mul.wide.s32 	%rd160, %r1031, 4;
	add.s64 	%rd17, %rd16, %rd160;
	st.global.u32 	[%rd17], %r1918;
	@%p88 bra 	$L__BB0_128;
	bra.uni 	$L__BB0_127;

$L__BB0_128:
	add.s32 	%r1034, %r234, 1;
	mul.lo.s32 	%r1035, %r1034, %r228;
	add.s32 	%r1036, %r1035, %r235;
	mul.wide.s32 	%rd161, %r1036, 4;
	add.s64 	%rd162, %rd15, %rd161;
	ld.global.f32 	%f120, [%rd162];
	add.s32 	%r1037, %r1035, %r236;
	mul.wide.s32 	%rd163, %r1037, 4;
	add.s64 	%rd164, %rd15, %rd163;
	ld.global.f32 	%f121, [%rd164];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f120;
  cvt.rn.f16.f32 high, %f121;
  mov.b32 %r1919, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_129;

$L__BB0_127:
	mov.f32 	%f119, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f119;
  cvt.rn.f16.f32 high, %f119;
  mov.b32 %r1919, {low,high};}

	// end inline asm

$L__BB0_129:
	add.s32 	%r1038, %r230, %r1917;
	rem.s32 	%r1039, %r1038, %r775;
	shl.b32 	%r1040, %r1039, 5;
	add.s32 	%r1041, %r1040, %r39;
	shl.b32 	%r1042, %r1041, 2;
	or.b32  	%r1043, %r1042, 2;
	mul.wide.s32 	%rd165, %r1043, 4;
	add.s64 	%rd18, %rd16, %rd165;
	st.global.u32 	[%rd18], %r1919;
	@%p88 bra 	$L__BB0_131;
	bra.uni 	$L__BB0_130;

$L__BB0_131:
	mul.lo.s32 	%r1050, %r234, %r228;
	add.s32 	%r1051, %r1050, %r243;
	mul.wide.s32 	%rd166, %r1051, 4;
	add.s64 	%rd167, %rd15, %rd166;
	ld.global.f32 	%f124, [%rd167];
	add.s32 	%r1052, %r1050, %r244;
	mul.wide.s32 	%rd168, %r1052, 4;
	add.s64 	%rd169, %rd15, %rd168;
	ld.global.f32 	%f125, [%rd169];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f124;
  cvt.rn.f16.f32 high, %f125;
  mov.b32 %r1920, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_132;

$L__BB0_130:
	mov.f32 	%f123, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f123;
  cvt.rn.f16.f32 high, %f123;
  mov.b32 %r1920, {low,high};}

	// end inline asm

$L__BB0_132:
	st.global.u32 	[%rd17+4], %r1920;
	@%p88 bra 	$L__BB0_134;
	bra.uni 	$L__BB0_133;

$L__BB0_134:
	add.s32 	%r1055, %r234, 1;
	mul.lo.s32 	%r1056, %r1055, %r228;
	add.s32 	%r1057, %r1056, %r243;
	mul.wide.s32 	%rd170, %r1057, 4;
	add.s64 	%rd171, %rd15, %rd170;
	ld.global.f32 	%f128, [%rd171];
	add.s32 	%r1058, %r1056, %r244;
	mul.wide.s32 	%rd172, %r1058, 4;
	add.s64 	%rd173, %rd15, %rd172;
	ld.global.f32 	%f129, [%rd173];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f128;
  cvt.rn.f16.f32 high, %f129;
  mov.b32 %r1921, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_135;

$L__BB0_133:
	mov.f32 	%f127, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f127;
  cvt.rn.f16.f32 high, %f127;
  mov.b32 %r1921, {low,high};}

	// end inline asm

$L__BB0_135:
	st.global.u32 	[%rd18+4], %r1921;

$L__BB0_136:
	add.s32 	%r1917, %r1917, %r796;
	setp.lt.s32 	%p94, %r1917, %r775;
	@%p94 bra 	$L__BB0_122;

$L__BB0_266:
	add.s32 	%r1199, %r770, -1;
	mad.lo.s32 	%r1200, %r771, 576, 128;
	mul.lo.s32 	%r1201, %r1200, %r1199;
	add.s32 	%r1202, %r65, -64;
	add.s32 	%r1203, %r1202, %r65;
	add.s32 	%r1204, %r771, -1;
	mad.lo.s32 	%r1205, %r1203, %r1204, %r1201;
	mul.lo.s32 	%r1206, %r1199, %r771;
	mul.lo.s32 	%r1207, %r1206, 320;
	mad.lo.s32 	%r1208, %r1202, %r1204, %r1207;
	add.s32 	%r386, %r1208, %r1205;
	setp.lt.s32 	%p151, %r386, 1;
	mov.f32 	%f257, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f257;
  cvt.rn.f16.f32 high, %f257;
  mov.b32 %r1956, {low,high};}

	// end inline asm
	@%p151 bra 	$L__BB0_269;

	mov.u32 	%r1957, 0;
	mov.u32 	%r1955, _ZN6kernel5shmemE;

$L__BB0_268:
	st.shared.u32 	[%r1955], %r1956;
	mov.f32 	%f265, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f265;
  cvt.rn.f16.f32 high, %f265;
  mov.b32 %r1211, {low,high};}

	// end inline asm
	st.shared.u32 	[%r1955+4], %r1211;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f265;
  cvt.rn.f16.f32 high, %f265;
  mov.b32 %r1212, {low,high};}

	// end inline asm
	st.shared.u32 	[%r1955+8], %r1212;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f265;
  cvt.rn.f16.f32 high, %f265;
  mov.b32 %r1213, {low,high};}

	// end inline asm
	st.shared.u32 	[%r1955+12], %r1213;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f265;
  cvt.rn.f16.f32 high, %f265;
  mov.b32 %r1956, {low,high};}

	// end inline asm
	add.s32 	%r1955, %r1955, 16;
	add.s32 	%r1957, %r1957, 4;
	setp.lt.s32 	%p152, %r1957, %r386;
	@%p152 bra 	$L__BB0_268;

$L__BB0_269:
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f257;
  cvt.rn.f16.f32 high, %f257;
  mov.b32 %r1216, {low,high};}

	// end inline asm
	mov.u32 	%r1217, 31;
	sub.s32 	%r1218, %r1217, %r39;
	setp.gt.s32 	%p154, %r38, %r39;
	selp.b32 	%r1219, %r39, %r1218, %p154;
	shl.b32 	%r1220, %r1219, 2;
	sub.s32 	%r395, %r1220, %r778;
	shl.b32 	%r1221, %r777, 2;
	mov.u32 	%r1222, 128;
	sub.s32 	%r396, %r1222, %r1221;
	rem.s32 	%r1223, %r395, %r396;
	add.s32 	%r1224, %r1223, %r396;
	rem.s32 	%r397, %r1224, %r396;
	add.s32 	%r1225, %r395, 2;
	rem.s32 	%r1226, %r1225, %r396;
	add.s32 	%r1227, %r1226, %r396;
	rem.s32 	%r398, %r1227, %r396;
	add.s32 	%r1238, %r395, 1;
	rem.s32 	%r1239, %r1238, %r396;
	add.s32 	%r1240, %r1239, %r396;
	rem.s32 	%r399, %r1240, %r396;
	add.s32 	%r1241, %r395, 3;
	rem.s32 	%r1242, %r1241, %r396;
	add.s32 	%r1243, %r1242, %r396;
	rem.s32 	%r400, %r1243, %r396;
	// begin inline asm
	mov.u32 %r1254, %envreg2;
	// end inline asm
	cvt.u64.u32 	%rd262, %r1254;
	// begin inline asm
	mov.u32 %r1255, %envreg1;
	// end inline asm
	cvt.u64.u32 	%rd263, %r1255;
	bfi.b64 	%rd26, %rd263, %rd262, 32, 32;
	setp.ne.s64 	%p162, %rd26, 0;
	@%p162 bra 	$L__BB0_287;

	// begin inline asm
	trap;
	// end inline asm

$L__BB0_287:
	add.s64 	%rd27, %rd26, 4;
	mov.u32 	%r1256, %nctaid.y;
	mov.u32 	%r1257, %nctaid.x;
	mul.lo.s32 	%r1258, %r1257, %r1256;
	mov.u32 	%r1259, %nctaid.z;
	mul.lo.s32 	%r401, %r1258, %r1259;
	neg.s32 	%r1260, %r35;
	add.s32 	%r1261, %r39, %r34;
	setp.ne.s32 	%p163, %r1261, %r1260;
	mov.u32 	%r1262, %ctaid.x;
	add.s32 	%r402, %r1262, %r36;
	neg.s32 	%r403, %r37;
	bar.sync 	0;
	@%p163 bra 	$L__BB0_291;

	setp.eq.s32 	%p164, %r402, %r403;
	mov.u32 	%r1265, -2147483647;
	sub.s32 	%r1266, %r1265, %r401;
	selp.b32 	%r1264, %r1266, 1, %p164;
	membar.gl;
	// begin inline asm
	atom.add.release.gpu.u32 %r1263,[%rd27],%r1264;
	// end inline asm

$L__BB0_289:
	ld.volatile.u32 	%r1267, [%rd27];
	xor.b32  	%r1268, %r1267, %r1263;
	setp.gt.s32 	%p165, %r1268, -1;
	@%p165 bra 	$L__BB0_289;

	// begin inline asm
	ld.acquire.gpu.u32 %r1269,[%rd27];
	// end inline asm

$L__BB0_291:
	bar.sync 	0;
	setp.lt.s32 	%p166, %r42, 1;
	@%p166 bra 	$L__BB0_587;

	setp.lt.s32 	%p167, %r397, %r789;
	setp.ge.s32 	%p168, %r397, %r788;
	and.pred  	%p11, %p167, %p168;
	setp.lt.s32 	%p169, %r399, %r789;
	setp.ge.s32 	%p170, %r399, %r788;
	and.pred  	%p12, %p169, %p170;
	setp.lt.s32 	%p171, %r398, %r789;
	setp.ge.s32 	%p172, %r398, %r788;
	and.pred  	%p13, %p171, %p172;
	setp.lt.s32 	%p173, %r400, %r789;
	setp.ge.s32 	%p174, %r400, %r788;
	and.pred  	%p14, %p173, %p174;
	mov.u32 	%r2074, 0;
	mul.wide.s32 	%rd270, %r39, 16;
	mul.wide.s32 	%rd272, %r39, 8;
	mov.u32 	%r1958, %r1216;
	mov.u32 	%r1959, %r1216;
	mov.u32 	%r2089, %r1216;
	mov.u32 	%r1961, %r1216;
	mov.u32 	%r1962, %r1216;
	mov.u32 	%r2174, %r1216;
	mov.u32 	%r1964, %r1216;
	mov.u32 	%r2157, %r1216;
	mov.u32 	%r1966, %r1216;
	mov.u32 	%r2091, %r1216;
	mov.u32 	%r1968, %r1216;
	mov.u32 	%r2159, %r1216;
	mov.u32 	%r1970, %r1216;
	mov.u32 	%r1971, %r1216;
	mov.u32 	%r1972, %r1216;
	mov.u32 	%r1973, %r1216;
	mov.u32 	%r1974, %r1216;
	mov.u32 	%r1975, %r1216;
	mov.u32 	%r1976, %r1216;
	mov.u32 	%r2176, %r1216;
	mov.u32 	%r1978, %r1216;
	mov.u32 	%r1979, %r1216;
	mov.u32 	%r1980, %r1216;
	mov.u32 	%r1981, %r1216;
	mov.u32 	%r1982, %r1216;
	mov.u32 	%r1983, %r1216;
	mov.u32 	%r1984, %r1216;
	mov.u32 	%r1985, %r1216;
	mov.u32 	%r1986, %r1216;
	mov.u32 	%r1987, %r1216;
	mov.u32 	%r1988, %r1216;
	mov.u32 	%r1989, %r1216;
	mov.u32 	%r1990, %r1216;
	mov.u32 	%r1991, %r1216;
	mov.u32 	%r1992, %r1216;
	mov.u32 	%r1993, %r1216;
	mov.u32 	%r1994, %r1216;
	mov.u32 	%r1995, %r1216;
	mov.u32 	%r1996, %r1216;
	mov.u32 	%r1997, %r1216;
	mov.u32 	%r1998, %r1216;
	mov.u32 	%r1999, %r1216;
	mov.u32 	%r2000, %r1216;
	mov.u32 	%r2001, %r1216;
	mov.u32 	%r2181, %r1216;
	mov.u32 	%r2168, %r1216;
	mov.u32 	%r2099, %r1216;
	mov.u32 	%r2005, %r1216;
	mov.u32 	%r2182, %r1216;
	mov.u32 	%r2170, %r1216;
	mov.u32 	%r2101, %r1216;
	mov.u32 	%r2009, %r1216;
	mov.u32 	%r2129, %r1216;
	mov.u32 	%r2011, %r1216;
	mov.u32 	%r2012, %r1216;
	mov.u32 	%r2130, %r1216;
	mov.u32 	%r2014, %r1216;
	mov.u32 	%r2015, %r1216;
	mov.u32 	%r2131, %r1216;
	mov.u32 	%r2132, %r1216;
	mov.u32 	%r2018, %r1216;
	mov.u32 	%r2019, %r1216;
	mov.u32 	%r2020, %r1216;
	mov.u32 	%r2021, %r1216;
	mov.u32 	%r2133, %r1216;
	mov.u32 	%r2134, %r1216;
	mov.u32 	%r2024, %r1216;
	mov.u32 	%r2025, %r1216;
	mov.u32 	%r2026, %r1216;
	mov.u32 	%r2027, %r1216;
	mov.u32 	%r2028, %r1216;
	mov.u32 	%r2029, %r1216;
	mov.u32 	%r2030, %r1216;
	mov.u32 	%r2031, %r1216;
	mov.u32 	%r2032, %r1216;
	mov.u32 	%r2033, %r1216;
	mov.u32 	%r2138, %r1216;
	mov.u32 	%r2035, %r1216;
	mov.u32 	%r2036, %r1216;
	mov.u32 	%r2037, %r1216;
	mov.u32 	%r2038, %r1216;
	mov.u32 	%r2039, %r1216;
	mov.u32 	%r2140, %r1216;
	mov.u32 	%r2041, %r1216;
	mov.u32 	%r2042, %r1216;
	mov.u32 	%r2043, %r1216;
	mov.u32 	%r2044, %r1216;
	mov.u32 	%r2045, %r1216;
	mov.u32 	%r2141, %r1216;
	mov.u32 	%r2047, %r1216;
	mov.u32 	%r2048, %r1216;
	mov.u32 	%r2049, %r1216;
	mov.u32 	%r2050, %r1216;
	mov.u32 	%r2051, %r1216;
	mov.u32 	%r2052, %r1216;
	mov.u32 	%r2142, %r1216;
	mov.u32 	%r2054, %r1216;
	mov.u32 	%r2055, %r1216;
	mov.u32 	%r2056, %r1216;
	mov.u32 	%r2057, %r1216;
	mov.u32 	%r2058, %r1216;
	mov.u32 	%r2059, %r1216;
	mov.u32 	%r2060, %r1216;
	mov.u32 	%r2061, %r1216;
	mov.u32 	%r2062, %r1216;
	mov.u32 	%r2063, %r1216;
	mov.u32 	%r2064, %r1216;
	mov.u32 	%r2065, %r1216;
	mov.u32 	%r2066, %r1216;
	mov.u32 	%r2067, %r1216;
	mov.u32 	%r2068, %r1216;
	mov.u32 	%r2069, %r1216;
	mov.u32 	%r2070, %r1216;
	mov.u32 	%r2071, %r1216;
	mov.u32 	%r2072, %r1216;
	mov.u32 	%r2073, %r1216;
	mov.u32 	%r2075, %r1216;
	mov.u32 	%r2076, %r1216;
	mov.u32 	%r2077, %r1216;
	mov.u32 	%r2078, %r1216;
	mov.u32 	%r2079, %r1216;
	mov.u32 	%r2080, %r1216;
	mov.u32 	%r2081, %r1216;
	mov.u32 	%r2082, %r1216;
	mov.u32 	%r2083, %r1216;
	mov.u32 	%r2084, %r1216;
	mov.u32 	%r2085, %r1216;
	mov.u32 	%r2086, %r1216;
	mov.u32 	%r2090, %r1966;
	mov.u32 	%r2092, %r1970;
	mov.u32 	%r2100, %r2005;
	mov.u32 	%r2102, %r2009;

$L__BB0_293:
	mov.u32 	%r442, %r2082;
	mov.u32 	%r437, %r2081;
	mov.u32 	%r430, %r2079;
	mov.u32 	%r422, %r2077;
	mov.u32 	%r2081, %r2076;
	mov.u32 	%r2082, %r2075;
	mov.u32 	%r516, %r2057;
	mov.u32 	%r515, %r2056;
	mov.u32 	%r512, %r2142;
	mov.u32 	%r511, %r2052;
	mov.u32 	%r509, %r2050;
	mov.u32 	%r508, %r2049;
	mov.u32 	%r505, %r2141;
	mov.u32 	%r504, %r2045;
	mov.u32 	%r502, %r2043;
	mov.u32 	%r499, %r2140;
	mov.u32 	%r496, %r2037;
	mov.u32 	%r493, %r2138;
	mov.u32 	%r2056, %r2027;
	mov.u32 	%r485, %r2026;
	mov.u32 	%r482, %r2024;
	mov.u32 	%r2052, %r2134;
	mov.u32 	%r480, %r2133;
	mov.u32 	%r2049, %r2021;
	mov.u32 	%r478, %r2020;
	mov.u32 	%r475, %r2018;
	mov.u32 	%r2045, %r2132;
	mov.u32 	%r473, %r2131;
	mov.u32 	%r472, %r2015;
	mov.u32 	%r469, %r2130;
	mov.u32 	%r468, %r2012;
	mov.u32 	%r465, %r2129;
	mov.u32 	%r2076, %r2182;
	mov.u32 	%r2075, %r2181;
	mov.u32 	%r456, %r2001;
	mov.u32 	%r452, %r1997;
	mov.u32 	%r2077, %r1996;
	mov.u32 	%r450, %r1995;
	mov.u32 	%r449, %r1994;
	mov.u32 	%r445, %r1990;
	mov.u32 	%r2079, %r1989;
	mov.u32 	%r2057, %r1988;
	mov.u32 	%r441, %r1987;
	mov.u32 	%r2024, %r1986;
	mov.u32 	%r439, %r1985;
	mov.u32 	%r2050, %r1984;
	mov.u32 	%r436, %r1983;
	mov.u32 	%r2018, %r1982;
	mov.u32 	%r2043, %r1981;
	mov.u32 	%r433, %r1980;
	mov.u32 	%r2015, %r1979;
	mov.u32 	%r429, %r1978;
	mov.u32 	%r1982, %r2176;
	mov.u32 	%r1983, %r1976;
	mov.u32 	%r2037, %r1975;
	mov.u32 	%r425, %r1974;
	mov.u32 	%r2012, %r1973;
	mov.u32 	%r421, %r1972;
	mov.u32 	%r2020, %r1971;
	mov.u32 	%r2021, %r2091;
	mov.u32 	%r1986, %r2174;
	mov.u32 	%r410, %r1962;
	mov.u32 	%r409, %r1961;
	mov.u32 	%r2027, %r2089;
	mov.u32 	%r2026, %r1959;
	mov.u32 	%r1987, %r1958;
	shl.b32 	%r1855, %r801, 1;
	sub.s32 	%r1854, %r775, %r1855;
	not.b32 	%r1272, %r36;
	add.s32 	%r1273, %r772, %r1272;
	mul.lo.s32 	%r1274, %r1273, %r774;
	add.s32 	%r1275, %r2074, %r1274;
	not.b32 	%r1277, %r37;
	add.s32 	%r1278, %r773, %r1277;
	mul.lo.s32 	%r1279, %r1278, %r774;
	add.s32 	%r1280, %r2074, %r1279;
	rem.s32 	%r534, %r1275, %r64;
	rem.s32 	%r535, %r1280, %r1854;
	add.s32 	%r1284, %r1274, %r1279;
	add.s32 	%r1285, %r1284, %r775;
	not.b32 	%r1286, %r34;
	add.s32 	%r1287, %r770, %r1286;
	mad.lo.s32 	%r1288, %r1273, %r770, %r1287;
	not.b32 	%r1290, %r35;
	add.s32 	%r1291, %r771, %r1290;
	mad.lo.s32 	%r1292, %r1278, %r771, %r1291;
	add.s32 	%r1293, %r1288, %r1292;
	shl.b32 	%r1294, %r1293, 1;
	add.s32 	%r1295, %r1285, %r1294;
	add.s32 	%r1296, %r2074, %r1295;
	add.s32 	%r1297, %r2074, %r1284;
	div.s32 	%r1298, %r1296, %r775;
	mul.lo.s32 	%r1299, %r1298, %r775;
	sub.s32 	%r1300, %r1855, %r775;
	sub.s32 	%r536, %r1296, %r1299;
	sub.s32 	%r1301, %r1288, %r1292;
	shl.b32 	%r1302, %r1301, 1;
	add.s32 	%r1303, %r1302, %r776;
	mad.lo.s32 	%r1304, %r1298, %r1855, %r1303;
	mad.lo.s32 	%r1305, %r1298, %r1300, %r1297;
	div.s32 	%r1306, %r1304, %r776;
	mul.lo.s32 	%r1307, %r1306, %r776;
	sub.s32 	%r1310, %r797, %r776;
	sub.s32 	%r537, %r1304, %r1307;
	mad.lo.s32 	%r538, %r1306, %r1310, %r1305;
	ld.param.u64 	%rd267, [%rd1+80];
	cvta.to.global.u64 	%rd28, %rd267;
	setp.ne.s32 	%p175, %r34, 0;
	@%p175 bra 	$L__BB0_298;

	setp.eq.s32 	%p176, %r35, 0;
	mad.lo.s32 	%r1313, %r534, %r773, %r37;
	mul.lo.s32 	%r1314, %r1313, %r771;
	mul.lo.s32 	%r1315, %r1314, 768;
	mad.lo.s32 	%r1316, %r35, 384, %r1315;
	add.s32 	%r1317, %r1316, -64;
	mul.wide.s32 	%rd268, %r1317, 4;
	add.s64 	%rd269, %rd28, %rd268;
	add.s64 	%rd271, %rd269, %rd270;
	ld.global.v4.u32 	{%r1981, %r1975, %r1979, %r1973}, [%rd271+256];
	ld.global.v4.u32 	{%r2102, %r2100, %r2092, %r2090}, [%rd271+1024];
	add.s64 	%rd29, %rd269, %rd272;
	mov.u32 	%r2089, %r2027;
	mov.u32 	%r2091, %r2021;
	@%p176 bra 	$L__BB0_296;

	ld.global.v2.u32 	{%r2089, %r2091}, [%rd29];

$L__BB0_296:
	setp.ne.s32 	%p177, %r35, %r1204;
	ld.global.v2.u32 	{%r1980, %r1974}, [%rd29+768];
	@%p177 bra 	$L__BB0_298;

	ld.global.v2.u32 	{%r2101, %r2099}, [%rd29+1536];

$L__BB0_298:
	setp.ne.s32 	%p178, %r35, 0;
	mov.u32 	%r1959, %r2026;
	mov.u32 	%r1971, %r2020;
	mov.u32 	%r1984, %r2050;
	mov.u32 	%r1988, %r2057;
	mov.u32 	%r2109, %r1993;
	mov.u32 	%r1994, %r449;
	mov.u32 	%r2111, %r2000;
	mov.u32 	%r2001, %r456;
	mov.u32 	%r2113, %r2029;
	mov.u32 	%r2114, %r2031;
	@%p178 bra 	$L__BB0_300;

	not.b32 	%r1857, %r34;
	add.s32 	%r1856, %r770, %r1857;
	mad.lo.s32 	%r1336, %r535, %r772, %r36;
	mul.lo.s32 	%r1343, %r801, %r64;
	mul.lo.s32 	%r1344, %r1343, 768;
	mad.lo.s32 	%r1345, %r1856, 384, %r1344;
	add.s32 	%r1346, %r1345, -64;
	mad.lo.s32 	%r1347, %r1336, %r833, %r1346;
	mul.wide.s32 	%rd273, %r1347, 4;
	add.s64 	%rd274, %rd28, %rd273;
	add.s64 	%rd276, %rd274, %rd270;
	ld.global.v4.u32 	{%r2114, %r2113, %r2111, %r2109}, [%rd276+256];
	ld.global.v4.u32 	{%r1988, %r1984, %r1959, %r1971}, [%rd276+1024];
	add.s64 	%rd278, %rd274, %rd272;
	ld.global.v2.u32 	{%r2001, %r1994}, [%rd278+768];
	ld.global.v2.u32 	{%r2089, %r2091}, [%rd278+1536];

$L__BB0_300:
	ld.param.u64 	%rd280, [%rd1+88];
	cvta.to.global.u64 	%rd30, %rd280;
	add.s32 	%r1360, %r775, -1;
	setp.ge.s32 	%p179, %r536, %r1360;
	setp.lt.s32 	%p180, %r536, 2;
	or.pred  	%p181, %p180, %p179;
	setp.lt.s32 	%p182, %r537, 2;
	or.pred  	%p183, %p182, %p181;
	add.s32 	%r1361, %r776, -2;
	setp.ge.s32 	%p184, %r537, %r1361;
	or.pred  	%p185, %p184, %p183;
	mov.u32 	%r2129, %r1216;
	mov.u32 	%r2130, %r1216;
	mov.u32 	%r2131, %r1216;
	mov.u32 	%r2132, %r1216;
	mov.u32 	%r2133, %r1216;
	mov.u32 	%r2134, %r1216;
	mov.u32 	%r2135, %r1216;
	mov.u32 	%r2136, %r1216;
	mov.u32 	%r2137, %r1216;
	mov.u32 	%r2138, %r1216;
	mov.u32 	%r2139, %r1216;
	mov.u32 	%r2140, %r1216;
	mov.u32 	%r2141, %r1216;
	mov.u32 	%r2142, %r1216;
	mov.u32 	%r2143, %r1216;
	mov.u32 	%r2144, %r1216;
	mov.u32 	%r2145, %r1216;
	mov.u32 	%r2146, %r1216;
	mov.u32 	%r2147, %r1216;
	mov.u32 	%r2148, %r1216;
	mov.u32 	%r2149, %r1216;
	mov.u32 	%r2150, %r1216;
	@%p185 bra 	$L__BB0_311;

	mad.lo.s32 	%r601, %r537, %r775, %r536;
	shl.b32 	%r1362, %r601, 6;
	mul.wide.s32 	%rd281, %r1362, 4;
	add.s64 	%rd31, %rd30, %rd281;
	and.pred  	%p188, %p175, %p178;
	mov.u32 	%r2132, %r1216;
	mov.u32 	%r2134, %r1216;
	@%p188 bra 	$L__BB0_303;

	add.s64 	%rd283, %rd31, %rd272;
	ld.global.v2.u32 	{%r2134, %r2132}, [%rd283+256];

$L__BB0_303:
	mov.u32 	%r2137, %r1216;
	mov.u32 	%r2139, %r1216;
	@%p175 bra 	$L__BB0_305;

	shl.b32 	%r1366, %r775, 5;
	cvt.s64.s32 	%rd284, %r1366;
	cvt.s64.s32 	%rd285, %r39;
	add.s64 	%rd286, %rd284, %rd285;
	shl.b64 	%rd287, %rd286, 3;
	add.s64 	%rd288, %rd31, %rd287;
	ld.global.v2.u32 	{%r2139, %r2137}, [%rd288];

$L__BB0_305:
	mov.u32 	%r2144, %r1216;
	mov.u32 	%r2146, %r1216;
	@%p178 bra 	$L__BB0_307;

	shl.b32 	%r1370, %r775, 5;
	neg.s32 	%r1371, %r1370;
	cvt.s64.s32 	%rd289, %r1371;
	cvt.s64.s32 	%rd290, %r39;
	add.s64 	%rd291, %rd289, %rd290;
	shl.b64 	%rd292, %rd291, 3;
	add.s64 	%rd293, %rd31, %rd292;
	ld.global.v2.u32 	{%r2146, %r2144}, [%rd293];

$L__BB0_307:
	shl.b32 	%r1374, %r776, 6;
	shl.b32 	%r1375, %r601, 7;
	mad.lo.s32 	%r1376, %r1374, %r775, %r1375;
	mul.wide.s32 	%rd294, %r1376, 4;
	add.s64 	%rd32, %rd30, %rd294;
	mov.u32 	%r2129, %r1216;
	mov.u32 	%r2130, %r1216;
	mov.u32 	%r2135, %r1216;
	mov.u32 	%r2136, %r1216;
	mov.u32 	%r2138, %r1216;
	mov.u32 	%r2140, %r1216;
	mov.u32 	%r2147, %r1216;
	mov.u32 	%r2148, %r1216;
	@%p175 bra 	$L__BB0_309;

	shl.b32 	%r1377, %r775, 5;
	cvt.s64.s32 	%rd295, %r1377;
	cvt.s64.s32 	%rd296, %r39;
	add.s64 	%rd297, %rd295, %rd296;
	shl.b64 	%rd298, %rd297, 4;
	add.s64 	%rd299, %rd32, %rd298;
	ld.global.v4.u32 	{%r2140, %r2138, %r2130, %r2129}, [%rd299];
	shl.b32 	%r1382, %r775, 6;
	add.s32 	%r1383, %r1382, -32;
	cvt.s64.s32 	%rd300, %r1383;
	add.s64 	%rd301, %rd300, %rd296;
	shl.b64 	%rd302, %rd301, 4;
	add.s64 	%rd303, %rd32, %rd302;
	ld.global.v4.u32 	{%r2148, %r2147, %r2136, %r2135}, [%rd303];

$L__BB0_309:
	mov.u32 	%r2131, %r1216;
	mov.u32 	%r2133, %r1216;
	mov.u32 	%r2141, %r1216;
	mov.u32 	%r2142, %r1216;
	mov.u32 	%r2143, %r1216;
	mov.u32 	%r2145, %r1216;
	mov.u32 	%r2149, %r1216;
	mov.u32 	%r2150, %r1216;
	@%p178 bra 	$L__BB0_311;

	shl.b32 	%r1389, %r775, 5;
	xor.b32  	%r1390, %r1389, -32;
	cvt.s64.s32 	%rd304, %r1390;
	cvt.s64.s32 	%rd305, %r39;
	add.s64 	%rd306, %rd304, %rd305;
	shl.b64 	%rd307, %rd306, 4;
	add.s64 	%rd308, %rd32, %rd307;
	ld.global.v4.u32 	{%r2150, %r2149, %r2145, %r2143}, [%rd308];
	add.s64 	%rd310, %rd32, %rd270;
	ld.global.v4.u32 	{%r2142, %r2141, %r2133, %r2131}, [%rd310];

$L__BB0_311:
	bar.sync 	0;
	ld.param.u64 	%rd312, [%rd1+160];
	cvta.to.global.u64 	%rd33, %rd312;
	add.s32 	%r1399, %r784, 2;
	setp.lt.s32 	%p193, %r536, %r1399;
	add.s32 	%r1400, %r785, -1;
	setp.ge.s32 	%p194, %r536, %r1400;
	or.pred  	%p195, %p194, %p193;
	add.s32 	%r1401, %r786, 2;
	setp.lt.s32 	%p196, %r537, %r1401;
	or.pred  	%p197, %p195, %p196;
	add.s32 	%r1402, %r787, -2;
	setp.ge.s32 	%p198, %r537, %r1402;
	or.pred  	%p199, %p198, %p197;
	setp.lt.s32 	%p200, %r538, %r781;
	or.pred  	%p201, %p200, %p199;
	mad.lo.s32 	%r1403, %r783, %r782, %r781;
	setp.ge.s32 	%p202, %r538, %r1403;
	or.pred  	%p203, %p201, %p202;
	@%p203 bra 	$L__BB0_553;

	sub.s32 	%r660, %r538, %r781;
	rem.s32 	%r1404, %r660, %r782;
	setp.ne.s32 	%p204, %r1404, 0;
	@%p204 bra 	$L__BB0_553;

	div.s32 	%r1405, %r660, %r782;
	mul.lo.s32 	%r1407, %r1405, %r49;
	sub.s32 	%r661, %r536, %r784;
	sub.s32 	%r662, %r537, %r786;
	mul.lo.s32 	%r663, %r1407, 3;
	add.s32 	%r1408, %r661, %r663;
	add.s32 	%r1409, %r1408, -2;
	mul.lo.s32 	%r664, %r1409, %r50;
	add.s32 	%r1411, %r662, %r664;
	mul.lo.s32 	%r1412, %r1411, %r51;
	sub.s32 	%r665, %r1412, %r788;
	@%p15 bra 	$L__BB0_318;

	not.pred 	%p206, %p11;
	@%p206 bra 	$L__BB0_316;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2073;
  cvt.f32.f16 %f302, low;}

	// end inline asm
	add.s32 	%r1414, %r665, %r397;
	mul.wide.s32 	%rd313, %r1414, 4;
	add.s64 	%rd314, %rd33, %rd313;
	st.global.f32 	[%rd314], %f302;

$L__BB0_316:
	not.pred 	%p207, %p13;
	@%p207 bra 	$L__BB0_318;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2073;
  cvt.f32.f16 %f303, high;}

	// end inline asm
	add.s32 	%r1416, %r665, %r398;
	mul.wide.s32 	%rd315, %r1416, 4;
	add.s64 	%rd316, %rd33, %rd315;
	st.global.f32 	[%rd316], %f303;

$L__BB0_318:
	@%p15 bra 	$L__BB0_323;

	not.pred 	%p209, %p12;
	@%p209 bra 	$L__BB0_321;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2069;
  cvt.f32.f16 %f304, low;}

	// end inline asm
	add.s32 	%r1418, %r665, %r399;
	mul.wide.s32 	%rd317, %r1418, 4;
	add.s64 	%rd318, %rd33, %rd317;
	st.global.f32 	[%rd318], %f304;

$L__BB0_321:
	not.pred 	%p210, %p14;
	@%p210 bra 	$L__BB0_323;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2069;
  cvt.f32.f16 %f305, high;}

	// end inline asm
	add.s32 	%r1420, %r665, %r400;
	mul.wide.s32 	%rd319, %r1420, 4;
	add.s64 	%rd320, %rd33, %rd319;
	st.global.f32 	[%rd320], %f305;

$L__BB0_323:
	sub.s32 	%r1867, %r536, %r784;
	add.s32 	%r666, %r663, %r49;
	add.s32 	%r1422, %r1867, %r666;
	add.s32 	%r1423, %r1422, -2;
	mad.lo.s32 	%r1425, %r1423, %r50, %r662;
	mul.lo.s32 	%r1426, %r1425, %r51;
	sub.s32 	%r667, %r1426, %r788;
	@%p15 bra 	$L__BB0_328;

	not.pred 	%p212, %p11;
	@%p212 bra 	$L__BB0_326;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2072;
  cvt.f32.f16 %f306, low;}

	// end inline asm
	add.s32 	%r1428, %r667, %r397;
	mul.wide.s32 	%rd321, %r1428, 4;
	add.s64 	%rd322, %rd33, %rd321;
	st.global.f32 	[%rd322], %f306;

$L__BB0_326:
	not.pred 	%p213, %p13;
	@%p213 bra 	$L__BB0_328;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2072;
  cvt.f32.f16 %f307, high;}

	// end inline asm
	add.s32 	%r1430, %r667, %r398;
	mul.wide.s32 	%rd323, %r1430, 4;
	add.s64 	%rd324, %rd33, %rd323;
	st.global.f32 	[%rd324], %f307;

$L__BB0_328:
	@%p15 bra 	$L__BB0_333;

	not.pred 	%p215, %p12;
	@%p215 bra 	$L__BB0_331;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2068;
  cvt.f32.f16 %f308, low;}

	// end inline asm
	add.s32 	%r1432, %r667, %r399;
	mul.wide.s32 	%rd325, %r1432, 4;
	add.s64 	%rd326, %rd33, %rd325;
	st.global.f32 	[%rd326], %f308;

$L__BB0_331:
	not.pred 	%p216, %p14;
	@%p216 bra 	$L__BB0_333;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2068;
  cvt.f32.f16 %f309, high;}

	// end inline asm
	add.s32 	%r1434, %r667, %r400;
	mul.wide.s32 	%rd327, %r1434, 4;
	add.s64 	%rd328, %rd33, %rd327;
	st.global.f32 	[%rd328], %f309;

$L__BB0_333:
	add.s32 	%r668, %r662, 1;
	add.s32 	%r1435, %r668, %r664;
	mul.lo.s32 	%r1436, %r1435, %r51;
	sub.s32 	%r669, %r1436, %r788;
	@%p15 bra 	$L__BB0_338;

	not.pred 	%p218, %p11;
	@%p218 bra 	$L__BB0_336;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2065;
  cvt.f32.f16 %f310, low;}

	// end inline asm
	add.s32 	%r1438, %r669, %r397;
	mul.wide.s32 	%rd329, %r1438, 4;
	add.s64 	%rd330, %rd33, %rd329;
	st.global.f32 	[%rd330], %f310;

$L__BB0_336:
	not.pred 	%p219, %p13;
	@%p219 bra 	$L__BB0_338;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2065;
  cvt.f32.f16 %f311, high;}

	// end inline asm
	add.s32 	%r1440, %r669, %r398;
	mul.wide.s32 	%rd331, %r1440, 4;
	add.s64 	%rd332, %rd33, %rd331;
	st.global.f32 	[%rd332], %f311;

$L__BB0_338:
	@%p15 bra 	$L__BB0_343;

	not.pred 	%p221, %p12;
	@%p221 bra 	$L__BB0_341;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2063;
  cvt.f32.f16 %f312, low;}

	// end inline asm
	add.s32 	%r1442, %r669, %r399;
	mul.wide.s32 	%rd333, %r1442, 4;
	add.s64 	%rd334, %rd33, %rd333;
	st.global.f32 	[%rd334], %f312;

$L__BB0_341:
	not.pred 	%p222, %p14;
	@%p222 bra 	$L__BB0_343;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2063;
  cvt.f32.f16 %f313, high;}

	// end inline asm
	add.s32 	%r1444, %r669, %r400;
	mul.wide.s32 	%rd335, %r1444, 4;
	add.s64 	%rd336, %rd33, %rd335;
	st.global.f32 	[%rd336], %f313;

$L__BB0_343:
	not.b32 	%r1445, %r784;
	add.s32 	%r670, %r536, %r1445;
	not.b32 	%r1446, %r786;
	add.s32 	%r671, %r537, %r1446;
	add.s32 	%r1447, %r670, %r663;
	mul.lo.s32 	%r672, %r1447, %r50;
	add.s32 	%r1449, %r671, %r672;
	mul.lo.s32 	%r1450, %r1449, %r51;
	sub.s32 	%r673, %r1450, %r788;
	@%p15 bra 	$L__BB0_348;

	not.pred 	%p224, %p11;
	@%p224 bra 	$L__BB0_346;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2031;
  cvt.f32.f16 %f314, low;}

	// end inline asm
	add.s32 	%r1452, %r673, %r397;
	mul.wide.s32 	%rd337, %r1452, 4;
	add.s64 	%rd338, %rd33, %rd337;
	st.global.f32 	[%rd338], %f314;

$L__BB0_346:
	not.pred 	%p225, %p13;
	@%p225 bra 	$L__BB0_348;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2031;
  cvt.f32.f16 %f315, high;}

	// end inline asm
	add.s32 	%r1454, %r673, %r398;
	mul.wide.s32 	%rd339, %r1454, 4;
	add.s64 	%rd340, %rd33, %rd339;
	st.global.f32 	[%rd340], %f315;

$L__BB0_348:
	@%p15 bra 	$L__BB0_353;

	not.pred 	%p227, %p12;
	@%p227 bra 	$L__BB0_351;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2029;
  cvt.f32.f16 %f316, low;}

	// end inline asm
	add.s32 	%r1456, %r673, %r399;
	mul.wide.s32 	%rd341, %r1456, 4;
	add.s64 	%rd342, %rd33, %rd341;
	st.global.f32 	[%rd342], %f316;

$L__BB0_351:
	not.pred 	%p228, %p14;
	@%p228 bra 	$L__BB0_353;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2029;
  cvt.f32.f16 %f317, high;}

	// end inline asm
	add.s32 	%r1458, %r673, %r400;
	mul.wide.s32 	%rd343, %r1458, 4;
	add.s64 	%rd344, %rd33, %rd343;
	st.global.f32 	[%rd344], %f317;

$L__BB0_353:
	add.s32 	%r1460, %r670, %r666;
	mul.lo.s32 	%r674, %r1460, %r50;
	add.s32 	%r1461, %r671, %r674;
	mul.lo.s32 	%r1462, %r1461, %r51;
	sub.s32 	%r675, %r1462, %r788;
	@%p15 bra 	$L__BB0_358;

	not.pred 	%p230, %p11;
	@%p230 bra 	$L__BB0_356;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2061;
  cvt.f32.f16 %f318, low;}

	// end inline asm
	add.s32 	%r1464, %r675, %r397;
	mul.wide.s32 	%rd345, %r1464, 4;
	add.s64 	%rd346, %rd33, %rd345;
	st.global.f32 	[%rd346], %f318;

$L__BB0_356:
	not.pred 	%p231, %p13;
	@%p231 bra 	$L__BB0_358;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2061;
  cvt.f32.f16 %f319, high;}

	// end inline asm
	add.s32 	%r1466, %r675, %r398;
	mul.wide.s32 	%rd347, %r1466, 4;
	add.s64 	%rd348, %rd33, %rd347;
	st.global.f32 	[%rd348], %f319;

$L__BB0_358:
	@%p15 bra 	$L__BB0_363;

	not.pred 	%p233, %p12;
	@%p233 bra 	$L__BB0_361;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2059;
  cvt.f32.f16 %f320, low;}

	// end inline asm
	add.s32 	%r1468, %r675, %r399;
	mul.wide.s32 	%rd349, %r1468, 4;
	add.s64 	%rd350, %rd33, %rd349;
	st.global.f32 	[%rd350], %f320;

$L__BB0_361:
	not.pred 	%p234, %p14;
	@%p234 bra 	$L__BB0_363;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2059;
  cvt.f32.f16 %f321, high;}

	// end inline asm
	add.s32 	%r1470, %r675, %r400;
	mul.wide.s32 	%rd351, %r1470, 4;
	add.s64 	%rd352, %rd33, %rd351;
	st.global.f32 	[%rd352], %f321;

$L__BB0_363:
	add.s32 	%r1471, %r662, %r672;
	mul.lo.s32 	%r1472, %r1471, %r51;
	sub.s32 	%r676, %r1472, %r788;
	@%p15 bra 	$L__BB0_368;

	not.pred 	%p236, %p11;
	@%p236 bra 	$L__BB0_366;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r516;
  cvt.f32.f16 %f322, low;}

	// end inline asm
	add.s32 	%r1474, %r676, %r397;
	mul.wide.s32 	%rd353, %r1474, 4;
	add.s64 	%rd354, %rd33, %rd353;
	st.global.f32 	[%rd354], %f322;

$L__BB0_366:
	not.pred 	%p237, %p13;
	@%p237 bra 	$L__BB0_368;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r516;
  cvt.f32.f16 %f323, high;}

	// end inline asm
	add.s32 	%r1476, %r676, %r398;
	mul.wide.s32 	%rd355, %r1476, 4;
	add.s64 	%rd356, %rd33, %rd355;
	st.global.f32 	[%rd356], %f323;

$L__BB0_368:
	@%p15 bra 	$L__BB0_373;

	not.pred 	%p239, %p12;
	@%p239 bra 	$L__BB0_371;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r509;
  cvt.f32.f16 %f324, low;}

	// end inline asm
	add.s32 	%r1478, %r676, %r399;
	mul.wide.s32 	%rd357, %r1478, 4;
	add.s64 	%rd358, %rd33, %rd357;
	st.global.f32 	[%rd358], %f324;

$L__BB0_371:
	not.pred 	%p240, %p14;
	@%p240 bra 	$L__BB0_373;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r509;
  cvt.f32.f16 %f325, high;}

	// end inline asm
	add.s32 	%r1480, %r676, %r400;
	mul.wide.s32 	%rd359, %r1480, 4;
	add.s64 	%rd360, %rd33, %rd359;
	st.global.f32 	[%rd360], %f325;

$L__BB0_373:
	add.s32 	%r1481, %r662, %r674;
	mul.lo.s32 	%r1482, %r1481, %r51;
	sub.s32 	%r677, %r1482, %r788;
	@%p15 bra 	$L__BB0_378;

	not.pred 	%p242, %p11;
	@%p242 bra 	$L__BB0_376;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r515;
  cvt.f32.f16 %f326, low;}

	// end inline asm
	add.s32 	%r1484, %r677, %r397;
	mul.wide.s32 	%rd361, %r1484, 4;
	add.s64 	%rd362, %rd33, %rd361;
	st.global.f32 	[%rd362], %f326;

$L__BB0_376:
	not.pred 	%p243, %p13;
	@%p243 bra 	$L__BB0_378;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r515;
  cvt.f32.f16 %f327, high;}

	// end inline asm
	add.s32 	%r1486, %r677, %r398;
	mul.wide.s32 	%rd363, %r1486, 4;
	add.s64 	%rd364, %rd33, %rd363;
	st.global.f32 	[%rd364], %f327;

$L__BB0_378:
	@%p15 bra 	$L__BB0_383;

	not.pred 	%p245, %p12;
	@%p245 bra 	$L__BB0_381;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r508;
  cvt.f32.f16 %f328, low;}

	// end inline asm
	add.s32 	%r1488, %r677, %r399;
	mul.wide.s32 	%rd365, %r1488, 4;
	add.s64 	%rd366, %rd33, %rd365;
	st.global.f32 	[%rd366], %f328;

$L__BB0_381:
	not.pred 	%p246, %p14;
	@%p246 bra 	$L__BB0_383;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r508;
  cvt.f32.f16 %f329, high;}

	// end inline asm
	add.s32 	%r1490, %r677, %r400;
	mul.wide.s32 	%rd367, %r1490, 4;
	add.s64 	%rd368, %rd33, %rd367;
	st.global.f32 	[%rd368], %f329;

$L__BB0_383:
	add.s32 	%r678, %r666, %r49;
	add.s32 	%r1492, %r670, %r678;
	mul.lo.s32 	%r679, %r1492, %r50;
	add.s32 	%r1494, %r662, %r679;
	mul.lo.s32 	%r1495, %r1494, %r51;
	sub.s32 	%r680, %r1495, %r788;
	@%p15 bra 	$L__BB0_388;

	not.pred 	%p248, %p11;
	@%p248 bra 	$L__BB0_386;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2055;
  cvt.f32.f16 %f330, low;}

	// end inline asm
	add.s32 	%r1497, %r680, %r397;
	mul.wide.s32 	%rd369, %r1497, 4;
	add.s64 	%rd370, %rd33, %rd369;
	st.global.f32 	[%rd370], %f330;

$L__BB0_386:
	not.pred 	%p249, %p13;
	@%p249 bra 	$L__BB0_388;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2055;
  cvt.f32.f16 %f331, high;}

	// end inline asm
	add.s32 	%r1499, %r680, %r398;
	mul.wide.s32 	%rd371, %r1499, 4;
	add.s64 	%rd372, %rd33, %rd371;
	st.global.f32 	[%rd372], %f331;

$L__BB0_388:
	@%p15 bra 	$L__BB0_393;

	not.pred 	%p251, %p12;
	@%p251 bra 	$L__BB0_391;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2048;
  cvt.f32.f16 %f332, low;}

	// end inline asm
	add.s32 	%r1501, %r680, %r399;
	mul.wide.s32 	%rd373, %r1501, 4;
	add.s64 	%rd374, %rd33, %rd373;
	st.global.f32 	[%rd374], %f332;

$L__BB0_391:
	not.pred 	%p252, %p14;
	@%p252 bra 	$L__BB0_393;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2048;
  cvt.f32.f16 %f333, high;}

	// end inline asm
	add.s32 	%r1503, %r680, %r400;
	mul.wide.s32 	%rd375, %r1503, 4;
	add.s64 	%rd376, %rd33, %rd375;
	st.global.f32 	[%rd376], %f333;

$L__BB0_393:
	add.s32 	%r1847, %r662, 1;
	add.s32 	%r1504, %r1847, %r672;
	mul.lo.s32 	%r1505, %r1504, %r51;
	sub.s32 	%r681, %r1505, %r788;
	@%p15 bra 	$L__BB0_398;

	not.pred 	%p254, %p11;
	@%p254 bra 	$L__BB0_396;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r502;
  cvt.f32.f16 %f334, low;}

	// end inline asm
	add.s32 	%r1507, %r681, %r397;
	mul.wide.s32 	%rd377, %r1507, 4;
	add.s64 	%rd378, %rd33, %rd377;
	st.global.f32 	[%rd378], %f334;

$L__BB0_396:
	not.pred 	%p255, %p13;
	@%p255 bra 	$L__BB0_398;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r502;
  cvt.f32.f16 %f335, high;}

	// end inline asm
	add.s32 	%r1509, %r681, %r398;
	mul.wide.s32 	%rd379, %r1509, 4;
	add.s64 	%rd380, %rd33, %rd379;
	st.global.f32 	[%rd380], %f335;

$L__BB0_398:
	@%p15 bra 	$L__BB0_403;

	not.pred 	%p257, %p12;
	@%p257 bra 	$L__BB0_401;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r496;
  cvt.f32.f16 %f336, low;}

	// end inline asm
	add.s32 	%r1511, %r681, %r399;
	mul.wide.s32 	%rd381, %r1511, 4;
	add.s64 	%rd382, %rd33, %rd381;
	st.global.f32 	[%rd382], %f336;

$L__BB0_401:
	not.pred 	%p258, %p14;
	@%p258 bra 	$L__BB0_403;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r496;
  cvt.f32.f16 %f337, high;}

	// end inline asm
	add.s32 	%r1513, %r681, %r400;
	mul.wide.s32 	%rd383, %r1513, 4;
	add.s64 	%rd384, %rd33, %rd383;
	st.global.f32 	[%rd384], %f337;

$L__BB0_403:
	add.s32 	%r1848, %r662, 1;
	add.s32 	%r1514, %r1848, %r674;
	mul.lo.s32 	%r1515, %r1514, %r51;
	sub.s32 	%r682, %r1515, %r788;
	@%p15 bra 	$L__BB0_408;

	not.pred 	%p260, %p11;
	@%p260 bra 	$L__BB0_406;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2042;
  cvt.f32.f16 %f338, low;}

	// end inline asm
	add.s32 	%r1517, %r682, %r397;
	mul.wide.s32 	%rd385, %r1517, 4;
	add.s64 	%rd386, %rd33, %rd385;
	st.global.f32 	[%rd386], %f338;

$L__BB0_406:
	not.pred 	%p261, %p13;
	@%p261 bra 	$L__BB0_408;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2042;
  cvt.f32.f16 %f339, high;}

	// end inline asm
	add.s32 	%r1519, %r682, %r398;
	mul.wide.s32 	%rd387, %r1519, 4;
	add.s64 	%rd388, %rd33, %rd387;
	st.global.f32 	[%rd388], %f339;

$L__BB0_408:
	@%p15 bra 	$L__BB0_413;

	not.pred 	%p263, %p12;
	@%p263 bra 	$L__BB0_411;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2036;
  cvt.f32.f16 %f340, low;}

	// end inline asm
	add.s32 	%r1521, %r682, %r399;
	mul.wide.s32 	%rd389, %r1521, 4;
	add.s64 	%rd390, %rd33, %rd389;
	st.global.f32 	[%rd390], %f340;

$L__BB0_411:
	not.pred 	%p264, %p14;
	@%p264 bra 	$L__BB0_413;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2036;
  cvt.f32.f16 %f341, high;}

	// end inline asm
	add.s32 	%r1523, %r682, %r400;
	mul.wide.s32 	%rd391, %r1523, 4;
	add.s64 	%rd392, %rd33, %rd391;
	st.global.f32 	[%rd392], %f341;

$L__BB0_413:
	add.s32 	%r1849, %r662, 1;
	add.s32 	%r1524, %r1849, %r679;
	mul.lo.s32 	%r1525, %r1524, %r51;
	sub.s32 	%r683, %r1525, %r788;
	@%p15 bra 	$L__BB0_418;

	not.pred 	%p266, %p11;
	@%p266 bra 	$L__BB0_416;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2041;
  cvt.f32.f16 %f342, low;}

	// end inline asm
	add.s32 	%r1527, %r683, %r397;
	mul.wide.s32 	%rd393, %r1527, 4;
	add.s64 	%rd394, %rd33, %rd393;
	st.global.f32 	[%rd394], %f342;

$L__BB0_416:
	not.pred 	%p267, %p13;
	@%p267 bra 	$L__BB0_418;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2041;
  cvt.f32.f16 %f343, high;}

	// end inline asm
	add.s32 	%r1529, %r683, %r398;
	mul.wide.s32 	%rd395, %r1529, 4;
	add.s64 	%rd396, %rd33, %rd395;
	st.global.f32 	[%rd396], %f343;

$L__BB0_418:
	@%p15 bra 	$L__BB0_423;

	not.pred 	%p269, %p12;
	@%p269 bra 	$L__BB0_421;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2035;
  cvt.f32.f16 %f344, low;}

	// end inline asm
	add.s32 	%r1531, %r683, %r399;
	mul.wide.s32 	%rd397, %r1531, 4;
	add.s64 	%rd398, %rd33, %rd397;
	st.global.f32 	[%rd398], %f344;

$L__BB0_421:
	not.pred 	%p270, %p14;
	@%p270 bra 	$L__BB0_423;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2035;
  cvt.f32.f16 %f345, high;}

	// end inline asm
	add.s32 	%r1533, %r683, %r400;
	mul.wide.s32 	%rd399, %r1533, 4;
	add.s64 	%rd400, %rd33, %rd399;
	st.global.f32 	[%rd400], %f345;

$L__BB0_423:
	add.s32 	%r684, %r662, 2;
	add.s32 	%r1534, %r684, %r672;
	mul.lo.s32 	%r1535, %r1534, %r51;
	sub.s32 	%r685, %r1535, %r788;
	@%p15 bra 	$L__BB0_428;

	not.pred 	%p272, %p11;
	@%p272 bra 	$L__BB0_426;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2009;
  cvt.f32.f16 %f346, low;}

	// end inline asm
	add.s32 	%r1537, %r685, %r397;
	mul.wide.s32 	%rd401, %r1537, 4;
	add.s64 	%rd402, %rd33, %rd401;
	st.global.f32 	[%rd402], %f346;

$L__BB0_426:
	not.pred 	%p273, %p13;
	@%p273 bra 	$L__BB0_428;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2009;
  cvt.f32.f16 %f347, high;}

	// end inline asm
	add.s32 	%r1539, %r685, %r398;
	mul.wide.s32 	%rd403, %r1539, 4;
	add.s64 	%rd404, %rd33, %rd403;
	st.global.f32 	[%rd404], %f347;

$L__BB0_428:
	@%p15 bra 	$L__BB0_433;

	not.pred 	%p275, %p12;
	@%p275 bra 	$L__BB0_431;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2005;
  cvt.f32.f16 %f348, low;}

	// end inline asm
	add.s32 	%r1541, %r685, %r399;
	mul.wide.s32 	%rd405, %r1541, 4;
	add.s64 	%rd406, %rd33, %rd405;
	st.global.f32 	[%rd406], %f348;

$L__BB0_431:
	not.pred 	%p276, %p14;
	@%p276 bra 	$L__BB0_433;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2005;
  cvt.f32.f16 %f349, high;}

	// end inline asm
	add.s32 	%r1543, %r685, %r400;
	mul.wide.s32 	%rd407, %r1543, 4;
	add.s64 	%rd408, %rd33, %rd407;
	st.global.f32 	[%rd408], %f349;

$L__BB0_433:
	mul.lo.s32 	%r686, %r1422, %r50;
	add.s32 	%r1546, %r671, %r686;
	mul.lo.s32 	%r1547, %r1546, %r51;
	sub.s32 	%r687, %r1547, %r788;
	@%p15 bra 	$L__BB0_438;

	not.pred 	%p278, %p11;
	@%p278 bra 	$L__BB0_436;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r456;
  cvt.f32.f16 %f350, low;}

	// end inline asm
	add.s32 	%r1549, %r687, %r397;
	mul.wide.s32 	%rd409, %r1549, 4;
	add.s64 	%rd410, %rd33, %rd409;
	st.global.f32 	[%rd410], %f350;

$L__BB0_436:
	not.pred 	%p279, %p13;
	@%p279 bra 	$L__BB0_438;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r456;
  cvt.f32.f16 %f351, high;}

	// end inline asm
	add.s32 	%r1551, %r687, %r398;
	mul.wide.s32 	%rd411, %r1551, 4;
	add.s64 	%rd412, %rd33, %rd411;
	st.global.f32 	[%rd412], %f351;

$L__BB0_438:
	@%p15 bra 	$L__BB0_443;

	not.pred 	%p281, %p12;
	@%p281 bra 	$L__BB0_441;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r449;
  cvt.f32.f16 %f352, low;}

	// end inline asm
	add.s32 	%r1553, %r687, %r399;
	mul.wide.s32 	%rd413, %r1553, 4;
	add.s64 	%rd414, %rd33, %rd413;
	st.global.f32 	[%rd414], %f352;

$L__BB0_441:
	not.pred 	%p282, %p14;
	@%p282 bra 	$L__BB0_443;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r449;
  cvt.f32.f16 %f353, high;}

	// end inline asm
	add.s32 	%r1555, %r687, %r400;
	mul.wide.s32 	%rd415, %r1555, 4;
	add.s64 	%rd416, %rd33, %rd415;
	st.global.f32 	[%rd416], %f353;

$L__BB0_443:
	sub.s32 	%r1868, %r536, %r784;
	add.s32 	%r1557, %r1868, %r678;
	mul.lo.s32 	%r688, %r1557, %r50;
	add.s32 	%r1558, %r671, %r688;
	mul.lo.s32 	%r1559, %r1558, %r51;
	sub.s32 	%r689, %r1559, %r788;
	@%p15 bra 	$L__BB0_448;

	not.pred 	%p284, %p11;
	@%p284 bra 	$L__BB0_446;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2000;
  cvt.f32.f16 %f354, low;}

	// end inline asm
	add.s32 	%r1561, %r689, %r397;
	mul.wide.s32 	%rd417, %r1561, 4;
	add.s64 	%rd418, %rd33, %rd417;
	st.global.f32 	[%rd418], %f354;

$L__BB0_446:
	not.pred 	%p285, %p13;
	@%p285 bra 	$L__BB0_448;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2000;
  cvt.f32.f16 %f355, high;}

	// end inline asm
	add.s32 	%r1563, %r689, %r398;
	mul.wide.s32 	%rd419, %r1563, 4;
	add.s64 	%rd420, %rd33, %rd419;
	st.global.f32 	[%rd420], %f355;

$L__BB0_448:
	@%p15 bra 	$L__BB0_453;

	not.pred 	%p287, %p12;
	@%p287 bra 	$L__BB0_451;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1993;
  cvt.f32.f16 %f356, low;}

	// end inline asm
	add.s32 	%r1565, %r689, %r399;
	mul.wide.s32 	%rd421, %r1565, 4;
	add.s64 	%rd422, %rd33, %rd421;
	st.global.f32 	[%rd422], %f356;

$L__BB0_451:
	not.pred 	%p288, %p14;
	@%p288 bra 	$L__BB0_453;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1993;
  cvt.f32.f16 %f357, high;}

	// end inline asm
	add.s32 	%r1567, %r689, %r400;
	mul.wide.s32 	%rd423, %r1567, 4;
	add.s64 	%rd424, %rd33, %rd423;
	st.global.f32 	[%rd424], %f357;

$L__BB0_453:
	mul.lo.s32 	%r690, %r1408, %r50;
	add.s32 	%r1570, %r662, %r690;
	mul.lo.s32 	%r1571, %r1570, %r51;
	sub.s32 	%r691, %r1571, %r788;
	@%p15 bra 	$L__BB0_458;

	not.pred 	%p290, %p11;
	@%p290 bra 	$L__BB0_456;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2057;
  cvt.f32.f16 %f358, low;}

	// end inline asm
	add.s32 	%r1573, %r691, %r397;
	mul.wide.s32 	%rd425, %r1573, 4;
	add.s64 	%rd426, %rd33, %rd425;
	st.global.f32 	[%rd426], %f358;

$L__BB0_456:
	not.pred 	%p291, %p13;
	@%p291 bra 	$L__BB0_458;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2057;
  cvt.f32.f16 %f359, high;}

	// end inline asm
	add.s32 	%r1575, %r691, %r398;
	mul.wide.s32 	%rd427, %r1575, 4;
	add.s64 	%rd428, %rd33, %rd427;
	st.global.f32 	[%rd428], %f359;

$L__BB0_458:
	@%p15 bra 	$L__BB0_463;

	not.pred 	%p293, %p12;
	@%p293 bra 	$L__BB0_461;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2050;
  cvt.f32.f16 %f360, low;}

	// end inline asm
	add.s32 	%r1577, %r691, %r399;
	mul.wide.s32 	%rd429, %r1577, 4;
	add.s64 	%rd430, %rd33, %rd429;
	st.global.f32 	[%rd430], %f360;

$L__BB0_461:
	not.pred 	%p294, %p14;
	@%p294 bra 	$L__BB0_463;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2050;
  cvt.f32.f16 %f361, high;}

	// end inline asm
	add.s32 	%r1579, %r691, %r400;
	mul.wide.s32 	%rd431, %r1579, 4;
	add.s64 	%rd432, %rd33, %rd431;
	st.global.f32 	[%rd432], %f361;

$L__BB0_463:
	add.s32 	%r1580, %r662, %r686;
	mul.lo.s32 	%r1581, %r1580, %r51;
	sub.s32 	%r692, %r1581, %r788;
	@%p15 bra 	$L__BB0_468;

	not.pred 	%p296, %p11;
	@%p296 bra 	$L__BB0_466;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2056;
  cvt.f32.f16 %f362, low;}

	// end inline asm
	add.s32 	%r1583, %r692, %r397;
	mul.wide.s32 	%rd433, %r1583, 4;
	add.s64 	%rd434, %rd33, %rd433;
	st.global.f32 	[%rd434], %f362;

$L__BB0_466:
	not.pred 	%p297, %p13;
	@%p297 bra 	$L__BB0_468;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2056;
  cvt.f32.f16 %f363, high;}

	// end inline asm
	add.s32 	%r1585, %r692, %r398;
	mul.wide.s32 	%rd435, %r1585, 4;
	add.s64 	%rd436, %rd33, %rd435;
	st.global.f32 	[%rd436], %f363;

$L__BB0_468:
	@%p15 bra 	$L__BB0_473;

	not.pred 	%p299, %p12;
	@%p299 bra 	$L__BB0_471;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2049;
  cvt.f32.f16 %f364, low;}

	// end inline asm
	add.s32 	%r1587, %r692, %r399;
	mul.wide.s32 	%rd437, %r1587, 4;
	add.s64 	%rd438, %rd33, %rd437;
	st.global.f32 	[%rd438], %f364;

$L__BB0_471:
	not.pred 	%p300, %p14;
	@%p300 bra 	$L__BB0_473;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2049;
  cvt.f32.f16 %f365, high;}

	// end inline asm
	add.s32 	%r1589, %r692, %r400;
	mul.wide.s32 	%rd439, %r1589, 4;
	add.s64 	%rd440, %rd33, %rd439;
	st.global.f32 	[%rd440], %f365;

$L__BB0_473:
	add.s32 	%r1590, %r662, %r688;
	mul.lo.s32 	%r1591, %r1590, %r51;
	sub.s32 	%r693, %r1591, %r788;
	@%p15 bra 	$L__BB0_478;

	not.pred 	%p302, %p11;
	@%p302 bra 	$L__BB0_476;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r485;
  cvt.f32.f16 %f366, low;}

	// end inline asm
	add.s32 	%r1593, %r693, %r397;
	mul.wide.s32 	%rd441, %r1593, 4;
	add.s64 	%rd442, %rd33, %rd441;
	st.global.f32 	[%rd442], %f366;

$L__BB0_476:
	not.pred 	%p303, %p13;
	@%p303 bra 	$L__BB0_478;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r485;
  cvt.f32.f16 %f367, high;}

	// end inline asm
	add.s32 	%r1595, %r693, %r398;
	mul.wide.s32 	%rd443, %r1595, 4;
	add.s64 	%rd444, %rd33, %rd443;
	st.global.f32 	[%rd444], %f367;

$L__BB0_478:
	@%p15 bra 	$L__BB0_483;

	not.pred 	%p305, %p12;
	@%p305 bra 	$L__BB0_481;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r478;
  cvt.f32.f16 %f368, low;}

	// end inline asm
	add.s32 	%r1597, %r693, %r399;
	mul.wide.s32 	%rd445, %r1597, 4;
	add.s64 	%rd446, %rd33, %rd445;
	st.global.f32 	[%rd446], %f368;

$L__BB0_481:
	not.pred 	%p306, %p14;
	@%p306 bra 	$L__BB0_483;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r478;
  cvt.f32.f16 %f369, high;}

	// end inline asm
	add.s32 	%r1599, %r693, %r400;
	mul.wide.s32 	%rd447, %r1599, 4;
	add.s64 	%rd448, %rd33, %rd447;
	st.global.f32 	[%rd448], %f369;

$L__BB0_483:
	add.s32 	%r1850, %r662, 1;
	add.s32 	%r1600, %r1850, %r690;
	mul.lo.s32 	%r1601, %r1600, %r51;
	sub.s32 	%r694, %r1601, %r788;
	@%p15 bra 	$L__BB0_488;

	not.pred 	%p308, %p11;
	@%p308 bra 	$L__BB0_486;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2043;
  cvt.f32.f16 %f370, low;}

	// end inline asm
	add.s32 	%r1603, %r694, %r397;
	mul.wide.s32 	%rd449, %r1603, 4;
	add.s64 	%rd450, %rd33, %rd449;
	st.global.f32 	[%rd450], %f370;

$L__BB0_486:
	not.pred 	%p309, %p13;
	@%p309 bra 	$L__BB0_488;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2043;
  cvt.f32.f16 %f371, high;}

	// end inline asm
	add.s32 	%r1605, %r694, %r398;
	mul.wide.s32 	%rd451, %r1605, 4;
	add.s64 	%rd452, %rd33, %rd451;
	st.global.f32 	[%rd452], %f371;

$L__BB0_488:
	@%p15 bra 	$L__BB0_493;

	not.pred 	%p311, %p12;
	@%p311 bra 	$L__BB0_491;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2037;
  cvt.f32.f16 %f372, low;}

	// end inline asm
	add.s32 	%r1607, %r694, %r399;
	mul.wide.s32 	%rd453, %r1607, 4;
	add.s64 	%rd454, %rd33, %rd453;
	st.global.f32 	[%rd454], %f372;

$L__BB0_491:
	not.pred 	%p312, %p14;
	@%p312 bra 	$L__BB0_493;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2037;
  cvt.f32.f16 %f373, high;}

	// end inline asm
	add.s32 	%r1609, %r694, %r400;
	mul.wide.s32 	%rd455, %r1609, 4;
	add.s64 	%rd456, %rd33, %rd455;
	st.global.f32 	[%rd456], %f373;

$L__BB0_493:
	add.s32 	%r1851, %r662, 1;
	add.s32 	%r1610, %r1851, %r686;
	mul.lo.s32 	%r1611, %r1610, %r51;
	sub.s32 	%r695, %r1611, %r788;
	@%p15 bra 	$L__BB0_498;

	not.pred 	%p314, %p11;
	@%p314 bra 	$L__BB0_496;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r433;
  cvt.f32.f16 %f374, low;}

	// end inline asm
	add.s32 	%r1613, %r695, %r397;
	mul.wide.s32 	%rd457, %r1613, 4;
	add.s64 	%rd458, %rd33, %rd457;
	st.global.f32 	[%rd458], %f374;

$L__BB0_496:
	not.pred 	%p315, %p13;
	@%p315 bra 	$L__BB0_498;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r433;
  cvt.f32.f16 %f375, high;}

	// end inline asm
	add.s32 	%r1615, %r695, %r398;
	mul.wide.s32 	%rd459, %r1615, 4;
	add.s64 	%rd460, %rd33, %rd459;
	st.global.f32 	[%rd460], %f375;

$L__BB0_498:
	@%p15 bra 	$L__BB0_503;

	not.pred 	%p317, %p12;
	@%p317 bra 	$L__BB0_501;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r425;
  cvt.f32.f16 %f376, low;}

	// end inline asm
	add.s32 	%r1617, %r695, %r399;
	mul.wide.s32 	%rd461, %r1617, 4;
	add.s64 	%rd462, %rd33, %rd461;
	st.global.f32 	[%rd462], %f376;

$L__BB0_501:
	not.pred 	%p318, %p14;
	@%p318 bra 	$L__BB0_503;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r425;
  cvt.f32.f16 %f377, high;}

	// end inline asm
	add.s32 	%r1619, %r695, %r400;
	mul.wide.s32 	%rd463, %r1619, 4;
	add.s64 	%rd464, %rd33, %rd463;
	st.global.f32 	[%rd464], %f377;

$L__BB0_503:
	add.s32 	%r1852, %r662, 1;
	add.s32 	%r1620, %r1852, %r688;
	mul.lo.s32 	%r1621, %r1620, %r51;
	sub.s32 	%r696, %r1621, %r788;
	@%p15 bra 	$L__BB0_508;

	not.pred 	%p320, %p11;
	@%p320 bra 	$L__BB0_506;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r472;
  cvt.f32.f16 %f378, low;}

	// end inline asm
	add.s32 	%r1623, %r696, %r397;
	mul.wide.s32 	%rd465, %r1623, 4;
	add.s64 	%rd466, %rd33, %rd465;
	st.global.f32 	[%rd466], %f378;

$L__BB0_506:
	not.pred 	%p321, %p13;
	@%p321 bra 	$L__BB0_508;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r472;
  cvt.f32.f16 %f379, high;}

	// end inline asm
	add.s32 	%r1625, %r696, %r398;
	mul.wide.s32 	%rd467, %r1625, 4;
	add.s64 	%rd468, %rd33, %rd467;
	st.global.f32 	[%rd468], %f379;

$L__BB0_508:
	@%p15 bra 	$L__BB0_513;

	not.pred 	%p323, %p12;
	@%p323 bra 	$L__BB0_511;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r468;
  cvt.f32.f16 %f380, low;}

	// end inline asm
	add.s32 	%r1627, %r696, %r399;
	mul.wide.s32 	%rd469, %r1627, 4;
	add.s64 	%rd470, %rd33, %rd469;
	st.global.f32 	[%rd470], %f380;

$L__BB0_511:
	not.pred 	%p324, %p14;
	@%p324 bra 	$L__BB0_513;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r468;
  cvt.f32.f16 %f381, high;}

	// end inline asm
	add.s32 	%r1629, %r696, %r400;
	mul.wide.s32 	%rd471, %r1629, 4;
	add.s64 	%rd472, %rd33, %rd471;
	st.global.f32 	[%rd472], %f381;

$L__BB0_513:
	add.s32 	%r1870, %r662, 2;
	add.s32 	%r1630, %r1870, %r688;
	mul.lo.s32 	%r1631, %r1630, %r51;
	sub.s32 	%r697, %r1631, %r788;
	@%p15 bra 	$L__BB0_518;

	not.pred 	%p326, %p11;
	@%p326 bra 	$L__BB0_516;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1970;
  cvt.f32.f16 %f382, low;}

	// end inline asm
	add.s32 	%r1633, %r697, %r397;
	mul.wide.s32 	%rd473, %r1633, 4;
	add.s64 	%rd474, %rd33, %rd473;
	st.global.f32 	[%rd474], %f382;

$L__BB0_516:
	not.pred 	%p327, %p13;
	@%p327 bra 	$L__BB0_518;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1970;
  cvt.f32.f16 %f383, high;}

	// end inline asm
	add.s32 	%r1635, %r697, %r398;
	mul.wide.s32 	%rd475, %r1635, 4;
	add.s64 	%rd476, %rd33, %rd475;
	st.global.f32 	[%rd476], %f383;

$L__BB0_518:
	@%p15 bra 	$L__BB0_523;

	not.pred 	%p329, %p12;
	@%p329 bra 	$L__BB0_521;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1966;
  cvt.f32.f16 %f384, low;}

	// end inline asm
	add.s32 	%r1637, %r697, %r399;
	mul.wide.s32 	%rd477, %r1637, 4;
	add.s64 	%rd478, %rd33, %rd477;
	st.global.f32 	[%rd478], %f384;

$L__BB0_521:
	not.pred 	%p330, %p14;
	@%p330 bra 	$L__BB0_523;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1966;
  cvt.f32.f16 %f385, high;}

	// end inline asm
	add.s32 	%r1639, %r697, %r400;
	mul.wide.s32 	%rd479, %r1639, 4;
	add.s64 	%rd480, %rd33, %rd479;
	st.global.f32 	[%rd480], %f385;

$L__BB0_523:
	sub.s32 	%r1869, %r536, %r784;
	add.s32 	%r698, %r1869, 1;
	add.s32 	%r1640, %r698, %r666;
	mad.lo.s32 	%r1642, %r1640, %r50, %r662;
	mul.lo.s32 	%r1643, %r1642, %r51;
	sub.s32 	%r699, %r1643, %r788;
	@%p15 bra 	$L__BB0_528;

	not.pred 	%p332, %p11;
	@%p332 bra 	$L__BB0_526;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2027;
  cvt.f32.f16 %f386, low;}

	// end inline asm
	add.s32 	%r1645, %r699, %r397;
	mul.wide.s32 	%rd481, %r1645, 4;
	add.s64 	%rd482, %rd33, %rd481;
	st.global.f32 	[%rd482], %f386;

$L__BB0_526:
	not.pred 	%p333, %p13;
	@%p333 bra 	$L__BB0_528;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2027;
  cvt.f32.f16 %f387, high;}

	// end inline asm
	add.s32 	%r1647, %r699, %r398;
	mul.wide.s32 	%rd483, %r1647, 4;
	add.s64 	%rd484, %rd33, %rd483;
	st.global.f32 	[%rd484], %f387;

$L__BB0_528:
	@%p15 bra 	$L__BB0_533;

	not.pred 	%p335, %p12;
	@%p335 bra 	$L__BB0_531;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2021;
  cvt.f32.f16 %f388, low;}

	// end inline asm
	add.s32 	%r1649, %r699, %r399;
	mul.wide.s32 	%rd485, %r1649, 4;
	add.s64 	%rd486, %rd33, %rd485;
	st.global.f32 	[%rd486], %f388;

$L__BB0_531:
	not.pred 	%p336, %p14;
	@%p336 bra 	$L__BB0_533;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2021;
  cvt.f32.f16 %f389, high;}

	// end inline asm
	add.s32 	%r1651, %r699, %r400;
	mul.wide.s32 	%rd487, %r1651, 4;
	add.s64 	%rd488, %rd33, %rd487;
	st.global.f32 	[%rd488], %f389;

$L__BB0_533:
	add.s32 	%r1653, %r698, %r678;
	mul.lo.s32 	%r700, %r1653, %r50;
	add.s32 	%r1654, %r662, %r700;
	mul.lo.s32 	%r1655, %r1654, %r51;
	sub.s32 	%r701, %r1655, %r788;
	@%p15 bra 	$L__BB0_538;

	not.pred 	%p338, %p11;
	@%p338 bra 	$L__BB0_536;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2026;
  cvt.f32.f16 %f390, low;}

	// end inline asm
	add.s32 	%r1657, %r701, %r397;
	mul.wide.s32 	%rd489, %r1657, 4;
	add.s64 	%rd490, %rd33, %rd489;
	st.global.f32 	[%rd490], %f390;

$L__BB0_536:
	not.pred 	%p339, %p13;
	@%p339 bra 	$L__BB0_538;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2026;
  cvt.f32.f16 %f391, high;}

	// end inline asm
	add.s32 	%r1659, %r701, %r398;
	mul.wide.s32 	%rd491, %r1659, 4;
	add.s64 	%rd492, %rd33, %rd491;
	st.global.f32 	[%rd492], %f391;

$L__BB0_538:
	@%p15 bra 	$L__BB0_543;

	not.pred 	%p341, %p12;
	@%p341 bra 	$L__BB0_541;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2020;
  cvt.f32.f16 %f392, low;}

	// end inline asm
	add.s32 	%r1661, %r701, %r399;
	mul.wide.s32 	%rd493, %r1661, 4;
	add.s64 	%rd494, %rd33, %rd493;
	st.global.f32 	[%rd494], %f392;

$L__BB0_541:
	not.pred 	%p342, %p14;
	@%p342 bra 	$L__BB0_543;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2020;
  cvt.f32.f16 %f393, high;}

	// end inline asm
	add.s32 	%r1663, %r701, %r400;
	mul.wide.s32 	%rd495, %r1663, 4;
	add.s64 	%rd496, %rd33, %rd495;
	st.global.f32 	[%rd496], %f393;

$L__BB0_543:
	add.s32 	%r1853, %r662, 1;
	add.s32 	%r1664, %r1853, %r700;
	mul.lo.s32 	%r1665, %r1664, %r51;
	sub.s32 	%r702, %r1665, %r788;
	@%p15 bra 	$L__BB0_548;

	not.pred 	%p344, %p11;
	@%p344 bra 	$L__BB0_546;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2015;
  cvt.f32.f16 %f394, low;}

	// end inline asm
	add.s32 	%r1667, %r702, %r397;
	mul.wide.s32 	%rd497, %r1667, 4;
	add.s64 	%rd498, %rd33, %rd497;
	st.global.f32 	[%rd498], %f394;

$L__BB0_546:
	not.pred 	%p345, %p13;
	@%p345 bra 	$L__BB0_548;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2015;
  cvt.f32.f16 %f395, high;}

	// end inline asm
	add.s32 	%r1669, %r702, %r398;
	mul.wide.s32 	%rd499, %r1669, 4;
	add.s64 	%rd500, %rd33, %rd499;
	st.global.f32 	[%rd500], %f395;

$L__BB0_548:
	@%p15 bra 	$L__BB0_553;

	not.pred 	%p347, %p12;
	@%p347 bra 	$L__BB0_551;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2012;
  cvt.f32.f16 %f396, low;}

	// end inline asm
	add.s32 	%r1671, %r702, %r399;
	mul.wide.s32 	%rd501, %r1671, 4;
	add.s64 	%rd502, %rd33, %rd501;
	st.global.f32 	[%rd502], %f396;

$L__BB0_551:
	not.pred 	%p348, %p14;
	@%p348 bra 	$L__BB0_553;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2012;
  cvt.f32.f16 %f397, high;}

	// end inline asm
	add.s32 	%r1673, %r702, %r400;
	mul.wide.s32 	%rd503, %r1673, 4;
	add.s64 	%rd504, %rd33, %rd503;
	st.global.f32 	[%rd504], %f397;

$L__BB0_553:
	setp.ne.s32 	%p349, %r34, %r1199;
	ld.param.u64 	%rd505, [%rd1+80];
	cvta.to.global.u64 	%rd35, %rd505;
	@%p349 bra 	$L__BB0_555;

	mad.lo.s32 	%r1675, %r534, %r773, %r37;
	mul.lo.s32 	%r1676, %r771, %r1675;
	mul.lo.s32 	%r1677, %r1676, 768;
	mad.lo.s32 	%r1679, %r35, 384, %r1677;
	add.s32 	%r1680, %r1679, -64;
	mul.wide.s32 	%rd506, %r1680, 4;
	add.s64 	%rd507, %rd35, %rd506;
	add.s64 	%rd509, %rd507, %rd270;
	st.global.v4.u32 	[%rd509+256], {%r2031, %r2029, %r2000, %r1993};
	st.global.v4.u32 	[%rd509+1024], {%r2073, %r2069, %r2055, %r2048};
	add.s64 	%rd511, %rd507, %rd272;
	st.global.v2.u32 	[%rd511+768], {%r2061, %r2059};
	st.global.v2.u32 	[%rd511+1536], {%r2072, %r2068};

$L__BB0_555:
	setp.ne.s32 	%p350, %r35, %r1204;
	@%p350 bra 	$L__BB0_560;

	ld.param.u64 	%rd539, [%rd1+80];
	cvta.to.global.u64 	%rd538, %rd539;
	not.b32 	%r1866, %r34;
	add.s32 	%r1865, %r770, %r1866;
	setp.eq.s32 	%p351, %r34, %r1199;
	mad.lo.s32 	%r1683, %r535, %r772, %r36;
	mul.lo.s32 	%r1690, %r801, %r64;
	mul.lo.s32 	%r1691, %r1690, 768;
	mad.lo.s32 	%r1692, %r1865, 384, %r1691;
	add.s32 	%r1693, %r1692, -64;
	mad.lo.s32 	%r1694, %r1683, %r833, %r1693;
	mul.wide.s32 	%rd512, %r1694, 4;
	add.s64 	%rd513, %rd538, %rd512;
	add.s64 	%rd515, %rd513, %rd270;
	st.global.v4.u32 	[%rd515+256], {%r2065, %r2063, %r2041, %r2035};
	st.global.v4.u32 	[%rd515+1024], {%r2009, %r2005, %r1970, %r1966};
	add.s64 	%rd36, %rd513, %rd272;
	@%p351 bra 	$L__BB0_558;

	st.global.v2.u32 	[%rd36], {%r2072, %r2068};

$L__BB0_558:
	st.global.v2.u32 	[%rd36+768], {%r2042, %r2036};
	@%p175 bra 	$L__BB0_560;

	st.global.v2.u32 	[%rd36+1536], {%r2101, %r2099};

$L__BB0_560:
	setp.ge.s32 	%p353, %r34, %r1199;
	@%p353 bra 	$L__BB0_562;

	add.s32 	%r1864, %r65, %r65;
	mul.lo.s32 	%r1695, %r771, 320;
	mul.lo.s32 	%r1697, %r35, 320;
	mad.lo.s32 	%r1698, %r1695, %r34, %r1697;
	add.s32 	%r1701, %r1864, -64;
	mad.lo.s32 	%r1706, %r1701, %r1204, %r1201;
	add.s32 	%r1707, %r1698, %r1706;
	shl.b32 	%r1708, %r1707, 2;
	mov.u32 	%r1709, _ZN6kernel5shmemE;
	add.s32 	%r1710, %r1709, %r1708;
	shl.b32 	%r1711, %r39, 4;
	add.s32 	%r1712, %r1710, %r1711;
	st.shared.v4.u32 	[%r1712], {%r2150, %r2149, %r2145, %r2143};
	shl.b32 	%r1713, %r39, 3;
	add.s32 	%r1714, %r1710, %r1713;
	st.shared.v2.u32 	[%r1714+512], {%r2060, %r2058};
	st.shared.v4.u32 	[%r1712+768], {%r2071, %r2067, %r2051, %r2044};

$L__BB0_562:
	setp.ge.s32 	%p354, %r35, %r1204;
	@%p354 bra 	$L__BB0_566;

	not.b32 	%r1863, %r34;
	add.s32 	%r1862, %r770, %r1863;
	mad.lo.s32 	%r1720, %r1862, 384, %r1207;
	mad.lo.s32 	%r1724, %r1202, %r35, %r1720;
	add.s32 	%r1730, %r1724, %r1205;
	shl.b32 	%r1731, %r1730, 2;
	mov.u32 	%r1732, _ZN6kernel5shmemE;
	add.s32 	%r1733, %r1732, %r1731;
	shl.b32 	%r1734, %r39, 3;
	add.s32 	%r1735, %r1733, %r1734;
	@%p353 bra 	$L__BB0_565;

	add.s32 	%r1845, %r1735, -256;
	st.shared.v2.u32 	[%r1845], {%r2070, %r2066};

$L__BB0_565:
	shl.b32 	%r1755, %r39, 4;
	add.s32 	%r1756, %r1733, %r1755;
	st.shared.v4.u32 	[%r1756], {%r2064, %r2062, %r2038, %r2032};
	add.s32 	%r1846, %r1735, -256;
	st.shared.v2.u32 	[%r1846+768], {%r2039, %r2033};
	st.shared.v4.u32 	[%r1756+768], {%r2148, %r2147, %r2136, %r2135};

$L__BB0_566:
	bar.sync 	0;
	ld.param.u64 	%rd517, [%rd1+80];
	cvta.to.global.u64 	%rd37, %rd517;
	mov.u32 	%r2174, %r1986;
	mov.u32 	%r2156, %r1964;
	mov.u32 	%r2158, %r1968;
	mov.u32 	%r1972, %r421;
	mov.u32 	%r2176, %r1982;
	mov.u32 	%r1978, %r429;
	mov.u32 	%r1985, %r439;
	mov.u32 	%r1989, %r2079;
	mov.u32 	%r1995, %r450;
	mov.u32 	%r1996, %r2077;
	mov.u32 	%r2181, %r2075;
	mov.u32 	%r2182, %r2076;
	@%p175 bra 	$L__BB0_570;

	setp.eq.s32 	%p357, %r35, 0;
	mad.lo.s32 	%r1759, %r534, %r773, %r37;
	mad.lo.s32 	%r1760, %r1759, 768, 384;
	mul.lo.s32 	%r1761, %r1760, %r771;
	mad.lo.s32 	%r1762, %r35, 384, %r1761;
	add.s32 	%r1763, %r1762, -128;
	mul.wide.s32 	%rd518, %r1763, 4;
	add.s64 	%rd519, %rd37, %rd518;
	add.s64 	%rd521, %rd519, %rd270;
	add.s64 	%rd38, %rd521, 512;
	mov.u32 	%r2174, %r1986;
	mov.u32 	%r2176, %r1982;
	mov.u32 	%r2181, %r2075;
	mov.u32 	%r2182, %r2076;
	@%p357 bra 	$L__BB0_569;

	ld.global.v4.u32 	{%r2181, %r2182, %r2174, %r2176}, [%rd38+-512];

$L__BB0_569:
	ld.global.v4.u32 	{%r1989, %r1996, %r1985, %r1995}, [%rd38];
	ld.global.v4.u32 	{%r1978, %r1972, %r2158, %r2156}, [%rd38+512];
	ld.global.v4.u32 	{%r2159, %r2157, %r2170, %r2168}, [%rd38+1024];

$L__BB0_570:
	mov.u32 	%r1958, %r1987;
	mov.u32 	%r1961, %r409;
	mov.u32 	%r1962, %r410;
	mov.u32 	%r1976, %r1983;
	mov.u32 	%r1990, %r445;
	mov.u32 	%r2178, %r1991;
	mov.u32 	%r1997, %r452;
	mov.u32 	%r2180, %r1998;
	@%p178 bra 	$L__BB0_572;

	not.b32 	%r1861, %r34;
	add.s32 	%r1860, %r770, %r1861;
	mad.lo.s32 	%r1781, %r535, %r772, %r36;
	mad.lo.s32 	%r1787, %r1860, 384, %r65;
	mad.lo.s32 	%r1788, %r1781, %r833, %r1787;
	mad.lo.s32 	%r1791, %r835, %r64, %r1788;
	mul.wide.s32 	%rd522, %r1791, 4;
	add.s64 	%rd523, %rd37, %rd522;
	add.s64 	%rd525, %rd523, %rd270;
	ld.global.v4.u32 	{%r2180, %r2178, %r1962, %r1961}, [%rd525+512];
	ld.global.v4.u32 	{%r1997, %r1990, %r1958, %r1976}, [%rd525+1024];
	ld.global.v4.u32 	{%r2181, %r2182, %r2174, %r2176}, [%rd525+1536];

$L__BB0_572:
	setp.ne.s32 	%p368, %r34, %r1199;
	add.s32 	%r767, %r2074, 1;
	bar.sync 	0;
	ld.param.u64 	%rd526, [%rd1+80];
	cvta.to.global.u64 	%rd39, %rd526;
	@%p368 bra 	$L__BB0_574;

	mad.lo.s32 	%r1805, %r534, %r773, %r37;
	mad.lo.s32 	%r1806, %r1805, 768, 384;
	mul.lo.s32 	%r1807, %r1806, %r771;
	mad.lo.s32 	%r1809, %r35, 384, %r1807;
	add.s32 	%r1810, %r1809, -128;
	mul.wide.s32 	%rd527, %r1810, 4;
	add.s64 	%rd528, %rd39, %rd527;
	add.s64 	%rd530, %rd528, %rd270;
	st.global.v4.u32 	[%rd530+512], {%r1998, %r1991, %r1999, %r1992};
	st.global.v4.u32 	[%rd530+1024], {%r2030, %r2028, %r2025, %r2019};
	st.global.v4.u32 	[%rd530+1536], {%r2086, %r2085, %r2054, %r2047};

$L__BB0_574:
	@%p350 bra 	$L__BB0_577;

	not.b32 	%r1859, %r34;
	add.s32 	%r1858, %r770, %r1859;
	mad.lo.s32 	%r1812, %r535, %r772, %r36;
	mad.lo.s32 	%r1818, %r1858, 384, %r65;
	mad.lo.s32 	%r1819, %r1812, %r833, %r1818;
	mad.lo.s32 	%r1822, %r835, %r64, %r1819;
	mul.wide.s32 	%rd531, %r1822, 4;
	add.s64 	%rd532, %rd39, %rd531;
	add.s64 	%rd40, %rd532, %rd270;
	st.global.v4.u32 	[%rd40], {%r2086, %r2085, %r2054, %r2047};
	st.global.v4.u32 	[%rd40+512], {%r2084, %r2083, %r2080, %r2078};
	st.global.v4.u32 	[%rd40+1024], {%r2014, %r2011, %r1968, %r1964};
	@%p175 bra 	$L__BB0_577;

	st.global.v4.u32 	[%rd40+1536], {%r2159, %r2157, %r2170, %r2168};

$L__BB0_577:
	rem.s32 	%r1823, %r2074, %r774;
	setp.eq.s32 	%p362, %r1823, 0;
	@%p362 bra 	$L__BB0_579;

	bar.sync 	0;
	bra.uni 	$L__BB0_586;

$L__BB0_579:
	@%p162 bra 	$L__BB0_581;

	// begin inline asm
	trap;
	// end inline asm

$L__BB0_581:
	bar.sync 	0;
	@%p163 bra 	$L__BB0_585;

	membar.gl;
	setp.eq.s32 	%p365, %r402, %r403;
	mov.u32 	%r1839, -2147483647;
	sub.s32 	%r1840, %r1839, %r401;
	selp.b32 	%r1828, %r1840, 1, %p365;
	// begin inline asm
	atom.add.release.gpu.u32 %r1827,[%rd27],%r1828;
	// end inline asm

$L__BB0_583:
	ld.volatile.u32 	%r1841, [%rd27];
	xor.b32  	%r1842, %r1841, %r1827;
	setp.gt.s32 	%p366, %r1842, -1;
	@%p366 bra 	$L__BB0_583;

	// begin inline asm
	ld.acquire.gpu.u32 %r1843,[%rd27];
	// end inline asm

$L__BB0_585:
	bar.sync 	0;

$L__BB0_586:
	setp.lt.s32 	%p367, %r767, %r42;
	mov.u32 	%r1964, %r2156;
	mov.u32 	%r1966, %r2090;
	mov.u32 	%r1968, %r2158;
	mov.u32 	%r1970, %r2092;
	mov.u32 	%r1991, %r2178;
	mov.u32 	%r1992, %r409;
	mov.u32 	%r1993, %r2109;
	mov.u32 	%r1998, %r2180;
	mov.u32 	%r1999, %r410;
	mov.u32 	%r2000, %r2111;
	mov.u32 	%r2005, %r2100;
	mov.u32 	%r2009, %r2102;
	mov.u32 	%r2011, %r421;
	mov.u32 	%r2014, %r429;
	mov.u32 	%r2019, %r436;
	mov.u32 	%r2025, %r441;
	mov.u32 	%r2028, %r445;
	mov.u32 	%r2029, %r2113;
	mov.u32 	%r2030, %r452;
	mov.u32 	%r2031, %r2114;
	mov.u32 	%r2032, %r465;
	mov.u32 	%r2033, %r2137;
	mov.u32 	%r2035, %r468;
	mov.u32 	%r2036, %r425;
	mov.u32 	%r2038, %r469;
	mov.u32 	%r2039, %r2139;
	mov.u32 	%r2041, %r472;
	mov.u32 	%r2042, %r433;
	mov.u32 	%r2044, %r473;
	mov.u32 	%r2047, %r475;
	mov.u32 	%r2048, %r478;
	mov.u32 	%r2051, %r480;
	mov.u32 	%r2054, %r482;
	mov.u32 	%r2055, %r485;
	mov.u32 	%r2058, %r2144;
	mov.u32 	%r2059, %r449;
	mov.u32 	%r2060, %r2146;
	mov.u32 	%r2061, %r456;
	mov.u32 	%r2062, %r493;
	mov.u32 	%r2063, %r496;
	mov.u32 	%r2064, %r499;
	mov.u32 	%r2065, %r502;
	mov.u32 	%r2066, %r504;
	mov.u32 	%r2067, %r505;
	mov.u32 	%r2068, %r508;
	mov.u32 	%r2069, %r509;
	mov.u32 	%r2070, %r511;
	mov.u32 	%r2071, %r512;
	mov.u32 	%r2072, %r515;
	mov.u32 	%r2073, %r516;
	mov.u32 	%r2074, %r767;
	mov.u32 	%r2078, %r450;
	mov.u32 	%r2080, %r439;
	mov.u32 	%r2083, %r422;
	mov.u32 	%r2084, %r430;
	mov.u32 	%r2085, %r437;
	mov.u32 	%r2086, %r442;
	@%p367 bra 	$L__BB0_293;

$L__BB0_587:
	ret;

}

