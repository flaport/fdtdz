//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31833905
// Cuda compilation tools, release 11.8, V11.8.89
// Based on NVVM 7.0.1
//

.version 7.8
.target sm_75
.address_size 64

	// .globl	_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE
.global .align 4 .b8 _ZZN4cuda3std3__48__detail21__stronger_order_cudaEiiE7__xform[16] = {3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE[24] = {254, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllJE[20] = {254, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllKE[8] = {0, 0, 0, 0, 1, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond6AllEhcE[12] = {0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond6AllXyzE[12] = {0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.extern .shared .align 16 .b8 _ZN6kernel5shmemE[];

.visible .entry _ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE(
	.param .align 8 .b8 _ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0[168]
)
{
	.reg .pred 	%p<392>;
	.reg .f32 	%f<412>;
	.reg .b32 	%r<2255>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<547>;


	mov.b64 	%rd45, _ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0;
	mov.u64 	%rd1, %rd45;
	ld.param.v2.u32 	{%r766, %r767}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0];
	ld.param.v2.u32 	{%r768, %r769}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+8];
	ld.param.v2.u32 	{%r770, %r771}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+16];
	ld.param.v2.u32 	{%r772, %r773}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+24];
	ld.param.v2.u32 	{%r774, %r775}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+32];
	ld.param.v2.u32 	{%r776, %r777}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+40];
	ld.param.v2.u32 	{%r778, %r779}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+48];
	ld.param.v2.u32 	{%r780, %r781}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+56];
	ld.param.v2.u32 	{%r782, %r783}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+64];
	ld.param.v2.u32 	{%r784, %r785}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+72];
	mov.u32 	%r34, %tid.y;
	mov.u32 	%r35, %tid.z;
	mov.u32 	%r36, %ctaid.y;
	mov.u32 	%r37, %ctaid.z;
	mov.u32 	%r786, 32;
	sub.s32 	%r38, %r786, %r773;
	mov.u32 	%r39, %tid.x;
	setp.le.s32 	%p17, %r38, %r39;
	add.s32 	%r787, %r779, -1;
	add.s32 	%r788, %r777, %r771;
	add.s32 	%r789, %r788, %r772;
	add.s32 	%r790, %r789, 1;
	mad.lo.s32 	%r791, %r787, %r778, %r790;
	mul.lo.s32 	%r792, %r766, %r768;
	shl.b32 	%r40, %r792, 1;
	shl.b32 	%r793, %r792, 2;
	div.s32 	%r794, %r791, %r793;
	add.s32 	%r795, %r794, 1;
	mul.lo.s32 	%r796, %r795, %r772;
	mul.lo.s32 	%r797, %r767, %r769;
	shl.b32 	%r41, %r797, 1;
	div.s32 	%r798, %r796, %r41;
	add.s32 	%r799, %r798, 1;
	mul.lo.s32 	%r42, %r799, %r771;
	ld.param.u64 	%rd46, [%rd1+160];
	cvta.to.global.u64 	%rd2, %rd46;
	mad.lo.s32 	%r802, %r768, %r37, %r36;
	mad.lo.s32 	%r803, %r802, %r767, %r35;
	mul.lo.s32 	%r43, %r803, %r766;
	add.s32 	%r804, %r43, %r34;
	shl.b32 	%r44, %r804, 5;
	add.s32 	%r1951, %r44, %r39;
	mul.lo.s32 	%r805, %r797, %r792;
	shl.b32 	%r48, %r805, 5;
	sub.s32 	%r49, %r781, %r780;
	mul.lo.s32 	%r806, %r779, %r49;
	sub.s32 	%r50, %r783, %r782;
	mul.lo.s32 	%r807, %r806, %r50;
	sub.s32 	%r51, %r785, %r784;
	mul.lo.s32 	%r808, %r807, %r51;
	mul.lo.s32 	%r52, %r808, 3;
	setp.ge.s32 	%p18, %r1951, %r52;
	@%p18 bra 	$L__BB0_9;

	not.b32 	%r809, %r39;
	add.s32 	%r810, %r52, %r809;
	sub.s32 	%r811, %r810, %r44;
	mul.lo.s32 	%r812, %r797, %r766;
	mul.lo.s32 	%r813, %r812, %r768;
	shl.b32 	%r53, %r813, 5;
	div.u32 	%r54, %r811, %r53;
	add.s32 	%r814, %r54, 1;
	and.b32  	%r1948, %r814, 3;
	setp.eq.s32 	%p19, %r1948, 0;
	mov.u32 	%r1949, %r1951;
	@%p19 bra 	$L__BB0_6;

	shl.b32 	%r815, %r43, 5;
	add.s32 	%r816, %r39, %r815;
	shl.b32 	%r817, %r34, 5;
	add.s32 	%r1949, %r816, %r817;
	mul.wide.s32 	%rd47, %r1951, 4;
	add.s64 	%rd544, %rd2, %rd47;
	mul.wide.s32 	%rd4, %r53, 4;

$L__BB0_5:
	.pragma "nounroll";
	mov.u32 	%r818, 0;
	st.global.u32 	[%rd544], %r818;
	add.s32 	%r1949, %r1949, %r53;
	add.s64 	%rd544, %rd544, %rd4;
	add.s32 	%r1948, %r1948, -1;
	setp.ne.s32 	%p20, %r1948, 0;
	@%p20 bra 	$L__BB0_5;

$L__BB0_6:
	setp.lt.u32 	%p21, %r54, 3;
	@%p21 bra 	$L__BB0_9;

	mul.wide.s32 	%rd50, %r48, 4;

$L__BB0_8:
	mul.wide.s32 	%rd48, %r1949, 4;
	add.s64 	%rd49, %rd2, %rd48;
	mov.u32 	%r819, 0;
	st.global.u32 	[%rd49], %r819;
	add.s64 	%rd51, %rd49, %rd50;
	st.global.u32 	[%rd51], %r819;
	add.s32 	%r820, %r1949, %r48;
	add.s32 	%r821, %r820, %r48;
	add.s64 	%rd52, %rd51, %rd50;
	st.global.u32 	[%rd52], %r819;
	add.s32 	%r822, %r821, %r48;
	add.s64 	%rd53, %rd52, %rd50;
	st.global.u32 	[%rd53], %r819;
	add.s32 	%r1949, %r822, %r48;
	setp.lt.s32 	%p22, %r1949, %r52;
	@%p22 bra 	$L__BB0_8;

$L__BB0_9:
	ld.param.u64 	%rd54, [%rd1+80];
	cvta.to.global.u64 	%rd7, %rd54;
	sub.s32 	%r823, %r772, %r40;
	div.s32 	%r824, %r823, %r41;
	mul.lo.s32 	%r825, %r824, %r771;
	sub.s32 	%r64, %r825, %r40;
	sub.s32 	%r826, %r771, %r41;
	mul.lo.s32 	%r827, %r826, %r768;
	mul.lo.s32 	%r65, %r766, 384;
	add.s32 	%r828, %r65, %r65;
	add.s32 	%r829, %r828, 128;
	mul.lo.s32 	%r831, %r797, 768;
	mul.lo.s32 	%r832, %r827, %r829;
	mad.lo.s32 	%r66, %r831, %r64, %r832;
	bra.uni 	$L__BB0_10;

$L__BB0_602:
	mov.f32 	%f411, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f411;
  cvt.rn.f16.f32 high, %f411;
  mov.b32 %r1912, {low,high};}

	// end inline asm
	mul.wide.s32 	%rd540, %r1951, 4;
	add.s64 	%rd541, %rd7, %rd540;
	st.global.u32 	[%rd541], %r1912;
	add.s32 	%r1951, %r1951, %r48;

$L__BB0_10:
	setp.lt.s32 	%p23, %r1951, %r66;
	@%p23 bra 	$L__BB0_602;

	ld.param.u64 	%rd55, [%rd1+120];
	cvta.to.global.u64 	%rd9, %rd55;
	ld.param.u64 	%rd56, [%rd1+88];
	cvta.to.global.u64 	%rd10, %rd56;
	mad.lo.s32 	%r1989, %r766, %r36, %r34;
	mul.lo.s32 	%r71, %r767, %r37;
	add.s32 	%r72, %r71, %r35;
	setp.ge.s32 	%p24, %r1989, %r771;
	@%p24 bra 	$L__BB0_49;

	setp.gt.s32 	%p25, %r38, %r39;
	add.s32 	%r73, %r771, -4;
	add.s32 	%r74, %r772, -4;
	mov.u32 	%r833, 31;
	sub.s32 	%r834, %r833, %r39;
	selp.b32 	%r835, %r39, %r834, %p25;
	shl.b32 	%r836, %r835, 2;
	mov.u32 	%r837, 2;
	sub.s32 	%r75, %r836, %r774;
	shl.b32 	%r838, %r773, 2;
	mov.u32 	%r839, 128;
	sub.s32 	%r76, %r839, %r838;
	add.s32 	%r77, %r781, -1;
	add.s32 	%r78, %r783, -1;
	add.s32 	%r79, %r785, -1;
	sub.s32 	%r840, %r837, %r774;
	add.s32 	%r80, %r840, %r836;
	mul.lo.s32 	%r841, %r772, %r771;
	shl.b32 	%r81, %r841, 6;
	add.s32 	%r82, %r771, -1;
	shl.b32 	%r83, %r39, 1;
	or.b32  	%r84, %r83, 1;
	add.s32 	%r85, %r75, 1;
	add.s32 	%r86, %r80, 1;
	shr.u32 	%r842, %r84, 31;
	add.s32 	%r843, %r84, %r842;
	shr.s32 	%r88, %r843, 1;
	and.b32  	%r844, %r843, -2;
	sub.s32 	%r845, %r84, %r844;
	add.s32 	%r87, %r845, %r81;
	mov.u32 	%r1952, %r1989;

$L__BB0_13:
	setp.ge.s32 	%p26, %r72, %r772;
	@%p26 bra 	$L__BB0_48;

	setp.lt.s32 	%p27, %r1952, 4;
	setp.ge.s32 	%p28, %r1952, %r73;
	or.pred  	%p1, %p27, %p28;
	setp.gt.s32 	%p29, %r781, %r1952;
	selp.b32 	%r846, %r1952, %r77, %p29;
	setp.gt.s32 	%p30, %r780, %r1952;
	selp.b32 	%r847, %r780, %r846, %p30;
	sub.s32 	%r848, %r847, %r780;
	add.s32 	%r90, %r82, %r1952;
	mul.lo.s32 	%r91, %r848, %r50;
	add.s32 	%r849, %r848, %r49;
	mul.lo.s32 	%r92, %r849, %r50;
	add.s32 	%r850, %r849, %r49;
	mul.lo.s32 	%r93, %r850, %r50;
	mov.u32 	%r1953, %r72;

$L__BB0_15:
	setp.lt.s32 	%p31, %r1953, 4;
	or.pred  	%p32, %p1, %p31;
	setp.ge.s32 	%p33, %r1953, %r74;
	or.pred  	%p2, %p33, %p32;
	setp.gt.s32 	%p34, %r783, %r1953;
	selp.b32 	%r851, %r1953, %r78, %p34;
	setp.gt.s32 	%p35, %r782, %r1953;
	selp.b32 	%r852, %r782, %r851, %p35;
	mul.lo.s32 	%r95, %r1953, %r771;
	add.s32 	%r96, %r95, %r1952;
	shl.b32 	%r97, %r96, 6;
	sub.s32 	%r98, %r852, %r782;
	shl.b32 	%r853, %r96, 5;
	add.s32 	%r854, %r853, %r39;
	shl.b32 	%r855, %r854, 2;
	add.s32 	%r856, %r81, %r855;
	mul.wide.s32 	%rd57, %r856, 4;
	add.s64 	%rd11, %rd10, %rd57;
	@%p2 bra 	$L__BB0_19;
	bra.uni 	$L__BB0_16;

$L__BB0_19:
	mov.f32 	%f43, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f43;
  cvt.rn.f16.f32 high, %f43;
  mov.b32 %r874, {low,high};}

	// end inline asm
	st.global.u32 	[%rd11], %r874;
	bra.uni 	$L__BB0_20;

$L__BB0_16:
	@%p25 bra 	$L__BB0_18;
	bra.uni 	$L__BB0_17;

$L__BB0_18:
	rem.s32 	%r859, %r75, %r76;
	add.s32 	%r860, %r859, %r76;
	rem.s32 	%r861, %r860, %r76;
	rem.s32 	%r862, %r80, %r76;
	add.s32 	%r863, %r862, %r76;
	rem.s32 	%r864, %r863, %r76;
	add.s32 	%r865, %r98, %r91;
	mul.lo.s32 	%r866, %r865, %r51;
	sub.s32 	%r867, %r866, %r784;
	setp.gt.s32 	%p37, %r785, %r861;
	selp.b32 	%r868, %r861, %r79, %p37;
	setp.gt.s32 	%p38, %r784, %r861;
	selp.b32 	%r869, %r784, %r868, %p38;
	add.s32 	%r870, %r867, %r869;
	mul.wide.s32 	%rd58, %r870, 4;
	add.s64 	%rd59, %rd9, %rd58;
	ld.global.f32 	%f40, [%rd59];
	setp.gt.s32 	%p39, %r785, %r864;
	selp.b32 	%r871, %r864, %r79, %p39;
	setp.gt.s32 	%p40, %r784, %r864;
	selp.b32 	%r872, %r784, %r871, %p40;
	add.s32 	%r873, %r867, %r872;
	mul.wide.s32 	%rd60, %r873, 4;
	add.s64 	%rd61, %rd9, %rd60;
	ld.global.f32 	%f41, [%rd61];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f40;
  cvt.rn.f16.f32 high, %f41;
  mov.b32 %r858, {low,high};}

	// end inline asm
	st.global.u32 	[%rd11], %r858;
	bra.uni 	$L__BB0_20;

$L__BB0_17:
	mov.f32 	%f39, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f39;
  cvt.rn.f16.f32 high, %f39;
  mov.b32 %r857, {low,high};}

	// end inline asm
	st.global.u32 	[%rd11], %r857;

$L__BB0_20:
	add.s32 	%r875, %r83, %r97;
	mul.wide.s32 	%rd62, %r875, 4;
	add.s64 	%rd12, %rd10, %rd62;
	@%p2 bra 	$L__BB0_24;
	bra.uni 	$L__BB0_21;

$L__BB0_24:
	mov.f32 	%f49, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f49;
  cvt.rn.f16.f32 high, %f49;
  mov.b32 %r893, {low,high};}

	// end inline asm
	st.global.u32 	[%rd12], %r893;
	bra.uni 	$L__BB0_25;

$L__BB0_21:
	@%p25 bra 	$L__BB0_23;
	bra.uni 	$L__BB0_22;

$L__BB0_23:
	rem.s32 	%r878, %r75, %r76;
	add.s32 	%r879, %r878, %r76;
	rem.s32 	%r880, %r879, %r76;
	rem.s32 	%r881, %r80, %r76;
	add.s32 	%r882, %r881, %r76;
	rem.s32 	%r883, %r882, %r76;
	add.s32 	%r884, %r98, %r92;
	mul.lo.s32 	%r885, %r884, %r51;
	sub.s32 	%r886, %r885, %r784;
	setp.gt.s32 	%p42, %r785, %r880;
	selp.b32 	%r887, %r880, %r79, %p42;
	setp.gt.s32 	%p43, %r784, %r880;
	selp.b32 	%r888, %r784, %r887, %p43;
	add.s32 	%r889, %r886, %r888;
	mul.wide.s32 	%rd63, %r889, 4;
	add.s64 	%rd64, %rd9, %rd63;
	ld.global.f32 	%f46, [%rd64];
	setp.gt.s32 	%p44, %r785, %r883;
	selp.b32 	%r890, %r883, %r79, %p44;
	setp.gt.s32 	%p45, %r784, %r883;
	selp.b32 	%r891, %r784, %r890, %p45;
	add.s32 	%r892, %r886, %r891;
	mul.wide.s32 	%rd65, %r892, 4;
	add.s64 	%rd66, %rd9, %rd65;
	ld.global.f32 	%f47, [%rd66];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f46;
  cvt.rn.f16.f32 high, %f47;
  mov.b32 %r877, {low,high};}

	// end inline asm
	st.global.u32 	[%rd12], %r877;
	bra.uni 	$L__BB0_25;

$L__BB0_22:
	mov.f32 	%f45, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f45;
  cvt.rn.f16.f32 high, %f45;
  mov.b32 %r876, {low,high};}

	// end inline asm
	st.global.u32 	[%rd12], %r876;

$L__BB0_25:
	@%p2 bra 	$L__BB0_30;
	bra.uni 	$L__BB0_26;

$L__BB0_30:
	mov.f32 	%f55, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f55;
  cvt.rn.f16.f32 high, %f55;
  mov.b32 %r918, {low,high};}

	// end inline asm
	rem.s32 	%r919, %r90, %r771;
	add.s32 	%r920, %r919, %r95;
	shl.b32 	%r921, %r920, 5;
	add.s32 	%r922, %r921, %r39;
	shl.b32 	%r923, %r922, 2;
	add.s32 	%r924, %r81, %r923;
	add.s32 	%r925, %r924, 2;
	mul.wide.s32 	%rd73, %r925, 4;
	add.s64 	%rd74, %rd10, %rd73;
	st.global.u32 	[%rd74], %r918;
	bra.uni 	$L__BB0_31;

$L__BB0_26:
	@%p25 bra 	$L__BB0_28;
	bra.uni 	$L__BB0_27;

$L__BB0_28:
	rem.s32 	%r896, %r75, %r76;
	add.s32 	%r897, %r896, %r76;
	rem.s32 	%r898, %r897, %r76;
	rem.s32 	%r899, %r80, %r76;
	add.s32 	%r900, %r899, %r76;
	rem.s32 	%r901, %r900, %r76;
	add.s32 	%r902, %r98, %r93;
	mul.lo.s32 	%r903, %r902, %r51;
	sub.s32 	%r904, %r903, %r784;
	setp.gt.s32 	%p47, %r785, %r898;
	selp.b32 	%r905, %r898, %r79, %p47;
	setp.gt.s32 	%p48, %r784, %r898;
	selp.b32 	%r906, %r784, %r905, %p48;
	add.s32 	%r907, %r904, %r906;
	mul.wide.s32 	%rd67, %r907, 4;
	add.s64 	%rd68, %rd9, %rd67;
	ld.global.f32 	%f52, [%rd68];
	setp.gt.s32 	%p49, %r785, %r901;
	selp.b32 	%r908, %r901, %r79, %p49;
	setp.gt.s32 	%p50, %r784, %r901;
	selp.b32 	%r909, %r784, %r908, %p50;
	add.s32 	%r910, %r904, %r909;
	mul.wide.s32 	%rd69, %r910, 4;
	add.s64 	%rd70, %rd9, %rd69;
	ld.global.f32 	%f53, [%rd70];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f52;
  cvt.rn.f16.f32 high, %f53;
  mov.b32 %r1954, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_29;

$L__BB0_27:
	mov.f32 	%f51, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f51;
  cvt.rn.f16.f32 high, %f51;
  mov.b32 %r1954, {low,high};}

	// end inline asm

$L__BB0_29:
	rem.s32 	%r911, %r90, %r771;
	add.s32 	%r912, %r911, %r95;
	shl.b32 	%r913, %r912, 5;
	add.s32 	%r914, %r913, %r39;
	shl.b32 	%r915, %r914, 2;
	add.s32 	%r916, %r81, %r915;
	add.s32 	%r917, %r916, 2;
	mul.wide.s32 	%rd71, %r917, 4;
	add.s64 	%rd72, %rd10, %rd71;
	st.global.u32 	[%rd72], %r1954;

$L__BB0_31:
	add.s32 	%r927, %r853, %r88;
	shl.b32 	%r928, %r927, 2;
	add.s32 	%r929, %r87, %r928;
	mul.wide.s32 	%rd75, %r929, 4;
	add.s64 	%rd13, %rd10, %rd75;
	@%p2 bra 	$L__BB0_35;
	bra.uni 	$L__BB0_32;

$L__BB0_35:
	mov.f32 	%f61, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f61;
  cvt.rn.f16.f32 high, %f61;
  mov.b32 %r947, {low,high};}

	// end inline asm
	st.global.u32 	[%rd13], %r947;
	bra.uni 	$L__BB0_36;

$L__BB0_32:
	@%p25 bra 	$L__BB0_34;
	bra.uni 	$L__BB0_33;

$L__BB0_34:
	rem.s32 	%r932, %r85, %r76;
	add.s32 	%r933, %r932, %r76;
	rem.s32 	%r934, %r933, %r76;
	rem.s32 	%r935, %r86, %r76;
	add.s32 	%r936, %r935, %r76;
	rem.s32 	%r937, %r936, %r76;
	add.s32 	%r938, %r98, %r91;
	mul.lo.s32 	%r939, %r938, %r51;
	sub.s32 	%r940, %r939, %r784;
	setp.gt.s32 	%p52, %r785, %r934;
	selp.b32 	%r941, %r934, %r79, %p52;
	setp.gt.s32 	%p53, %r784, %r934;
	selp.b32 	%r942, %r784, %r941, %p53;
	add.s32 	%r943, %r940, %r942;
	mul.wide.s32 	%rd76, %r943, 4;
	add.s64 	%rd77, %rd9, %rd76;
	ld.global.f32 	%f58, [%rd77];
	setp.gt.s32 	%p54, %r785, %r937;
	selp.b32 	%r944, %r937, %r79, %p54;
	setp.gt.s32 	%p55, %r784, %r937;
	selp.b32 	%r945, %r784, %r944, %p55;
	add.s32 	%r946, %r940, %r945;
	mul.wide.s32 	%rd78, %r946, 4;
	add.s64 	%rd79, %rd9, %rd78;
	ld.global.f32 	%f59, [%rd79];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f58;
  cvt.rn.f16.f32 high, %f59;
  mov.b32 %r931, {low,high};}

	// end inline asm
	st.global.u32 	[%rd13], %r931;
	bra.uni 	$L__BB0_36;

$L__BB0_33:
	mov.f32 	%f57, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f57;
  cvt.rn.f16.f32 high, %f57;
  mov.b32 %r930, {low,high};}

	// end inline asm
	st.global.u32 	[%rd13], %r930;

$L__BB0_36:
	add.s32 	%r948, %r84, %r97;
	mul.wide.s32 	%rd80, %r948, 4;
	add.s64 	%rd14, %rd10, %rd80;
	@%p2 bra 	$L__BB0_40;
	bra.uni 	$L__BB0_37;

$L__BB0_40:
	mov.f32 	%f67, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f67;
  cvt.rn.f16.f32 high, %f67;
  mov.b32 %r966, {low,high};}

	// end inline asm
	st.global.u32 	[%rd14], %r966;
	bra.uni 	$L__BB0_41;

$L__BB0_37:
	@%p25 bra 	$L__BB0_39;
	bra.uni 	$L__BB0_38;

$L__BB0_39:
	rem.s32 	%r951, %r85, %r76;
	add.s32 	%r952, %r951, %r76;
	rem.s32 	%r953, %r952, %r76;
	rem.s32 	%r954, %r86, %r76;
	add.s32 	%r955, %r954, %r76;
	rem.s32 	%r956, %r955, %r76;
	add.s32 	%r957, %r98, %r92;
	mul.lo.s32 	%r958, %r957, %r51;
	sub.s32 	%r959, %r958, %r784;
	setp.gt.s32 	%p57, %r785, %r953;
	selp.b32 	%r960, %r953, %r79, %p57;
	setp.gt.s32 	%p58, %r784, %r953;
	selp.b32 	%r961, %r784, %r960, %p58;
	add.s32 	%r962, %r959, %r961;
	mul.wide.s32 	%rd81, %r962, 4;
	add.s64 	%rd82, %rd9, %rd81;
	ld.global.f32 	%f64, [%rd82];
	setp.gt.s32 	%p59, %r785, %r956;
	selp.b32 	%r963, %r956, %r79, %p59;
	setp.gt.s32 	%p60, %r784, %r956;
	selp.b32 	%r964, %r784, %r963, %p60;
	add.s32 	%r965, %r959, %r964;
	mul.wide.s32 	%rd83, %r965, 4;
	add.s64 	%rd84, %rd9, %rd83;
	ld.global.f32 	%f65, [%rd84];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f64;
  cvt.rn.f16.f32 high, %f65;
  mov.b32 %r950, {low,high};}

	// end inline asm
	st.global.u32 	[%rd14], %r950;
	bra.uni 	$L__BB0_41;

$L__BB0_38:
	mov.f32 	%f63, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f63;
  cvt.rn.f16.f32 high, %f63;
  mov.b32 %r949, {low,high};}

	// end inline asm
	st.global.u32 	[%rd14], %r949;

$L__BB0_41:
	@%p2 bra 	$L__BB0_46;
	bra.uni 	$L__BB0_42;

$L__BB0_46:
	mov.f32 	%f73, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f73;
  cvt.rn.f16.f32 high, %f73;
  mov.b32 %r991, {low,high};}

	// end inline asm
	rem.s32 	%r992, %r90, %r771;
	add.s32 	%r993, %r992, %r95;
	shl.b32 	%r994, %r993, 5;
	add.s32 	%r995, %r994, %r88;
	shl.b32 	%r996, %r995, 2;
	add.s32 	%r997, %r87, %r996;
	add.s32 	%r998, %r997, 2;
	mul.wide.s32 	%rd91, %r998, 4;
	add.s64 	%rd92, %rd10, %rd91;
	st.global.u32 	[%rd92], %r991;
	bra.uni 	$L__BB0_47;

$L__BB0_42:
	@%p25 bra 	$L__BB0_44;
	bra.uni 	$L__BB0_43;

$L__BB0_44:
	rem.s32 	%r969, %r85, %r76;
	add.s32 	%r970, %r969, %r76;
	rem.s32 	%r971, %r970, %r76;
	rem.s32 	%r972, %r86, %r76;
	add.s32 	%r973, %r972, %r76;
	rem.s32 	%r974, %r973, %r76;
	add.s32 	%r975, %r98, %r93;
	mul.lo.s32 	%r976, %r975, %r51;
	sub.s32 	%r977, %r976, %r784;
	setp.gt.s32 	%p62, %r785, %r971;
	selp.b32 	%r978, %r971, %r79, %p62;
	setp.gt.s32 	%p63, %r784, %r971;
	selp.b32 	%r979, %r784, %r978, %p63;
	add.s32 	%r980, %r977, %r979;
	mul.wide.s32 	%rd85, %r980, 4;
	add.s64 	%rd86, %rd9, %rd85;
	ld.global.f32 	%f70, [%rd86];
	setp.gt.s32 	%p64, %r785, %r974;
	selp.b32 	%r981, %r974, %r79, %p64;
	setp.gt.s32 	%p65, %r784, %r974;
	selp.b32 	%r982, %r784, %r981, %p65;
	add.s32 	%r983, %r977, %r982;
	mul.wide.s32 	%rd87, %r983, 4;
	add.s64 	%rd88, %rd9, %rd87;
	ld.global.f32 	%f71, [%rd88];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f70;
  cvt.rn.f16.f32 high, %f71;
  mov.b32 %r1955, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_45;

$L__BB0_43:
	mov.f32 	%f69, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f69;
  cvt.rn.f16.f32 high, %f69;
  mov.b32 %r1955, {low,high};}

	// end inline asm

$L__BB0_45:
	rem.s32 	%r984, %r90, %r771;
	add.s32 	%r985, %r984, %r95;
	shl.b32 	%r986, %r985, 5;
	add.s32 	%r987, %r986, %r88;
	shl.b32 	%r988, %r987, 2;
	add.s32 	%r989, %r87, %r988;
	add.s32 	%r990, %r989, 2;
	mul.wide.s32 	%rd89, %r990, 4;
	add.s64 	%rd90, %rd10, %rd89;
	st.global.u32 	[%rd90], %r1955;

$L__BB0_47:
	add.s32 	%r1953, %r1953, %r797;
	setp.lt.s32 	%p66, %r1953, %r772;
	@%p66 bra 	$L__BB0_15;

$L__BB0_48:
	add.s32 	%r1952, %r1952, %r792;
	setp.lt.s32 	%p67, %r1952, %r771;
	@%p67 bra 	$L__BB0_13;

$L__BB0_49:
	ld.param.u64 	%rd93, [%rd1+128];
	cvta.to.global.u64 	%rd15, %rd93;
	ld.param.u64 	%rd94, [%rd1+96];
	cvta.to.global.u64 	%rd16, %rd94;
	@%p24 bra 	$L__BB0_133;

	shl.b32 	%r119, %r72, 1;
	mov.u64 	%rd95, _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE;
	mov.u32 	%r1956, %r1989;

$L__BB0_51:
	setp.ge.s32 	%p69, %r119, %r772;
	@%p69 bra 	$L__BB0_132;

	mov.u32 	%r1957, %r119;

$L__BB0_53:
	setp.ne.s32 	%p70, %r39, 0;
	@%p70 bra 	$L__BB0_131;

	shr.u32 	%r1000, %r1957, 31;
	add.s32 	%r1001, %r1957, %r1000;
	shr.s32 	%r1002, %r1001, 1;
	mad.lo.s32 	%r1003, %r1002, %r771, %r1956;
	shl.b32 	%r123, %r1003, 5;
	add.s32 	%r124, %r1957, -2;
	mul.lo.s32 	%r125, %r124, %r771;
	add.s32 	%r1004, %r772, %r124;
	mul.lo.s32 	%r126, %r1004, %r771;
	add.s32 	%r1005, %r1004, %r772;
	mul.lo.s32 	%r127, %r1005, %r771;
	add.s32 	%r128, %r125, %r771;
	add.s32 	%r129, %r1957, -1;
	add.s32 	%r1006, %r772, %r129;
	mul.lo.s32 	%r130, %r1006, %r771;
	add.s32 	%r1007, %r1006, %r772;
	mul.lo.s32 	%r131, %r1007, %r771;
	add.s32 	%r1008, %r772, %r1957;
	mul.lo.s32 	%r132, %r1008, %r771;
	add.s32 	%r1009, %r1008, %r772;
	mul.lo.s32 	%r133, %r1009, %r771;
	mul.lo.s32 	%r134, %r1957, %r771;
	add.s32 	%r135, %r134, %r771;
	add.s32 	%r136, %r1957, 1;
	add.s32 	%r1010, %r772, %r136;
	mul.lo.s32 	%r137, %r1010, %r771;
	add.s32 	%r1011, %r1010, %r772;
	mul.lo.s32 	%r138, %r1011, %r771;
	add.s32 	%r139, %r135, %r771;
	add.s32 	%r140, %r1957, 2;
	add.s32 	%r1012, %r772, %r140;
	mul.lo.s32 	%r141, %r1012, %r771;
	add.s32 	%r1013, %r1012, %r772;
	mul.lo.s32 	%r142, %r1013, %r771;
	mov.u32 	%r1960, 0;
	mov.u64 	%rd545, %rd95;

$L__BB0_55:
	ld.global.nc.u32 	%r1014, [%rd545];
	cvt.rn.f64.s32 	%fd1, %r1014;
	add.f64 	%fd3, %fd1, 0d3FE0000000000000;
	add.s32 	%r144, %r1014, %r1956;
	setp.lt.s32 	%p71, %r144, %r771;
	or.b32  	%r1015, %r124, %r144;
	setp.gt.s32 	%p72, %r1015, -1;
	and.pred  	%p73, %p71, %p72;
	setp.lt.s32 	%p74, %r124, %r772;
	and.pred  	%p3, %p74, %p73;
	cvt.rn.f32.f64 	%f74, %fd3;
	add.f32 	%f75, %f74, 0f3E800000;
	abs.f32 	%f1, %f75;
	add.f32 	%f76, %f1, 0f40200000;
	setp.geu.f32 	%p75, %f76, 0f40000000;
	@%p75 bra 	$L__BB0_60;

	@%p3 bra 	$L__BB0_58;
	bra.uni 	$L__BB0_57;

$L__BB0_58:
	add.s32 	%r1018, %r125, %r144;
	mul.wide.s32 	%rd96, %r1018, 4;
	add.s64 	%rd97, %rd15, %rd96;
	ld.global.f32 	%f79, [%rd97];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f79;
  mov.b32 %r1959, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_59;

$L__BB0_57:
	mov.f32 	%f78, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f78;
  cvt.rn.f16.f32 high, %f78;
  mov.b32 %r1959, {low,high};}

	// end inline asm

$L__BB0_59:
	add.s32 	%r1019, %r1960, %r123;
	mul.wide.s32 	%rd98, %r1019, 4;
	add.s64 	%rd99, %rd16, %rd98;
	st.global.u32 	[%rd99], %r1959;
	add.s32 	%r1960, %r1960, 1;

$L__BB0_60:
	cvt.rn.f32.f64 	%f80, %fd1;
	add.f32 	%f81, %f80, 0f3E800000;
	abs.f32 	%f2, %f81;
	add.f32 	%f3, %f2, 0f40000000;
	setp.geu.f32 	%p76, %f3, 0f40000000;
	@%p76 bra 	$L__BB0_65;

	@%p3 bra 	$L__BB0_63;
	bra.uni 	$L__BB0_62;

$L__BB0_63:
	add.s32 	%r1022, %r126, %r144;
	mul.wide.s32 	%rd100, %r1022, 4;
	add.s64 	%rd101, %rd15, %rd100;
	ld.global.f32 	%f84, [%rd101];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f84;
  mov.b32 %r1961, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_64;

$L__BB0_62:
	mov.f32 	%f83, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f83;
  cvt.rn.f16.f32 high, %f83;
  mov.b32 %r1961, {low,high};}

	// end inline asm

$L__BB0_64:
	add.s32 	%r1023, %r1960, %r123;
	mul.wide.s32 	%rd102, %r1023, 4;
	add.s64 	%rd103, %rd16, %rd102;
	st.global.u32 	[%rd103], %r1961;
	add.s32 	%r1960, %r1960, 1;

$L__BB0_65:
	add.f32 	%f85, %f2, 0f40200000;
	setp.geu.f32 	%p77, %f85, 0f40000000;
	@%p77 bra 	$L__BB0_70;

	@%p3 bra 	$L__BB0_68;
	bra.uni 	$L__BB0_67;

$L__BB0_68:
	add.s32 	%r1026, %r127, %r144;
	mul.wide.s32 	%rd104, %r1026, 4;
	add.s64 	%rd105, %rd15, %rd104;
	ld.global.f32 	%f88, [%rd105];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f88;
  mov.b32 %r1963, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_69;

$L__BB0_67:
	mov.f32 	%f87, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f87;
  cvt.rn.f16.f32 high, %f87;
  mov.b32 %r1963, {low,high};}

	// end inline asm

$L__BB0_69:
	add.s32 	%r1027, %r1960, %r123;
	mul.wide.s32 	%rd106, %r1027, 4;
	add.s64 	%rd107, %rd16, %rd106;
	st.global.u32 	[%rd107], %r1963;
	add.s32 	%r1960, %r1960, 1;

$L__BB0_70:
	or.b32  	%r1028, %r129, %r144;
	setp.gt.s32 	%p78, %r1028, -1;
	and.pred  	%p80, %p71, %p78;
	setp.le.s32 	%p81, %r1957, %r772;
	and.pred  	%p4, %p81, %p80;
	add.f32 	%f4, %f1, 0f3FC00000;
	setp.geu.f32 	%p82, %f4, 0f40000000;
	@%p82 bra 	$L__BB0_75;

	@%p4 bra 	$L__BB0_73;
	bra.uni 	$L__BB0_72;

$L__BB0_73:
	add.s32 	%r1031, %r128, %r144;
	mul.wide.s32 	%rd108, %r1031, 4;
	add.s64 	%rd109, %rd15, %rd108;
	ld.global.f32 	%f91, [%rd109];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f91;
  mov.b32 %r1965, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_74;

$L__BB0_72:
	mov.f32 	%f90, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f90;
  cvt.rn.f16.f32 high, %f90;
  mov.b32 %r1965, {low,high};}

	// end inline asm

$L__BB0_74:
	add.s32 	%r1032, %r1960, %r123;
	mul.wide.s32 	%rd110, %r1032, 4;
	add.s64 	%rd111, %rd16, %rd110;
	st.global.u32 	[%rd111], %r1965;
	add.s32 	%r1960, %r1960, 1;

$L__BB0_75:
	add.f32 	%f5, %f2, 0f3F800000;
	setp.geu.f32 	%p83, %f5, 0f40000000;
	@%p83 bra 	$L__BB0_80;

	@%p4 bra 	$L__BB0_78;
	bra.uni 	$L__BB0_77;

$L__BB0_78:
	add.s32 	%r1035, %r130, %r144;
	mul.wide.s32 	%rd112, %r1035, 4;
	add.s64 	%rd113, %rd15, %rd112;
	ld.global.f32 	%f94, [%rd113];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f94;
  mov.b32 %r1967, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_79;

$L__BB0_77:
	mov.f32 	%f93, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f93;
  cvt.rn.f16.f32 high, %f93;
  mov.b32 %r1967, {low,high};}

	// end inline asm

$L__BB0_79:
	add.s32 	%r1036, %r1960, %r123;
	mul.wide.s32 	%rd114, %r1036, 4;
	add.s64 	%rd115, %rd16, %rd114;
	st.global.u32 	[%rd115], %r1967;
	add.s32 	%r1960, %r1960, 1;

$L__BB0_80:
	add.f32 	%f6, %f2, 0f3FC00000;
	setp.geu.f32 	%p84, %f6, 0f40000000;
	@%p84 bra 	$L__BB0_85;

	@%p4 bra 	$L__BB0_83;
	bra.uni 	$L__BB0_82;

$L__BB0_83:
	add.s32 	%r1039, %r131, %r144;
	mul.wide.s32 	%rd116, %r1039, 4;
	add.s64 	%rd117, %rd15, %rd116;
	ld.global.f32 	%f97, [%rd117];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f97;
  mov.b32 %r1969, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_84;

$L__BB0_82:
	mov.f32 	%f96, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f96;
  cvt.rn.f16.f32 high, %f96;
  mov.b32 %r1969, {low,high};}

	// end inline asm

$L__BB0_84:
	add.s32 	%r1040, %r1960, %r123;
	mul.wide.s32 	%rd118, %r1040, 4;
	add.s64 	%rd119, %rd16, %rd118;
	st.global.u32 	[%rd119], %r1969;
	add.s32 	%r1960, %r1960, 1;

$L__BB0_85:
	or.b32  	%r1041, %r1957, %r144;
	setp.gt.s32 	%p85, %r1041, -1;
	and.pred  	%p87, %p71, %p85;
	setp.lt.s32 	%p88, %r1957, %r772;
	and.pred  	%p5, %p88, %p87;
	add.f32 	%f7, %f1, 0f3F000000;
	setp.geu.f32 	%p89, %f7, 0f40000000;
	@%p89 bra 	$L__BB0_90;

	@%p5 bra 	$L__BB0_88;
	bra.uni 	$L__BB0_87;

$L__BB0_88:
	add.s32 	%r1044, %r134, %r144;
	mul.wide.s32 	%rd120, %r1044, 4;
	add.s64 	%rd121, %rd15, %rd120;
	ld.global.f32 	%f100, [%rd121];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f100;
  mov.b32 %r1971, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_89;

$L__BB0_87:
	mov.f32 	%f99, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f99;
  cvt.rn.f16.f32 high, %f99;
  mov.b32 %r1971, {low,high};}

	// end inline asm

$L__BB0_89:
	add.s32 	%r1045, %r1960, %r123;
	mul.wide.s32 	%rd122, %r1045, 4;
	add.s64 	%rd123, %rd16, %rd122;
	st.global.u32 	[%rd123], %r1971;
	add.s32 	%r1960, %r1960, 1;

$L__BB0_90:
	add.f32 	%f101, %f2, 0f00000000;
	setp.geu.f32 	%p90, %f101, 0f40000000;
	@%p90 bra 	$L__BB0_95;

	@%p5 bra 	$L__BB0_93;
	bra.uni 	$L__BB0_92;

$L__BB0_93:
	add.s32 	%r1048, %r132, %r144;
	mul.wide.s32 	%rd124, %r1048, 4;
	add.s64 	%rd125, %rd15, %rd124;
	ld.global.f32 	%f104, [%rd125];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f104;
  mov.b32 %r1973, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_94;

$L__BB0_92:
	mov.f32 	%f103, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f103;
  cvt.rn.f16.f32 high, %f103;
  mov.b32 %r1973, {low,high};}

	// end inline asm

$L__BB0_94:
	add.s32 	%r1049, %r1960, %r123;
	mul.wide.s32 	%rd126, %r1049, 4;
	add.s64 	%rd127, %rd16, %rd126;
	st.global.u32 	[%rd127], %r1973;
	add.s32 	%r1960, %r1960, 1;

$L__BB0_95:
	add.f32 	%f8, %f2, 0f3F000000;
	setp.geu.f32 	%p91, %f8, 0f40000000;
	@%p91 bra 	$L__BB0_100;

	@%p5 bra 	$L__BB0_98;
	bra.uni 	$L__BB0_97;

$L__BB0_98:
	add.s32 	%r1052, %r133, %r144;
	mul.wide.s32 	%rd128, %r1052, 4;
	add.s64 	%rd129, %rd15, %rd128;
	ld.global.f32 	%f107, [%rd129];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f107;
  mov.b32 %r1975, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_99;

$L__BB0_97:
	mov.f32 	%f106, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f106;
  cvt.rn.f16.f32 high, %f106;
  mov.b32 %r1975, {low,high};}

	// end inline asm

$L__BB0_99:
	add.s32 	%r1053, %r1960, %r123;
	mul.wide.s32 	%rd130, %r1053, 4;
	add.s64 	%rd131, %rd16, %rd130;
	st.global.u32 	[%rd131], %r1975;
	add.s32 	%r1960, %r1960, 1;

$L__BB0_100:
	or.b32  	%r1054, %r136, %r144;
	setp.gt.s32 	%p92, %r1054, -1;
	and.pred  	%p94, %p71, %p92;
	setp.lt.s32 	%p95, %r136, %r772;
	and.pred  	%p6, %p95, %p94;
	@%p89 bra 	$L__BB0_105;

	@%p6 bra 	$L__BB0_103;
	bra.uni 	$L__BB0_102;

$L__BB0_103:
	add.s32 	%r1057, %r135, %r144;
	mul.wide.s32 	%rd132, %r1057, 4;
	add.s64 	%rd133, %rd15, %rd132;
	ld.global.f32 	%f110, [%rd133];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f110;
  mov.b32 %r1977, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_104;

$L__BB0_102:
	mov.f32 	%f109, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f109;
  cvt.rn.f16.f32 high, %f109;
  mov.b32 %r1977, {low,high};}

	// end inline asm

$L__BB0_104:
	add.s32 	%r1058, %r1960, %r123;
	mul.wide.s32 	%rd134, %r1058, 4;
	add.s64 	%rd135, %rd16, %rd134;
	st.global.u32 	[%rd135], %r1977;
	add.s32 	%r1960, %r1960, 1;

$L__BB0_105:
	@%p83 bra 	$L__BB0_110;

	@%p6 bra 	$L__BB0_108;
	bra.uni 	$L__BB0_107;

$L__BB0_108:
	add.s32 	%r1061, %r137, %r144;
	mul.wide.s32 	%rd136, %r1061, 4;
	add.s64 	%rd137, %rd15, %rd136;
	ld.global.f32 	%f113, [%rd137];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f113;
  mov.b32 %r1979, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_109;

$L__BB0_107:
	mov.f32 	%f112, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f112;
  cvt.rn.f16.f32 high, %f112;
  mov.b32 %r1979, {low,high};}

	// end inline asm

$L__BB0_109:
	add.s32 	%r1062, %r1960, %r123;
	mul.wide.s32 	%rd138, %r1062, 4;
	add.s64 	%rd139, %rd16, %rd138;
	st.global.u32 	[%rd139], %r1979;
	add.s32 	%r1960, %r1960, 1;

$L__BB0_110:
	@%p91 bra 	$L__BB0_115;

	@%p6 bra 	$L__BB0_113;
	bra.uni 	$L__BB0_112;

$L__BB0_113:
	add.s32 	%r1065, %r138, %r144;
	mul.wide.s32 	%rd140, %r1065, 4;
	add.s64 	%rd141, %rd15, %rd140;
	ld.global.f32 	%f116, [%rd141];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f116;
  mov.b32 %r1981, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_114;

$L__BB0_112:
	mov.f32 	%f115, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f115;
  cvt.rn.f16.f32 high, %f115;
  mov.b32 %r1981, {low,high};}

	// end inline asm

$L__BB0_114:
	add.s32 	%r1066, %r1960, %r123;
	mul.wide.s32 	%rd142, %r1066, 4;
	add.s64 	%rd143, %rd16, %rd142;
	st.global.u32 	[%rd143], %r1981;
	add.s32 	%r1960, %r1960, 1;

$L__BB0_115:
	or.b32  	%r1067, %r140, %r144;
	setp.gt.s32 	%p99, %r1067, -1;
	and.pred  	%p101, %p71, %p99;
	setp.lt.s32 	%p102, %r140, %r772;
	and.pred  	%p7, %p102, %p101;
	@%p82 bra 	$L__BB0_120;

	@%p7 bra 	$L__BB0_118;
	bra.uni 	$L__BB0_117;

$L__BB0_118:
	add.s32 	%r1070, %r139, %r144;
	mul.wide.s32 	%rd144, %r1070, 4;
	add.s64 	%rd145, %rd15, %rd144;
	ld.global.f32 	%f119, [%rd145];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f119;
  mov.b32 %r1983, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_119;

$L__BB0_117:
	mov.f32 	%f118, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f118;
  cvt.rn.f16.f32 high, %f118;
  mov.b32 %r1983, {low,high};}

	// end inline asm

$L__BB0_119:
	add.s32 	%r1071, %r1960, %r123;
	mul.wide.s32 	%rd146, %r1071, 4;
	add.s64 	%rd147, %rd16, %rd146;
	st.global.u32 	[%rd147], %r1983;
	add.s32 	%r1960, %r1960, 1;

$L__BB0_120:
	@%p76 bra 	$L__BB0_125;

	@%p7 bra 	$L__BB0_123;
	bra.uni 	$L__BB0_122;

$L__BB0_123:
	add.s32 	%r1074, %r141, %r144;
	mul.wide.s32 	%rd148, %r1074, 4;
	add.s64 	%rd149, %rd15, %rd148;
	ld.global.f32 	%f122, [%rd149];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f122;
  mov.b32 %r1985, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_124;

$L__BB0_122:
	mov.f32 	%f121, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f121;
  cvt.rn.f16.f32 high, %f121;
  mov.b32 %r1985, {low,high};}

	// end inline asm

$L__BB0_124:
	add.s32 	%r1075, %r1960, %r123;
	mul.wide.s32 	%rd150, %r1075, 4;
	add.s64 	%rd151, %rd16, %rd150;
	st.global.u32 	[%rd151], %r1985;
	add.s32 	%r1960, %r1960, 1;

$L__BB0_125:
	@%p84 bra 	$L__BB0_130;

	@%p7 bra 	$L__BB0_128;
	bra.uni 	$L__BB0_127;

$L__BB0_128:
	add.s32 	%r1078, %r142, %r144;
	mul.wide.s32 	%rd152, %r1078, 4;
	add.s64 	%rd153, %rd15, %rd152;
	ld.global.f32 	%f125, [%rd153];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f125;
  mov.b32 %r1987, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_129;

$L__BB0_127:
	mov.f32 	%f124, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f124;
  cvt.rn.f16.f32 high, %f124;
  mov.b32 %r1987, {low,high};}

	// end inline asm

$L__BB0_129:
	add.s32 	%r1079, %r1960, %r123;
	mul.wide.s32 	%rd154, %r1079, 4;
	add.s64 	%rd155, %rd16, %rd154;
	st.global.u32 	[%rd155], %r1987;
	add.s32 	%r1960, %r1960, 1;

$L__BB0_130:
	add.s64 	%rd545, %rd545, 4;
	mov.u64 	%rd156, _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE;
	add.s64 	%rd157, %rd156, 24;
	setp.ne.s64 	%p106, %rd545, %rd157;
	@%p106 bra 	$L__BB0_55;

$L__BB0_131:
	add.s32 	%r1957, %r1957, %r41;
	setp.lt.s32 	%p107, %r1957, %r772;
	@%p107 bra 	$L__BB0_53;

$L__BB0_132:
	add.s32 	%r1956, %r1956, %r792;
	setp.lt.s32 	%p108, %r1956, %r771;
	@%p108 bra 	$L__BB0_51;

$L__BB0_133:
	setp.eq.s32 	%p109, %r775, 1;
	ld.param.u64 	%rd158, [%rd1+136];
	cvta.to.global.u64 	%rd19, %rd158;
	ld.param.u64 	%rd159, [%rd1+104];
	cvta.to.global.u64 	%rd20, %rd159;
	@%p109 bra 	$L__BB0_151;
	bra.uni 	$L__BB0_134;

$L__BB0_151:
	@%p24 bra 	$L__BB0_280;

	shl.b32 	%r248, %r72, 1;
	shr.u32 	%r1127, %r776, 31;
	add.s32 	%r1128, %r776, %r1127;
	shr.u32 	%r1129, %r1128, 1;
	and.b32  	%r249, %r1129, 1;
	mov.u64 	%rd178, _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE;
	add.s64 	%rd260, %rd178, 24;

$L__BB0_153:
	setp.ge.s32 	%p119, %r248, %r772;
	@%p119 bra 	$L__BB0_279;

	mov.u32 	%r1995, %r248;

$L__BB0_155:
	setp.ne.s32 	%p120, %r39, 0;
	@%p120 bra 	$L__BB0_278;

	shr.u32 	%r1131, %r1995, 31;
	add.s32 	%r1132, %r1995, %r1131;
	shr.s32 	%r1133, %r1132, 1;
	mad.lo.s32 	%r1134, %r1133, %r771, %r1989;
	shl.b32 	%r253, %r1134, 5;
	add.s32 	%r254, %r1995, -2;
	mul.lo.s32 	%r255, %r254, %r771;
	add.s32 	%r1135, %r772, %r254;
	mul.lo.s32 	%r256, %r1135, %r771;
	add.s32 	%r257, %r255, %r771;
	add.s32 	%r258, %r1995, -1;
	add.s32 	%r1136, %r772, %r258;
	mul.lo.s32 	%r259, %r1136, %r771;
	add.s32 	%r1137, %r772, %r1995;
	mul.lo.s32 	%r260, %r1137, %r771;
	mul.lo.s32 	%r261, %r1995, %r771;
	add.s32 	%r262, %r261, %r771;
	add.s32 	%r263, %r1995, 1;
	add.s32 	%r1138, %r772, %r263;
	mul.lo.s32 	%r264, %r1138, %r771;
	add.s32 	%r265, %r262, %r771;
	add.s32 	%r266, %r1995, 2;
	add.s32 	%r1139, %r772, %r266;
	mul.lo.s32 	%r267, %r1139, %r771;
	mov.u32 	%r1999, 0;
	mov.u64 	%rd546, %rd178;

$L__BB0_157:
	ld.global.nc.u32 	%r1140, [%rd546];
	cvt.rn.f64.s32 	%fd2, %r1140;
	add.f64 	%fd4, %fd2, 0d3FE0000000000000;
	add.s32 	%r269, %r1140, %r1989;
	setp.lt.s32 	%p121, %r269, %r771;
	or.b32  	%r1141, %r254, %r269;
	setp.gt.s32 	%p122, %r1141, -1;
	and.pred  	%p123, %p121, %p122;
	setp.lt.s32 	%p124, %r254, %r772;
	and.pred  	%p8, %p124, %p123;
	cvt.rn.f32.f64 	%f142, %fd4;
	add.f32 	%f143, %f142, 0f3E800000;
	abs.f32 	%f9, %f143;
	add.f32 	%f144, %f9, 0f40200000;
	setp.geu.f32 	%p125, %f144, 0f40000000;
	@%p125 bra 	$L__BB0_169;

	@%p8 bra 	$L__BB0_160;
	bra.uni 	$L__BB0_159;

$L__BB0_160:
	setp.eq.s32 	%p126, %r249, 0;
	add.s32 	%r1143, %r255, %r269;
	shl.b32 	%r1144, %r1143, 1;
	mul.wide.s32 	%rd179, %r1144, 4;
	add.s64 	%rd180, %rd19, %rd179;
	ld.global.f32 	%f10, [%rd180];
	@%p126 bra 	$L__BB0_162;
	bra.uni 	$L__BB0_161;

$L__BB0_162:
	mov.f32 	%f150, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f10;
  cvt.rn.f16.f32 high, %f150;
  mov.b32 %r1997, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_163;

$L__BB0_159:
	mov.f32 	%f146, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f146;
  cvt.rn.f16.f32 high, %f146;
  mov.b32 %r1997, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_163;

$L__BB0_161:
	mov.f32 	%f147, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f147;
  cvt.rn.f16.f32 high, %f10;
  mov.b32 %r1997, {low,high};}

	// end inline asm

$L__BB0_163:
	add.s32 	%r274, %r1999, %r253;
	mul.wide.s32 	%rd181, %r274, 4;
	add.s64 	%rd182, %rd20, %rd181;
	st.global.u32 	[%rd182], %r1997;
	@%p8 bra 	$L__BB0_165;
	bra.uni 	$L__BB0_164;

$L__BB0_165:
	setp.eq.s32 	%p127, %r249, 0;
	add.s32 	%r1148, %r256, %r269;
	shl.b32 	%r1149, %r1148, 1;
	mul.wide.s32 	%rd183, %r1149, 4;
	add.s64 	%rd184, %rd19, %rd183;
	ld.global.f32 	%f11, [%rd184];
	@%p127 bra 	$L__BB0_167;
	bra.uni 	$L__BB0_166;

$L__BB0_167:
	mov.f32 	%f156, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f11;
  cvt.rn.f16.f32 high, %f156;
  mov.b32 %r1998, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_168;

$L__BB0_164:
	mov.f32 	%f152, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f152;
  cvt.rn.f16.f32 high, %f152;
  mov.b32 %r1998, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_168;

$L__BB0_166:
	mov.f32 	%f153, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f153;
  cvt.rn.f16.f32 high, %f11;
  mov.b32 %r1998, {low,high};}

	// end inline asm

$L__BB0_168:
	add.s32 	%r1152, %r274, 1;
	mul.wide.s32 	%rd185, %r1152, 4;
	add.s64 	%rd186, %rd20, %rd185;
	st.global.u32 	[%rd186], %r1998;
	add.s32 	%r1999, %r1999, 2;

$L__BB0_169:
	cvt.rn.f32.f64 	%f157, %fd2;
	add.f32 	%f158, %f157, 0f3E800000;
	abs.f32 	%f12, %f158;
	add.f32 	%f13, %f12, 0f40000000;
	setp.geu.f32 	%p128, %f13, 0f40000000;
	@%p128 bra 	$L__BB0_181;

	@%p8 bra 	$L__BB0_172;
	bra.uni 	$L__BB0_171;

$L__BB0_172:
	setp.eq.s32 	%p129, %r249, 0;
	add.s32 	%r1154, %r255, %r269;
	shl.b32 	%r1155, %r1154, 1;
	or.b32  	%r1156, %r1155, 1;
	mul.wide.s32 	%rd187, %r1156, 4;
	add.s64 	%rd188, %rd19, %rd187;
	ld.global.f32 	%f14, [%rd188];
	@%p129 bra 	$L__BB0_174;
	bra.uni 	$L__BB0_173;

$L__BB0_174:
	mov.f32 	%f164, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f14;
  cvt.rn.f16.f32 high, %f164;
  mov.b32 %r2000, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_175;

$L__BB0_171:
	mov.f32 	%f160, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f160;
  cvt.rn.f16.f32 high, %f160;
  mov.b32 %r2000, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_175;

$L__BB0_173:
	mov.f32 	%f161, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f161;
  cvt.rn.f16.f32 high, %f14;
  mov.b32 %r2000, {low,high};}

	// end inline asm

$L__BB0_175:
	add.s32 	%r285, %r1999, %r253;
	mul.wide.s32 	%rd189, %r285, 4;
	add.s64 	%rd190, %rd20, %rd189;
	st.global.u32 	[%rd190], %r2000;
	@%p8 bra 	$L__BB0_177;
	bra.uni 	$L__BB0_176;

$L__BB0_177:
	setp.eq.s32 	%p130, %r249, 0;
	add.s32 	%r1160, %r256, %r269;
	shl.b32 	%r1161, %r1160, 1;
	or.b32  	%r1162, %r1161, 1;
	mul.wide.s32 	%rd191, %r1162, 4;
	add.s64 	%rd192, %rd19, %rd191;
	ld.global.f32 	%f15, [%rd192];
	@%p130 bra 	$L__BB0_179;
	bra.uni 	$L__BB0_178;

$L__BB0_179:
	mov.f32 	%f170, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f15;
  cvt.rn.f16.f32 high, %f170;
  mov.b32 %r2001, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_180;

$L__BB0_176:
	mov.f32 	%f166, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f166;
  cvt.rn.f16.f32 high, %f166;
  mov.b32 %r2001, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_180;

$L__BB0_178:
	mov.f32 	%f167, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f167;
  cvt.rn.f16.f32 high, %f15;
  mov.b32 %r2001, {low,high};}

	// end inline asm

$L__BB0_180:
	add.s32 	%r1165, %r285, 1;
	mul.wide.s32 	%rd193, %r1165, 4;
	add.s64 	%rd194, %rd20, %rd193;
	st.global.u32 	[%rd194], %r2001;
	add.s32 	%r1999, %r1999, 2;

$L__BB0_181:
	or.b32  	%r1166, %r258, %r269;
	setp.gt.s32 	%p131, %r1166, -1;
	and.pred  	%p133, %p121, %p131;
	setp.le.s32 	%p134, %r1995, %r772;
	and.pred  	%p9, %p134, %p133;
	add.f32 	%f16, %f9, 0f3FC00000;
	setp.geu.f32 	%p135, %f16, 0f40000000;
	@%p135 bra 	$L__BB0_193;

	@%p9 bra 	$L__BB0_184;
	bra.uni 	$L__BB0_183;

$L__BB0_184:
	setp.eq.s32 	%p136, %r249, 0;
	add.s32 	%r1168, %r257, %r269;
	shl.b32 	%r1169, %r1168, 1;
	mul.wide.s32 	%rd195, %r1169, 4;
	add.s64 	%rd196, %rd19, %rd195;
	ld.global.f32 	%f17, [%rd196];
	@%p136 bra 	$L__BB0_186;
	bra.uni 	$L__BB0_185;

$L__BB0_186:
	mov.f32 	%f176, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f17;
  cvt.rn.f16.f32 high, %f176;
  mov.b32 %r2003, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_187;

$L__BB0_183:
	mov.f32 	%f172, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f172;
  cvt.rn.f16.f32 high, %f172;
  mov.b32 %r2003, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_187;

$L__BB0_185:
	mov.f32 	%f173, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f173;
  cvt.rn.f16.f32 high, %f17;
  mov.b32 %r2003, {low,high};}

	// end inline asm

$L__BB0_187:
	add.s32 	%r296, %r1999, %r253;
	mul.wide.s32 	%rd197, %r296, 4;
	add.s64 	%rd198, %rd20, %rd197;
	st.global.u32 	[%rd198], %r2003;
	@%p9 bra 	$L__BB0_189;
	bra.uni 	$L__BB0_188;

$L__BB0_189:
	setp.eq.s32 	%p137, %r249, 0;
	add.s32 	%r1173, %r259, %r269;
	shl.b32 	%r1174, %r1173, 1;
	mul.wide.s32 	%rd199, %r1174, 4;
	add.s64 	%rd200, %rd19, %rd199;
	ld.global.f32 	%f18, [%rd200];
	@%p137 bra 	$L__BB0_191;
	bra.uni 	$L__BB0_190;

$L__BB0_191:
	mov.f32 	%f182, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f18;
  cvt.rn.f16.f32 high, %f182;
  mov.b32 %r2004, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_192;

$L__BB0_188:
	mov.f32 	%f178, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f178;
  cvt.rn.f16.f32 high, %f178;
  mov.b32 %r2004, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_192;

$L__BB0_190:
	mov.f32 	%f179, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f179;
  cvt.rn.f16.f32 high, %f18;
  mov.b32 %r2004, {low,high};}

	// end inline asm

$L__BB0_192:
	add.s32 	%r1177, %r296, 1;
	mul.wide.s32 	%rd201, %r1177, 4;
	add.s64 	%rd202, %rd20, %rd201;
	st.global.u32 	[%rd202], %r2004;
	add.s32 	%r1999, %r1999, 2;

$L__BB0_193:
	add.f32 	%f19, %f12, 0f3F800000;
	setp.geu.f32 	%p138, %f19, 0f40000000;
	@%p138 bra 	$L__BB0_205;

	@%p9 bra 	$L__BB0_196;
	bra.uni 	$L__BB0_195;

$L__BB0_196:
	setp.eq.s32 	%p139, %r249, 0;
	add.s32 	%r1179, %r257, %r269;
	shl.b32 	%r1180, %r1179, 1;
	or.b32  	%r1181, %r1180, 1;
	mul.wide.s32 	%rd203, %r1181, 4;
	add.s64 	%rd204, %rd19, %rd203;
	ld.global.f32 	%f20, [%rd204];
	@%p139 bra 	$L__BB0_198;
	bra.uni 	$L__BB0_197;

$L__BB0_198:
	mov.f32 	%f188, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f20;
  cvt.rn.f16.f32 high, %f188;
  mov.b32 %r2006, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_199;

$L__BB0_195:
	mov.f32 	%f184, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f184;
  cvt.rn.f16.f32 high, %f184;
  mov.b32 %r2006, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_199;

$L__BB0_197:
	mov.f32 	%f185, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f185;
  cvt.rn.f16.f32 high, %f20;
  mov.b32 %r2006, {low,high};}

	// end inline asm

$L__BB0_199:
	add.s32 	%r307, %r1999, %r253;
	mul.wide.s32 	%rd205, %r307, 4;
	add.s64 	%rd206, %rd20, %rd205;
	st.global.u32 	[%rd206], %r2006;
	@%p9 bra 	$L__BB0_201;
	bra.uni 	$L__BB0_200;

$L__BB0_201:
	setp.eq.s32 	%p140, %r249, 0;
	add.s32 	%r1185, %r259, %r269;
	shl.b32 	%r1186, %r1185, 1;
	or.b32  	%r1187, %r1186, 1;
	mul.wide.s32 	%rd207, %r1187, 4;
	add.s64 	%rd208, %rd19, %rd207;
	ld.global.f32 	%f21, [%rd208];
	@%p140 bra 	$L__BB0_203;
	bra.uni 	$L__BB0_202;

$L__BB0_203:
	mov.f32 	%f194, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f21;
  cvt.rn.f16.f32 high, %f194;
  mov.b32 %r2007, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_204;

$L__BB0_200:
	mov.f32 	%f190, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f190;
  cvt.rn.f16.f32 high, %f190;
  mov.b32 %r2007, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_204;

$L__BB0_202:
	mov.f32 	%f191, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f191;
  cvt.rn.f16.f32 high, %f21;
  mov.b32 %r2007, {low,high};}

	// end inline asm

$L__BB0_204:
	add.s32 	%r1190, %r307, 1;
	mul.wide.s32 	%rd209, %r1190, 4;
	add.s64 	%rd210, %rd20, %rd209;
	st.global.u32 	[%rd210], %r2007;
	add.s32 	%r1999, %r1999, 2;

$L__BB0_205:
	or.b32  	%r1191, %r1995, %r269;
	setp.gt.s32 	%p141, %r1191, -1;
	and.pred  	%p143, %p121, %p141;
	setp.lt.s32 	%p144, %r1995, %r772;
	and.pred  	%p10, %p144, %p143;
	add.f32 	%f22, %f9, 0f3F000000;
	setp.geu.f32 	%p145, %f22, 0f40000000;
	@%p145 bra 	$L__BB0_217;

	@%p10 bra 	$L__BB0_208;
	bra.uni 	$L__BB0_207;

$L__BB0_208:
	setp.eq.s32 	%p146, %r249, 0;
	add.s32 	%r1193, %r261, %r269;
	shl.b32 	%r1194, %r1193, 1;
	mul.wide.s32 	%rd211, %r1194, 4;
	add.s64 	%rd212, %rd19, %rd211;
	ld.global.f32 	%f23, [%rd212];
	@%p146 bra 	$L__BB0_210;
	bra.uni 	$L__BB0_209;

$L__BB0_210:
	mov.f32 	%f200, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f23;
  cvt.rn.f16.f32 high, %f200;
  mov.b32 %r2009, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_211;

$L__BB0_207:
	mov.f32 	%f196, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f196;
  cvt.rn.f16.f32 high, %f196;
  mov.b32 %r2009, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_211;

$L__BB0_209:
	mov.f32 	%f197, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f197;
  cvt.rn.f16.f32 high, %f23;
  mov.b32 %r2009, {low,high};}

	// end inline asm

$L__BB0_211:
	add.s32 	%r318, %r1999, %r253;
	mul.wide.s32 	%rd213, %r318, 4;
	add.s64 	%rd214, %rd20, %rd213;
	st.global.u32 	[%rd214], %r2009;
	@%p10 bra 	$L__BB0_213;
	bra.uni 	$L__BB0_212;

$L__BB0_213:
	setp.eq.s32 	%p147, %r249, 0;
	add.s32 	%r1198, %r260, %r269;
	shl.b32 	%r1199, %r1198, 1;
	mul.wide.s32 	%rd215, %r1199, 4;
	add.s64 	%rd216, %rd19, %rd215;
	ld.global.f32 	%f24, [%rd216];
	@%p147 bra 	$L__BB0_215;
	bra.uni 	$L__BB0_214;

$L__BB0_215:
	mov.f32 	%f206, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f24;
  cvt.rn.f16.f32 high, %f206;
  mov.b32 %r2010, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_216;

$L__BB0_212:
	mov.f32 	%f202, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f202;
  cvt.rn.f16.f32 high, %f202;
  mov.b32 %r2010, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_216;

$L__BB0_214:
	mov.f32 	%f203, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f203;
  cvt.rn.f16.f32 high, %f24;
  mov.b32 %r2010, {low,high};}

	// end inline asm

$L__BB0_216:
	add.s32 	%r1202, %r318, 1;
	mul.wide.s32 	%rd217, %r1202, 4;
	add.s64 	%rd218, %rd20, %rd217;
	st.global.u32 	[%rd218], %r2010;
	add.s32 	%r1999, %r1999, 2;

$L__BB0_217:
	add.f32 	%f207, %f12, 0f00000000;
	setp.geu.f32 	%p148, %f207, 0f40000000;
	@%p148 bra 	$L__BB0_229;

	@%p10 bra 	$L__BB0_220;
	bra.uni 	$L__BB0_219;

$L__BB0_220:
	setp.eq.s32 	%p149, %r249, 0;
	add.s32 	%r1204, %r261, %r269;
	shl.b32 	%r1205, %r1204, 1;
	or.b32  	%r1206, %r1205, 1;
	mul.wide.s32 	%rd219, %r1206, 4;
	add.s64 	%rd220, %rd19, %rd219;
	ld.global.f32 	%f25, [%rd220];
	@%p149 bra 	$L__BB0_222;
	bra.uni 	$L__BB0_221;

$L__BB0_222:
	mov.f32 	%f213, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f25;
  cvt.rn.f16.f32 high, %f213;
  mov.b32 %r2012, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_223;

$L__BB0_219:
	mov.f32 	%f209, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f209;
  cvt.rn.f16.f32 high, %f209;
  mov.b32 %r2012, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_223;

$L__BB0_221:
	mov.f32 	%f210, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f210;
  cvt.rn.f16.f32 high, %f25;
  mov.b32 %r2012, {low,high};}

	// end inline asm

$L__BB0_223:
	add.s32 	%r329, %r1999, %r253;
	mul.wide.s32 	%rd221, %r329, 4;
	add.s64 	%rd222, %rd20, %rd221;
	st.global.u32 	[%rd222], %r2012;
	@%p10 bra 	$L__BB0_225;
	bra.uni 	$L__BB0_224;

$L__BB0_225:
	setp.eq.s32 	%p150, %r249, 0;
	add.s32 	%r1210, %r260, %r269;
	shl.b32 	%r1211, %r1210, 1;
	or.b32  	%r1212, %r1211, 1;
	mul.wide.s32 	%rd223, %r1212, 4;
	add.s64 	%rd224, %rd19, %rd223;
	ld.global.f32 	%f26, [%rd224];
	@%p150 bra 	$L__BB0_227;
	bra.uni 	$L__BB0_226;

$L__BB0_227:
	mov.f32 	%f219, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f26;
  cvt.rn.f16.f32 high, %f219;
  mov.b32 %r2013, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_228;

$L__BB0_224:
	mov.f32 	%f215, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f215;
  cvt.rn.f16.f32 high, %f215;
  mov.b32 %r2013, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_228;

$L__BB0_226:
	mov.f32 	%f216, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f216;
  cvt.rn.f16.f32 high, %f26;
  mov.b32 %r2013, {low,high};}

	// end inline asm

$L__BB0_228:
	add.s32 	%r1215, %r329, 1;
	mul.wide.s32 	%rd225, %r1215, 4;
	add.s64 	%rd226, %rd20, %rd225;
	st.global.u32 	[%rd226], %r2013;
	add.s32 	%r1999, %r1999, 2;

$L__BB0_229:
	or.b32  	%r1216, %r263, %r269;
	setp.gt.s32 	%p151, %r1216, -1;
	and.pred  	%p153, %p121, %p151;
	setp.lt.s32 	%p154, %r263, %r772;
	and.pred  	%p11, %p154, %p153;
	@%p145 bra 	$L__BB0_241;

	@%p11 bra 	$L__BB0_232;
	bra.uni 	$L__BB0_231;

$L__BB0_232:
	setp.eq.s32 	%p156, %r249, 0;
	add.s32 	%r1218, %r262, %r269;
	shl.b32 	%r1219, %r1218, 1;
	mul.wide.s32 	%rd227, %r1219, 4;
	add.s64 	%rd228, %rd19, %rd227;
	ld.global.f32 	%f27, [%rd228];
	@%p156 bra 	$L__BB0_234;
	bra.uni 	$L__BB0_233;

$L__BB0_234:
	mov.f32 	%f225, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f27;
  cvt.rn.f16.f32 high, %f225;
  mov.b32 %r2015, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_235;

$L__BB0_231:
	mov.f32 	%f221, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f221;
  cvt.rn.f16.f32 high, %f221;
  mov.b32 %r2015, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_235;

$L__BB0_233:
	mov.f32 	%f222, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f222;
  cvt.rn.f16.f32 high, %f27;
  mov.b32 %r2015, {low,high};}

	// end inline asm

$L__BB0_235:
	add.s32 	%r340, %r1999, %r253;
	mul.wide.s32 	%rd229, %r340, 4;
	add.s64 	%rd230, %rd20, %rd229;
	st.global.u32 	[%rd230], %r2015;
	@%p11 bra 	$L__BB0_237;
	bra.uni 	$L__BB0_236;

$L__BB0_237:
	setp.eq.s32 	%p157, %r249, 0;
	add.s32 	%r1223, %r264, %r269;
	shl.b32 	%r1224, %r1223, 1;
	mul.wide.s32 	%rd231, %r1224, 4;
	add.s64 	%rd232, %rd19, %rd231;
	ld.global.f32 	%f28, [%rd232];
	@%p157 bra 	$L__BB0_239;
	bra.uni 	$L__BB0_238;

$L__BB0_239:
	mov.f32 	%f231, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f28;
  cvt.rn.f16.f32 high, %f231;
  mov.b32 %r2016, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_240;

$L__BB0_236:
	mov.f32 	%f227, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f227;
  cvt.rn.f16.f32 high, %f227;
  mov.b32 %r2016, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_240;

$L__BB0_238:
	mov.f32 	%f228, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f228;
  cvt.rn.f16.f32 high, %f28;
  mov.b32 %r2016, {low,high};}

	// end inline asm

$L__BB0_240:
	add.s32 	%r1227, %r340, 1;
	mul.wide.s32 	%rd233, %r1227, 4;
	add.s64 	%rd234, %rd20, %rd233;
	st.global.u32 	[%rd234], %r2016;
	add.s32 	%r1999, %r1999, 2;

$L__BB0_241:
	@%p138 bra 	$L__BB0_253;

	@%p11 bra 	$L__BB0_244;
	bra.uni 	$L__BB0_243;

$L__BB0_244:
	setp.eq.s32 	%p159, %r249, 0;
	add.s32 	%r1229, %r262, %r269;
	shl.b32 	%r1230, %r1229, 1;
	or.b32  	%r1231, %r1230, 1;
	mul.wide.s32 	%rd235, %r1231, 4;
	add.s64 	%rd236, %rd19, %rd235;
	ld.global.f32 	%f29, [%rd236];
	@%p159 bra 	$L__BB0_246;
	bra.uni 	$L__BB0_245;

$L__BB0_246:
	mov.f32 	%f237, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f29;
  cvt.rn.f16.f32 high, %f237;
  mov.b32 %r2018, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_247;

$L__BB0_243:
	mov.f32 	%f233, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f233;
  cvt.rn.f16.f32 high, %f233;
  mov.b32 %r2018, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_247;

$L__BB0_245:
	mov.f32 	%f234, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f234;
  cvt.rn.f16.f32 high, %f29;
  mov.b32 %r2018, {low,high};}

	// end inline asm

$L__BB0_247:
	add.s32 	%r351, %r1999, %r253;
	mul.wide.s32 	%rd237, %r351, 4;
	add.s64 	%rd238, %rd20, %rd237;
	st.global.u32 	[%rd238], %r2018;
	@%p11 bra 	$L__BB0_249;
	bra.uni 	$L__BB0_248;

$L__BB0_249:
	setp.eq.s32 	%p160, %r249, 0;
	add.s32 	%r1235, %r264, %r269;
	shl.b32 	%r1236, %r1235, 1;
	or.b32  	%r1237, %r1236, 1;
	mul.wide.s32 	%rd239, %r1237, 4;
	add.s64 	%rd240, %rd19, %rd239;
	ld.global.f32 	%f30, [%rd240];
	@%p160 bra 	$L__BB0_251;
	bra.uni 	$L__BB0_250;

$L__BB0_251:
	mov.f32 	%f243, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f30;
  cvt.rn.f16.f32 high, %f243;
  mov.b32 %r2019, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_252;

$L__BB0_248:
	mov.f32 	%f239, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f239;
  cvt.rn.f16.f32 high, %f239;
  mov.b32 %r2019, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_252;

$L__BB0_250:
	mov.f32 	%f240, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f240;
  cvt.rn.f16.f32 high, %f30;
  mov.b32 %r2019, {low,high};}

	// end inline asm

$L__BB0_252:
	add.s32 	%r1240, %r351, 1;
	mul.wide.s32 	%rd241, %r1240, 4;
	add.s64 	%rd242, %rd20, %rd241;
	st.global.u32 	[%rd242], %r2019;
	add.s32 	%r1999, %r1999, 2;

$L__BB0_253:
	or.b32  	%r1241, %r266, %r269;
	setp.gt.s32 	%p161, %r1241, -1;
	and.pred  	%p163, %p121, %p161;
	setp.lt.s32 	%p164, %r266, %r772;
	and.pred  	%p12, %p164, %p163;
	@%p135 bra 	$L__BB0_265;

	@%p12 bra 	$L__BB0_256;
	bra.uni 	$L__BB0_255;

$L__BB0_256:
	setp.eq.s32 	%p166, %r249, 0;
	add.s32 	%r1243, %r265, %r269;
	shl.b32 	%r1244, %r1243, 1;
	mul.wide.s32 	%rd243, %r1244, 4;
	add.s64 	%rd244, %rd19, %rd243;
	ld.global.f32 	%f31, [%rd244];
	@%p166 bra 	$L__BB0_258;
	bra.uni 	$L__BB0_257;

$L__BB0_258:
	mov.f32 	%f249, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f31;
  cvt.rn.f16.f32 high, %f249;
  mov.b32 %r2021, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_259;

$L__BB0_255:
	mov.f32 	%f245, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f245;
  cvt.rn.f16.f32 high, %f245;
  mov.b32 %r2021, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_259;

$L__BB0_257:
	mov.f32 	%f246, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f246;
  cvt.rn.f16.f32 high, %f31;
  mov.b32 %r2021, {low,high};}

	// end inline asm

$L__BB0_259:
	add.s32 	%r362, %r1999, %r253;
	mul.wide.s32 	%rd245, %r362, 4;
	add.s64 	%rd246, %rd20, %rd245;
	st.global.u32 	[%rd246], %r2021;
	@%p12 bra 	$L__BB0_261;
	bra.uni 	$L__BB0_260;

$L__BB0_261:
	setp.eq.s32 	%p167, %r249, 0;
	add.s32 	%r1248, %r267, %r269;
	shl.b32 	%r1249, %r1248, 1;
	mul.wide.s32 	%rd247, %r1249, 4;
	add.s64 	%rd248, %rd19, %rd247;
	ld.global.f32 	%f32, [%rd248];
	@%p167 bra 	$L__BB0_263;
	bra.uni 	$L__BB0_262;

$L__BB0_263:
	mov.f32 	%f255, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f32;
  cvt.rn.f16.f32 high, %f255;
  mov.b32 %r2022, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_264;

$L__BB0_260:
	mov.f32 	%f251, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f251;
  cvt.rn.f16.f32 high, %f251;
  mov.b32 %r2022, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_264;

$L__BB0_262:
	mov.f32 	%f252, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f252;
  cvt.rn.f16.f32 high, %f32;
  mov.b32 %r2022, {low,high};}

	// end inline asm

$L__BB0_264:
	add.s32 	%r1252, %r362, 1;
	mul.wide.s32 	%rd249, %r1252, 4;
	add.s64 	%rd250, %rd20, %rd249;
	st.global.u32 	[%rd250], %r2022;
	add.s32 	%r1999, %r1999, 2;

$L__BB0_265:
	@%p128 bra 	$L__BB0_277;

	@%p12 bra 	$L__BB0_268;
	bra.uni 	$L__BB0_267;

$L__BB0_268:
	setp.eq.s32 	%p169, %r249, 0;
	add.s32 	%r1254, %r265, %r269;
	shl.b32 	%r1255, %r1254, 1;
	or.b32  	%r1256, %r1255, 1;
	mul.wide.s32 	%rd251, %r1256, 4;
	add.s64 	%rd252, %rd19, %rd251;
	ld.global.f32 	%f33, [%rd252];
	@%p169 bra 	$L__BB0_270;
	bra.uni 	$L__BB0_269;

$L__BB0_270:
	mov.f32 	%f261, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f33;
  cvt.rn.f16.f32 high, %f261;
  mov.b32 %r2024, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_271;

$L__BB0_267:
	mov.f32 	%f257, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f257;
  cvt.rn.f16.f32 high, %f257;
  mov.b32 %r2024, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_271;

$L__BB0_269:
	mov.f32 	%f258, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f258;
  cvt.rn.f16.f32 high, %f33;
  mov.b32 %r2024, {low,high};}

	// end inline asm

$L__BB0_271:
	add.s32 	%r373, %r1999, %r253;
	mul.wide.s32 	%rd253, %r373, 4;
	add.s64 	%rd254, %rd20, %rd253;
	st.global.u32 	[%rd254], %r2024;
	@%p12 bra 	$L__BB0_273;
	bra.uni 	$L__BB0_272;

$L__BB0_273:
	setp.eq.s32 	%p170, %r249, 0;
	add.s32 	%r1260, %r267, %r269;
	shl.b32 	%r1261, %r1260, 1;
	or.b32  	%r1262, %r1261, 1;
	mul.wide.s32 	%rd255, %r1262, 4;
	add.s64 	%rd256, %rd19, %rd255;
	ld.global.f32 	%f34, [%rd256];
	@%p170 bra 	$L__BB0_275;
	bra.uni 	$L__BB0_274;

$L__BB0_275:
	mov.f32 	%f267, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f34;
  cvt.rn.f16.f32 high, %f267;
  mov.b32 %r2025, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_276;

$L__BB0_272:
	mov.f32 	%f263, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f263;
  cvt.rn.f16.f32 high, %f263;
  mov.b32 %r2025, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_276;

$L__BB0_274:
	mov.f32 	%f264, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f264;
  cvt.rn.f16.f32 high, %f34;
  mov.b32 %r2025, {low,high};}

	// end inline asm

$L__BB0_276:
	add.s32 	%r1265, %r373, 1;
	mul.wide.s32 	%rd257, %r1265, 4;
	add.s64 	%rd258, %rd20, %rd257;
	st.global.u32 	[%rd258], %r2025;
	add.s32 	%r1999, %r1999, 2;

$L__BB0_277:
	add.s64 	%rd546, %rd546, 4;
	setp.ne.s64 	%p171, %rd546, %rd260;
	@%p171 bra 	$L__BB0_157;

$L__BB0_278:
	add.s32 	%r1995, %r1995, %r41;
	setp.lt.s32 	%p172, %r1995, %r772;
	@%p172 bra 	$L__BB0_155;

$L__BB0_279:
	add.s32 	%r1989, %r1989, %r792;
	setp.lt.s32 	%p173, %r1989, %r771;
	@%p173 bra 	$L__BB0_153;
	bra.uni 	$L__BB0_280;

$L__BB0_134:
	@%p24 bra 	$L__BB0_280;

	neg.s32 	%r222, %r71;
	mov.u32 	%r1080, 31;
	sub.s32 	%r1081, %r1080, %r39;
	setp.gt.s32 	%p111, %r38, %r39;
	selp.b32 	%r1082, %r39, %r1081, %p111;
	shl.b32 	%r1083, %r1082, 2;
	mov.u32 	%r1084, 2;
	sub.s32 	%r223, %r1083, %r774;
	shl.b32 	%r1085, %r773, 2;
	mov.u32 	%r1086, 128;
	sub.s32 	%r224, %r1086, %r1085;
	sub.s32 	%r1087, %r1084, %r774;
	add.s32 	%r225, %r1087, %r1083;
	add.s32 	%r226, %r771, -1;
	add.s32 	%r227, %r223, 1;
	add.s32 	%r228, %r225, 1;
	rem.s32 	%r1112, %r227, %r224;
	add.s32 	%r1113, %r1112, %r224;
	rem.s32 	%r239, %r1113, %r224;
	rem.s32 	%r1114, %r228, %r224;
	add.s32 	%r1115, %r1114, %r224;
	rem.s32 	%r240, %r1115, %r224;

$L__BB0_136:
	setp.ne.s32 	%p112, %r35, %r222;
	@%p112 bra 	$L__BB0_150;

	shl.b32 	%r230, %r1989, 1;
	rem.s32 	%r1088, %r223, %r224;
	add.s32 	%r1089, %r1088, %r224;
	rem.s32 	%r231, %r1089, %r224;
	rem.s32 	%r1090, %r225, %r224;
	add.s32 	%r1091, %r1090, %r224;
	rem.s32 	%r232, %r1091, %r224;
	@%p111 bra 	$L__BB0_139;
	bra.uni 	$L__BB0_138;

$L__BB0_139:
	mul.lo.s32 	%r1094, %r230, %r224;
	add.s32 	%r1095, %r1094, %r231;
	mul.wide.s32 	%rd160, %r1095, 4;
	add.s64 	%rd161, %rd19, %rd160;
	ld.global.f32 	%f128, [%rd161];
	add.s32 	%r1096, %r1094, %r232;
	mul.wide.s32 	%rd162, %r1096, 4;
	add.s64 	%rd163, %rd19, %rd162;
	ld.global.f32 	%f129, [%rd163];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f128;
  cvt.rn.f16.f32 high, %f129;
  mov.b32 %r1990, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_140;

$L__BB0_138:
	mov.f32 	%f127, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f127;
  cvt.rn.f16.f32 high, %f127;
  mov.b32 %r1990, {low,high};}

	// end inline asm

$L__BB0_140:
	shl.b32 	%r1097, %r1989, 5;
	add.s32 	%r1098, %r1097, %r39;
	shl.b32 	%r1099, %r1098, 2;
	mul.wide.s32 	%rd164, %r1099, 4;
	add.s64 	%rd21, %rd20, %rd164;
	st.global.u32 	[%rd21], %r1990;
	@%p111 bra 	$L__BB0_142;
	bra.uni 	$L__BB0_141;

$L__BB0_142:
	add.s32 	%r1102, %r230, 1;
	mul.lo.s32 	%r1103, %r1102, %r224;
	add.s32 	%r1104, %r1103, %r231;
	mul.wide.s32 	%rd165, %r1104, 4;
	add.s64 	%rd166, %rd19, %rd165;
	ld.global.f32 	%f132, [%rd166];
	add.s32 	%r1105, %r1103, %r232;
	mul.wide.s32 	%rd167, %r1105, 4;
	add.s64 	%rd168, %rd19, %rd167;
	ld.global.f32 	%f133, [%rd168];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f132;
  cvt.rn.f16.f32 high, %f133;
  mov.b32 %r1991, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_143;

$L__BB0_141:
	mov.f32 	%f131, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f131;
  cvt.rn.f16.f32 high, %f131;
  mov.b32 %r1991, {low,high};}

	// end inline asm

$L__BB0_143:
	add.s32 	%r1106, %r226, %r1989;
	rem.s32 	%r1107, %r1106, %r771;
	shl.b32 	%r1108, %r1107, 5;
	add.s32 	%r1109, %r1108, %r39;
	shl.b32 	%r1110, %r1109, 2;
	or.b32  	%r1111, %r1110, 2;
	mul.wide.s32 	%rd169, %r1111, 4;
	add.s64 	%rd22, %rd20, %rd169;
	st.global.u32 	[%rd22], %r1991;
	@%p111 bra 	$L__BB0_145;
	bra.uni 	$L__BB0_144;

$L__BB0_145:
	mul.lo.s32 	%r1118, %r230, %r224;
	add.s32 	%r1119, %r1118, %r239;
	mul.wide.s32 	%rd170, %r1119, 4;
	add.s64 	%rd171, %rd19, %rd170;
	ld.global.f32 	%f136, [%rd171];
	add.s32 	%r1120, %r1118, %r240;
	mul.wide.s32 	%rd172, %r1120, 4;
	add.s64 	%rd173, %rd19, %rd172;
	ld.global.f32 	%f137, [%rd173];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f136;
  cvt.rn.f16.f32 high, %f137;
  mov.b32 %r1992, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_146;

$L__BB0_144:
	mov.f32 	%f135, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f135;
  cvt.rn.f16.f32 high, %f135;
  mov.b32 %r1992, {low,high};}

	// end inline asm

$L__BB0_146:
	st.global.u32 	[%rd21+4], %r1992;
	@%p111 bra 	$L__BB0_148;
	bra.uni 	$L__BB0_147;

$L__BB0_148:
	add.s32 	%r1123, %r230, 1;
	mul.lo.s32 	%r1124, %r1123, %r224;
	add.s32 	%r1125, %r1124, %r239;
	mul.wide.s32 	%rd174, %r1125, 4;
	add.s64 	%rd175, %rd19, %rd174;
	ld.global.f32 	%f140, [%rd175];
	add.s32 	%r1126, %r1124, %r240;
	mul.wide.s32 	%rd176, %r1126, 4;
	add.s64 	%rd177, %rd19, %rd176;
	ld.global.f32 	%f141, [%rd177];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f140;
  cvt.rn.f16.f32 high, %f141;
  mov.b32 %r1993, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_149;

$L__BB0_147:
	mov.f32 	%f139, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f139;
  cvt.rn.f16.f32 high, %f139;
  mov.b32 %r1993, {low,high};}

	// end inline asm

$L__BB0_149:
	st.global.u32 	[%rd22+4], %r1993;

$L__BB0_150:
	add.s32 	%r1989, %r1989, %r792;
	setp.lt.s32 	%p117, %r1989, %r771;
	@%p117 bra 	$L__BB0_136;

$L__BB0_280:
	add.s32 	%r1267, %r766, -1;
	mad.lo.s32 	%r1268, %r767, 576, 128;
	mul.lo.s32 	%r1269, %r1268, %r1267;
	add.s32 	%r1270, %r65, -64;
	add.s32 	%r1271, %r1270, %r65;
	add.s32 	%r1272, %r767, -1;
	mad.lo.s32 	%r1273, %r1271, %r1272, %r1269;
	mul.lo.s32 	%r1274, %r1267, %r767;
	mul.lo.s32 	%r1275, %r1274, 320;
	mad.lo.s32 	%r1276, %r1270, %r1272, %r1275;
	add.s32 	%r382, %r1276, %r1273;
	setp.lt.s32 	%p174, %r382, 1;
	mov.f32 	%f269, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f269;
  cvt.rn.f16.f32 high, %f269;
  mov.b32 %r2028, {low,high};}

	// end inline asm
	@%p174 bra 	$L__BB0_283;

	mov.u32 	%r2029, 0;
	mov.u32 	%r2027, _ZN6kernel5shmemE;

$L__BB0_282:
	st.shared.u32 	[%r2027], %r2028;
	mov.f32 	%f277, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f277;
  cvt.rn.f16.f32 high, %f277;
  mov.b32 %r1279, {low,high};}

	// end inline asm
	st.shared.u32 	[%r2027+4], %r1279;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f277;
  cvt.rn.f16.f32 high, %f277;
  mov.b32 %r1280, {low,high};}

	// end inline asm
	st.shared.u32 	[%r2027+8], %r1280;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f277;
  cvt.rn.f16.f32 high, %f277;
  mov.b32 %r1281, {low,high};}

	// end inline asm
	st.shared.u32 	[%r2027+12], %r1281;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f277;
  cvt.rn.f16.f32 high, %f277;
  mov.b32 %r2028, {low,high};}

	// end inline asm
	add.s32 	%r2027, %r2027, 16;
	add.s32 	%r2029, %r2029, 4;
	setp.lt.s32 	%p175, %r2029, %r382;
	@%p175 bra 	$L__BB0_282;

$L__BB0_283:
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f269;
  cvt.rn.f16.f32 high, %f269;
  mov.b32 %r1284, {low,high};}

	// end inline asm
	mov.u32 	%r1285, 31;
	sub.s32 	%r1286, %r1285, %r39;
	setp.gt.s32 	%p177, %r38, %r39;
	selp.b32 	%r1287, %r39, %r1286, %p177;
	shl.b32 	%r1288, %r1287, 2;
	sub.s32 	%r391, %r1288, %r774;
	shl.b32 	%r1289, %r773, 2;
	mov.u32 	%r1290, 128;
	sub.s32 	%r392, %r1290, %r1289;
	rem.s32 	%r1291, %r391, %r392;
	add.s32 	%r1292, %r1291, %r392;
	rem.s32 	%r393, %r1292, %r392;
	add.s32 	%r1293, %r391, 2;
	rem.s32 	%r1294, %r1293, %r392;
	add.s32 	%r1295, %r1294, %r392;
	rem.s32 	%r394, %r1295, %r392;
	add.s32 	%r1306, %r391, 1;
	rem.s32 	%r1307, %r1306, %r392;
	add.s32 	%r1308, %r1307, %r392;
	rem.s32 	%r395, %r1308, %r392;
	add.s32 	%r1309, %r391, 3;
	rem.s32 	%r1310, %r1309, %r392;
	add.s32 	%r1311, %r1310, %r392;
	rem.s32 	%r396, %r1311, %r392;
	// begin inline asm
	mov.u32 %r1322, %envreg2;
	// end inline asm
	cvt.u64.u32 	%rd266, %r1322;
	// begin inline asm
	mov.u32 %r1323, %envreg1;
	// end inline asm
	cvt.u64.u32 	%rd267, %r1323;
	bfi.b64 	%rd30, %rd267, %rd266, 32, 32;
	setp.ne.s64 	%p185, %rd30, 0;
	@%p185 bra 	$L__BB0_301;

	// begin inline asm
	trap;
	// end inline asm

$L__BB0_301:
	add.s64 	%rd31, %rd30, 4;
	mov.u32 	%r1324, %nctaid.y;
	mov.u32 	%r1325, %nctaid.x;
	mul.lo.s32 	%r1326, %r1325, %r1324;
	mov.u32 	%r1327, %nctaid.z;
	mul.lo.s32 	%r397, %r1326, %r1327;
	neg.s32 	%r1328, %r35;
	add.s32 	%r1329, %r39, %r34;
	setp.ne.s32 	%p186, %r1329, %r1328;
	mov.u32 	%r1330, %ctaid.x;
	add.s32 	%r398, %r1330, %r36;
	neg.s32 	%r399, %r37;
	bar.sync 	0;
	@%p186 bra 	$L__BB0_305;

	setp.eq.s32 	%p187, %r398, %r399;
	mov.u32 	%r1333, -2147483647;
	sub.s32 	%r1334, %r1333, %r397;
	selp.b32 	%r1332, %r1334, 1, %p187;
	membar.gl;
	// begin inline asm
	atom.add.release.gpu.u32 %r1331,[%rd31],%r1332;
	// end inline asm

$L__BB0_303:
	ld.volatile.u32 	%r1335, [%rd31];
	xor.b32  	%r1336, %r1335, %r1331;
	setp.gt.s32 	%p188, %r1336, -1;
	@%p188 bra 	$L__BB0_303;

	// begin inline asm
	ld.acquire.gpu.u32 %r1337,[%rd31];
	// end inline asm

$L__BB0_305:
	bar.sync 	0;
	setp.lt.s32 	%p189, %r42, 1;
	@%p189 bra 	$L__BB0_601;

	setp.lt.s32 	%p190, %r393, %r785;
	setp.ge.s32 	%p191, %r393, %r784;
	and.pred  	%p13, %p190, %p191;
	setp.lt.s32 	%p192, %r395, %r785;
	setp.ge.s32 	%p193, %r395, %r784;
	and.pred  	%p14, %p192, %p193;
	setp.lt.s32 	%p194, %r394, %r785;
	setp.ge.s32 	%p195, %r394, %r784;
	and.pred  	%p15, %p194, %p195;
	setp.lt.s32 	%p196, %r396, %r785;
	setp.ge.s32 	%p197, %r396, %r784;
	and.pred  	%p16, %p196, %p197;
	mov.u32 	%r2146, 0;
	mul.wide.s32 	%rd274, %r39, 16;
	mul.wide.s32 	%rd276, %r39, 8;
	mov.u32 	%r2030, %r1284;
	mov.u32 	%r2031, %r1284;
	mov.u32 	%r2161, %r1284;
	mov.u32 	%r2033, %r1284;
	mov.u32 	%r2034, %r1284;
	mov.u32 	%r2246, %r1284;
	mov.u32 	%r2036, %r1284;
	mov.u32 	%r2229, %r1284;
	mov.u32 	%r2038, %r1284;
	mov.u32 	%r2163, %r1284;
	mov.u32 	%r2040, %r1284;
	mov.u32 	%r2231, %r1284;
	mov.u32 	%r2042, %r1284;
	mov.u32 	%r2043, %r1284;
	mov.u32 	%r2044, %r1284;
	mov.u32 	%r2045, %r1284;
	mov.u32 	%r2046, %r1284;
	mov.u32 	%r2047, %r1284;
	mov.u32 	%r2048, %r1284;
	mov.u32 	%r2248, %r1284;
	mov.u32 	%r2050, %r1284;
	mov.u32 	%r2051, %r1284;
	mov.u32 	%r2052, %r1284;
	mov.u32 	%r2053, %r1284;
	mov.u32 	%r2054, %r1284;
	mov.u32 	%r2055, %r1284;
	mov.u32 	%r2056, %r1284;
	mov.u32 	%r2057, %r1284;
	mov.u32 	%r2058, %r1284;
	mov.u32 	%r2059, %r1284;
	mov.u32 	%r2060, %r1284;
	mov.u32 	%r2061, %r1284;
	mov.u32 	%r2062, %r1284;
	mov.u32 	%r2063, %r1284;
	mov.u32 	%r2064, %r1284;
	mov.u32 	%r2065, %r1284;
	mov.u32 	%r2066, %r1284;
	mov.u32 	%r2067, %r1284;
	mov.u32 	%r2068, %r1284;
	mov.u32 	%r2069, %r1284;
	mov.u32 	%r2070, %r1284;
	mov.u32 	%r2071, %r1284;
	mov.u32 	%r2072, %r1284;
	mov.u32 	%r2073, %r1284;
	mov.u32 	%r2253, %r1284;
	mov.u32 	%r2240, %r1284;
	mov.u32 	%r2171, %r1284;
	mov.u32 	%r2077, %r1284;
	mov.u32 	%r2254, %r1284;
	mov.u32 	%r2242, %r1284;
	mov.u32 	%r2173, %r1284;
	mov.u32 	%r2081, %r1284;
	mov.u32 	%r2201, %r1284;
	mov.u32 	%r2083, %r1284;
	mov.u32 	%r2084, %r1284;
	mov.u32 	%r2202, %r1284;
	mov.u32 	%r2086, %r1284;
	mov.u32 	%r2087, %r1284;
	mov.u32 	%r2203, %r1284;
	mov.u32 	%r2204, %r1284;
	mov.u32 	%r2090, %r1284;
	mov.u32 	%r2091, %r1284;
	mov.u32 	%r2092, %r1284;
	mov.u32 	%r2093, %r1284;
	mov.u32 	%r2205, %r1284;
	mov.u32 	%r2206, %r1284;
	mov.u32 	%r2096, %r1284;
	mov.u32 	%r2097, %r1284;
	mov.u32 	%r2098, %r1284;
	mov.u32 	%r2099, %r1284;
	mov.u32 	%r2100, %r1284;
	mov.u32 	%r2101, %r1284;
	mov.u32 	%r2102, %r1284;
	mov.u32 	%r2103, %r1284;
	mov.u32 	%r2104, %r1284;
	mov.u32 	%r2105, %r1284;
	mov.u32 	%r2210, %r1284;
	mov.u32 	%r2107, %r1284;
	mov.u32 	%r2108, %r1284;
	mov.u32 	%r2109, %r1284;
	mov.u32 	%r2110, %r1284;
	mov.u32 	%r2111, %r1284;
	mov.u32 	%r2212, %r1284;
	mov.u32 	%r2113, %r1284;
	mov.u32 	%r2114, %r1284;
	mov.u32 	%r2115, %r1284;
	mov.u32 	%r2116, %r1284;
	mov.u32 	%r2117, %r1284;
	mov.u32 	%r2213, %r1284;
	mov.u32 	%r2119, %r1284;
	mov.u32 	%r2120, %r1284;
	mov.u32 	%r2121, %r1284;
	mov.u32 	%r2122, %r1284;
	mov.u32 	%r2123, %r1284;
	mov.u32 	%r2124, %r1284;
	mov.u32 	%r2214, %r1284;
	mov.u32 	%r2126, %r1284;
	mov.u32 	%r2127, %r1284;
	mov.u32 	%r2128, %r1284;
	mov.u32 	%r2129, %r1284;
	mov.u32 	%r2130, %r1284;
	mov.u32 	%r2131, %r1284;
	mov.u32 	%r2132, %r1284;
	mov.u32 	%r2133, %r1284;
	mov.u32 	%r2134, %r1284;
	mov.u32 	%r2135, %r1284;
	mov.u32 	%r2136, %r1284;
	mov.u32 	%r2137, %r1284;
	mov.u32 	%r2138, %r1284;
	mov.u32 	%r2139, %r1284;
	mov.u32 	%r2140, %r1284;
	mov.u32 	%r2141, %r1284;
	mov.u32 	%r2142, %r1284;
	mov.u32 	%r2143, %r1284;
	mov.u32 	%r2144, %r1284;
	mov.u32 	%r2145, %r1284;
	mov.u32 	%r2147, %r1284;
	mov.u32 	%r2148, %r1284;
	mov.u32 	%r2149, %r1284;
	mov.u32 	%r2150, %r1284;
	mov.u32 	%r2151, %r1284;
	mov.u32 	%r2152, %r1284;
	mov.u32 	%r2153, %r1284;
	mov.u32 	%r2154, %r1284;
	mov.u32 	%r2155, %r1284;
	mov.u32 	%r2156, %r1284;
	mov.u32 	%r2157, %r1284;
	mov.u32 	%r2158, %r1284;
	mov.u32 	%r2162, %r2038;
	mov.u32 	%r2164, %r2042;
	mov.u32 	%r2172, %r2077;
	mov.u32 	%r2174, %r2081;

$L__BB0_307:
	mov.u32 	%r438, %r2154;
	mov.u32 	%r433, %r2153;
	mov.u32 	%r426, %r2151;
	mov.u32 	%r418, %r2149;
	mov.u32 	%r2153, %r2148;
	mov.u32 	%r2154, %r2147;
	mov.u32 	%r512, %r2129;
	mov.u32 	%r511, %r2128;
	mov.u32 	%r508, %r2214;
	mov.u32 	%r507, %r2124;
	mov.u32 	%r505, %r2122;
	mov.u32 	%r504, %r2121;
	mov.u32 	%r501, %r2213;
	mov.u32 	%r500, %r2117;
	mov.u32 	%r498, %r2115;
	mov.u32 	%r495, %r2212;
	mov.u32 	%r492, %r2109;
	mov.u32 	%r489, %r2210;
	mov.u32 	%r2128, %r2099;
	mov.u32 	%r481, %r2098;
	mov.u32 	%r478, %r2096;
	mov.u32 	%r2124, %r2206;
	mov.u32 	%r476, %r2205;
	mov.u32 	%r2121, %r2093;
	mov.u32 	%r474, %r2092;
	mov.u32 	%r471, %r2090;
	mov.u32 	%r2117, %r2204;
	mov.u32 	%r469, %r2203;
	mov.u32 	%r468, %r2087;
	mov.u32 	%r465, %r2202;
	mov.u32 	%r464, %r2084;
	mov.u32 	%r461, %r2201;
	mov.u32 	%r2148, %r2254;
	mov.u32 	%r2147, %r2253;
	mov.u32 	%r452, %r2073;
	mov.u32 	%r448, %r2069;
	mov.u32 	%r2149, %r2068;
	mov.u32 	%r446, %r2067;
	mov.u32 	%r445, %r2066;
	mov.u32 	%r441, %r2062;
	mov.u32 	%r2151, %r2061;
	mov.u32 	%r2129, %r2060;
	mov.u32 	%r437, %r2059;
	mov.u32 	%r2096, %r2058;
	mov.u32 	%r435, %r2057;
	mov.u32 	%r2122, %r2056;
	mov.u32 	%r432, %r2055;
	mov.u32 	%r2090, %r2054;
	mov.u32 	%r2115, %r2053;
	mov.u32 	%r429, %r2052;
	mov.u32 	%r2087, %r2051;
	mov.u32 	%r425, %r2050;
	mov.u32 	%r2054, %r2248;
	mov.u32 	%r2055, %r2048;
	mov.u32 	%r2109, %r2047;
	mov.u32 	%r421, %r2046;
	mov.u32 	%r2084, %r2045;
	mov.u32 	%r417, %r2044;
	mov.u32 	%r2092, %r2043;
	mov.u32 	%r2093, %r2163;
	mov.u32 	%r2058, %r2246;
	mov.u32 	%r406, %r2034;
	mov.u32 	%r405, %r2033;
	mov.u32 	%r2099, %r2161;
	mov.u32 	%r2098, %r2031;
	mov.u32 	%r2059, %r2030;
	shl.b32 	%r1931, %r797, 1;
	sub.s32 	%r1930, %r771, %r1931;
	not.b32 	%r1340, %r36;
	add.s32 	%r1341, %r768, %r1340;
	mul.lo.s32 	%r1342, %r1341, %r770;
	add.s32 	%r1343, %r2146, %r1342;
	not.b32 	%r1345, %r37;
	add.s32 	%r1346, %r769, %r1345;
	mul.lo.s32 	%r1347, %r1346, %r770;
	add.s32 	%r1348, %r2146, %r1347;
	rem.s32 	%r530, %r1343, %r64;
	rem.s32 	%r531, %r1348, %r1930;
	add.s32 	%r1352, %r1342, %r1347;
	add.s32 	%r1353, %r1352, %r771;
	not.b32 	%r1354, %r34;
	add.s32 	%r1355, %r766, %r1354;
	mad.lo.s32 	%r1356, %r1341, %r766, %r1355;
	not.b32 	%r1358, %r35;
	add.s32 	%r1359, %r767, %r1358;
	mad.lo.s32 	%r1360, %r1346, %r767, %r1359;
	add.s32 	%r1361, %r1356, %r1360;
	shl.b32 	%r1362, %r1361, 1;
	add.s32 	%r1363, %r1353, %r1362;
	add.s32 	%r1364, %r2146, %r1363;
	add.s32 	%r1365, %r2146, %r1352;
	div.s32 	%r1366, %r1364, %r771;
	mul.lo.s32 	%r1367, %r1366, %r771;
	sub.s32 	%r1368, %r1931, %r771;
	sub.s32 	%r532, %r1364, %r1367;
	sub.s32 	%r1369, %r1356, %r1360;
	shl.b32 	%r1370, %r1369, 1;
	add.s32 	%r1371, %r1370, %r772;
	mad.lo.s32 	%r1372, %r1366, %r1931, %r1371;
	mad.lo.s32 	%r1373, %r1366, %r1368, %r1365;
	div.s32 	%r1374, %r1372, %r772;
	mul.lo.s32 	%r1375, %r1374, %r772;
	sub.s32 	%r1378, %r793, %r772;
	sub.s32 	%r533, %r1372, %r1375;
	mad.lo.s32 	%r534, %r1374, %r1378, %r1373;
	ld.param.u64 	%rd271, [%rd1+80];
	cvta.to.global.u64 	%rd32, %rd271;
	setp.ne.s32 	%p198, %r34, 0;
	@%p198 bra 	$L__BB0_312;

	setp.eq.s32 	%p199, %r35, 0;
	mad.lo.s32 	%r1381, %r530, %r769, %r37;
	mul.lo.s32 	%r1382, %r1381, %r767;
	mul.lo.s32 	%r1383, %r1382, 768;
	mad.lo.s32 	%r1384, %r35, 384, %r1383;
	add.s32 	%r1385, %r1384, -64;
	mul.wide.s32 	%rd272, %r1385, 4;
	add.s64 	%rd273, %rd32, %rd272;
	add.s64 	%rd275, %rd273, %rd274;
	ld.global.v4.u32 	{%r2053, %r2047, %r2051, %r2045}, [%rd275+256];
	ld.global.v4.u32 	{%r2174, %r2172, %r2164, %r2162}, [%rd275+1024];
	add.s64 	%rd33, %rd273, %rd276;
	mov.u32 	%r2161, %r2099;
	mov.u32 	%r2163, %r2093;
	@%p199 bra 	$L__BB0_310;

	ld.global.v2.u32 	{%r2161, %r2163}, [%rd33];

$L__BB0_310:
	setp.ne.s32 	%p200, %r35, %r1272;
	ld.global.v2.u32 	{%r2052, %r2046}, [%rd33+768];
	@%p200 bra 	$L__BB0_312;

	ld.global.v2.u32 	{%r2173, %r2171}, [%rd33+1536];

$L__BB0_312:
	setp.ne.s32 	%p201, %r35, 0;
	mov.u32 	%r2031, %r2098;
	mov.u32 	%r2043, %r2092;
	mov.u32 	%r2056, %r2122;
	mov.u32 	%r2060, %r2129;
	mov.u32 	%r2181, %r2065;
	mov.u32 	%r2066, %r445;
	mov.u32 	%r2183, %r2072;
	mov.u32 	%r2073, %r452;
	mov.u32 	%r2185, %r2101;
	mov.u32 	%r2186, %r2103;
	@%p201 bra 	$L__BB0_314;

	not.b32 	%r1933, %r34;
	add.s32 	%r1932, %r766, %r1933;
	mad.lo.s32 	%r1404, %r531, %r768, %r36;
	mul.lo.s32 	%r1411, %r797, %r64;
	mul.lo.s32 	%r1412, %r1411, 768;
	mad.lo.s32 	%r1413, %r1932, 384, %r1412;
	add.s32 	%r1414, %r1413, -64;
	mad.lo.s32 	%r1415, %r1404, %r829, %r1414;
	mul.wide.s32 	%rd277, %r1415, 4;
	add.s64 	%rd278, %rd32, %rd277;
	add.s64 	%rd280, %rd278, %rd274;
	ld.global.v4.u32 	{%r2186, %r2185, %r2183, %r2181}, [%rd280+256];
	ld.global.v4.u32 	{%r2060, %r2056, %r2031, %r2043}, [%rd280+1024];
	add.s64 	%rd282, %rd278, %rd276;
	ld.global.v2.u32 	{%r2073, %r2066}, [%rd282+768];
	ld.global.v2.u32 	{%r2161, %r2163}, [%rd282+1536];

$L__BB0_314:
	ld.param.u64 	%rd284, [%rd1+88];
	cvta.to.global.u64 	%rd34, %rd284;
	add.s32 	%r1428, %r771, -1;
	setp.ge.s32 	%p202, %r532, %r1428;
	setp.lt.s32 	%p203, %r532, 2;
	or.pred  	%p204, %p203, %p202;
	setp.lt.s32 	%p205, %r533, 2;
	or.pred  	%p206, %p205, %p204;
	add.s32 	%r1429, %r772, -2;
	setp.ge.s32 	%p207, %r533, %r1429;
	or.pred  	%p208, %p207, %p206;
	mov.u32 	%r2201, %r1284;
	mov.u32 	%r2202, %r1284;
	mov.u32 	%r2203, %r1284;
	mov.u32 	%r2204, %r1284;
	mov.u32 	%r2205, %r1284;
	mov.u32 	%r2206, %r1284;
	mov.u32 	%r2207, %r1284;
	mov.u32 	%r2208, %r1284;
	mov.u32 	%r2209, %r1284;
	mov.u32 	%r2210, %r1284;
	mov.u32 	%r2211, %r1284;
	mov.u32 	%r2212, %r1284;
	mov.u32 	%r2213, %r1284;
	mov.u32 	%r2214, %r1284;
	mov.u32 	%r2215, %r1284;
	mov.u32 	%r2216, %r1284;
	mov.u32 	%r2217, %r1284;
	mov.u32 	%r2218, %r1284;
	mov.u32 	%r2219, %r1284;
	mov.u32 	%r2220, %r1284;
	mov.u32 	%r2221, %r1284;
	mov.u32 	%r2222, %r1284;
	@%p208 bra 	$L__BB0_325;

	mad.lo.s32 	%r597, %r533, %r771, %r532;
	shl.b32 	%r1430, %r597, 6;
	mul.wide.s32 	%rd285, %r1430, 4;
	add.s64 	%rd35, %rd34, %rd285;
	and.pred  	%p211, %p198, %p201;
	mov.u32 	%r2204, %r1284;
	mov.u32 	%r2206, %r1284;
	@%p211 bra 	$L__BB0_317;

	add.s64 	%rd287, %rd35, %rd276;
	ld.global.v2.u32 	{%r2206, %r2204}, [%rd287+256];

$L__BB0_317:
	mov.u32 	%r2209, %r1284;
	mov.u32 	%r2211, %r1284;
	@%p198 bra 	$L__BB0_319;

	shl.b32 	%r1434, %r771, 5;
	cvt.s64.s32 	%rd288, %r1434;
	cvt.s64.s32 	%rd289, %r39;
	add.s64 	%rd290, %rd288, %rd289;
	shl.b64 	%rd291, %rd290, 3;
	add.s64 	%rd292, %rd35, %rd291;
	ld.global.v2.u32 	{%r2211, %r2209}, [%rd292];

$L__BB0_319:
	mov.u32 	%r2216, %r1284;
	mov.u32 	%r2218, %r1284;
	@%p201 bra 	$L__BB0_321;

	shl.b32 	%r1438, %r771, 5;
	neg.s32 	%r1439, %r1438;
	cvt.s64.s32 	%rd293, %r1439;
	cvt.s64.s32 	%rd294, %r39;
	add.s64 	%rd295, %rd293, %rd294;
	shl.b64 	%rd296, %rd295, 3;
	add.s64 	%rd297, %rd35, %rd296;
	ld.global.v2.u32 	{%r2218, %r2216}, [%rd297];

$L__BB0_321:
	shl.b32 	%r1442, %r772, 6;
	shl.b32 	%r1443, %r597, 7;
	mad.lo.s32 	%r1444, %r1442, %r771, %r1443;
	mul.wide.s32 	%rd298, %r1444, 4;
	add.s64 	%rd36, %rd34, %rd298;
	mov.u32 	%r2201, %r1284;
	mov.u32 	%r2202, %r1284;
	mov.u32 	%r2207, %r1284;
	mov.u32 	%r2208, %r1284;
	mov.u32 	%r2210, %r1284;
	mov.u32 	%r2212, %r1284;
	mov.u32 	%r2219, %r1284;
	mov.u32 	%r2220, %r1284;
	@%p198 bra 	$L__BB0_323;

	shl.b32 	%r1445, %r771, 5;
	cvt.s64.s32 	%rd299, %r1445;
	cvt.s64.s32 	%rd300, %r39;
	add.s64 	%rd301, %rd299, %rd300;
	shl.b64 	%rd302, %rd301, 4;
	add.s64 	%rd303, %rd36, %rd302;
	ld.global.v4.u32 	{%r2212, %r2210, %r2202, %r2201}, [%rd303];
	shl.b32 	%r1450, %r771, 6;
	add.s32 	%r1451, %r1450, -32;
	cvt.s64.s32 	%rd304, %r1451;
	add.s64 	%rd305, %rd304, %rd300;
	shl.b64 	%rd306, %rd305, 4;
	add.s64 	%rd307, %rd36, %rd306;
	ld.global.v4.u32 	{%r2220, %r2219, %r2208, %r2207}, [%rd307];

$L__BB0_323:
	mov.u32 	%r2203, %r1284;
	mov.u32 	%r2205, %r1284;
	mov.u32 	%r2213, %r1284;
	mov.u32 	%r2214, %r1284;
	mov.u32 	%r2215, %r1284;
	mov.u32 	%r2217, %r1284;
	mov.u32 	%r2221, %r1284;
	mov.u32 	%r2222, %r1284;
	@%p201 bra 	$L__BB0_325;

	shl.b32 	%r1457, %r771, 5;
	xor.b32  	%r1458, %r1457, -32;
	cvt.s64.s32 	%rd308, %r1458;
	cvt.s64.s32 	%rd309, %r39;
	add.s64 	%rd310, %rd308, %rd309;
	shl.b64 	%rd311, %rd310, 4;
	add.s64 	%rd312, %rd36, %rd311;
	ld.global.v4.u32 	{%r2222, %r2221, %r2217, %r2215}, [%rd312];
	add.s64 	%rd314, %rd36, %rd274;
	ld.global.v4.u32 	{%r2214, %r2213, %r2205, %r2203}, [%rd314];

$L__BB0_325:
	bar.sync 	0;
	ld.param.u64 	%rd316, [%rd1+160];
	cvta.to.global.u64 	%rd37, %rd316;
	add.s32 	%r1467, %r780, 2;
	setp.lt.s32 	%p216, %r532, %r1467;
	add.s32 	%r1468, %r781, -1;
	setp.ge.s32 	%p217, %r532, %r1468;
	or.pred  	%p218, %p217, %p216;
	add.s32 	%r1469, %r782, 2;
	setp.lt.s32 	%p219, %r533, %r1469;
	or.pred  	%p220, %p218, %p219;
	add.s32 	%r1470, %r783, -2;
	setp.ge.s32 	%p221, %r533, %r1470;
	or.pred  	%p222, %p221, %p220;
	setp.lt.s32 	%p223, %r534, %r777;
	or.pred  	%p224, %p223, %p222;
	mad.lo.s32 	%r1471, %r779, %r778, %r777;
	setp.ge.s32 	%p225, %r534, %r1471;
	or.pred  	%p226, %p224, %p225;
	@%p226 bra 	$L__BB0_567;

	sub.s32 	%r656, %r534, %r777;
	rem.s32 	%r1472, %r656, %r778;
	setp.ne.s32 	%p227, %r1472, 0;
	@%p227 bra 	$L__BB0_567;

	div.s32 	%r1473, %r656, %r778;
	mul.lo.s32 	%r1475, %r1473, %r49;
	sub.s32 	%r657, %r532, %r780;
	sub.s32 	%r658, %r533, %r782;
	mul.lo.s32 	%r659, %r1475, 3;
	add.s32 	%r1476, %r657, %r659;
	add.s32 	%r1477, %r1476, -2;
	mul.lo.s32 	%r660, %r1477, %r50;
	add.s32 	%r1479, %r658, %r660;
	mul.lo.s32 	%r1480, %r1479, %r51;
	sub.s32 	%r661, %r1480, %r784;
	@%p17 bra 	$L__BB0_332;

	not.pred 	%p229, %p13;
	@%p229 bra 	$L__BB0_330;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2145;
  cvt.f32.f16 %f314, low;}

	// end inline asm
	add.s32 	%r1482, %r661, %r393;
	mul.wide.s32 	%rd317, %r1482, 4;
	add.s64 	%rd318, %rd37, %rd317;
	st.global.f32 	[%rd318], %f314;

$L__BB0_330:
	not.pred 	%p230, %p15;
	@%p230 bra 	$L__BB0_332;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2145;
  cvt.f32.f16 %f315, high;}

	// end inline asm
	add.s32 	%r1484, %r661, %r394;
	mul.wide.s32 	%rd319, %r1484, 4;
	add.s64 	%rd320, %rd37, %rd319;
	st.global.f32 	[%rd320], %f315;

$L__BB0_332:
	@%p17 bra 	$L__BB0_337;

	not.pred 	%p232, %p14;
	@%p232 bra 	$L__BB0_335;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2141;
  cvt.f32.f16 %f316, low;}

	// end inline asm
	add.s32 	%r1486, %r661, %r395;
	mul.wide.s32 	%rd321, %r1486, 4;
	add.s64 	%rd322, %rd37, %rd321;
	st.global.f32 	[%rd322], %f316;

$L__BB0_335:
	not.pred 	%p233, %p16;
	@%p233 bra 	$L__BB0_337;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2141;
  cvt.f32.f16 %f317, high;}

	// end inline asm
	add.s32 	%r1488, %r661, %r396;
	mul.wide.s32 	%rd323, %r1488, 4;
	add.s64 	%rd324, %rd37, %rd323;
	st.global.f32 	[%rd324], %f317;

$L__BB0_337:
	sub.s32 	%r1943, %r532, %r780;
	add.s32 	%r662, %r659, %r49;
	add.s32 	%r1490, %r1943, %r662;
	add.s32 	%r1491, %r1490, -2;
	mad.lo.s32 	%r1493, %r1491, %r50, %r658;
	mul.lo.s32 	%r1494, %r1493, %r51;
	sub.s32 	%r663, %r1494, %r784;
	@%p17 bra 	$L__BB0_342;

	not.pred 	%p235, %p13;
	@%p235 bra 	$L__BB0_340;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2144;
  cvt.f32.f16 %f318, low;}

	// end inline asm
	add.s32 	%r1496, %r663, %r393;
	mul.wide.s32 	%rd325, %r1496, 4;
	add.s64 	%rd326, %rd37, %rd325;
	st.global.f32 	[%rd326], %f318;

$L__BB0_340:
	not.pred 	%p236, %p15;
	@%p236 bra 	$L__BB0_342;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2144;
  cvt.f32.f16 %f319, high;}

	// end inline asm
	add.s32 	%r1498, %r663, %r394;
	mul.wide.s32 	%rd327, %r1498, 4;
	add.s64 	%rd328, %rd37, %rd327;
	st.global.f32 	[%rd328], %f319;

$L__BB0_342:
	@%p17 bra 	$L__BB0_347;

	not.pred 	%p238, %p14;
	@%p238 bra 	$L__BB0_345;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2140;
  cvt.f32.f16 %f320, low;}

	// end inline asm
	add.s32 	%r1500, %r663, %r395;
	mul.wide.s32 	%rd329, %r1500, 4;
	add.s64 	%rd330, %rd37, %rd329;
	st.global.f32 	[%rd330], %f320;

$L__BB0_345:
	not.pred 	%p239, %p16;
	@%p239 bra 	$L__BB0_347;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2140;
  cvt.f32.f16 %f321, high;}

	// end inline asm
	add.s32 	%r1502, %r663, %r396;
	mul.wide.s32 	%rd331, %r1502, 4;
	add.s64 	%rd332, %rd37, %rd331;
	st.global.f32 	[%rd332], %f321;

$L__BB0_347:
	add.s32 	%r664, %r658, 1;
	add.s32 	%r1503, %r664, %r660;
	mul.lo.s32 	%r1504, %r1503, %r51;
	sub.s32 	%r665, %r1504, %r784;
	@%p17 bra 	$L__BB0_352;

	not.pred 	%p241, %p13;
	@%p241 bra 	$L__BB0_350;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2137;
  cvt.f32.f16 %f322, low;}

	// end inline asm
	add.s32 	%r1506, %r665, %r393;
	mul.wide.s32 	%rd333, %r1506, 4;
	add.s64 	%rd334, %rd37, %rd333;
	st.global.f32 	[%rd334], %f322;

$L__BB0_350:
	not.pred 	%p242, %p15;
	@%p242 bra 	$L__BB0_352;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2137;
  cvt.f32.f16 %f323, high;}

	// end inline asm
	add.s32 	%r1508, %r665, %r394;
	mul.wide.s32 	%rd335, %r1508, 4;
	add.s64 	%rd336, %rd37, %rd335;
	st.global.f32 	[%rd336], %f323;

$L__BB0_352:
	@%p17 bra 	$L__BB0_357;

	not.pred 	%p244, %p14;
	@%p244 bra 	$L__BB0_355;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2135;
  cvt.f32.f16 %f324, low;}

	// end inline asm
	add.s32 	%r1510, %r665, %r395;
	mul.wide.s32 	%rd337, %r1510, 4;
	add.s64 	%rd338, %rd37, %rd337;
	st.global.f32 	[%rd338], %f324;

$L__BB0_355:
	not.pred 	%p245, %p16;
	@%p245 bra 	$L__BB0_357;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2135;
  cvt.f32.f16 %f325, high;}

	// end inline asm
	add.s32 	%r1512, %r665, %r396;
	mul.wide.s32 	%rd339, %r1512, 4;
	add.s64 	%rd340, %rd37, %rd339;
	st.global.f32 	[%rd340], %f325;

$L__BB0_357:
	not.b32 	%r1513, %r780;
	add.s32 	%r666, %r532, %r1513;
	not.b32 	%r1514, %r782;
	add.s32 	%r667, %r533, %r1514;
	add.s32 	%r1515, %r666, %r659;
	mul.lo.s32 	%r668, %r1515, %r50;
	add.s32 	%r1517, %r667, %r668;
	mul.lo.s32 	%r1518, %r1517, %r51;
	sub.s32 	%r669, %r1518, %r784;
	@%p17 bra 	$L__BB0_362;

	not.pred 	%p247, %p13;
	@%p247 bra 	$L__BB0_360;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2103;
  cvt.f32.f16 %f326, low;}

	// end inline asm
	add.s32 	%r1520, %r669, %r393;
	mul.wide.s32 	%rd341, %r1520, 4;
	add.s64 	%rd342, %rd37, %rd341;
	st.global.f32 	[%rd342], %f326;

$L__BB0_360:
	not.pred 	%p248, %p15;
	@%p248 bra 	$L__BB0_362;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2103;
  cvt.f32.f16 %f327, high;}

	// end inline asm
	add.s32 	%r1522, %r669, %r394;
	mul.wide.s32 	%rd343, %r1522, 4;
	add.s64 	%rd344, %rd37, %rd343;
	st.global.f32 	[%rd344], %f327;

$L__BB0_362:
	@%p17 bra 	$L__BB0_367;

	not.pred 	%p250, %p14;
	@%p250 bra 	$L__BB0_365;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2101;
  cvt.f32.f16 %f328, low;}

	// end inline asm
	add.s32 	%r1524, %r669, %r395;
	mul.wide.s32 	%rd345, %r1524, 4;
	add.s64 	%rd346, %rd37, %rd345;
	st.global.f32 	[%rd346], %f328;

$L__BB0_365:
	not.pred 	%p251, %p16;
	@%p251 bra 	$L__BB0_367;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2101;
  cvt.f32.f16 %f329, high;}

	// end inline asm
	add.s32 	%r1526, %r669, %r396;
	mul.wide.s32 	%rd347, %r1526, 4;
	add.s64 	%rd348, %rd37, %rd347;
	st.global.f32 	[%rd348], %f329;

$L__BB0_367:
	add.s32 	%r1528, %r666, %r662;
	mul.lo.s32 	%r670, %r1528, %r50;
	add.s32 	%r1529, %r667, %r670;
	mul.lo.s32 	%r1530, %r1529, %r51;
	sub.s32 	%r671, %r1530, %r784;
	@%p17 bra 	$L__BB0_372;

	not.pred 	%p253, %p13;
	@%p253 bra 	$L__BB0_370;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2133;
  cvt.f32.f16 %f330, low;}

	// end inline asm
	add.s32 	%r1532, %r671, %r393;
	mul.wide.s32 	%rd349, %r1532, 4;
	add.s64 	%rd350, %rd37, %rd349;
	st.global.f32 	[%rd350], %f330;

$L__BB0_370:
	not.pred 	%p254, %p15;
	@%p254 bra 	$L__BB0_372;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2133;
  cvt.f32.f16 %f331, high;}

	// end inline asm
	add.s32 	%r1534, %r671, %r394;
	mul.wide.s32 	%rd351, %r1534, 4;
	add.s64 	%rd352, %rd37, %rd351;
	st.global.f32 	[%rd352], %f331;

$L__BB0_372:
	@%p17 bra 	$L__BB0_377;

	not.pred 	%p256, %p14;
	@%p256 bra 	$L__BB0_375;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2131;
  cvt.f32.f16 %f332, low;}

	// end inline asm
	add.s32 	%r1536, %r671, %r395;
	mul.wide.s32 	%rd353, %r1536, 4;
	add.s64 	%rd354, %rd37, %rd353;
	st.global.f32 	[%rd354], %f332;

$L__BB0_375:
	not.pred 	%p257, %p16;
	@%p257 bra 	$L__BB0_377;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2131;
  cvt.f32.f16 %f333, high;}

	// end inline asm
	add.s32 	%r1538, %r671, %r396;
	mul.wide.s32 	%rd355, %r1538, 4;
	add.s64 	%rd356, %rd37, %rd355;
	st.global.f32 	[%rd356], %f333;

$L__BB0_377:
	add.s32 	%r1539, %r658, %r668;
	mul.lo.s32 	%r1540, %r1539, %r51;
	sub.s32 	%r672, %r1540, %r784;
	@%p17 bra 	$L__BB0_382;

	not.pred 	%p259, %p13;
	@%p259 bra 	$L__BB0_380;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r512;
  cvt.f32.f16 %f334, low;}

	// end inline asm
	add.s32 	%r1542, %r672, %r393;
	mul.wide.s32 	%rd357, %r1542, 4;
	add.s64 	%rd358, %rd37, %rd357;
	st.global.f32 	[%rd358], %f334;

$L__BB0_380:
	not.pred 	%p260, %p15;
	@%p260 bra 	$L__BB0_382;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r512;
  cvt.f32.f16 %f335, high;}

	// end inline asm
	add.s32 	%r1544, %r672, %r394;
	mul.wide.s32 	%rd359, %r1544, 4;
	add.s64 	%rd360, %rd37, %rd359;
	st.global.f32 	[%rd360], %f335;

$L__BB0_382:
	@%p17 bra 	$L__BB0_387;

	not.pred 	%p262, %p14;
	@%p262 bra 	$L__BB0_385;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r505;
  cvt.f32.f16 %f336, low;}

	// end inline asm
	add.s32 	%r1546, %r672, %r395;
	mul.wide.s32 	%rd361, %r1546, 4;
	add.s64 	%rd362, %rd37, %rd361;
	st.global.f32 	[%rd362], %f336;

$L__BB0_385:
	not.pred 	%p263, %p16;
	@%p263 bra 	$L__BB0_387;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r505;
  cvt.f32.f16 %f337, high;}

	// end inline asm
	add.s32 	%r1548, %r672, %r396;
	mul.wide.s32 	%rd363, %r1548, 4;
	add.s64 	%rd364, %rd37, %rd363;
	st.global.f32 	[%rd364], %f337;

$L__BB0_387:
	add.s32 	%r1549, %r658, %r670;
	mul.lo.s32 	%r1550, %r1549, %r51;
	sub.s32 	%r673, %r1550, %r784;
	@%p17 bra 	$L__BB0_392;

	not.pred 	%p265, %p13;
	@%p265 bra 	$L__BB0_390;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r511;
  cvt.f32.f16 %f338, low;}

	// end inline asm
	add.s32 	%r1552, %r673, %r393;
	mul.wide.s32 	%rd365, %r1552, 4;
	add.s64 	%rd366, %rd37, %rd365;
	st.global.f32 	[%rd366], %f338;

$L__BB0_390:
	not.pred 	%p266, %p15;
	@%p266 bra 	$L__BB0_392;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r511;
  cvt.f32.f16 %f339, high;}

	// end inline asm
	add.s32 	%r1554, %r673, %r394;
	mul.wide.s32 	%rd367, %r1554, 4;
	add.s64 	%rd368, %rd37, %rd367;
	st.global.f32 	[%rd368], %f339;

$L__BB0_392:
	@%p17 bra 	$L__BB0_397;

	not.pred 	%p268, %p14;
	@%p268 bra 	$L__BB0_395;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r504;
  cvt.f32.f16 %f340, low;}

	// end inline asm
	add.s32 	%r1556, %r673, %r395;
	mul.wide.s32 	%rd369, %r1556, 4;
	add.s64 	%rd370, %rd37, %rd369;
	st.global.f32 	[%rd370], %f340;

$L__BB0_395:
	not.pred 	%p269, %p16;
	@%p269 bra 	$L__BB0_397;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r504;
  cvt.f32.f16 %f341, high;}

	// end inline asm
	add.s32 	%r1558, %r673, %r396;
	mul.wide.s32 	%rd371, %r1558, 4;
	add.s64 	%rd372, %rd37, %rd371;
	st.global.f32 	[%rd372], %f341;

$L__BB0_397:
	add.s32 	%r674, %r662, %r49;
	add.s32 	%r1560, %r666, %r674;
	mul.lo.s32 	%r675, %r1560, %r50;
	add.s32 	%r1562, %r658, %r675;
	mul.lo.s32 	%r1563, %r1562, %r51;
	sub.s32 	%r676, %r1563, %r784;
	@%p17 bra 	$L__BB0_402;

	not.pred 	%p271, %p13;
	@%p271 bra 	$L__BB0_400;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2127;
  cvt.f32.f16 %f342, low;}

	// end inline asm
	add.s32 	%r1565, %r676, %r393;
	mul.wide.s32 	%rd373, %r1565, 4;
	add.s64 	%rd374, %rd37, %rd373;
	st.global.f32 	[%rd374], %f342;

$L__BB0_400:
	not.pred 	%p272, %p15;
	@%p272 bra 	$L__BB0_402;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2127;
  cvt.f32.f16 %f343, high;}

	// end inline asm
	add.s32 	%r1567, %r676, %r394;
	mul.wide.s32 	%rd375, %r1567, 4;
	add.s64 	%rd376, %rd37, %rd375;
	st.global.f32 	[%rd376], %f343;

$L__BB0_402:
	@%p17 bra 	$L__BB0_407;

	not.pred 	%p274, %p14;
	@%p274 bra 	$L__BB0_405;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2120;
  cvt.f32.f16 %f344, low;}

	// end inline asm
	add.s32 	%r1569, %r676, %r395;
	mul.wide.s32 	%rd377, %r1569, 4;
	add.s64 	%rd378, %rd37, %rd377;
	st.global.f32 	[%rd378], %f344;

$L__BB0_405:
	not.pred 	%p275, %p16;
	@%p275 bra 	$L__BB0_407;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2120;
  cvt.f32.f16 %f345, high;}

	// end inline asm
	add.s32 	%r1571, %r676, %r396;
	mul.wide.s32 	%rd379, %r1571, 4;
	add.s64 	%rd380, %rd37, %rd379;
	st.global.f32 	[%rd380], %f345;

$L__BB0_407:
	add.s32 	%r1923, %r658, 1;
	add.s32 	%r1572, %r1923, %r668;
	mul.lo.s32 	%r1573, %r1572, %r51;
	sub.s32 	%r677, %r1573, %r784;
	@%p17 bra 	$L__BB0_412;

	not.pred 	%p277, %p13;
	@%p277 bra 	$L__BB0_410;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r498;
  cvt.f32.f16 %f346, low;}

	// end inline asm
	add.s32 	%r1575, %r677, %r393;
	mul.wide.s32 	%rd381, %r1575, 4;
	add.s64 	%rd382, %rd37, %rd381;
	st.global.f32 	[%rd382], %f346;

$L__BB0_410:
	not.pred 	%p278, %p15;
	@%p278 bra 	$L__BB0_412;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r498;
  cvt.f32.f16 %f347, high;}

	// end inline asm
	add.s32 	%r1577, %r677, %r394;
	mul.wide.s32 	%rd383, %r1577, 4;
	add.s64 	%rd384, %rd37, %rd383;
	st.global.f32 	[%rd384], %f347;

$L__BB0_412:
	@%p17 bra 	$L__BB0_417;

	not.pred 	%p280, %p14;
	@%p280 bra 	$L__BB0_415;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r492;
  cvt.f32.f16 %f348, low;}

	// end inline asm
	add.s32 	%r1579, %r677, %r395;
	mul.wide.s32 	%rd385, %r1579, 4;
	add.s64 	%rd386, %rd37, %rd385;
	st.global.f32 	[%rd386], %f348;

$L__BB0_415:
	not.pred 	%p281, %p16;
	@%p281 bra 	$L__BB0_417;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r492;
  cvt.f32.f16 %f349, high;}

	// end inline asm
	add.s32 	%r1581, %r677, %r396;
	mul.wide.s32 	%rd387, %r1581, 4;
	add.s64 	%rd388, %rd37, %rd387;
	st.global.f32 	[%rd388], %f349;

$L__BB0_417:
	add.s32 	%r1924, %r658, 1;
	add.s32 	%r1582, %r1924, %r670;
	mul.lo.s32 	%r1583, %r1582, %r51;
	sub.s32 	%r678, %r1583, %r784;
	@%p17 bra 	$L__BB0_422;

	not.pred 	%p283, %p13;
	@%p283 bra 	$L__BB0_420;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2114;
  cvt.f32.f16 %f350, low;}

	// end inline asm
	add.s32 	%r1585, %r678, %r393;
	mul.wide.s32 	%rd389, %r1585, 4;
	add.s64 	%rd390, %rd37, %rd389;
	st.global.f32 	[%rd390], %f350;

$L__BB0_420:
	not.pred 	%p284, %p15;
	@%p284 bra 	$L__BB0_422;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2114;
  cvt.f32.f16 %f351, high;}

	// end inline asm
	add.s32 	%r1587, %r678, %r394;
	mul.wide.s32 	%rd391, %r1587, 4;
	add.s64 	%rd392, %rd37, %rd391;
	st.global.f32 	[%rd392], %f351;

$L__BB0_422:
	@%p17 bra 	$L__BB0_427;

	not.pred 	%p286, %p14;
	@%p286 bra 	$L__BB0_425;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2108;
  cvt.f32.f16 %f352, low;}

	// end inline asm
	add.s32 	%r1589, %r678, %r395;
	mul.wide.s32 	%rd393, %r1589, 4;
	add.s64 	%rd394, %rd37, %rd393;
	st.global.f32 	[%rd394], %f352;

$L__BB0_425:
	not.pred 	%p287, %p16;
	@%p287 bra 	$L__BB0_427;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2108;
  cvt.f32.f16 %f353, high;}

	// end inline asm
	add.s32 	%r1591, %r678, %r396;
	mul.wide.s32 	%rd395, %r1591, 4;
	add.s64 	%rd396, %rd37, %rd395;
	st.global.f32 	[%rd396], %f353;

$L__BB0_427:
	add.s32 	%r1925, %r658, 1;
	add.s32 	%r1592, %r1925, %r675;
	mul.lo.s32 	%r1593, %r1592, %r51;
	sub.s32 	%r679, %r1593, %r784;
	@%p17 bra 	$L__BB0_432;

	not.pred 	%p289, %p13;
	@%p289 bra 	$L__BB0_430;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2113;
  cvt.f32.f16 %f354, low;}

	// end inline asm
	add.s32 	%r1595, %r679, %r393;
	mul.wide.s32 	%rd397, %r1595, 4;
	add.s64 	%rd398, %rd37, %rd397;
	st.global.f32 	[%rd398], %f354;

$L__BB0_430:
	not.pred 	%p290, %p15;
	@%p290 bra 	$L__BB0_432;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2113;
  cvt.f32.f16 %f355, high;}

	// end inline asm
	add.s32 	%r1597, %r679, %r394;
	mul.wide.s32 	%rd399, %r1597, 4;
	add.s64 	%rd400, %rd37, %rd399;
	st.global.f32 	[%rd400], %f355;

$L__BB0_432:
	@%p17 bra 	$L__BB0_437;

	not.pred 	%p292, %p14;
	@%p292 bra 	$L__BB0_435;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2107;
  cvt.f32.f16 %f356, low;}

	// end inline asm
	add.s32 	%r1599, %r679, %r395;
	mul.wide.s32 	%rd401, %r1599, 4;
	add.s64 	%rd402, %rd37, %rd401;
	st.global.f32 	[%rd402], %f356;

$L__BB0_435:
	not.pred 	%p293, %p16;
	@%p293 bra 	$L__BB0_437;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2107;
  cvt.f32.f16 %f357, high;}

	// end inline asm
	add.s32 	%r1601, %r679, %r396;
	mul.wide.s32 	%rd403, %r1601, 4;
	add.s64 	%rd404, %rd37, %rd403;
	st.global.f32 	[%rd404], %f357;

$L__BB0_437:
	add.s32 	%r680, %r658, 2;
	add.s32 	%r1602, %r680, %r668;
	mul.lo.s32 	%r1603, %r1602, %r51;
	sub.s32 	%r681, %r1603, %r784;
	@%p17 bra 	$L__BB0_442;

	not.pred 	%p295, %p13;
	@%p295 bra 	$L__BB0_440;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2081;
  cvt.f32.f16 %f358, low;}

	// end inline asm
	add.s32 	%r1605, %r681, %r393;
	mul.wide.s32 	%rd405, %r1605, 4;
	add.s64 	%rd406, %rd37, %rd405;
	st.global.f32 	[%rd406], %f358;

$L__BB0_440:
	not.pred 	%p296, %p15;
	@%p296 bra 	$L__BB0_442;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2081;
  cvt.f32.f16 %f359, high;}

	// end inline asm
	add.s32 	%r1607, %r681, %r394;
	mul.wide.s32 	%rd407, %r1607, 4;
	add.s64 	%rd408, %rd37, %rd407;
	st.global.f32 	[%rd408], %f359;

$L__BB0_442:
	@%p17 bra 	$L__BB0_447;

	not.pred 	%p298, %p14;
	@%p298 bra 	$L__BB0_445;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2077;
  cvt.f32.f16 %f360, low;}

	// end inline asm
	add.s32 	%r1609, %r681, %r395;
	mul.wide.s32 	%rd409, %r1609, 4;
	add.s64 	%rd410, %rd37, %rd409;
	st.global.f32 	[%rd410], %f360;

$L__BB0_445:
	not.pred 	%p299, %p16;
	@%p299 bra 	$L__BB0_447;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2077;
  cvt.f32.f16 %f361, high;}

	// end inline asm
	add.s32 	%r1611, %r681, %r396;
	mul.wide.s32 	%rd411, %r1611, 4;
	add.s64 	%rd412, %rd37, %rd411;
	st.global.f32 	[%rd412], %f361;

$L__BB0_447:
	mul.lo.s32 	%r682, %r1490, %r50;
	add.s32 	%r1614, %r667, %r682;
	mul.lo.s32 	%r1615, %r1614, %r51;
	sub.s32 	%r683, %r1615, %r784;
	@%p17 bra 	$L__BB0_452;

	not.pred 	%p301, %p13;
	@%p301 bra 	$L__BB0_450;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r452;
  cvt.f32.f16 %f362, low;}

	// end inline asm
	add.s32 	%r1617, %r683, %r393;
	mul.wide.s32 	%rd413, %r1617, 4;
	add.s64 	%rd414, %rd37, %rd413;
	st.global.f32 	[%rd414], %f362;

$L__BB0_450:
	not.pred 	%p302, %p15;
	@%p302 bra 	$L__BB0_452;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r452;
  cvt.f32.f16 %f363, high;}

	// end inline asm
	add.s32 	%r1619, %r683, %r394;
	mul.wide.s32 	%rd415, %r1619, 4;
	add.s64 	%rd416, %rd37, %rd415;
	st.global.f32 	[%rd416], %f363;

$L__BB0_452:
	@%p17 bra 	$L__BB0_457;

	not.pred 	%p304, %p14;
	@%p304 bra 	$L__BB0_455;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r445;
  cvt.f32.f16 %f364, low;}

	// end inline asm
	add.s32 	%r1621, %r683, %r395;
	mul.wide.s32 	%rd417, %r1621, 4;
	add.s64 	%rd418, %rd37, %rd417;
	st.global.f32 	[%rd418], %f364;

$L__BB0_455:
	not.pred 	%p305, %p16;
	@%p305 bra 	$L__BB0_457;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r445;
  cvt.f32.f16 %f365, high;}

	// end inline asm
	add.s32 	%r1623, %r683, %r396;
	mul.wide.s32 	%rd419, %r1623, 4;
	add.s64 	%rd420, %rd37, %rd419;
	st.global.f32 	[%rd420], %f365;

$L__BB0_457:
	sub.s32 	%r1944, %r532, %r780;
	add.s32 	%r1625, %r1944, %r674;
	mul.lo.s32 	%r684, %r1625, %r50;
	add.s32 	%r1626, %r667, %r684;
	mul.lo.s32 	%r1627, %r1626, %r51;
	sub.s32 	%r685, %r1627, %r784;
	@%p17 bra 	$L__BB0_462;

	not.pred 	%p307, %p13;
	@%p307 bra 	$L__BB0_460;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2072;
  cvt.f32.f16 %f366, low;}

	// end inline asm
	add.s32 	%r1629, %r685, %r393;
	mul.wide.s32 	%rd421, %r1629, 4;
	add.s64 	%rd422, %rd37, %rd421;
	st.global.f32 	[%rd422], %f366;

$L__BB0_460:
	not.pred 	%p308, %p15;
	@%p308 bra 	$L__BB0_462;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2072;
  cvt.f32.f16 %f367, high;}

	// end inline asm
	add.s32 	%r1631, %r685, %r394;
	mul.wide.s32 	%rd423, %r1631, 4;
	add.s64 	%rd424, %rd37, %rd423;
	st.global.f32 	[%rd424], %f367;

$L__BB0_462:
	@%p17 bra 	$L__BB0_467;

	not.pred 	%p310, %p14;
	@%p310 bra 	$L__BB0_465;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2065;
  cvt.f32.f16 %f368, low;}

	// end inline asm
	add.s32 	%r1633, %r685, %r395;
	mul.wide.s32 	%rd425, %r1633, 4;
	add.s64 	%rd426, %rd37, %rd425;
	st.global.f32 	[%rd426], %f368;

$L__BB0_465:
	not.pred 	%p311, %p16;
	@%p311 bra 	$L__BB0_467;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2065;
  cvt.f32.f16 %f369, high;}

	// end inline asm
	add.s32 	%r1635, %r685, %r396;
	mul.wide.s32 	%rd427, %r1635, 4;
	add.s64 	%rd428, %rd37, %rd427;
	st.global.f32 	[%rd428], %f369;

$L__BB0_467:
	mul.lo.s32 	%r686, %r1476, %r50;
	add.s32 	%r1638, %r658, %r686;
	mul.lo.s32 	%r1639, %r1638, %r51;
	sub.s32 	%r687, %r1639, %r784;
	@%p17 bra 	$L__BB0_472;

	not.pred 	%p313, %p13;
	@%p313 bra 	$L__BB0_470;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2129;
  cvt.f32.f16 %f370, low;}

	// end inline asm
	add.s32 	%r1641, %r687, %r393;
	mul.wide.s32 	%rd429, %r1641, 4;
	add.s64 	%rd430, %rd37, %rd429;
	st.global.f32 	[%rd430], %f370;

$L__BB0_470:
	not.pred 	%p314, %p15;
	@%p314 bra 	$L__BB0_472;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2129;
  cvt.f32.f16 %f371, high;}

	// end inline asm
	add.s32 	%r1643, %r687, %r394;
	mul.wide.s32 	%rd431, %r1643, 4;
	add.s64 	%rd432, %rd37, %rd431;
	st.global.f32 	[%rd432], %f371;

$L__BB0_472:
	@%p17 bra 	$L__BB0_477;

	not.pred 	%p316, %p14;
	@%p316 bra 	$L__BB0_475;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2122;
  cvt.f32.f16 %f372, low;}

	// end inline asm
	add.s32 	%r1645, %r687, %r395;
	mul.wide.s32 	%rd433, %r1645, 4;
	add.s64 	%rd434, %rd37, %rd433;
	st.global.f32 	[%rd434], %f372;

$L__BB0_475:
	not.pred 	%p317, %p16;
	@%p317 bra 	$L__BB0_477;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2122;
  cvt.f32.f16 %f373, high;}

	// end inline asm
	add.s32 	%r1647, %r687, %r396;
	mul.wide.s32 	%rd435, %r1647, 4;
	add.s64 	%rd436, %rd37, %rd435;
	st.global.f32 	[%rd436], %f373;

$L__BB0_477:
	add.s32 	%r1648, %r658, %r682;
	mul.lo.s32 	%r1649, %r1648, %r51;
	sub.s32 	%r688, %r1649, %r784;
	@%p17 bra 	$L__BB0_482;

	not.pred 	%p319, %p13;
	@%p319 bra 	$L__BB0_480;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2128;
  cvt.f32.f16 %f374, low;}

	// end inline asm
	add.s32 	%r1651, %r688, %r393;
	mul.wide.s32 	%rd437, %r1651, 4;
	add.s64 	%rd438, %rd37, %rd437;
	st.global.f32 	[%rd438], %f374;

$L__BB0_480:
	not.pred 	%p320, %p15;
	@%p320 bra 	$L__BB0_482;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2128;
  cvt.f32.f16 %f375, high;}

	// end inline asm
	add.s32 	%r1653, %r688, %r394;
	mul.wide.s32 	%rd439, %r1653, 4;
	add.s64 	%rd440, %rd37, %rd439;
	st.global.f32 	[%rd440], %f375;

$L__BB0_482:
	@%p17 bra 	$L__BB0_487;

	not.pred 	%p322, %p14;
	@%p322 bra 	$L__BB0_485;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2121;
  cvt.f32.f16 %f376, low;}

	// end inline asm
	add.s32 	%r1655, %r688, %r395;
	mul.wide.s32 	%rd441, %r1655, 4;
	add.s64 	%rd442, %rd37, %rd441;
	st.global.f32 	[%rd442], %f376;

$L__BB0_485:
	not.pred 	%p323, %p16;
	@%p323 bra 	$L__BB0_487;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2121;
  cvt.f32.f16 %f377, high;}

	// end inline asm
	add.s32 	%r1657, %r688, %r396;
	mul.wide.s32 	%rd443, %r1657, 4;
	add.s64 	%rd444, %rd37, %rd443;
	st.global.f32 	[%rd444], %f377;

$L__BB0_487:
	add.s32 	%r1658, %r658, %r684;
	mul.lo.s32 	%r1659, %r1658, %r51;
	sub.s32 	%r689, %r1659, %r784;
	@%p17 bra 	$L__BB0_492;

	not.pred 	%p325, %p13;
	@%p325 bra 	$L__BB0_490;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r481;
  cvt.f32.f16 %f378, low;}

	// end inline asm
	add.s32 	%r1661, %r689, %r393;
	mul.wide.s32 	%rd445, %r1661, 4;
	add.s64 	%rd446, %rd37, %rd445;
	st.global.f32 	[%rd446], %f378;

$L__BB0_490:
	not.pred 	%p326, %p15;
	@%p326 bra 	$L__BB0_492;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r481;
  cvt.f32.f16 %f379, high;}

	// end inline asm
	add.s32 	%r1663, %r689, %r394;
	mul.wide.s32 	%rd447, %r1663, 4;
	add.s64 	%rd448, %rd37, %rd447;
	st.global.f32 	[%rd448], %f379;

$L__BB0_492:
	@%p17 bra 	$L__BB0_497;

	not.pred 	%p328, %p14;
	@%p328 bra 	$L__BB0_495;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r474;
  cvt.f32.f16 %f380, low;}

	// end inline asm
	add.s32 	%r1665, %r689, %r395;
	mul.wide.s32 	%rd449, %r1665, 4;
	add.s64 	%rd450, %rd37, %rd449;
	st.global.f32 	[%rd450], %f380;

$L__BB0_495:
	not.pred 	%p329, %p16;
	@%p329 bra 	$L__BB0_497;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r474;
  cvt.f32.f16 %f381, high;}

	// end inline asm
	add.s32 	%r1667, %r689, %r396;
	mul.wide.s32 	%rd451, %r1667, 4;
	add.s64 	%rd452, %rd37, %rd451;
	st.global.f32 	[%rd452], %f381;

$L__BB0_497:
	add.s32 	%r1926, %r658, 1;
	add.s32 	%r1668, %r1926, %r686;
	mul.lo.s32 	%r1669, %r1668, %r51;
	sub.s32 	%r690, %r1669, %r784;
	@%p17 bra 	$L__BB0_502;

	not.pred 	%p331, %p13;
	@%p331 bra 	$L__BB0_500;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2115;
  cvt.f32.f16 %f382, low;}

	// end inline asm
	add.s32 	%r1671, %r690, %r393;
	mul.wide.s32 	%rd453, %r1671, 4;
	add.s64 	%rd454, %rd37, %rd453;
	st.global.f32 	[%rd454], %f382;

$L__BB0_500:
	not.pred 	%p332, %p15;
	@%p332 bra 	$L__BB0_502;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2115;
  cvt.f32.f16 %f383, high;}

	// end inline asm
	add.s32 	%r1673, %r690, %r394;
	mul.wide.s32 	%rd455, %r1673, 4;
	add.s64 	%rd456, %rd37, %rd455;
	st.global.f32 	[%rd456], %f383;

$L__BB0_502:
	@%p17 bra 	$L__BB0_507;

	not.pred 	%p334, %p14;
	@%p334 bra 	$L__BB0_505;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2109;
  cvt.f32.f16 %f384, low;}

	// end inline asm
	add.s32 	%r1675, %r690, %r395;
	mul.wide.s32 	%rd457, %r1675, 4;
	add.s64 	%rd458, %rd37, %rd457;
	st.global.f32 	[%rd458], %f384;

$L__BB0_505:
	not.pred 	%p335, %p16;
	@%p335 bra 	$L__BB0_507;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2109;
  cvt.f32.f16 %f385, high;}

	// end inline asm
	add.s32 	%r1677, %r690, %r396;
	mul.wide.s32 	%rd459, %r1677, 4;
	add.s64 	%rd460, %rd37, %rd459;
	st.global.f32 	[%rd460], %f385;

$L__BB0_507:
	add.s32 	%r1927, %r658, 1;
	add.s32 	%r1678, %r1927, %r682;
	mul.lo.s32 	%r1679, %r1678, %r51;
	sub.s32 	%r691, %r1679, %r784;
	@%p17 bra 	$L__BB0_512;

	not.pred 	%p337, %p13;
	@%p337 bra 	$L__BB0_510;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r429;
  cvt.f32.f16 %f386, low;}

	// end inline asm
	add.s32 	%r1681, %r691, %r393;
	mul.wide.s32 	%rd461, %r1681, 4;
	add.s64 	%rd462, %rd37, %rd461;
	st.global.f32 	[%rd462], %f386;

$L__BB0_510:
	not.pred 	%p338, %p15;
	@%p338 bra 	$L__BB0_512;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r429;
  cvt.f32.f16 %f387, high;}

	// end inline asm
	add.s32 	%r1683, %r691, %r394;
	mul.wide.s32 	%rd463, %r1683, 4;
	add.s64 	%rd464, %rd37, %rd463;
	st.global.f32 	[%rd464], %f387;

$L__BB0_512:
	@%p17 bra 	$L__BB0_517;

	not.pred 	%p340, %p14;
	@%p340 bra 	$L__BB0_515;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r421;
  cvt.f32.f16 %f388, low;}

	// end inline asm
	add.s32 	%r1685, %r691, %r395;
	mul.wide.s32 	%rd465, %r1685, 4;
	add.s64 	%rd466, %rd37, %rd465;
	st.global.f32 	[%rd466], %f388;

$L__BB0_515:
	not.pred 	%p341, %p16;
	@%p341 bra 	$L__BB0_517;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r421;
  cvt.f32.f16 %f389, high;}

	// end inline asm
	add.s32 	%r1687, %r691, %r396;
	mul.wide.s32 	%rd467, %r1687, 4;
	add.s64 	%rd468, %rd37, %rd467;
	st.global.f32 	[%rd468], %f389;

$L__BB0_517:
	add.s32 	%r1928, %r658, 1;
	add.s32 	%r1688, %r1928, %r684;
	mul.lo.s32 	%r1689, %r1688, %r51;
	sub.s32 	%r692, %r1689, %r784;
	@%p17 bra 	$L__BB0_522;

	not.pred 	%p343, %p13;
	@%p343 bra 	$L__BB0_520;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r468;
  cvt.f32.f16 %f390, low;}

	// end inline asm
	add.s32 	%r1691, %r692, %r393;
	mul.wide.s32 	%rd469, %r1691, 4;
	add.s64 	%rd470, %rd37, %rd469;
	st.global.f32 	[%rd470], %f390;

$L__BB0_520:
	not.pred 	%p344, %p15;
	@%p344 bra 	$L__BB0_522;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r468;
  cvt.f32.f16 %f391, high;}

	// end inline asm
	add.s32 	%r1693, %r692, %r394;
	mul.wide.s32 	%rd471, %r1693, 4;
	add.s64 	%rd472, %rd37, %rd471;
	st.global.f32 	[%rd472], %f391;

$L__BB0_522:
	@%p17 bra 	$L__BB0_527;

	not.pred 	%p346, %p14;
	@%p346 bra 	$L__BB0_525;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r464;
  cvt.f32.f16 %f392, low;}

	// end inline asm
	add.s32 	%r1695, %r692, %r395;
	mul.wide.s32 	%rd473, %r1695, 4;
	add.s64 	%rd474, %rd37, %rd473;
	st.global.f32 	[%rd474], %f392;

$L__BB0_525:
	not.pred 	%p347, %p16;
	@%p347 bra 	$L__BB0_527;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r464;
  cvt.f32.f16 %f393, high;}

	// end inline asm
	add.s32 	%r1697, %r692, %r396;
	mul.wide.s32 	%rd475, %r1697, 4;
	add.s64 	%rd476, %rd37, %rd475;
	st.global.f32 	[%rd476], %f393;

$L__BB0_527:
	add.s32 	%r1946, %r658, 2;
	add.s32 	%r1698, %r1946, %r684;
	mul.lo.s32 	%r1699, %r1698, %r51;
	sub.s32 	%r693, %r1699, %r784;
	@%p17 bra 	$L__BB0_532;

	not.pred 	%p349, %p13;
	@%p349 bra 	$L__BB0_530;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2042;
  cvt.f32.f16 %f394, low;}

	// end inline asm
	add.s32 	%r1701, %r693, %r393;
	mul.wide.s32 	%rd477, %r1701, 4;
	add.s64 	%rd478, %rd37, %rd477;
	st.global.f32 	[%rd478], %f394;

$L__BB0_530:
	not.pred 	%p350, %p15;
	@%p350 bra 	$L__BB0_532;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2042;
  cvt.f32.f16 %f395, high;}

	// end inline asm
	add.s32 	%r1703, %r693, %r394;
	mul.wide.s32 	%rd479, %r1703, 4;
	add.s64 	%rd480, %rd37, %rd479;
	st.global.f32 	[%rd480], %f395;

$L__BB0_532:
	@%p17 bra 	$L__BB0_537;

	not.pred 	%p352, %p14;
	@%p352 bra 	$L__BB0_535;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2038;
  cvt.f32.f16 %f396, low;}

	// end inline asm
	add.s32 	%r1705, %r693, %r395;
	mul.wide.s32 	%rd481, %r1705, 4;
	add.s64 	%rd482, %rd37, %rd481;
	st.global.f32 	[%rd482], %f396;

$L__BB0_535:
	not.pred 	%p353, %p16;
	@%p353 bra 	$L__BB0_537;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2038;
  cvt.f32.f16 %f397, high;}

	// end inline asm
	add.s32 	%r1707, %r693, %r396;
	mul.wide.s32 	%rd483, %r1707, 4;
	add.s64 	%rd484, %rd37, %rd483;
	st.global.f32 	[%rd484], %f397;

$L__BB0_537:
	sub.s32 	%r1945, %r532, %r780;
	add.s32 	%r694, %r1945, 1;
	add.s32 	%r1708, %r694, %r662;
	mad.lo.s32 	%r1710, %r1708, %r50, %r658;
	mul.lo.s32 	%r1711, %r1710, %r51;
	sub.s32 	%r695, %r1711, %r784;
	@%p17 bra 	$L__BB0_542;

	not.pred 	%p355, %p13;
	@%p355 bra 	$L__BB0_540;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2099;
  cvt.f32.f16 %f398, low;}

	// end inline asm
	add.s32 	%r1713, %r695, %r393;
	mul.wide.s32 	%rd485, %r1713, 4;
	add.s64 	%rd486, %rd37, %rd485;
	st.global.f32 	[%rd486], %f398;

$L__BB0_540:
	not.pred 	%p356, %p15;
	@%p356 bra 	$L__BB0_542;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2099;
  cvt.f32.f16 %f399, high;}

	// end inline asm
	add.s32 	%r1715, %r695, %r394;
	mul.wide.s32 	%rd487, %r1715, 4;
	add.s64 	%rd488, %rd37, %rd487;
	st.global.f32 	[%rd488], %f399;

$L__BB0_542:
	@%p17 bra 	$L__BB0_547;

	not.pred 	%p358, %p14;
	@%p358 bra 	$L__BB0_545;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2093;
  cvt.f32.f16 %f400, low;}

	// end inline asm
	add.s32 	%r1717, %r695, %r395;
	mul.wide.s32 	%rd489, %r1717, 4;
	add.s64 	%rd490, %rd37, %rd489;
	st.global.f32 	[%rd490], %f400;

$L__BB0_545:
	not.pred 	%p359, %p16;
	@%p359 bra 	$L__BB0_547;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2093;
  cvt.f32.f16 %f401, high;}

	// end inline asm
	add.s32 	%r1719, %r695, %r396;
	mul.wide.s32 	%rd491, %r1719, 4;
	add.s64 	%rd492, %rd37, %rd491;
	st.global.f32 	[%rd492], %f401;

$L__BB0_547:
	add.s32 	%r1721, %r694, %r674;
	mul.lo.s32 	%r696, %r1721, %r50;
	add.s32 	%r1722, %r658, %r696;
	mul.lo.s32 	%r1723, %r1722, %r51;
	sub.s32 	%r697, %r1723, %r784;
	@%p17 bra 	$L__BB0_552;

	not.pred 	%p361, %p13;
	@%p361 bra 	$L__BB0_550;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2098;
  cvt.f32.f16 %f402, low;}

	// end inline asm
	add.s32 	%r1725, %r697, %r393;
	mul.wide.s32 	%rd493, %r1725, 4;
	add.s64 	%rd494, %rd37, %rd493;
	st.global.f32 	[%rd494], %f402;

$L__BB0_550:
	not.pred 	%p362, %p15;
	@%p362 bra 	$L__BB0_552;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2098;
  cvt.f32.f16 %f403, high;}

	// end inline asm
	add.s32 	%r1727, %r697, %r394;
	mul.wide.s32 	%rd495, %r1727, 4;
	add.s64 	%rd496, %rd37, %rd495;
	st.global.f32 	[%rd496], %f403;

$L__BB0_552:
	@%p17 bra 	$L__BB0_557;

	not.pred 	%p364, %p14;
	@%p364 bra 	$L__BB0_555;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2092;
  cvt.f32.f16 %f404, low;}

	// end inline asm
	add.s32 	%r1729, %r697, %r395;
	mul.wide.s32 	%rd497, %r1729, 4;
	add.s64 	%rd498, %rd37, %rd497;
	st.global.f32 	[%rd498], %f404;

$L__BB0_555:
	not.pred 	%p365, %p16;
	@%p365 bra 	$L__BB0_557;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2092;
  cvt.f32.f16 %f405, high;}

	// end inline asm
	add.s32 	%r1731, %r697, %r396;
	mul.wide.s32 	%rd499, %r1731, 4;
	add.s64 	%rd500, %rd37, %rd499;
	st.global.f32 	[%rd500], %f405;

$L__BB0_557:
	add.s32 	%r1929, %r658, 1;
	add.s32 	%r1732, %r1929, %r696;
	mul.lo.s32 	%r1733, %r1732, %r51;
	sub.s32 	%r698, %r1733, %r784;
	@%p17 bra 	$L__BB0_562;

	not.pred 	%p367, %p13;
	@%p367 bra 	$L__BB0_560;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2087;
  cvt.f32.f16 %f406, low;}

	// end inline asm
	add.s32 	%r1735, %r698, %r393;
	mul.wide.s32 	%rd501, %r1735, 4;
	add.s64 	%rd502, %rd37, %rd501;
	st.global.f32 	[%rd502], %f406;

$L__BB0_560:
	not.pred 	%p368, %p15;
	@%p368 bra 	$L__BB0_562;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2087;
  cvt.f32.f16 %f407, high;}

	// end inline asm
	add.s32 	%r1737, %r698, %r394;
	mul.wide.s32 	%rd503, %r1737, 4;
	add.s64 	%rd504, %rd37, %rd503;
	st.global.f32 	[%rd504], %f407;

$L__BB0_562:
	@%p17 bra 	$L__BB0_567;

	not.pred 	%p370, %p14;
	@%p370 bra 	$L__BB0_565;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2084;
  cvt.f32.f16 %f408, low;}

	// end inline asm
	add.s32 	%r1739, %r698, %r395;
	mul.wide.s32 	%rd505, %r1739, 4;
	add.s64 	%rd506, %rd37, %rd505;
	st.global.f32 	[%rd506], %f408;

$L__BB0_565:
	not.pred 	%p371, %p16;
	@%p371 bra 	$L__BB0_567;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2084;
  cvt.f32.f16 %f409, high;}

	// end inline asm
	add.s32 	%r1741, %r698, %r396;
	mul.wide.s32 	%rd507, %r1741, 4;
	add.s64 	%rd508, %rd37, %rd507;
	st.global.f32 	[%rd508], %f409;

$L__BB0_567:
	setp.ne.s32 	%p372, %r34, %r1267;
	ld.param.u64 	%rd509, [%rd1+80];
	cvta.to.global.u64 	%rd39, %rd509;
	@%p372 bra 	$L__BB0_569;

	mad.lo.s32 	%r1743, %r530, %r769, %r37;
	mul.lo.s32 	%r1744, %r767, %r1743;
	mul.lo.s32 	%r1745, %r1744, 768;
	mad.lo.s32 	%r1747, %r35, 384, %r1745;
	add.s32 	%r1748, %r1747, -64;
	mul.wide.s32 	%rd510, %r1748, 4;
	add.s64 	%rd511, %rd39, %rd510;
	add.s64 	%rd513, %rd511, %rd274;
	st.global.v4.u32 	[%rd513+256], {%r2103, %r2101, %r2072, %r2065};
	st.global.v4.u32 	[%rd513+1024], {%r2145, %r2141, %r2127, %r2120};
	add.s64 	%rd515, %rd511, %rd276;
	st.global.v2.u32 	[%rd515+768], {%r2133, %r2131};
	st.global.v2.u32 	[%rd515+1536], {%r2144, %r2140};

$L__BB0_569:
	setp.ne.s32 	%p373, %r35, %r1272;
	@%p373 bra 	$L__BB0_574;

	ld.param.u64 	%rd543, [%rd1+80];
	cvta.to.global.u64 	%rd542, %rd543;
	not.b32 	%r1942, %r34;
	add.s32 	%r1941, %r766, %r1942;
	setp.eq.s32 	%p374, %r34, %r1267;
	mad.lo.s32 	%r1751, %r531, %r768, %r36;
	mul.lo.s32 	%r1758, %r797, %r64;
	mul.lo.s32 	%r1759, %r1758, 768;
	mad.lo.s32 	%r1760, %r1941, 384, %r1759;
	add.s32 	%r1761, %r1760, -64;
	mad.lo.s32 	%r1762, %r1751, %r829, %r1761;
	mul.wide.s32 	%rd516, %r1762, 4;
	add.s64 	%rd517, %rd542, %rd516;
	add.s64 	%rd519, %rd517, %rd274;
	st.global.v4.u32 	[%rd519+256], {%r2137, %r2135, %r2113, %r2107};
	st.global.v4.u32 	[%rd519+1024], {%r2081, %r2077, %r2042, %r2038};
	add.s64 	%rd40, %rd517, %rd276;
	@%p374 bra 	$L__BB0_572;

	st.global.v2.u32 	[%rd40], {%r2144, %r2140};

$L__BB0_572:
	st.global.v2.u32 	[%rd40+768], {%r2114, %r2108};
	@%p198 bra 	$L__BB0_574;

	st.global.v2.u32 	[%rd40+1536], {%r2173, %r2171};

$L__BB0_574:
	setp.ge.s32 	%p376, %r34, %r1267;
	@%p376 bra 	$L__BB0_576;

	add.s32 	%r1940, %r65, %r65;
	mul.lo.s32 	%r1763, %r767, 320;
	mul.lo.s32 	%r1765, %r35, 320;
	mad.lo.s32 	%r1766, %r1763, %r34, %r1765;
	add.s32 	%r1769, %r1940, -64;
	mad.lo.s32 	%r1774, %r1769, %r1272, %r1269;
	add.s32 	%r1775, %r1766, %r1774;
	shl.b32 	%r1776, %r1775, 2;
	mov.u32 	%r1777, _ZN6kernel5shmemE;
	add.s32 	%r1778, %r1777, %r1776;
	shl.b32 	%r1779, %r39, 4;
	add.s32 	%r1780, %r1778, %r1779;
	st.shared.v4.u32 	[%r1780], {%r2222, %r2221, %r2217, %r2215};
	shl.b32 	%r1781, %r39, 3;
	add.s32 	%r1782, %r1778, %r1781;
	st.shared.v2.u32 	[%r1782+512], {%r2132, %r2130};
	st.shared.v4.u32 	[%r1780+768], {%r2143, %r2139, %r2123, %r2116};

$L__BB0_576:
	setp.ge.s32 	%p377, %r35, %r1272;
	@%p377 bra 	$L__BB0_580;

	not.b32 	%r1939, %r34;
	add.s32 	%r1938, %r766, %r1939;
	mad.lo.s32 	%r1788, %r1938, 384, %r1275;
	mad.lo.s32 	%r1792, %r1270, %r35, %r1788;
	add.s32 	%r1798, %r1792, %r1273;
	shl.b32 	%r1799, %r1798, 2;
	mov.u32 	%r1800, _ZN6kernel5shmemE;
	add.s32 	%r1801, %r1800, %r1799;
	shl.b32 	%r1802, %r39, 3;
	add.s32 	%r1803, %r1801, %r1802;
	@%p376 bra 	$L__BB0_579;

	add.s32 	%r1921, %r1803, -256;
	st.shared.v2.u32 	[%r1921], {%r2142, %r2138};

$L__BB0_579:
	shl.b32 	%r1823, %r39, 4;
	add.s32 	%r1824, %r1801, %r1823;
	st.shared.v4.u32 	[%r1824], {%r2136, %r2134, %r2110, %r2104};
	add.s32 	%r1922, %r1803, -256;
	st.shared.v2.u32 	[%r1922+768], {%r2111, %r2105};
	st.shared.v4.u32 	[%r1824+768], {%r2220, %r2219, %r2208, %r2207};

$L__BB0_580:
	bar.sync 	0;
	ld.param.u64 	%rd521, [%rd1+80];
	cvta.to.global.u64 	%rd41, %rd521;
	mov.u32 	%r2246, %r2058;
	mov.u32 	%r2228, %r2036;
	mov.u32 	%r2230, %r2040;
	mov.u32 	%r2044, %r417;
	mov.u32 	%r2248, %r2054;
	mov.u32 	%r2050, %r425;
	mov.u32 	%r2057, %r435;
	mov.u32 	%r2061, %r2151;
	mov.u32 	%r2067, %r446;
	mov.u32 	%r2068, %r2149;
	mov.u32 	%r2253, %r2147;
	mov.u32 	%r2254, %r2148;
	@%p198 bra 	$L__BB0_584;

	setp.eq.s32 	%p380, %r35, 0;
	mad.lo.s32 	%r1827, %r530, %r769, %r37;
	mad.lo.s32 	%r1828, %r1827, 768, 384;
	mul.lo.s32 	%r1829, %r1828, %r767;
	mad.lo.s32 	%r1830, %r35, 384, %r1829;
	add.s32 	%r1831, %r1830, -128;
	mul.wide.s32 	%rd522, %r1831, 4;
	add.s64 	%rd523, %rd41, %rd522;
	add.s64 	%rd525, %rd523, %rd274;
	add.s64 	%rd42, %rd525, 512;
	mov.u32 	%r2246, %r2058;
	mov.u32 	%r2248, %r2054;
	mov.u32 	%r2253, %r2147;
	mov.u32 	%r2254, %r2148;
	@%p380 bra 	$L__BB0_583;

	ld.global.v4.u32 	{%r2253, %r2254, %r2246, %r2248}, [%rd42+-512];

$L__BB0_583:
	ld.global.v4.u32 	{%r2061, %r2068, %r2057, %r2067}, [%rd42];
	ld.global.v4.u32 	{%r2050, %r2044, %r2230, %r2228}, [%rd42+512];
	ld.global.v4.u32 	{%r2231, %r2229, %r2242, %r2240}, [%rd42+1024];

$L__BB0_584:
	mov.u32 	%r2030, %r2059;
	mov.u32 	%r2033, %r405;
	mov.u32 	%r2034, %r406;
	mov.u32 	%r2048, %r2055;
	mov.u32 	%r2062, %r441;
	mov.u32 	%r2250, %r2063;
	mov.u32 	%r2069, %r448;
	mov.u32 	%r2252, %r2070;
	@%p201 bra 	$L__BB0_586;

	not.b32 	%r1937, %r34;
	add.s32 	%r1936, %r766, %r1937;
	mad.lo.s32 	%r1849, %r531, %r768, %r36;
	mad.lo.s32 	%r1855, %r1936, 384, %r65;
	mad.lo.s32 	%r1856, %r1849, %r829, %r1855;
	mad.lo.s32 	%r1859, %r831, %r64, %r1856;
	mul.wide.s32 	%rd526, %r1859, 4;
	add.s64 	%rd527, %rd41, %rd526;
	add.s64 	%rd529, %rd527, %rd274;
	ld.global.v4.u32 	{%r2252, %r2250, %r2034, %r2033}, [%rd529+512];
	ld.global.v4.u32 	{%r2069, %r2062, %r2030, %r2048}, [%rd529+1024];
	ld.global.v4.u32 	{%r2253, %r2254, %r2246, %r2248}, [%rd529+1536];

$L__BB0_586:
	setp.ne.s32 	%p391, %r34, %r1267;
	add.s32 	%r763, %r2146, 1;
	bar.sync 	0;
	ld.param.u64 	%rd530, [%rd1+80];
	cvta.to.global.u64 	%rd43, %rd530;
	@%p391 bra 	$L__BB0_588;

	mad.lo.s32 	%r1873, %r530, %r769, %r37;
	mad.lo.s32 	%r1874, %r1873, 768, 384;
	mul.lo.s32 	%r1875, %r1874, %r767;
	mad.lo.s32 	%r1877, %r35, 384, %r1875;
	add.s32 	%r1878, %r1877, -128;
	mul.wide.s32 	%rd531, %r1878, 4;
	add.s64 	%rd532, %rd43, %rd531;
	add.s64 	%rd534, %rd532, %rd274;
	st.global.v4.u32 	[%rd534+512], {%r2070, %r2063, %r2071, %r2064};
	st.global.v4.u32 	[%rd534+1024], {%r2102, %r2100, %r2097, %r2091};
	st.global.v4.u32 	[%rd534+1536], {%r2158, %r2157, %r2126, %r2119};

$L__BB0_588:
	@%p373 bra 	$L__BB0_591;

	not.b32 	%r1935, %r34;
	add.s32 	%r1934, %r766, %r1935;
	mad.lo.s32 	%r1880, %r531, %r768, %r36;
	mad.lo.s32 	%r1886, %r1934, 384, %r65;
	mad.lo.s32 	%r1887, %r1880, %r829, %r1886;
	mad.lo.s32 	%r1890, %r831, %r64, %r1887;
	mul.wide.s32 	%rd535, %r1890, 4;
	add.s64 	%rd536, %rd43, %rd535;
	add.s64 	%rd44, %rd536, %rd274;
	st.global.v4.u32 	[%rd44], {%r2158, %r2157, %r2126, %r2119};
	st.global.v4.u32 	[%rd44+512], {%r2156, %r2155, %r2152, %r2150};
	st.global.v4.u32 	[%rd44+1024], {%r2086, %r2083, %r2040, %r2036};
	@%p198 bra 	$L__BB0_591;

	st.global.v4.u32 	[%rd44+1536], {%r2231, %r2229, %r2242, %r2240};

$L__BB0_591:
	rem.s32 	%r1891, %r2146, %r770;
	setp.eq.s32 	%p385, %r1891, 0;
	@%p385 bra 	$L__BB0_593;

	bar.sync 	0;
	bra.uni 	$L__BB0_600;

$L__BB0_593:
	@%p185 bra 	$L__BB0_595;

	// begin inline asm
	trap;
	// end inline asm

$L__BB0_595:
	bar.sync 	0;
	@%p186 bra 	$L__BB0_599;

	membar.gl;
	setp.eq.s32 	%p388, %r398, %r399;
	mov.u32 	%r1907, -2147483647;
	sub.s32 	%r1908, %r1907, %r397;
	selp.b32 	%r1896, %r1908, 1, %p388;
	// begin inline asm
	atom.add.release.gpu.u32 %r1895,[%rd31],%r1896;
	// end inline asm

$L__BB0_597:
	ld.volatile.u32 	%r1909, [%rd31];
	xor.b32  	%r1910, %r1909, %r1895;
	setp.gt.s32 	%p389, %r1910, -1;
	@%p389 bra 	$L__BB0_597;

	// begin inline asm
	ld.acquire.gpu.u32 %r1911,[%rd31];
	// end inline asm

$L__BB0_599:
	bar.sync 	0;

$L__BB0_600:
	setp.lt.s32 	%p390, %r763, %r42;
	mov.u32 	%r2036, %r2228;
	mov.u32 	%r2038, %r2162;
	mov.u32 	%r2040, %r2230;
	mov.u32 	%r2042, %r2164;
	mov.u32 	%r2063, %r2250;
	mov.u32 	%r2064, %r405;
	mov.u32 	%r2065, %r2181;
	mov.u32 	%r2070, %r2252;
	mov.u32 	%r2071, %r406;
	mov.u32 	%r2072, %r2183;
	mov.u32 	%r2077, %r2172;
	mov.u32 	%r2081, %r2174;
	mov.u32 	%r2083, %r417;
	mov.u32 	%r2086, %r425;
	mov.u32 	%r2091, %r432;
	mov.u32 	%r2097, %r437;
	mov.u32 	%r2100, %r441;
	mov.u32 	%r2101, %r2185;
	mov.u32 	%r2102, %r448;
	mov.u32 	%r2103, %r2186;
	mov.u32 	%r2104, %r461;
	mov.u32 	%r2105, %r2209;
	mov.u32 	%r2107, %r464;
	mov.u32 	%r2108, %r421;
	mov.u32 	%r2110, %r465;
	mov.u32 	%r2111, %r2211;
	mov.u32 	%r2113, %r468;
	mov.u32 	%r2114, %r429;
	mov.u32 	%r2116, %r469;
	mov.u32 	%r2119, %r471;
	mov.u32 	%r2120, %r474;
	mov.u32 	%r2123, %r476;
	mov.u32 	%r2126, %r478;
	mov.u32 	%r2127, %r481;
	mov.u32 	%r2130, %r2216;
	mov.u32 	%r2131, %r445;
	mov.u32 	%r2132, %r2218;
	mov.u32 	%r2133, %r452;
	mov.u32 	%r2134, %r489;
	mov.u32 	%r2135, %r492;
	mov.u32 	%r2136, %r495;
	mov.u32 	%r2137, %r498;
	mov.u32 	%r2138, %r500;
	mov.u32 	%r2139, %r501;
	mov.u32 	%r2140, %r504;
	mov.u32 	%r2141, %r505;
	mov.u32 	%r2142, %r507;
	mov.u32 	%r2143, %r508;
	mov.u32 	%r2144, %r511;
	mov.u32 	%r2145, %r512;
	mov.u32 	%r2146, %r763;
	mov.u32 	%r2150, %r446;
	mov.u32 	%r2152, %r435;
	mov.u32 	%r2155, %r418;
	mov.u32 	%r2156, %r426;
	mov.u32 	%r2157, %r433;
	mov.u32 	%r2158, %r438;
	@%p390 bra 	$L__BB0_307;

$L__BB0_601:
	ret;

}

