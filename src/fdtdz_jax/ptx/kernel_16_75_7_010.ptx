//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31833905
// Cuda compilation tools, release 11.8, V11.8.89
// Based on NVVM 7.0.1
//

.version 7.8
.target sm_75
.address_size 64

	// .globl	_ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE
.global .align 4 .b8 _ZZN4cuda3std3__48__detail21__stronger_order_cudaEiiE7__xform[16] = {3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE[24] = {254, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllJE[20] = {254, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllKE[8] = {0, 0, 0, 0, 1, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond6AllEhcE[12] = {0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond6AllXyzE[12] = {0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.extern .shared .align 16 .b8 _ZN6kernel5shmemE[];

.visible .entry _ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE(
	.param .align 8 .b8 _ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0[168]
)
{
	.reg .pred 	%p<338>;
	.reg .f32 	%f<400>;
	.reg .b32 	%r<1735>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<454>;


	mov.b64 	%rd27, _ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0;
	mov.u64 	%rd1, %rd27;
	ld.param.v2.u32 	{%r645, %r646}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0];
	ld.param.v2.u32 	{%r647, %r648}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+8];
	ld.param.v2.u32 	{%r649, %r650}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+16];
	ld.param.v2.u32 	{%r651, %r652}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+24];
	ld.param.v2.u32 	{%r653, %r654}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+32];
	ld.param.v2.u32 	{%r655, %r656}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+40];
	ld.param.v2.u32 	{%r657, %r658}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+48];
	ld.param.v2.u32 	{%r659, %r660}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+56];
	ld.param.v2.u32 	{%r661, %r662}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+64];
	ld.param.v2.u32 	{%r663, %r664}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+72];
	mov.u32 	%r29, %tid.y;
	mov.u32 	%r30, %tid.z;
	mov.u32 	%r31, %ctaid.y;
	mov.u32 	%r32, %ctaid.z;
	mov.u32 	%r665, 32;
	sub.s32 	%r33, %r665, %r652;
	mov.u32 	%r34, %tid.x;
	setp.le.s32 	%p15, %r33, %r34;
	add.s32 	%r666, %r658, -1;
	add.s32 	%r667, %r656, %r650;
	add.s32 	%r668, %r667, %r651;
	add.s32 	%r669, %r668, 1;
	mad.lo.s32 	%r670, %r666, %r657, %r669;
	mul.lo.s32 	%r671, %r645, %r647;
	shl.b32 	%r35, %r671, 1;
	shl.b32 	%r36, %r671, 2;
	div.s32 	%r672, %r670, %r36;
	add.s32 	%r673, %r672, 1;
	mul.lo.s32 	%r674, %r673, %r651;
	mul.lo.s32 	%r675, %r646, %r648;
	shl.b32 	%r37, %r675, 1;
	div.s32 	%r676, %r674, %r37;
	add.s32 	%r677, %r676, 1;
	mul.lo.s32 	%r38, %r677, %r650;
	ld.param.u64 	%rd28, [%rd1+160];
	cvta.to.global.u64 	%rd2, %rd28;
	mad.lo.s32 	%r680, %r647, %r32, %r31;
	mad.lo.s32 	%r681, %r680, %r646, %r30;
	mad.lo.s32 	%r682, %r681, %r645, %r29;
	shl.b32 	%r39, %r682, 5;
	add.s32 	%r1529, %r39, %r34;
	mul.lo.s32 	%r683, %r675, %r671;
	shl.b32 	%r43, %r683, 5;
	sub.s32 	%r44, %r660, %r659;
	mul.lo.s32 	%r684, %r658, %r44;
	sub.s32 	%r45, %r662, %r661;
	mul.lo.s32 	%r685, %r684, %r45;
	sub.s32 	%r46, %r664, %r663;
	mul.lo.s32 	%r686, %r685, %r46;
	mul.lo.s32 	%r47, %r686, 3;
	setp.ge.s32 	%p16, %r1529, %r47;
	@%p16 bra 	$L__BB0_9;

	not.b32 	%r687, %r34;
	add.s32 	%r688, %r47, %r687;
	sub.s32 	%r689, %r688, %r39;
	mul.lo.s32 	%r690, %r675, %r645;
	mul.lo.s32 	%r691, %r690, %r647;
	shl.b32 	%r692, %r691, 5;
	div.u32 	%r48, %r689, %r692;
	add.s32 	%r693, %r48, 1;
	and.b32  	%r1526, %r693, 3;
	setp.eq.s32 	%p17, %r1526, 0;
	mov.u32 	%r1527, %r1529;
	@%p17 bra 	$L__BB0_6;

	mov.u32 	%r1527, %r1529;

$L__BB0_5:
	.pragma "nounroll";
	mul.wide.s32 	%rd29, %r1527, 4;
	add.s64 	%rd30, %rd2, %rd29;
	mov.u32 	%r694, 0;
	st.global.u32 	[%rd30], %r694;
	add.s32 	%r1527, %r1527, %r43;
	add.s32 	%r1526, %r1526, -1;
	setp.ne.s32 	%p18, %r1526, 0;
	@%p18 bra 	$L__BB0_5;

$L__BB0_6:
	setp.lt.u32 	%p19, %r48, 3;
	@%p19 bra 	$L__BB0_9;

	mul.wide.s32 	%rd33, %r43, 4;

$L__BB0_8:
	mul.wide.s32 	%rd31, %r1527, 4;
	add.s64 	%rd32, %rd2, %rd31;
	mov.u32 	%r695, 0;
	st.global.u32 	[%rd32], %r695;
	add.s64 	%rd34, %rd32, %rd33;
	st.global.u32 	[%rd34], %r695;
	add.s32 	%r696, %r1527, %r43;
	add.s32 	%r697, %r696, %r43;
	add.s64 	%rd35, %rd34, %rd33;
	st.global.u32 	[%rd35], %r695;
	add.s32 	%r698, %r697, %r43;
	add.s64 	%rd36, %rd35, %rd33;
	st.global.u32 	[%rd36], %r695;
	add.s32 	%r1527, %r698, %r43;
	setp.lt.s32 	%p20, %r1527, %r47;
	@%p20 bra 	$L__BB0_8;

$L__BB0_9:
	ld.param.u64 	%rd37, [%rd1+80];
	cvta.to.global.u64 	%rd3, %rd37;
	sub.s32 	%r699, %r651, %r35;
	div.s32 	%r700, %r699, %r37;
	mul.lo.s32 	%r701, %r700, %r650;
	sub.s32 	%r702, %r701, %r35;
	sub.s32 	%r703, %r650, %r37;
	mul.lo.s32 	%r704, %r703, %r647;
	mul.lo.s32 	%r57, %r645, 384;
	add.s32 	%r705, %r57, %r57;
	add.s32 	%r706, %r705, 128;
	mul.lo.s32 	%r708, %r675, 768;
	mul.lo.s32 	%r709, %r704, %r706;
	mad.lo.s32 	%r58, %r708, %r702, %r709;
	bra.uni 	$L__BB0_10;

$L__BB0_567:
	mov.f32 	%f399, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f399;
  cvt.rn.f16.f32 high, %f399;
  mov.b32 %r1505, {low,high};}

	// end inline asm
	mul.wide.s32 	%rd447, %r1529, 4;
	add.s64 	%rd448, %rd3, %rd447;
	st.global.u32 	[%rd448], %r1505;
	add.s32 	%r1529, %r1529, %r43;

$L__BB0_10:
	setp.lt.s32 	%p21, %r1529, %r58;
	@%p21 bra 	$L__BB0_567;

	ld.param.u64 	%rd38, [%rd1+120];
	cvta.to.global.u64 	%rd5, %rd38;
	ld.param.u64 	%rd39, [%rd1+88];
	cvta.to.global.u64 	%rd6, %rd39;
	mad.lo.s32 	%r1571, %r645, %r31, %r29;
	mul.lo.s32 	%r63, %r646, %r32;
	add.s32 	%r64, %r63, %r30;
	setp.ge.s32 	%p22, %r1571, %r650;
	@%p22 bra 	$L__BB0_35;

	setp.gt.s32 	%p23, %r33, %r34;
	mov.u32 	%r710, 31;
	sub.s32 	%r711, %r710, %r34;
	selp.b32 	%r712, %r34, %r711, %p23;
	shl.b32 	%r713, %r712, 2;
	mov.u32 	%r714, 2;
	sub.s32 	%r65, %r713, %r653;
	shl.b32 	%r715, %r652, 2;
	mov.u32 	%r716, 128;
	sub.s32 	%r66, %r716, %r715;
	sub.s32 	%r717, %r714, %r653;
	add.s32 	%r67, %r717, %r713;
	mul.lo.s32 	%r718, %r651, %r650;
	shl.b32 	%r68, %r718, 6;
	add.s32 	%r69, %r650, -1;
	add.s32 	%r70, %r65, 1;
	add.s32 	%r71, %r67, 1;
	shl.b32 	%r72, %r34, 1;
	or.b32  	%r73, %r72, 1;
	shr.u32 	%r719, %r73, 31;
	add.s32 	%r720, %r73, %r719;
	shr.s32 	%r75, %r720, 1;
	and.b32  	%r721, %r720, -2;
	sub.s32 	%r722, %r73, %r721;
	add.s32 	%r74, %r722, %r68;
	rem.s32 	%r757, %r70, %r66;
	add.s32 	%r758, %r757, %r66;
	rem.s32 	%r98, %r758, %r66;
	rem.s32 	%r759, %r71, %r66;
	add.s32 	%r760, %r759, %r66;
	rem.s32 	%r99, %r760, %r66;
	mov.u32 	%r1530, %r1571;

$L__BB0_13:
	setp.ge.s32 	%p24, %r64, %r651;
	@%p24 bra 	$L__BB0_34;

	add.s32 	%r77, %r69, %r1530;
	rem.s32 	%r723, %r65, %r66;
	add.s32 	%r724, %r723, %r66;
	rem.s32 	%r78, %r724, %r66;
	rem.s32 	%r725, %r67, %r66;
	add.s32 	%r726, %r725, %r66;
	rem.s32 	%r79, %r726, %r66;
	mul.lo.s32 	%r80, %r1530, %r651;
	add.s32 	%r727, %r650, %r1530;
	mul.lo.s32 	%r81, %r727, %r651;
	add.s32 	%r728, %r727, %r650;
	mul.lo.s32 	%r82, %r728, %r651;
	mov.u32 	%r1531, %r64;

$L__BB0_15:
	mul.lo.s32 	%r84, %r1531, %r650;
	add.s32 	%r85, %r84, %r1530;
	shl.b32 	%r86, %r85, 6;
	@%p23 bra 	$L__BB0_17;
	bra.uni 	$L__BB0_16;

$L__BB0_17:
	add.s32 	%r731, %r80, %r1531;
	mul.lo.s32 	%r732, %r731, %r66;
	add.s32 	%r733, %r732, %r78;
	mul.wide.s32 	%rd40, %r733, 4;
	add.s64 	%rd41, %rd5, %rd40;
	ld.global.f32 	%f40, [%rd41];
	add.s32 	%r734, %r732, %r79;
	mul.wide.s32 	%rd42, %r734, 4;
	add.s64 	%rd43, %rd5, %rd42;
	ld.global.f32 	%f41, [%rd43];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f40;
  cvt.rn.f16.f32 high, %f41;
  mov.b32 %r1532, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_18;

$L__BB0_16:
	mov.f32 	%f39, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f39;
  cvt.rn.f16.f32 high, %f39;
  mov.b32 %r1532, {low,high};}

	// end inline asm

$L__BB0_18:
	shl.b32 	%r90, %r85, 5;
	add.s32 	%r735, %r90, %r34;
	shl.b32 	%r736, %r735, 2;
	add.s32 	%r737, %r68, %r736;
	mul.wide.s32 	%rd44, %r737, 4;
	add.s64 	%rd45, %rd6, %rd44;
	st.global.u32 	[%rd45], %r1532;
	@%p23 bra 	$L__BB0_20;
	bra.uni 	$L__BB0_19;

$L__BB0_20:
	add.s32 	%r740, %r81, %r1531;
	mul.lo.s32 	%r741, %r740, %r66;
	add.s32 	%r742, %r741, %r78;
	mul.wide.s32 	%rd46, %r742, 4;
	add.s64 	%rd47, %rd5, %rd46;
	ld.global.f32 	%f44, [%rd47];
	add.s32 	%r743, %r741, %r79;
	mul.wide.s32 	%rd48, %r743, 4;
	add.s64 	%rd49, %rd5, %rd48;
	ld.global.f32 	%f45, [%rd49];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f44;
  cvt.rn.f16.f32 high, %f45;
  mov.b32 %r1533, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_21;

$L__BB0_19:
	mov.f32 	%f43, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f43;
  cvt.rn.f16.f32 high, %f43;
  mov.b32 %r1533, {low,high};}

	// end inline asm

$L__BB0_21:
	add.s32 	%r744, %r72, %r86;
	mul.wide.s32 	%rd50, %r744, 4;
	add.s64 	%rd51, %rd6, %rd50;
	st.global.u32 	[%rd51], %r1533;
	@%p23 bra 	$L__BB0_23;
	bra.uni 	$L__BB0_22;

$L__BB0_23:
	add.s32 	%r747, %r82, %r1531;
	mul.lo.s32 	%r748, %r747, %r66;
	add.s32 	%r749, %r748, %r78;
	mul.wide.s32 	%rd52, %r749, 4;
	add.s64 	%rd53, %rd5, %rd52;
	ld.global.f32 	%f48, [%rd53];
	add.s32 	%r750, %r748, %r79;
	mul.wide.s32 	%rd54, %r750, 4;
	add.s64 	%rd55, %rd5, %rd54;
	ld.global.f32 	%f49, [%rd55];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f48;
  cvt.rn.f16.f32 high, %f49;
  mov.b32 %r1534, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_24;

$L__BB0_22:
	mov.f32 	%f47, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f47;
  cvt.rn.f16.f32 high, %f47;
  mov.b32 %r1534, {low,high};}

	// end inline asm

$L__BB0_24:
	rem.s32 	%r751, %r77, %r650;
	add.s32 	%r752, %r751, %r84;
	shl.b32 	%r97, %r752, 5;
	add.s32 	%r753, %r97, %r34;
	shl.b32 	%r754, %r753, 2;
	add.s32 	%r755, %r68, %r754;
	add.s32 	%r756, %r755, 2;
	mul.wide.s32 	%rd56, %r756, 4;
	add.s64 	%rd57, %rd6, %rd56;
	st.global.u32 	[%rd57], %r1534;
	@%p23 bra 	$L__BB0_26;
	bra.uni 	$L__BB0_25;

$L__BB0_26:
	add.s32 	%r763, %r80, %r1531;
	mul.lo.s32 	%r764, %r763, %r66;
	add.s32 	%r765, %r764, %r98;
	mul.wide.s32 	%rd58, %r765, 4;
	add.s64 	%rd59, %rd5, %rd58;
	ld.global.f32 	%f52, [%rd59];
	add.s32 	%r766, %r764, %r99;
	mul.wide.s32 	%rd60, %r766, 4;
	add.s64 	%rd61, %rd5, %rd60;
	ld.global.f32 	%f53, [%rd61];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f52;
  cvt.rn.f16.f32 high, %f53;
  mov.b32 %r1535, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_27;

$L__BB0_25:
	mov.f32 	%f51, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f51;
  cvt.rn.f16.f32 high, %f51;
  mov.b32 %r1535, {low,high};}

	// end inline asm

$L__BB0_27:
	add.s32 	%r767, %r90, %r75;
	shl.b32 	%r768, %r767, 2;
	add.s32 	%r769, %r74, %r768;
	mul.wide.s32 	%rd62, %r769, 4;
	add.s64 	%rd63, %rd6, %rd62;
	st.global.u32 	[%rd63], %r1535;
	@%p23 bra 	$L__BB0_29;
	bra.uni 	$L__BB0_28;

$L__BB0_29:
	add.s32 	%r772, %r81, %r1531;
	mul.lo.s32 	%r773, %r772, %r66;
	add.s32 	%r774, %r773, %r98;
	mul.wide.s32 	%rd64, %r774, 4;
	add.s64 	%rd65, %rd5, %rd64;
	ld.global.f32 	%f56, [%rd65];
	add.s32 	%r775, %r773, %r99;
	mul.wide.s32 	%rd66, %r775, 4;
	add.s64 	%rd67, %rd5, %rd66;
	ld.global.f32 	%f57, [%rd67];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f56;
  cvt.rn.f16.f32 high, %f57;
  mov.b32 %r1536, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_30;

$L__BB0_28:
	mov.f32 	%f55, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f55;
  cvt.rn.f16.f32 high, %f55;
  mov.b32 %r1536, {low,high};}

	// end inline asm

$L__BB0_30:
	add.s32 	%r776, %r73, %r86;
	mul.wide.s32 	%rd68, %r776, 4;
	add.s64 	%rd69, %rd6, %rd68;
	st.global.u32 	[%rd69], %r1536;
	@%p23 bra 	$L__BB0_32;
	bra.uni 	$L__BB0_31;

$L__BB0_32:
	add.s32 	%r779, %r82, %r1531;
	mul.lo.s32 	%r780, %r779, %r66;
	add.s32 	%r781, %r780, %r98;
	mul.wide.s32 	%rd70, %r781, 4;
	add.s64 	%rd71, %rd5, %rd70;
	ld.global.f32 	%f60, [%rd71];
	add.s32 	%r782, %r780, %r99;
	mul.wide.s32 	%rd72, %r782, 4;
	add.s64 	%rd73, %rd5, %rd72;
	ld.global.f32 	%f61, [%rd73];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f60;
  cvt.rn.f16.f32 high, %f61;
  mov.b32 %r1537, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_33;

$L__BB0_31:
	mov.f32 	%f59, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f59;
  cvt.rn.f16.f32 high, %f59;
  mov.b32 %r1537, {low,high};}

	// end inline asm

$L__BB0_33:
	add.s32 	%r783, %r97, %r75;
	shl.b32 	%r784, %r783, 2;
	add.s32 	%r785, %r74, %r784;
	add.s32 	%r786, %r785, 2;
	mul.wide.s32 	%rd74, %r786, 4;
	add.s64 	%rd75, %rd6, %rd74;
	st.global.u32 	[%rd75], %r1537;
	add.s32 	%r1531, %r1531, %r675;
	setp.lt.s32 	%p31, %r1531, %r651;
	@%p31 bra 	$L__BB0_15;

$L__BB0_34:
	add.s32 	%r1530, %r1530, %r671;
	setp.lt.s32 	%p32, %r1530, %r650;
	@%p32 bra 	$L__BB0_13;

$L__BB0_35:
	ld.param.u64 	%rd76, [%rd1+128];
	cvta.to.global.u64 	%rd7, %rd76;
	ld.param.u64 	%rd77, [%rd1+96];
	cvta.to.global.u64 	%rd8, %rd77;
	@%p22 bra 	$L__BB0_119;

	shl.b32 	%r111, %r64, 1;
	mov.u64 	%rd78, _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE;
	mov.u32 	%r1538, %r1571;

$L__BB0_37:
	setp.ge.s32 	%p34, %r111, %r651;
	@%p34 bra 	$L__BB0_118;

	mov.u32 	%r1539, %r111;

$L__BB0_39:
	setp.ne.s32 	%p35, %r34, 0;
	@%p35 bra 	$L__BB0_117;

	shr.u32 	%r788, %r1539, 31;
	add.s32 	%r789, %r1539, %r788;
	shr.s32 	%r790, %r789, 1;
	mad.lo.s32 	%r791, %r790, %r650, %r1538;
	shl.b32 	%r115, %r791, 5;
	add.s32 	%r116, %r1539, -2;
	mul.lo.s32 	%r117, %r116, %r650;
	add.s32 	%r792, %r651, %r116;
	mul.lo.s32 	%r118, %r792, %r650;
	add.s32 	%r793, %r792, %r651;
	mul.lo.s32 	%r119, %r793, %r650;
	add.s32 	%r120, %r117, %r650;
	add.s32 	%r121, %r1539, -1;
	add.s32 	%r794, %r651, %r121;
	mul.lo.s32 	%r122, %r794, %r650;
	add.s32 	%r795, %r794, %r651;
	mul.lo.s32 	%r123, %r795, %r650;
	add.s32 	%r796, %r651, %r1539;
	mul.lo.s32 	%r124, %r796, %r650;
	add.s32 	%r797, %r796, %r651;
	mul.lo.s32 	%r125, %r797, %r650;
	mul.lo.s32 	%r126, %r1539, %r650;
	add.s32 	%r127, %r126, %r650;
	add.s32 	%r128, %r1539, 1;
	add.s32 	%r798, %r651, %r128;
	mul.lo.s32 	%r129, %r798, %r650;
	add.s32 	%r799, %r798, %r651;
	mul.lo.s32 	%r130, %r799, %r650;
	add.s32 	%r131, %r127, %r650;
	add.s32 	%r132, %r1539, 2;
	add.s32 	%r800, %r651, %r132;
	mul.lo.s32 	%r133, %r800, %r650;
	add.s32 	%r801, %r800, %r651;
	mul.lo.s32 	%r134, %r801, %r650;
	mov.u32 	%r1542, 0;
	mov.u64 	%rd451, %rd78;

$L__BB0_41:
	ld.global.nc.u32 	%r802, [%rd451];
	cvt.rn.f64.s32 	%fd1, %r802;
	add.f64 	%fd3, %fd1, 0d3FE0000000000000;
	add.s32 	%r136, %r802, %r1538;
	setp.lt.s32 	%p36, %r136, %r650;
	or.b32  	%r803, %r116, %r136;
	setp.gt.s32 	%p37, %r803, -1;
	and.pred  	%p38, %p36, %p37;
	setp.lt.s32 	%p39, %r116, %r651;
	and.pred  	%p1, %p39, %p38;
	cvt.rn.f32.f64 	%f62, %fd3;
	add.f32 	%f63, %f62, 0f3E800000;
	abs.f32 	%f1, %f63;
	add.f32 	%f64, %f1, 0f40200000;
	setp.geu.f32 	%p40, %f64, 0f40000000;
	@%p40 bra 	$L__BB0_46;

	@%p1 bra 	$L__BB0_44;
	bra.uni 	$L__BB0_43;

$L__BB0_44:
	add.s32 	%r806, %r117, %r136;
	mul.wide.s32 	%rd79, %r806, 4;
	add.s64 	%rd80, %rd7, %rd79;
	ld.global.f32 	%f67, [%rd80];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f67;
  mov.b32 %r1541, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_45;

$L__BB0_43:
	mov.f32 	%f66, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f66;
  cvt.rn.f16.f32 high, %f66;
  mov.b32 %r1541, {low,high};}

	// end inline asm

$L__BB0_45:
	add.s32 	%r807, %r1542, %r115;
	mul.wide.s32 	%rd81, %r807, 4;
	add.s64 	%rd82, %rd8, %rd81;
	st.global.u32 	[%rd82], %r1541;
	add.s32 	%r1542, %r1542, 1;

$L__BB0_46:
	cvt.rn.f32.f64 	%f68, %fd1;
	add.f32 	%f69, %f68, 0f3E800000;
	abs.f32 	%f2, %f69;
	add.f32 	%f3, %f2, 0f40000000;
	setp.geu.f32 	%p41, %f3, 0f40000000;
	@%p41 bra 	$L__BB0_51;

	@%p1 bra 	$L__BB0_49;
	bra.uni 	$L__BB0_48;

$L__BB0_49:
	add.s32 	%r810, %r118, %r136;
	mul.wide.s32 	%rd83, %r810, 4;
	add.s64 	%rd84, %rd7, %rd83;
	ld.global.f32 	%f72, [%rd84];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f72;
  mov.b32 %r1543, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_50;

$L__BB0_48:
	mov.f32 	%f71, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f71;
  cvt.rn.f16.f32 high, %f71;
  mov.b32 %r1543, {low,high};}

	// end inline asm

$L__BB0_50:
	add.s32 	%r811, %r1542, %r115;
	mul.wide.s32 	%rd85, %r811, 4;
	add.s64 	%rd86, %rd8, %rd85;
	st.global.u32 	[%rd86], %r1543;
	add.s32 	%r1542, %r1542, 1;

$L__BB0_51:
	add.f32 	%f73, %f2, 0f40200000;
	setp.geu.f32 	%p42, %f73, 0f40000000;
	@%p42 bra 	$L__BB0_56;

	@%p1 bra 	$L__BB0_54;
	bra.uni 	$L__BB0_53;

$L__BB0_54:
	add.s32 	%r814, %r119, %r136;
	mul.wide.s32 	%rd87, %r814, 4;
	add.s64 	%rd88, %rd7, %rd87;
	ld.global.f32 	%f76, [%rd88];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f76;
  mov.b32 %r1545, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_55;

$L__BB0_53:
	mov.f32 	%f75, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f75;
  cvt.rn.f16.f32 high, %f75;
  mov.b32 %r1545, {low,high};}

	// end inline asm

$L__BB0_55:
	add.s32 	%r815, %r1542, %r115;
	mul.wide.s32 	%rd89, %r815, 4;
	add.s64 	%rd90, %rd8, %rd89;
	st.global.u32 	[%rd90], %r1545;
	add.s32 	%r1542, %r1542, 1;

$L__BB0_56:
	or.b32  	%r816, %r121, %r136;
	setp.gt.s32 	%p43, %r816, -1;
	and.pred  	%p45, %p36, %p43;
	setp.le.s32 	%p46, %r1539, %r651;
	and.pred  	%p2, %p46, %p45;
	add.f32 	%f4, %f1, 0f3FC00000;
	setp.geu.f32 	%p47, %f4, 0f40000000;
	@%p47 bra 	$L__BB0_61;

	@%p2 bra 	$L__BB0_59;
	bra.uni 	$L__BB0_58;

$L__BB0_59:
	add.s32 	%r819, %r120, %r136;
	mul.wide.s32 	%rd91, %r819, 4;
	add.s64 	%rd92, %rd7, %rd91;
	ld.global.f32 	%f79, [%rd92];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f79;
  mov.b32 %r1547, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_60;

$L__BB0_58:
	mov.f32 	%f78, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f78;
  cvt.rn.f16.f32 high, %f78;
  mov.b32 %r1547, {low,high};}

	// end inline asm

$L__BB0_60:
	add.s32 	%r820, %r1542, %r115;
	mul.wide.s32 	%rd93, %r820, 4;
	add.s64 	%rd94, %rd8, %rd93;
	st.global.u32 	[%rd94], %r1547;
	add.s32 	%r1542, %r1542, 1;

$L__BB0_61:
	add.f32 	%f5, %f2, 0f3F800000;
	setp.geu.f32 	%p48, %f5, 0f40000000;
	@%p48 bra 	$L__BB0_66;

	@%p2 bra 	$L__BB0_64;
	bra.uni 	$L__BB0_63;

$L__BB0_64:
	add.s32 	%r823, %r122, %r136;
	mul.wide.s32 	%rd95, %r823, 4;
	add.s64 	%rd96, %rd7, %rd95;
	ld.global.f32 	%f82, [%rd96];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f82;
  mov.b32 %r1549, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_65;

$L__BB0_63:
	mov.f32 	%f81, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f81;
  cvt.rn.f16.f32 high, %f81;
  mov.b32 %r1549, {low,high};}

	// end inline asm

$L__BB0_65:
	add.s32 	%r824, %r1542, %r115;
	mul.wide.s32 	%rd97, %r824, 4;
	add.s64 	%rd98, %rd8, %rd97;
	st.global.u32 	[%rd98], %r1549;
	add.s32 	%r1542, %r1542, 1;

$L__BB0_66:
	add.f32 	%f6, %f2, 0f3FC00000;
	setp.geu.f32 	%p49, %f6, 0f40000000;
	@%p49 bra 	$L__BB0_71;

	@%p2 bra 	$L__BB0_69;
	bra.uni 	$L__BB0_68;

$L__BB0_69:
	add.s32 	%r827, %r123, %r136;
	mul.wide.s32 	%rd99, %r827, 4;
	add.s64 	%rd100, %rd7, %rd99;
	ld.global.f32 	%f85, [%rd100];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f85;
  mov.b32 %r1551, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_70;

$L__BB0_68:
	mov.f32 	%f84, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f84;
  cvt.rn.f16.f32 high, %f84;
  mov.b32 %r1551, {low,high};}

	// end inline asm

$L__BB0_70:
	add.s32 	%r828, %r1542, %r115;
	mul.wide.s32 	%rd101, %r828, 4;
	add.s64 	%rd102, %rd8, %rd101;
	st.global.u32 	[%rd102], %r1551;
	add.s32 	%r1542, %r1542, 1;

$L__BB0_71:
	or.b32  	%r829, %r1539, %r136;
	setp.gt.s32 	%p50, %r829, -1;
	and.pred  	%p52, %p36, %p50;
	setp.lt.s32 	%p53, %r1539, %r651;
	and.pred  	%p3, %p53, %p52;
	add.f32 	%f7, %f1, 0f3F000000;
	setp.geu.f32 	%p54, %f7, 0f40000000;
	@%p54 bra 	$L__BB0_76;

	@%p3 bra 	$L__BB0_74;
	bra.uni 	$L__BB0_73;

$L__BB0_74:
	add.s32 	%r832, %r126, %r136;
	mul.wide.s32 	%rd103, %r832, 4;
	add.s64 	%rd104, %rd7, %rd103;
	ld.global.f32 	%f88, [%rd104];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f88;
  mov.b32 %r1553, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_75;

$L__BB0_73:
	mov.f32 	%f87, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f87;
  cvt.rn.f16.f32 high, %f87;
  mov.b32 %r1553, {low,high};}

	// end inline asm

$L__BB0_75:
	add.s32 	%r833, %r1542, %r115;
	mul.wide.s32 	%rd105, %r833, 4;
	add.s64 	%rd106, %rd8, %rd105;
	st.global.u32 	[%rd106], %r1553;
	add.s32 	%r1542, %r1542, 1;

$L__BB0_76:
	add.f32 	%f89, %f2, 0f00000000;
	setp.geu.f32 	%p55, %f89, 0f40000000;
	@%p55 bra 	$L__BB0_81;

	@%p3 bra 	$L__BB0_79;
	bra.uni 	$L__BB0_78;

$L__BB0_79:
	add.s32 	%r836, %r124, %r136;
	mul.wide.s32 	%rd107, %r836, 4;
	add.s64 	%rd108, %rd7, %rd107;
	ld.global.f32 	%f92, [%rd108];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f92;
  mov.b32 %r1555, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_80;

$L__BB0_78:
	mov.f32 	%f91, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f91;
  cvt.rn.f16.f32 high, %f91;
  mov.b32 %r1555, {low,high};}

	// end inline asm

$L__BB0_80:
	add.s32 	%r837, %r1542, %r115;
	mul.wide.s32 	%rd109, %r837, 4;
	add.s64 	%rd110, %rd8, %rd109;
	st.global.u32 	[%rd110], %r1555;
	add.s32 	%r1542, %r1542, 1;

$L__BB0_81:
	add.f32 	%f8, %f2, 0f3F000000;
	setp.geu.f32 	%p56, %f8, 0f40000000;
	@%p56 bra 	$L__BB0_86;

	@%p3 bra 	$L__BB0_84;
	bra.uni 	$L__BB0_83;

$L__BB0_84:
	add.s32 	%r840, %r125, %r136;
	mul.wide.s32 	%rd111, %r840, 4;
	add.s64 	%rd112, %rd7, %rd111;
	ld.global.f32 	%f95, [%rd112];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f95;
  mov.b32 %r1557, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_85;

$L__BB0_83:
	mov.f32 	%f94, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f94;
  cvt.rn.f16.f32 high, %f94;
  mov.b32 %r1557, {low,high};}

	// end inline asm

$L__BB0_85:
	add.s32 	%r841, %r1542, %r115;
	mul.wide.s32 	%rd113, %r841, 4;
	add.s64 	%rd114, %rd8, %rd113;
	st.global.u32 	[%rd114], %r1557;
	add.s32 	%r1542, %r1542, 1;

$L__BB0_86:
	or.b32  	%r842, %r128, %r136;
	setp.gt.s32 	%p57, %r842, -1;
	and.pred  	%p59, %p36, %p57;
	setp.lt.s32 	%p60, %r128, %r651;
	and.pred  	%p4, %p60, %p59;
	@%p54 bra 	$L__BB0_91;

	@%p4 bra 	$L__BB0_89;
	bra.uni 	$L__BB0_88;

$L__BB0_89:
	add.s32 	%r845, %r127, %r136;
	mul.wide.s32 	%rd115, %r845, 4;
	add.s64 	%rd116, %rd7, %rd115;
	ld.global.f32 	%f98, [%rd116];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f98;
  mov.b32 %r1559, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_90;

$L__BB0_88:
	mov.f32 	%f97, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f97;
  cvt.rn.f16.f32 high, %f97;
  mov.b32 %r1559, {low,high};}

	// end inline asm

$L__BB0_90:
	add.s32 	%r846, %r1542, %r115;
	mul.wide.s32 	%rd117, %r846, 4;
	add.s64 	%rd118, %rd8, %rd117;
	st.global.u32 	[%rd118], %r1559;
	add.s32 	%r1542, %r1542, 1;

$L__BB0_91:
	@%p48 bra 	$L__BB0_96;

	@%p4 bra 	$L__BB0_94;
	bra.uni 	$L__BB0_93;

$L__BB0_94:
	add.s32 	%r849, %r129, %r136;
	mul.wide.s32 	%rd119, %r849, 4;
	add.s64 	%rd120, %rd7, %rd119;
	ld.global.f32 	%f101, [%rd120];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f101;
  mov.b32 %r1561, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_95;

$L__BB0_93:
	mov.f32 	%f100, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f100;
  cvt.rn.f16.f32 high, %f100;
  mov.b32 %r1561, {low,high};}

	// end inline asm

$L__BB0_95:
	add.s32 	%r850, %r1542, %r115;
	mul.wide.s32 	%rd121, %r850, 4;
	add.s64 	%rd122, %rd8, %rd121;
	st.global.u32 	[%rd122], %r1561;
	add.s32 	%r1542, %r1542, 1;

$L__BB0_96:
	@%p56 bra 	$L__BB0_101;

	@%p4 bra 	$L__BB0_99;
	bra.uni 	$L__BB0_98;

$L__BB0_99:
	add.s32 	%r853, %r130, %r136;
	mul.wide.s32 	%rd123, %r853, 4;
	add.s64 	%rd124, %rd7, %rd123;
	ld.global.f32 	%f104, [%rd124];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f104;
  mov.b32 %r1563, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_100;

$L__BB0_98:
	mov.f32 	%f103, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f103;
  cvt.rn.f16.f32 high, %f103;
  mov.b32 %r1563, {low,high};}

	// end inline asm

$L__BB0_100:
	add.s32 	%r854, %r1542, %r115;
	mul.wide.s32 	%rd125, %r854, 4;
	add.s64 	%rd126, %rd8, %rd125;
	st.global.u32 	[%rd126], %r1563;
	add.s32 	%r1542, %r1542, 1;

$L__BB0_101:
	or.b32  	%r855, %r132, %r136;
	setp.gt.s32 	%p64, %r855, -1;
	and.pred  	%p66, %p36, %p64;
	setp.lt.s32 	%p67, %r132, %r651;
	and.pred  	%p5, %p67, %p66;
	@%p47 bra 	$L__BB0_106;

	@%p5 bra 	$L__BB0_104;
	bra.uni 	$L__BB0_103;

$L__BB0_104:
	add.s32 	%r858, %r131, %r136;
	mul.wide.s32 	%rd127, %r858, 4;
	add.s64 	%rd128, %rd7, %rd127;
	ld.global.f32 	%f107, [%rd128];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f107;
  mov.b32 %r1565, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_105;

$L__BB0_103:
	mov.f32 	%f106, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f106;
  cvt.rn.f16.f32 high, %f106;
  mov.b32 %r1565, {low,high};}

	// end inline asm

$L__BB0_105:
	add.s32 	%r859, %r1542, %r115;
	mul.wide.s32 	%rd129, %r859, 4;
	add.s64 	%rd130, %rd8, %rd129;
	st.global.u32 	[%rd130], %r1565;
	add.s32 	%r1542, %r1542, 1;

$L__BB0_106:
	@%p41 bra 	$L__BB0_111;

	@%p5 bra 	$L__BB0_109;
	bra.uni 	$L__BB0_108;

$L__BB0_109:
	add.s32 	%r862, %r133, %r136;
	mul.wide.s32 	%rd131, %r862, 4;
	add.s64 	%rd132, %rd7, %rd131;
	ld.global.f32 	%f110, [%rd132];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f110;
  mov.b32 %r1567, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_110;

$L__BB0_108:
	mov.f32 	%f109, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f109;
  cvt.rn.f16.f32 high, %f109;
  mov.b32 %r1567, {low,high};}

	// end inline asm

$L__BB0_110:
	add.s32 	%r863, %r1542, %r115;
	mul.wide.s32 	%rd133, %r863, 4;
	add.s64 	%rd134, %rd8, %rd133;
	st.global.u32 	[%rd134], %r1567;
	add.s32 	%r1542, %r1542, 1;

$L__BB0_111:
	@%p49 bra 	$L__BB0_116;

	@%p5 bra 	$L__BB0_114;
	bra.uni 	$L__BB0_113;

$L__BB0_114:
	add.s32 	%r866, %r134, %r136;
	mul.wide.s32 	%rd135, %r866, 4;
	add.s64 	%rd136, %rd7, %rd135;
	ld.global.f32 	%f113, [%rd136];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f113;
  mov.b32 %r1569, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_115;

$L__BB0_113:
	mov.f32 	%f112, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f112;
  cvt.rn.f16.f32 high, %f112;
  mov.b32 %r1569, {low,high};}

	// end inline asm

$L__BB0_115:
	add.s32 	%r867, %r1542, %r115;
	mul.wide.s32 	%rd137, %r867, 4;
	add.s64 	%rd138, %rd8, %rd137;
	st.global.u32 	[%rd138], %r1569;
	add.s32 	%r1542, %r1542, 1;

$L__BB0_116:
	add.s64 	%rd451, %rd451, 4;
	mov.u64 	%rd139, _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE;
	add.s64 	%rd140, %rd139, 24;
	setp.ne.s64 	%p71, %rd451, %rd140;
	@%p71 bra 	$L__BB0_41;

$L__BB0_117:
	add.s32 	%r1539, %r1539, %r37;
	setp.lt.s32 	%p72, %r1539, %r651;
	@%p72 bra 	$L__BB0_39;

$L__BB0_118:
	add.s32 	%r1538, %r1538, %r671;
	setp.lt.s32 	%p73, %r1538, %r650;
	@%p73 bra 	$L__BB0_37;

$L__BB0_119:
	setp.eq.s32 	%p74, %r654, 1;
	ld.param.u64 	%rd141, [%rd1+136];
	cvta.to.global.u64 	%rd11, %rd141;
	ld.param.u64 	%rd142, [%rd1+104];
	cvta.to.global.u64 	%rd12, %rd142;
	@%p74 bra 	$L__BB0_137;
	bra.uni 	$L__BB0_120;

$L__BB0_137:
	@%p22 bra 	$L__BB0_266;

	shl.b32 	%r240, %r64, 1;
	shr.u32 	%r915, %r655, 31;
	add.s32 	%r916, %r655, %r915;
	shr.u32 	%r917, %r916, 1;
	and.b32  	%r241, %r917, 1;
	mov.u64 	%rd162, _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE;

$L__BB0_139:
	setp.ge.s32 	%p84, %r240, %r651;
	@%p84 bra 	$L__BB0_265;

	mov.u32 	%r1577, %r240;

$L__BB0_141:
	setp.ne.s32 	%p85, %r34, 0;
	@%p85 bra 	$L__BB0_264;

	shr.u32 	%r919, %r1577, 31;
	add.s32 	%r920, %r1577, %r919;
	shr.s32 	%r921, %r920, 1;
	mad.lo.s32 	%r922, %r921, %r650, %r1571;
	shl.b32 	%r245, %r922, 5;
	add.s32 	%r246, %r1577, -2;
	mul.lo.s32 	%r247, %r246, %r650;
	add.s32 	%r923, %r651, %r246;
	mul.lo.s32 	%r248, %r923, %r650;
	add.s32 	%r249, %r247, %r650;
	add.s32 	%r250, %r1577, -1;
	add.s32 	%r924, %r651, %r250;
	mul.lo.s32 	%r251, %r924, %r650;
	add.s32 	%r925, %r651, %r1577;
	mul.lo.s32 	%r252, %r925, %r650;
	mul.lo.s32 	%r253, %r1577, %r650;
	add.s32 	%r254, %r253, %r650;
	add.s32 	%r255, %r1577, 1;
	add.s32 	%r926, %r651, %r255;
	mul.lo.s32 	%r256, %r926, %r650;
	add.s32 	%r257, %r254, %r650;
	add.s32 	%r258, %r1577, 2;
	add.s32 	%r927, %r651, %r258;
	mul.lo.s32 	%r259, %r927, %r650;
	mov.u32 	%r1581, 0;
	mov.u64 	%rd452, 24;
	mov.u64 	%rd453, %rd162;

$L__BB0_143:
	ld.global.nc.u32 	%r928, [%rd453];
	cvt.rn.f64.s32 	%fd2, %r928;
	add.f64 	%fd4, %fd2, 0d3FE0000000000000;
	add.s32 	%r261, %r928, %r1571;
	setp.lt.s32 	%p86, %r261, %r650;
	or.b32  	%r929, %r246, %r261;
	setp.gt.s32 	%p87, %r929, -1;
	and.pred  	%p88, %p86, %p87;
	setp.lt.s32 	%p89, %r246, %r651;
	and.pred  	%p6, %p89, %p88;
	cvt.rn.f32.f64 	%f130, %fd4;
	add.f32 	%f131, %f130, 0f3E800000;
	abs.f32 	%f9, %f131;
	add.f32 	%f132, %f9, 0f40200000;
	setp.geu.f32 	%p90, %f132, 0f40000000;
	@%p90 bra 	$L__BB0_155;

	@%p6 bra 	$L__BB0_146;
	bra.uni 	$L__BB0_145;

$L__BB0_146:
	setp.eq.s32 	%p91, %r241, 0;
	add.s32 	%r931, %r247, %r261;
	shl.b32 	%r932, %r931, 1;
	mul.wide.s32 	%rd163, %r932, 4;
	add.s64 	%rd164, %rd11, %rd163;
	ld.global.f32 	%f10, [%rd164];
	@%p91 bra 	$L__BB0_148;
	bra.uni 	$L__BB0_147;

$L__BB0_148:
	mov.f32 	%f138, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f10;
  cvt.rn.f16.f32 high, %f138;
  mov.b32 %r1579, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_149;

$L__BB0_145:
	mov.f32 	%f134, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f134;
  cvt.rn.f16.f32 high, %f134;
  mov.b32 %r1579, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_149;

$L__BB0_147:
	mov.f32 	%f135, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f135;
  cvt.rn.f16.f32 high, %f10;
  mov.b32 %r1579, {low,high};}

	// end inline asm

$L__BB0_149:
	add.s32 	%r266, %r1581, %r245;
	mul.wide.s32 	%rd165, %r266, 4;
	add.s64 	%rd166, %rd12, %rd165;
	st.global.u32 	[%rd166], %r1579;
	@%p6 bra 	$L__BB0_151;
	bra.uni 	$L__BB0_150;

$L__BB0_151:
	setp.eq.s32 	%p92, %r241, 0;
	add.s32 	%r936, %r248, %r261;
	shl.b32 	%r937, %r936, 1;
	mul.wide.s32 	%rd167, %r937, 4;
	add.s64 	%rd168, %rd11, %rd167;
	ld.global.f32 	%f11, [%rd168];
	@%p92 bra 	$L__BB0_153;
	bra.uni 	$L__BB0_152;

$L__BB0_153:
	mov.f32 	%f144, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f11;
  cvt.rn.f16.f32 high, %f144;
  mov.b32 %r1580, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_154;

$L__BB0_150:
	mov.f32 	%f140, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f140;
  cvt.rn.f16.f32 high, %f140;
  mov.b32 %r1580, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_154;

$L__BB0_152:
	mov.f32 	%f141, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f141;
  cvt.rn.f16.f32 high, %f11;
  mov.b32 %r1580, {low,high};}

	// end inline asm

$L__BB0_154:
	add.s32 	%r940, %r266, 1;
	mul.wide.s32 	%rd169, %r940, 4;
	add.s64 	%rd170, %rd12, %rd169;
	st.global.u32 	[%rd170], %r1580;
	add.s32 	%r1581, %r1581, 2;

$L__BB0_155:
	cvt.rn.f32.f64 	%f145, %fd2;
	add.f32 	%f146, %f145, 0f3E800000;
	abs.f32 	%f12, %f146;
	add.f32 	%f13, %f12, 0f40000000;
	setp.geu.f32 	%p93, %f13, 0f40000000;
	@%p93 bra 	$L__BB0_167;

	@%p6 bra 	$L__BB0_158;
	bra.uni 	$L__BB0_157;

$L__BB0_158:
	setp.eq.s32 	%p94, %r241, 0;
	add.s32 	%r942, %r247, %r261;
	shl.b32 	%r943, %r942, 1;
	or.b32  	%r944, %r943, 1;
	mul.wide.s32 	%rd171, %r944, 4;
	add.s64 	%rd172, %rd11, %rd171;
	ld.global.f32 	%f14, [%rd172];
	@%p94 bra 	$L__BB0_160;
	bra.uni 	$L__BB0_159;

$L__BB0_160:
	mov.f32 	%f152, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f14;
  cvt.rn.f16.f32 high, %f152;
  mov.b32 %r1582, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_161;

$L__BB0_157:
	mov.f32 	%f148, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f148;
  cvt.rn.f16.f32 high, %f148;
  mov.b32 %r1582, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_161;

$L__BB0_159:
	mov.f32 	%f149, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f149;
  cvt.rn.f16.f32 high, %f14;
  mov.b32 %r1582, {low,high};}

	// end inline asm

$L__BB0_161:
	add.s32 	%r277, %r1581, %r245;
	mul.wide.s32 	%rd173, %r277, 4;
	add.s64 	%rd174, %rd12, %rd173;
	st.global.u32 	[%rd174], %r1582;
	@%p6 bra 	$L__BB0_163;
	bra.uni 	$L__BB0_162;

$L__BB0_163:
	setp.eq.s32 	%p95, %r241, 0;
	add.s32 	%r948, %r248, %r261;
	shl.b32 	%r949, %r948, 1;
	or.b32  	%r950, %r949, 1;
	mul.wide.s32 	%rd175, %r950, 4;
	add.s64 	%rd176, %rd11, %rd175;
	ld.global.f32 	%f15, [%rd176];
	@%p95 bra 	$L__BB0_165;
	bra.uni 	$L__BB0_164;

$L__BB0_165:
	mov.f32 	%f158, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f15;
  cvt.rn.f16.f32 high, %f158;
  mov.b32 %r1583, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_166;

$L__BB0_162:
	mov.f32 	%f154, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f154;
  cvt.rn.f16.f32 high, %f154;
  mov.b32 %r1583, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_166;

$L__BB0_164:
	mov.f32 	%f155, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f155;
  cvt.rn.f16.f32 high, %f15;
  mov.b32 %r1583, {low,high};}

	// end inline asm

$L__BB0_166:
	add.s32 	%r953, %r277, 1;
	mul.wide.s32 	%rd177, %r953, 4;
	add.s64 	%rd178, %rd12, %rd177;
	st.global.u32 	[%rd178], %r1583;
	add.s32 	%r1581, %r1581, 2;

$L__BB0_167:
	or.b32  	%r954, %r250, %r261;
	setp.gt.s32 	%p96, %r954, -1;
	and.pred  	%p98, %p86, %p96;
	setp.le.s32 	%p99, %r1577, %r651;
	and.pred  	%p7, %p99, %p98;
	add.f32 	%f16, %f9, 0f3FC00000;
	setp.geu.f32 	%p100, %f16, 0f40000000;
	@%p100 bra 	$L__BB0_179;

	@%p7 bra 	$L__BB0_170;
	bra.uni 	$L__BB0_169;

$L__BB0_170:
	setp.eq.s32 	%p101, %r241, 0;
	add.s32 	%r956, %r249, %r261;
	shl.b32 	%r957, %r956, 1;
	mul.wide.s32 	%rd179, %r957, 4;
	add.s64 	%rd180, %rd11, %rd179;
	ld.global.f32 	%f17, [%rd180];
	@%p101 bra 	$L__BB0_172;
	bra.uni 	$L__BB0_171;

$L__BB0_172:
	mov.f32 	%f164, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f17;
  cvt.rn.f16.f32 high, %f164;
  mov.b32 %r1585, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_173;

$L__BB0_169:
	mov.f32 	%f160, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f160;
  cvt.rn.f16.f32 high, %f160;
  mov.b32 %r1585, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_173;

$L__BB0_171:
	mov.f32 	%f161, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f161;
  cvt.rn.f16.f32 high, %f17;
  mov.b32 %r1585, {low,high};}

	// end inline asm

$L__BB0_173:
	add.s32 	%r288, %r1581, %r245;
	mul.wide.s32 	%rd181, %r288, 4;
	add.s64 	%rd182, %rd12, %rd181;
	st.global.u32 	[%rd182], %r1585;
	@%p7 bra 	$L__BB0_175;
	bra.uni 	$L__BB0_174;

$L__BB0_175:
	setp.eq.s32 	%p102, %r241, 0;
	add.s32 	%r961, %r251, %r261;
	shl.b32 	%r962, %r961, 1;
	mul.wide.s32 	%rd183, %r962, 4;
	add.s64 	%rd184, %rd11, %rd183;
	ld.global.f32 	%f18, [%rd184];
	@%p102 bra 	$L__BB0_177;
	bra.uni 	$L__BB0_176;

$L__BB0_177:
	mov.f32 	%f170, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f18;
  cvt.rn.f16.f32 high, %f170;
  mov.b32 %r1586, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_178;

$L__BB0_174:
	mov.f32 	%f166, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f166;
  cvt.rn.f16.f32 high, %f166;
  mov.b32 %r1586, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_178;

$L__BB0_176:
	mov.f32 	%f167, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f167;
  cvt.rn.f16.f32 high, %f18;
  mov.b32 %r1586, {low,high};}

	// end inline asm

$L__BB0_178:
	add.s32 	%r965, %r288, 1;
	mul.wide.s32 	%rd185, %r965, 4;
	add.s64 	%rd186, %rd12, %rd185;
	st.global.u32 	[%rd186], %r1586;
	add.s32 	%r1581, %r1581, 2;

$L__BB0_179:
	add.f32 	%f19, %f12, 0f3F800000;
	setp.geu.f32 	%p103, %f19, 0f40000000;
	@%p103 bra 	$L__BB0_191;

	@%p7 bra 	$L__BB0_182;
	bra.uni 	$L__BB0_181;

$L__BB0_182:
	setp.eq.s32 	%p104, %r241, 0;
	add.s32 	%r967, %r249, %r261;
	shl.b32 	%r968, %r967, 1;
	or.b32  	%r969, %r968, 1;
	mul.wide.s32 	%rd187, %r969, 4;
	add.s64 	%rd188, %rd11, %rd187;
	ld.global.f32 	%f20, [%rd188];
	@%p104 bra 	$L__BB0_184;
	bra.uni 	$L__BB0_183;

$L__BB0_184:
	mov.f32 	%f176, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f20;
  cvt.rn.f16.f32 high, %f176;
  mov.b32 %r1588, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_185;

$L__BB0_181:
	mov.f32 	%f172, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f172;
  cvt.rn.f16.f32 high, %f172;
  mov.b32 %r1588, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_185;

$L__BB0_183:
	mov.f32 	%f173, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f173;
  cvt.rn.f16.f32 high, %f20;
  mov.b32 %r1588, {low,high};}

	// end inline asm

$L__BB0_185:
	add.s32 	%r299, %r1581, %r245;
	mul.wide.s32 	%rd189, %r299, 4;
	add.s64 	%rd190, %rd12, %rd189;
	st.global.u32 	[%rd190], %r1588;
	@%p7 bra 	$L__BB0_187;
	bra.uni 	$L__BB0_186;

$L__BB0_187:
	setp.eq.s32 	%p105, %r241, 0;
	add.s32 	%r973, %r251, %r261;
	shl.b32 	%r974, %r973, 1;
	or.b32  	%r975, %r974, 1;
	mul.wide.s32 	%rd191, %r975, 4;
	add.s64 	%rd192, %rd11, %rd191;
	ld.global.f32 	%f21, [%rd192];
	@%p105 bra 	$L__BB0_189;
	bra.uni 	$L__BB0_188;

$L__BB0_189:
	mov.f32 	%f182, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f21;
  cvt.rn.f16.f32 high, %f182;
  mov.b32 %r1589, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_190;

$L__BB0_186:
	mov.f32 	%f178, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f178;
  cvt.rn.f16.f32 high, %f178;
  mov.b32 %r1589, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_190;

$L__BB0_188:
	mov.f32 	%f179, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f179;
  cvt.rn.f16.f32 high, %f21;
  mov.b32 %r1589, {low,high};}

	// end inline asm

$L__BB0_190:
	add.s32 	%r978, %r299, 1;
	mul.wide.s32 	%rd193, %r978, 4;
	add.s64 	%rd194, %rd12, %rd193;
	st.global.u32 	[%rd194], %r1589;
	add.s32 	%r1581, %r1581, 2;

$L__BB0_191:
	or.b32  	%r979, %r1577, %r261;
	setp.gt.s32 	%p106, %r979, -1;
	and.pred  	%p108, %p86, %p106;
	setp.lt.s32 	%p109, %r1577, %r651;
	and.pred  	%p8, %p109, %p108;
	add.f32 	%f22, %f9, 0f3F000000;
	setp.geu.f32 	%p110, %f22, 0f40000000;
	@%p110 bra 	$L__BB0_203;

	@%p8 bra 	$L__BB0_194;
	bra.uni 	$L__BB0_193;

$L__BB0_194:
	setp.eq.s32 	%p111, %r241, 0;
	add.s32 	%r981, %r253, %r261;
	shl.b32 	%r982, %r981, 1;
	mul.wide.s32 	%rd195, %r982, 4;
	add.s64 	%rd196, %rd11, %rd195;
	ld.global.f32 	%f23, [%rd196];
	@%p111 bra 	$L__BB0_196;
	bra.uni 	$L__BB0_195;

$L__BB0_196:
	mov.f32 	%f188, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f23;
  cvt.rn.f16.f32 high, %f188;
  mov.b32 %r1591, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_197;

$L__BB0_193:
	mov.f32 	%f184, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f184;
  cvt.rn.f16.f32 high, %f184;
  mov.b32 %r1591, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_197;

$L__BB0_195:
	mov.f32 	%f185, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f185;
  cvt.rn.f16.f32 high, %f23;
  mov.b32 %r1591, {low,high};}

	// end inline asm

$L__BB0_197:
	add.s32 	%r310, %r1581, %r245;
	mul.wide.s32 	%rd197, %r310, 4;
	add.s64 	%rd198, %rd12, %rd197;
	st.global.u32 	[%rd198], %r1591;
	@%p8 bra 	$L__BB0_199;
	bra.uni 	$L__BB0_198;

$L__BB0_199:
	setp.eq.s32 	%p112, %r241, 0;
	add.s32 	%r986, %r252, %r261;
	shl.b32 	%r987, %r986, 1;
	mul.wide.s32 	%rd199, %r987, 4;
	add.s64 	%rd200, %rd11, %rd199;
	ld.global.f32 	%f24, [%rd200];
	@%p112 bra 	$L__BB0_201;
	bra.uni 	$L__BB0_200;

$L__BB0_201:
	mov.f32 	%f194, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f24;
  cvt.rn.f16.f32 high, %f194;
  mov.b32 %r1592, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_202;

$L__BB0_198:
	mov.f32 	%f190, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f190;
  cvt.rn.f16.f32 high, %f190;
  mov.b32 %r1592, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_202;

$L__BB0_200:
	mov.f32 	%f191, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f191;
  cvt.rn.f16.f32 high, %f24;
  mov.b32 %r1592, {low,high};}

	// end inline asm

$L__BB0_202:
	add.s32 	%r990, %r310, 1;
	mul.wide.s32 	%rd201, %r990, 4;
	add.s64 	%rd202, %rd12, %rd201;
	st.global.u32 	[%rd202], %r1592;
	add.s32 	%r1581, %r1581, 2;

$L__BB0_203:
	add.f32 	%f195, %f12, 0f00000000;
	setp.geu.f32 	%p113, %f195, 0f40000000;
	@%p113 bra 	$L__BB0_215;

	@%p8 bra 	$L__BB0_206;
	bra.uni 	$L__BB0_205;

$L__BB0_206:
	setp.eq.s32 	%p114, %r241, 0;
	add.s32 	%r992, %r253, %r261;
	shl.b32 	%r993, %r992, 1;
	or.b32  	%r994, %r993, 1;
	mul.wide.s32 	%rd203, %r994, 4;
	add.s64 	%rd204, %rd11, %rd203;
	ld.global.f32 	%f25, [%rd204];
	@%p114 bra 	$L__BB0_208;
	bra.uni 	$L__BB0_207;

$L__BB0_208:
	mov.f32 	%f201, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f25;
  cvt.rn.f16.f32 high, %f201;
  mov.b32 %r1594, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_209;

$L__BB0_205:
	mov.f32 	%f197, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f197;
  cvt.rn.f16.f32 high, %f197;
  mov.b32 %r1594, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_209;

$L__BB0_207:
	mov.f32 	%f198, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f198;
  cvt.rn.f16.f32 high, %f25;
  mov.b32 %r1594, {low,high};}

	// end inline asm

$L__BB0_209:
	add.s32 	%r321, %r1581, %r245;
	mul.wide.s32 	%rd205, %r321, 4;
	add.s64 	%rd206, %rd12, %rd205;
	st.global.u32 	[%rd206], %r1594;
	@%p8 bra 	$L__BB0_211;
	bra.uni 	$L__BB0_210;

$L__BB0_211:
	setp.eq.s32 	%p115, %r241, 0;
	add.s32 	%r998, %r252, %r261;
	shl.b32 	%r999, %r998, 1;
	or.b32  	%r1000, %r999, 1;
	mul.wide.s32 	%rd207, %r1000, 4;
	add.s64 	%rd208, %rd11, %rd207;
	ld.global.f32 	%f26, [%rd208];
	@%p115 bra 	$L__BB0_213;
	bra.uni 	$L__BB0_212;

$L__BB0_213:
	mov.f32 	%f207, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f26;
  cvt.rn.f16.f32 high, %f207;
  mov.b32 %r1595, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_214;

$L__BB0_210:
	mov.f32 	%f203, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f203;
  cvt.rn.f16.f32 high, %f203;
  mov.b32 %r1595, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_214;

$L__BB0_212:
	mov.f32 	%f204, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f204;
  cvt.rn.f16.f32 high, %f26;
  mov.b32 %r1595, {low,high};}

	// end inline asm

$L__BB0_214:
	add.s32 	%r1003, %r321, 1;
	mul.wide.s32 	%rd209, %r1003, 4;
	add.s64 	%rd210, %rd12, %rd209;
	st.global.u32 	[%rd210], %r1595;
	add.s32 	%r1581, %r1581, 2;

$L__BB0_215:
	or.b32  	%r1004, %r255, %r261;
	setp.gt.s32 	%p116, %r1004, -1;
	and.pred  	%p118, %p86, %p116;
	setp.lt.s32 	%p119, %r255, %r651;
	and.pred  	%p9, %p119, %p118;
	@%p110 bra 	$L__BB0_227;

	@%p9 bra 	$L__BB0_218;
	bra.uni 	$L__BB0_217;

$L__BB0_218:
	setp.eq.s32 	%p121, %r241, 0;
	add.s32 	%r1006, %r254, %r261;
	shl.b32 	%r1007, %r1006, 1;
	mul.wide.s32 	%rd211, %r1007, 4;
	add.s64 	%rd212, %rd11, %rd211;
	ld.global.f32 	%f27, [%rd212];
	@%p121 bra 	$L__BB0_220;
	bra.uni 	$L__BB0_219;

$L__BB0_220:
	mov.f32 	%f213, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f27;
  cvt.rn.f16.f32 high, %f213;
  mov.b32 %r1597, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_221;

$L__BB0_217:
	mov.f32 	%f209, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f209;
  cvt.rn.f16.f32 high, %f209;
  mov.b32 %r1597, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_221;

$L__BB0_219:
	mov.f32 	%f210, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f210;
  cvt.rn.f16.f32 high, %f27;
  mov.b32 %r1597, {low,high};}

	// end inline asm

$L__BB0_221:
	add.s32 	%r332, %r1581, %r245;
	mul.wide.s32 	%rd213, %r332, 4;
	add.s64 	%rd214, %rd12, %rd213;
	st.global.u32 	[%rd214], %r1597;
	@%p9 bra 	$L__BB0_223;
	bra.uni 	$L__BB0_222;

$L__BB0_223:
	setp.eq.s32 	%p122, %r241, 0;
	add.s32 	%r1011, %r256, %r261;
	shl.b32 	%r1012, %r1011, 1;
	mul.wide.s32 	%rd215, %r1012, 4;
	add.s64 	%rd216, %rd11, %rd215;
	ld.global.f32 	%f28, [%rd216];
	@%p122 bra 	$L__BB0_225;
	bra.uni 	$L__BB0_224;

$L__BB0_225:
	mov.f32 	%f219, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f28;
  cvt.rn.f16.f32 high, %f219;
  mov.b32 %r1598, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_226;

$L__BB0_222:
	mov.f32 	%f215, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f215;
  cvt.rn.f16.f32 high, %f215;
  mov.b32 %r1598, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_226;

$L__BB0_224:
	mov.f32 	%f216, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f216;
  cvt.rn.f16.f32 high, %f28;
  mov.b32 %r1598, {low,high};}

	// end inline asm

$L__BB0_226:
	add.s32 	%r1015, %r332, 1;
	mul.wide.s32 	%rd217, %r1015, 4;
	add.s64 	%rd218, %rd12, %rd217;
	st.global.u32 	[%rd218], %r1598;
	add.s32 	%r1581, %r1581, 2;

$L__BB0_227:
	@%p103 bra 	$L__BB0_239;

	@%p9 bra 	$L__BB0_230;
	bra.uni 	$L__BB0_229;

$L__BB0_230:
	setp.eq.s32 	%p124, %r241, 0;
	add.s32 	%r1017, %r254, %r261;
	shl.b32 	%r1018, %r1017, 1;
	or.b32  	%r1019, %r1018, 1;
	mul.wide.s32 	%rd219, %r1019, 4;
	add.s64 	%rd220, %rd11, %rd219;
	ld.global.f32 	%f29, [%rd220];
	@%p124 bra 	$L__BB0_232;
	bra.uni 	$L__BB0_231;

$L__BB0_232:
	mov.f32 	%f225, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f29;
  cvt.rn.f16.f32 high, %f225;
  mov.b32 %r1600, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_233;

$L__BB0_229:
	mov.f32 	%f221, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f221;
  cvt.rn.f16.f32 high, %f221;
  mov.b32 %r1600, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_233;

$L__BB0_231:
	mov.f32 	%f222, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f222;
  cvt.rn.f16.f32 high, %f29;
  mov.b32 %r1600, {low,high};}

	// end inline asm

$L__BB0_233:
	add.s32 	%r343, %r1581, %r245;
	mul.wide.s32 	%rd221, %r343, 4;
	add.s64 	%rd222, %rd12, %rd221;
	st.global.u32 	[%rd222], %r1600;
	@%p9 bra 	$L__BB0_235;
	bra.uni 	$L__BB0_234;

$L__BB0_235:
	setp.eq.s32 	%p125, %r241, 0;
	add.s32 	%r1023, %r256, %r261;
	shl.b32 	%r1024, %r1023, 1;
	or.b32  	%r1025, %r1024, 1;
	mul.wide.s32 	%rd223, %r1025, 4;
	add.s64 	%rd224, %rd11, %rd223;
	ld.global.f32 	%f30, [%rd224];
	@%p125 bra 	$L__BB0_237;
	bra.uni 	$L__BB0_236;

$L__BB0_237:
	mov.f32 	%f231, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f30;
  cvt.rn.f16.f32 high, %f231;
  mov.b32 %r1601, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_238;

$L__BB0_234:
	mov.f32 	%f227, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f227;
  cvt.rn.f16.f32 high, %f227;
  mov.b32 %r1601, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_238;

$L__BB0_236:
	mov.f32 	%f228, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f228;
  cvt.rn.f16.f32 high, %f30;
  mov.b32 %r1601, {low,high};}

	// end inline asm

$L__BB0_238:
	add.s32 	%r1028, %r343, 1;
	mul.wide.s32 	%rd225, %r1028, 4;
	add.s64 	%rd226, %rd12, %rd225;
	st.global.u32 	[%rd226], %r1601;
	add.s32 	%r1581, %r1581, 2;

$L__BB0_239:
	or.b32  	%r1029, %r258, %r261;
	setp.gt.s32 	%p126, %r1029, -1;
	and.pred  	%p128, %p86, %p126;
	setp.lt.s32 	%p129, %r258, %r651;
	and.pred  	%p10, %p129, %p128;
	@%p100 bra 	$L__BB0_251;

	@%p10 bra 	$L__BB0_242;
	bra.uni 	$L__BB0_241;

$L__BB0_242:
	setp.eq.s32 	%p131, %r241, 0;
	add.s32 	%r1031, %r257, %r261;
	shl.b32 	%r1032, %r1031, 1;
	mul.wide.s32 	%rd227, %r1032, 4;
	add.s64 	%rd228, %rd11, %rd227;
	ld.global.f32 	%f31, [%rd228];
	@%p131 bra 	$L__BB0_244;
	bra.uni 	$L__BB0_243;

$L__BB0_244:
	mov.f32 	%f237, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f31;
  cvt.rn.f16.f32 high, %f237;
  mov.b32 %r1603, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_245;

$L__BB0_241:
	mov.f32 	%f233, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f233;
  cvt.rn.f16.f32 high, %f233;
  mov.b32 %r1603, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_245;

$L__BB0_243:
	mov.f32 	%f234, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f234;
  cvt.rn.f16.f32 high, %f31;
  mov.b32 %r1603, {low,high};}

	// end inline asm

$L__BB0_245:
	add.s32 	%r354, %r1581, %r245;
	mul.wide.s32 	%rd229, %r354, 4;
	add.s64 	%rd230, %rd12, %rd229;
	st.global.u32 	[%rd230], %r1603;
	@%p10 bra 	$L__BB0_247;
	bra.uni 	$L__BB0_246;

$L__BB0_247:
	setp.eq.s32 	%p132, %r241, 0;
	add.s32 	%r1036, %r259, %r261;
	shl.b32 	%r1037, %r1036, 1;
	mul.wide.s32 	%rd231, %r1037, 4;
	add.s64 	%rd232, %rd11, %rd231;
	ld.global.f32 	%f32, [%rd232];
	@%p132 bra 	$L__BB0_249;
	bra.uni 	$L__BB0_248;

$L__BB0_249:
	mov.f32 	%f243, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f32;
  cvt.rn.f16.f32 high, %f243;
  mov.b32 %r1604, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_250;

$L__BB0_246:
	mov.f32 	%f239, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f239;
  cvt.rn.f16.f32 high, %f239;
  mov.b32 %r1604, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_250;

$L__BB0_248:
	mov.f32 	%f240, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f240;
  cvt.rn.f16.f32 high, %f32;
  mov.b32 %r1604, {low,high};}

	// end inline asm

$L__BB0_250:
	add.s32 	%r1040, %r354, 1;
	mul.wide.s32 	%rd233, %r1040, 4;
	add.s64 	%rd234, %rd12, %rd233;
	st.global.u32 	[%rd234], %r1604;
	add.s32 	%r1581, %r1581, 2;

$L__BB0_251:
	@%p93 bra 	$L__BB0_263;

	@%p10 bra 	$L__BB0_254;
	bra.uni 	$L__BB0_253;

$L__BB0_254:
	setp.eq.s32 	%p134, %r241, 0;
	add.s32 	%r1042, %r257, %r261;
	shl.b32 	%r1043, %r1042, 1;
	or.b32  	%r1044, %r1043, 1;
	mul.wide.s32 	%rd235, %r1044, 4;
	add.s64 	%rd236, %rd11, %rd235;
	ld.global.f32 	%f33, [%rd236];
	@%p134 bra 	$L__BB0_256;
	bra.uni 	$L__BB0_255;

$L__BB0_256:
	mov.f32 	%f249, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f33;
  cvt.rn.f16.f32 high, %f249;
  mov.b32 %r1606, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_257;

$L__BB0_253:
	mov.f32 	%f245, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f245;
  cvt.rn.f16.f32 high, %f245;
  mov.b32 %r1606, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_257;

$L__BB0_255:
	mov.f32 	%f246, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f246;
  cvt.rn.f16.f32 high, %f33;
  mov.b32 %r1606, {low,high};}

	// end inline asm

$L__BB0_257:
	add.s32 	%r365, %r1581, %r245;
	mul.wide.s32 	%rd237, %r365, 4;
	add.s64 	%rd238, %rd12, %rd237;
	st.global.u32 	[%rd238], %r1606;
	@%p10 bra 	$L__BB0_259;
	bra.uni 	$L__BB0_258;

$L__BB0_259:
	setp.eq.s32 	%p135, %r241, 0;
	add.s32 	%r1048, %r259, %r261;
	shl.b32 	%r1049, %r1048, 1;
	or.b32  	%r1050, %r1049, 1;
	mul.wide.s32 	%rd239, %r1050, 4;
	add.s64 	%rd240, %rd11, %rd239;
	ld.global.f32 	%f34, [%rd240];
	@%p135 bra 	$L__BB0_261;
	bra.uni 	$L__BB0_260;

$L__BB0_261:
	mov.f32 	%f255, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f34;
  cvt.rn.f16.f32 high, %f255;
  mov.b32 %r1607, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_262;

$L__BB0_258:
	mov.f32 	%f251, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f251;
  cvt.rn.f16.f32 high, %f251;
  mov.b32 %r1607, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_262;

$L__BB0_260:
	mov.f32 	%f252, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f252;
  cvt.rn.f16.f32 high, %f34;
  mov.b32 %r1607, {low,high};}

	// end inline asm

$L__BB0_262:
	add.s32 	%r1053, %r365, 1;
	mul.wide.s32 	%rd241, %r1053, 4;
	add.s64 	%rd242, %rd12, %rd241;
	st.global.u32 	[%rd242], %r1607;
	add.s32 	%r1581, %r1581, 2;

$L__BB0_263:
	add.s64 	%rd453, %rd453, 4;
	add.s64 	%rd452, %rd452, -4;
	setp.ne.s64 	%p136, %rd452, 0;
	@%p136 bra 	$L__BB0_143;

$L__BB0_264:
	add.s32 	%r1577, %r1577, %r37;
	setp.lt.s32 	%p137, %r1577, %r651;
	@%p137 bra 	$L__BB0_141;

$L__BB0_265:
	add.s32 	%r1571, %r1571, %r671;
	setp.lt.s32 	%p138, %r1571, %r650;
	@%p138 bra 	$L__BB0_139;
	bra.uni 	$L__BB0_266;

$L__BB0_120:
	@%p22 bra 	$L__BB0_266;

	neg.s32 	%r214, %r63;
	mov.u32 	%r868, 31;
	sub.s32 	%r869, %r868, %r34;
	setp.gt.s32 	%p76, %r33, %r34;
	selp.b32 	%r870, %r34, %r869, %p76;
	shl.b32 	%r871, %r870, 2;
	mov.u32 	%r872, 2;
	sub.s32 	%r215, %r871, %r653;
	shl.b32 	%r873, %r652, 2;
	mov.u32 	%r874, 128;
	sub.s32 	%r216, %r874, %r873;
	sub.s32 	%r875, %r872, %r653;
	add.s32 	%r217, %r875, %r871;
	add.s32 	%r218, %r650, -1;
	add.s32 	%r219, %r215, 1;
	add.s32 	%r220, %r217, 1;
	rem.s32 	%r900, %r219, %r216;
	add.s32 	%r901, %r900, %r216;
	rem.s32 	%r231, %r901, %r216;
	rem.s32 	%r902, %r220, %r216;
	add.s32 	%r903, %r902, %r216;
	rem.s32 	%r232, %r903, %r216;

$L__BB0_122:
	setp.ne.s32 	%p77, %r30, %r214;
	@%p77 bra 	$L__BB0_136;

	shl.b32 	%r222, %r1571, 1;
	rem.s32 	%r876, %r215, %r216;
	add.s32 	%r877, %r876, %r216;
	rem.s32 	%r223, %r877, %r216;
	rem.s32 	%r878, %r217, %r216;
	add.s32 	%r879, %r878, %r216;
	rem.s32 	%r224, %r879, %r216;
	@%p76 bra 	$L__BB0_125;
	bra.uni 	$L__BB0_124;

$L__BB0_125:
	mul.lo.s32 	%r882, %r222, %r216;
	add.s32 	%r883, %r882, %r223;
	mul.wide.s32 	%rd143, %r883, 4;
	add.s64 	%rd144, %rd11, %rd143;
	ld.global.f32 	%f116, [%rd144];
	add.s32 	%r884, %r882, %r224;
	mul.wide.s32 	%rd145, %r884, 4;
	add.s64 	%rd146, %rd11, %rd145;
	ld.global.f32 	%f117, [%rd146];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f116;
  cvt.rn.f16.f32 high, %f117;
  mov.b32 %r1572, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_126;

$L__BB0_124:
	mov.f32 	%f115, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f115;
  cvt.rn.f16.f32 high, %f115;
  mov.b32 %r1572, {low,high};}

	// end inline asm

$L__BB0_126:
	shl.b32 	%r885, %r1571, 5;
	add.s32 	%r886, %r885, %r34;
	shl.b32 	%r887, %r886, 2;
	mul.wide.s32 	%rd147, %r887, 4;
	add.s64 	%rd13, %rd12, %rd147;
	st.global.u32 	[%rd13], %r1572;
	@%p76 bra 	$L__BB0_128;
	bra.uni 	$L__BB0_127;

$L__BB0_128:
	add.s32 	%r890, %r222, 1;
	mul.lo.s32 	%r891, %r890, %r216;
	add.s32 	%r892, %r891, %r223;
	mul.wide.s32 	%rd148, %r892, 4;
	add.s64 	%rd149, %rd11, %rd148;
	ld.global.f32 	%f120, [%rd149];
	add.s32 	%r893, %r891, %r224;
	mul.wide.s32 	%rd150, %r893, 4;
	add.s64 	%rd151, %rd11, %rd150;
	ld.global.f32 	%f121, [%rd151];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f120;
  cvt.rn.f16.f32 high, %f121;
  mov.b32 %r1573, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_129;

$L__BB0_127:
	mov.f32 	%f119, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f119;
  cvt.rn.f16.f32 high, %f119;
  mov.b32 %r1573, {low,high};}

	// end inline asm

$L__BB0_129:
	add.s32 	%r894, %r218, %r1571;
	rem.s32 	%r895, %r894, %r650;
	shl.b32 	%r896, %r895, 5;
	add.s32 	%r897, %r896, %r34;
	shl.b32 	%r898, %r897, 2;
	or.b32  	%r899, %r898, 2;
	mul.wide.s32 	%rd152, %r899, 4;
	add.s64 	%rd14, %rd12, %rd152;
	st.global.u32 	[%rd14], %r1573;
	@%p76 bra 	$L__BB0_131;
	bra.uni 	$L__BB0_130;

$L__BB0_131:
	mul.lo.s32 	%r906, %r222, %r216;
	add.s32 	%r907, %r906, %r231;
	mul.wide.s32 	%rd153, %r907, 4;
	add.s64 	%rd154, %rd11, %rd153;
	ld.global.f32 	%f124, [%rd154];
	add.s32 	%r908, %r906, %r232;
	mul.wide.s32 	%rd155, %r908, 4;
	add.s64 	%rd156, %rd11, %rd155;
	ld.global.f32 	%f125, [%rd156];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f124;
  cvt.rn.f16.f32 high, %f125;
  mov.b32 %r1574, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_132;

$L__BB0_130:
	mov.f32 	%f123, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f123;
  cvt.rn.f16.f32 high, %f123;
  mov.b32 %r1574, {low,high};}

	// end inline asm

$L__BB0_132:
	st.global.u32 	[%rd13+4], %r1574;
	@%p76 bra 	$L__BB0_134;
	bra.uni 	$L__BB0_133;

$L__BB0_134:
	add.s32 	%r911, %r222, 1;
	mul.lo.s32 	%r912, %r911, %r216;
	add.s32 	%r913, %r912, %r231;
	mul.wide.s32 	%rd157, %r913, 4;
	add.s64 	%rd158, %rd11, %rd157;
	ld.global.f32 	%f128, [%rd158];
	add.s32 	%r914, %r912, %r232;
	mul.wide.s32 	%rd159, %r914, 4;
	add.s64 	%rd160, %rd11, %rd159;
	ld.global.f32 	%f129, [%rd160];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f128;
  cvt.rn.f16.f32 high, %f129;
  mov.b32 %r1575, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_135;

$L__BB0_133:
	mov.f32 	%f127, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f127;
  cvt.rn.f16.f32 high, %f127;
  mov.b32 %r1575, {low,high};}

	// end inline asm

$L__BB0_135:
	st.global.u32 	[%rd14+4], %r1575;

$L__BB0_136:
	add.s32 	%r1571, %r1571, %r671;
	setp.lt.s32 	%p82, %r1571, %r650;
	@%p82 bra 	$L__BB0_122;

$L__BB0_266:
	add.s32 	%r374, %r645, -1;
	mad.lo.s32 	%r1055, %r646, 576, 128;
	mul.lo.s32 	%r375, %r1055, %r374;
	add.s32 	%r376, %r57, -64;
	add.s32 	%r1056, %r376, %r57;
	add.s32 	%r377, %r646, -1;
	mad.lo.s32 	%r1057, %r1056, %r377, %r375;
	mul.lo.s32 	%r1058, %r374, %r646;
	mul.lo.s32 	%r378, %r1058, 320;
	mul.lo.s32 	%r379, %r376, %r377;
	add.s32 	%r1059, %r379, %r378;
	add.s32 	%r380, %r1059, %r1057;
	setp.lt.s32 	%p139, %r380, 1;
	mov.f32 	%f257, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f257;
  cvt.rn.f16.f32 high, %f257;
  mov.b32 %r1610, {low,high};}

	// end inline asm
	@%p139 bra 	$L__BB0_269;

	mov.u32 	%r1611, 0;
	mov.u32 	%r1609, _ZN6kernel5shmemE;

$L__BB0_268:
	st.shared.u32 	[%r1609], %r1610;
	mov.f32 	%f265, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f265;
  cvt.rn.f16.f32 high, %f265;
  mov.b32 %r1062, {low,high};}

	// end inline asm
	st.shared.u32 	[%r1609+4], %r1062;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f265;
  cvt.rn.f16.f32 high, %f265;
  mov.b32 %r1063, {low,high};}

	// end inline asm
	st.shared.u32 	[%r1609+8], %r1063;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f265;
  cvt.rn.f16.f32 high, %f265;
  mov.b32 %r1064, {low,high};}

	// end inline asm
	st.shared.u32 	[%r1609+12], %r1064;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f265;
  cvt.rn.f16.f32 high, %f265;
  mov.b32 %r1610, {low,high};}

	// end inline asm
	add.s32 	%r1609, %r1609, 16;
	add.s32 	%r1611, %r1611, 4;
	setp.lt.s32 	%p140, %r1611, %r380;
	@%p140 bra 	$L__BB0_268;

$L__BB0_269:
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f257;
  cvt.rn.f16.f32 high, %f257;
  mov.b32 %r1723, {low,high};}

	// end inline asm
	mov.u32 	%r1068, 31;
	sub.s32 	%r1069, %r1068, %r34;
	setp.gt.s32 	%p142, %r33, %r34;
	selp.b32 	%r1070, %r34, %r1069, %p142;
	shl.b32 	%r1071, %r1070, 2;
	sub.s32 	%r389, %r1071, %r653;
	shl.b32 	%r1072, %r652, 2;
	mov.u32 	%r1073, 128;
	sub.s32 	%r390, %r1073, %r1072;
	rem.s32 	%r1074, %r389, %r390;
	add.s32 	%r1075, %r1074, %r390;
	rem.s32 	%r391, %r1075, %r390;
	add.s32 	%r1076, %r389, 2;
	rem.s32 	%r1077, %r1076, %r390;
	add.s32 	%r1078, %r1077, %r390;
	rem.s32 	%r392, %r1078, %r390;
	add.s32 	%r1089, %r389, 1;
	rem.s32 	%r1090, %r1089, %r390;
	add.s32 	%r1091, %r1090, %r390;
	rem.s32 	%r393, %r1091, %r390;
	add.s32 	%r1092, %r389, 3;
	rem.s32 	%r1093, %r1092, %r390;
	add.s32 	%r1094, %r1093, %r390;
	rem.s32 	%r394, %r1094, %r390;
	// begin inline asm
	mov.u32 %r1105, %envreg2;
	// end inline asm
	cvt.u64.u32 	%rd248, %r1105;
	// begin inline asm
	mov.u32 %r1106, %envreg1;
	// end inline asm
	cvt.u64.u32 	%rd249, %r1106;
	bfi.b64 	%rd24, %rd249, %rd248, 32, 32;
	setp.ne.s64 	%p150, %rd24, 0;
	@%p150 bra 	$L__BB0_287;

	// begin inline asm
	trap;
	// end inline asm

$L__BB0_287:
	add.s64 	%rd25, %rd24, 4;
	mov.u32 	%r1107, %nctaid.y;
	mov.u32 	%r1108, %nctaid.x;
	mul.lo.s32 	%r1109, %r1108, %r1107;
	mov.u32 	%r1110, %nctaid.z;
	mul.lo.s32 	%r395, %r1109, %r1110;
	neg.s32 	%r396, %r30;
	add.s32 	%r397, %r34, %r29;
	setp.ne.s32 	%p151, %r397, %r396;
	mov.u32 	%r1111, %ctaid.x;
	add.s32 	%r398, %r1111, %r31;
	neg.s32 	%r399, %r32;
	bar.sync 	0;
	@%p151 bra 	$L__BB0_291;

	setp.eq.s32 	%p152, %r398, %r399;
	mov.u32 	%r1114, -2147483647;
	sub.s32 	%r1115, %r1114, %r395;
	selp.b32 	%r1113, %r1115, 1, %p152;
	membar.gl;
	// begin inline asm
	atom.add.release.gpu.u32 %r1112,[%rd25],%r1113;
	// end inline asm

$L__BB0_289:
	ld.volatile.u32 	%r1116, [%rd25];
	xor.b32  	%r1117, %r1116, %r1112;
	setp.gt.s32 	%p153, %r1117, -1;
	@%p153 bra 	$L__BB0_289;

	// begin inline asm
	ld.acquire.gpu.u32 %r1118,[%rd25];
	// end inline asm

$L__BB0_291:
	bar.sync 	0;
	setp.lt.s32 	%p154, %r38, 1;
	@%p154 bra 	$L__BB0_566;

	setp.eq.s32 	%p155, %r398, %r399;
	not.b32 	%r1120, %r31;
	add.s32 	%r1121, %r647, %r1120;
	not.b32 	%r1122, %r32;
	add.s32 	%r1123, %r648, %r1122;
	not.b32 	%r1124, %r29;
	add.s32 	%r1125, %r645, %r1124;
	not.b32 	%r1126, %r30;
	add.s32 	%r1127, %r646, %r1126;
	mad.lo.s32 	%r1128, %r1121, %r645, %r1125;
	mad.lo.s32 	%r1129, %r1123, %r646, %r1127;
	add.s32 	%r1130, %r1128, %r1129;
	sub.s32 	%r1131, %r1128, %r1129;
	shl.b32 	%r1132, %r1130, 1;
	shl.b32 	%r1133, %r1131, 1;
	add.s32 	%r1134, %r1121, %r1123;
	mul.lo.s32 	%r401, %r1134, %r649;
	add.s32 	%r402, %r1133, %r651;
	add.s32 	%r1135, %r401, %r650;
	add.s32 	%r403, %r1135, %r1132;
	sub.s32 	%r404, %r37, %r650;
	sub.s32 	%r405, %r36, %r651;
	shl.b32 	%r1136, %r646, 8;
	or.b32  	%r1137, %r1136, 128;
	add.s32 	%r1138, %r29, -1;
	shl.b32 	%r1139, %r30, 8;
	mad.lo.s32 	%r1140, %r1137, %r1138, %r378;
	add.s32 	%r1141, %r1140, %r1139;
	shl.b32 	%r1142, %r1141, 2;
	mov.u32 	%r1143, _ZN6kernel5shmemE;
	add.s32 	%r1144, %r1143, %r1142;
	add.s32 	%r406, %r1144, -512;
	add.s32 	%r1145, %r30, -1;
	mul.lo.s32 	%r1146, %r1125, 384;
	mad.lo.s32 	%r1147, %r57, %r1145, %r1146;
	add.s32 	%r1148, %r1147, %r379;
	add.s32 	%r1149, %r1148, %r375;
	shl.b32 	%r1150, %r1149, 2;
	add.s32 	%r407, %r1143, %r1150;
	add.s32 	%r408, %r659, 2;
	add.s32 	%r409, %r660, -1;
	add.s32 	%r410, %r661, 2;
	add.s32 	%r411, %r662, -2;
	mad.lo.s32 	%r412, %r658, %r657, %r656;
	mul.lo.s32 	%r1151, %r646, %r29;
	add.s32 	%r1152, %r1151, %r30;
	mad.lo.s32 	%r1153, %r1152, 1280, %r1143;
	add.s32 	%r1154, %r1153, -256;
	add.s32 	%r413, %r34, 16;
	shl.b32 	%r1155, %r34, 4;
	add.s32 	%r1156, %r1155, 256;
	add.s32 	%r414, %r1154, %r1156;
	add.s32 	%r415, %r34, 96;
	shl.b32 	%r1157, %r34, 3;
	add.s32 	%r1158, %r1154, %r1157;
	mul.lo.s32 	%r1159, %r376, %r30;
	add.s32 	%r1160, %r375, %r1159;
	add.s32 	%r1161, %r1160, %r1146;
	shl.b32 	%r1162, %r1161, 2;
	add.s32 	%r1163, %r1143, %r1162;
	add.s32 	%r1164, %r1163, -256;
	add.s32 	%r417, %r1164, %r1156;
	sub.s32 	%r1165, %r1151, %r646;
	add.s32 	%r1166, %r1165, %r30;
	mad.lo.s32 	%r1167, %r1166, 1280, %r1143;
	add.s32 	%r418, %r1167, -256;
	add.s32 	%r419, %r1164, %r1157;
	sub.s32 	%r1168, %r1159, %r376;
	add.s32 	%r1169, %r375, %r1168;
	add.s32 	%r1170, %r1169, %r1146;
	shl.b32 	%r1171, %r1170, 2;
	add.s32 	%r1172, %r1143, %r1171;
	add.s32 	%r420, %r1172, -256;
	mad.lo.s32 	%r1173, %r1137, %r29, %r378;
	add.s32 	%r1174, %r1173, %r1139;
	shl.b32 	%r1175, %r1174, 2;
	add.s32 	%r1176, %r1143, %r1175;
	add.s32 	%r421, %r34, 32;
	add.s32 	%r422, %r1176, %r1155;
	mad.lo.s32 	%r1177, %r57, %r30, %r1146;
	add.s32 	%r1178, %r1177, %r379;
	add.s32 	%r1179, %r1178, %r375;
	shl.b32 	%r1180, %r1179, 2;
	add.s32 	%r1181, %r1143, %r1180;
	add.s32 	%r423, %r1181, %r1155;
	mov.u32 	%r1182, -2147483647;
	sub.s32 	%r1183, %r1182, %r395;
	selp.b32 	%r424, %r1183, 1, %p155;
	setp.lt.s32 	%p156, %r391, %r664;
	setp.ge.s32 	%p157, %r391, %r663;
	and.pred  	%p11, %p156, %p157;
	setp.lt.s32 	%p158, %r393, %r664;
	setp.ge.s32 	%p159, %r393, %r663;
	and.pred  	%p12, %p158, %p159;
	setp.lt.s32 	%p160, %r392, %r664;
	setp.ge.s32 	%p161, %r392, %r663;
	and.pred  	%p13, %p160, %p161;
	setp.lt.s32 	%p162, %r394, %r664;
	setp.ge.s32 	%p163, %r394, %r663;
	and.pred  	%p14, %p162, %p163;
	not.b32 	%r425, %r659;
	not.b32 	%r426, %r661;
	mov.u32 	%r1692, 0;
	mov.u32 	%r1724, %r1723;
	mov.u32 	%r1614, %r1723;
	mov.u32 	%r1615, %r1723;
	mov.u32 	%r1711, %r1723;
	mov.u32 	%r1693, %r1723;
	mov.u32 	%r1713, %r1723;
	mov.u32 	%r1703, %r1723;
	mov.u32 	%r1694, %r1723;
	mov.u32 	%r1714, %r1723;
	mov.u32 	%r1704, %r1723;
	mov.u32 	%r1725, %r1723;
	mov.u32 	%r1624, %r1723;
	mov.u32 	%r1625, %r1723;
	mov.u32 	%r1626, %r1723;
	mov.u32 	%r1627, %r1723;
	mov.u32 	%r1628, %r1723;
	mov.u32 	%r1629, %r1723;
	mov.u32 	%r1726, %r1723;
	mov.u32 	%r1712, %r1723;
	mov.u32 	%r1632, %r1723;
	mov.u32 	%r1633, %r1723;
	mov.u32 	%r1634, %r1723;
	mov.u32 	%r1635, %r1723;
	mov.u32 	%r1636, %r1723;
	mov.u32 	%r1637, %r1723;
	mov.u32 	%r1705, %r1723;
	mov.u32 	%r1706, %r1723;
	mov.u32 	%r1640, %r1723;
	mov.u32 	%r1727, %r1723;
	mov.u32 	%r1642, %r1723;
	mov.u32 	%r1728, %r1723;
	mov.u32 	%r1644, %r1723;
	mov.u32 	%r1708, %r1723;
	mov.u32 	%r1729, %r1723;
	mov.u32 	%r1730, %r1723;
	mov.u32 	%r1648, %r1723;
	mov.u32 	%r1710, %r1723;
	mov.u32 	%r1731, %r1723;
	mov.u32 	%r1732, %r1723;
	mov.u32 	%r1721, %r1723;
	mov.u32 	%r1722, %r1723;
	mov.u32 	%r1654, %r1723;
	mov.u32 	%r1655, %r1723;
	mov.u32 	%r1656, %r1723;
	mov.u32 	%r1657, %r1723;
	mov.u32 	%r1658, %r1723;
	mov.u32 	%r1659, %r1723;
	mov.u32 	%r1660, %r1723;
	mov.u32 	%r1661, %r1723;
	mov.u32 	%r1662, %r1723;
	mov.u32 	%r1663, %r1723;
	mov.u32 	%r1664, %r1723;
	mov.u32 	%r1665, %r1723;
	mov.u32 	%r1666, %r1723;
	mov.u32 	%r1667, %r1723;
	mov.u32 	%r1733, %r1723;
	mov.u32 	%r1734, %r1723;
	mov.u32 	%r1670, %r1723;
	mov.u32 	%r1671, %r1723;
	mov.u32 	%r1672, %r1723;
	mov.u32 	%r1673, %r1723;
	mov.u32 	%r1674, %r1723;
	mov.u32 	%r1675, %r1723;
	mov.u32 	%r1676, %r1723;
	mov.u32 	%r1677, %r1723;
	mov.u32 	%r1678, %r1723;
	mov.u32 	%r1679, %r1723;
	mov.u32 	%r1680, %r1723;
	mov.u32 	%r1681, %r1723;
	mov.u32 	%r1682, %r1723;
	mov.u32 	%r1683, %r1723;
	mov.u32 	%r1684, %r1723;
	mov.u32 	%r1685, %r1723;
	mov.u32 	%r1686, %r1723;
	mov.u32 	%r1687, %r1723;
	mov.u32 	%r1688, %r1723;
	mov.u32 	%r1689, %r1723;
	mov.u32 	%r1690, %r1723;
	mov.u32 	%r1691, %r1723;
	mov.u32 	%r1695, %r1624;
	mov.u32 	%r1696, %r1632;
	mov.u32 	%r1697, %r1634;
	mov.u32 	%r1699, %r1626;

$L__BB0_293:
	mov.u32 	%r498, %r1683;
	mov.u32 	%r497, %r1682;
	mov.u32 	%r494, %r1679;
	mov.u32 	%r493, %r1678;
	mov.u32 	%r490, %r1675;
	mov.u32 	%r487, %r1672;
	mov.u32 	%r1682, %r1667;
	mov.u32 	%r481, %r1666;
	mov.u32 	%r478, %r1663;
	mov.u32 	%r1678, %r1662;
	mov.u32 	%r476, %r1661;
	mov.u32 	%r473, %r1658;
	mov.u32 	%r472, %r1657;
	mov.u32 	%r470, %r1655;
	mov.u32 	%r466, %r1732;
	mov.u32 	%r462, %r1730;
	mov.u32 	%r1683, %r1728;
	mov.u32 	%r457, %r1642;
	mov.u32 	%r1679, %r1727;
	mov.u32 	%r455, %r1640;
	mov.u32 	%r1658, %r1706;
	mov.u32 	%r453, %r1705;
	mov.u32 	%r1675, %r1637;
	mov.u32 	%r451, %r1636;
	mov.u32 	%r1657, %r1635;
	mov.u32 	%r448, %r1633;
	mov.u32 	%r1640, %r1712;
	mov.u32 	%r1661, %r1726;
	mov.u32 	%r1672, %r1629;
	mov.u32 	%r443, %r1628;
	mov.u32 	%r1655, %r1627;
	mov.u32 	%r440, %r1625;
	mov.u32 	%r1662, %r1725;
	mov.u32 	%r1663, %r1704;
	mov.u32 	%r434, %r1703;
	mov.u32 	%r1642, %r1711;
	mov.u32 	%r1667, %r1724;
	mov.u32 	%r1666, %r1723;
	add.s32 	%r1184, %r403, %r1692;
	div.s32 	%r1185, %r1184, %r650;
	mul.lo.s32 	%r1186, %r1185, %r650;
	sub.s32 	%r508, %r1184, %r1186;
	mad.lo.s32 	%r1187, %r1185, %r37, %r402;
	add.s32 	%r1188, %r1692, %r401;
	mad.lo.s32 	%r1189, %r1185, %r404, %r1188;
	div.s32 	%r1190, %r1187, %r651;
	mul.lo.s32 	%r1191, %r1190, %r651;
	sub.s32 	%r509, %r1187, %r1191;
	mad.lo.s32 	%r510, %r1190, %r405, %r1189;
	setp.eq.s32 	%p164, %r29, 0;
	@%p164 bra 	$L__BB0_295;

	shl.b32 	%r1192, %r421, 4;
	add.s32 	%r1193, %r406, %r1192;
	ld.shared.v4.u32 	{%r1633, %r1625, %r1697, %r1699}, [%r1193];
	ld.shared.v4.u32 	{%r1696, %r1695, %r1694, %r1693}, [%r1193+512];

$L__BB0_295:
	setp.eq.s32 	%p165, %r30, 0;
	mov.u32 	%r1701, %r1614;
	mov.u32 	%r1702, %r1615;
	mov.u32 	%r1703, %r434;
	mov.u32 	%r1704, %r1663;
	mov.u32 	%r1705, %r453;
	mov.u32 	%r1706, %r1658;
	mov.u32 	%r1707, %r1644;
	mov.u32 	%r1709, %r1648;
	mov.u32 	%r1711, %r1642;
	mov.u32 	%r1712, %r1640;
	@%p165 bra 	$L__BB0_298;

	shl.b32 	%r1202, %r421, 4;
	add.s32 	%r527, %r407, %r1202;
	ld.shared.v4.u32 	{%r1710, %r1708, %r1702, %r1701}, [%r527];
	ld.shared.v4.u32 	{%r1709, %r1707, %r1703, %r1705}, [%r527+512];
	mov.u32 	%r1704, %r1663;
	mov.u32 	%r1706, %r1658;
	mov.u32 	%r1711, %r1642;
	mov.u32 	%r1712, %r1640;
	@%p164 bra 	$L__BB0_298;

	ld.shared.v4.u32 	{%r1711, %r1712, %r1704, %r1706}, [%r527+1024];

$L__BB0_298:
	mov.b64 	%rd450, _ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0;
	mov.u64 	%rd449, %rd450;
	bar.sync 	0;
	ld.param.u64 	%rd252, [%rd449+160];
	cvta.to.global.u64 	%rd26, %rd252;
	setp.ge.s32 	%p167, %r508, %r409;
	setp.lt.s32 	%p168, %r508, %r408;
	or.pred  	%p169, %p167, %p168;
	setp.lt.s32 	%p170, %r509, %r410;
	or.pred  	%p171, %p169, %p170;
	setp.ge.s32 	%p172, %r509, %r411;
	or.pred  	%p173, %p172, %p171;
	setp.lt.s32 	%p174, %r510, %r656;
	or.pred  	%p175, %p174, %p173;
	setp.ge.s32 	%p176, %r510, %r412;
	or.pred  	%p177, %p175, %p176;
	@%p177 bra 	$L__BB0_540;

	sub.s32 	%r552, %r510, %r656;
	rem.s32 	%r1215, %r552, %r657;
	setp.ne.s32 	%p178, %r1215, 0;
	@%p178 bra 	$L__BB0_540;

	div.s32 	%r1216, %r552, %r657;
	mul.lo.s32 	%r1217, %r1216, %r44;
	sub.s32 	%r553, %r508, %r659;
	sub.s32 	%r554, %r509, %r661;
	mul.lo.s32 	%r555, %r1217, 3;
	add.s32 	%r1218, %r553, %r555;
	add.s32 	%r1219, %r1218, -2;
	mul.lo.s32 	%r556, %r1219, %r45;
	add.s32 	%r1220, %r554, %r556;
	mul.lo.s32 	%r1221, %r1220, %r46;
	sub.s32 	%r557, %r1221, %r663;
	@%p15 bra 	$L__BB0_305;

	not.pred 	%p180, %p11;
	@%p180 bra 	$L__BB0_303;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1691;
  cvt.f32.f16 %f302, low;}

	// end inline asm
	add.s32 	%r1223, %r557, %r391;
	mul.wide.s32 	%rd253, %r1223, 4;
	add.s64 	%rd254, %rd26, %rd253;
	st.global.f32 	[%rd254], %f302;

$L__BB0_303:
	not.pred 	%p181, %p13;
	@%p181 bra 	$L__BB0_305;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1691;
  cvt.f32.f16 %f303, high;}

	// end inline asm
	add.s32 	%r1225, %r557, %r392;
	mul.wide.s32 	%rd255, %r1225, 4;
	add.s64 	%rd256, %rd26, %rd255;
	st.global.f32 	[%rd256], %f303;

$L__BB0_305:
	@%p15 bra 	$L__BB0_310;

	not.pred 	%p183, %p12;
	@%p183 bra 	$L__BB0_308;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1689;
  cvt.f32.f16 %f304, low;}

	// end inline asm
	add.s32 	%r1227, %r557, %r393;
	mul.wide.s32 	%rd257, %r1227, 4;
	add.s64 	%rd258, %rd26, %rd257;
	st.global.f32 	[%rd258], %f304;

$L__BB0_308:
	not.pred 	%p184, %p14;
	@%p184 bra 	$L__BB0_310;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1689;
  cvt.f32.f16 %f305, high;}

	// end inline asm
	add.s32 	%r1229, %r557, %r394;
	mul.wide.s32 	%rd259, %r1229, 4;
	add.s64 	%rd260, %rd26, %rd259;
	st.global.f32 	[%rd260], %f305;

$L__BB0_310:
	add.s32 	%r558, %r555, %r44;
	add.s32 	%r1230, %r553, %r558;
	add.s32 	%r1231, %r1230, -2;
	mad.lo.s32 	%r1232, %r1231, %r45, %r554;
	mul.lo.s32 	%r1233, %r1232, %r46;
	sub.s32 	%r559, %r1233, %r663;
	@%p15 bra 	$L__BB0_315;

	not.pred 	%p186, %p11;
	@%p186 bra 	$L__BB0_313;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1690;
  cvt.f32.f16 %f306, low;}

	// end inline asm
	add.s32 	%r1235, %r559, %r391;
	mul.wide.s32 	%rd261, %r1235, 4;
	add.s64 	%rd262, %rd26, %rd261;
	st.global.f32 	[%rd262], %f306;

$L__BB0_313:
	not.pred 	%p187, %p13;
	@%p187 bra 	$L__BB0_315;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1690;
  cvt.f32.f16 %f307, high;}

	// end inline asm
	add.s32 	%r1237, %r559, %r392;
	mul.wide.s32 	%rd263, %r1237, 4;
	add.s64 	%rd264, %rd26, %rd263;
	st.global.f32 	[%rd264], %f307;

$L__BB0_315:
	@%p15 bra 	$L__BB0_320;

	not.pred 	%p189, %p12;
	@%p189 bra 	$L__BB0_318;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1688;
  cvt.f32.f16 %f308, low;}

	// end inline asm
	add.s32 	%r1239, %r559, %r393;
	mul.wide.s32 	%rd265, %r1239, 4;
	add.s64 	%rd266, %rd26, %rd265;
	st.global.f32 	[%rd266], %f308;

$L__BB0_318:
	not.pred 	%p190, %p14;
	@%p190 bra 	$L__BB0_320;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1688;
  cvt.f32.f16 %f309, high;}

	// end inline asm
	add.s32 	%r1241, %r559, %r394;
	mul.wide.s32 	%rd267, %r1241, 4;
	add.s64 	%rd268, %rd26, %rd267;
	st.global.f32 	[%rd268], %f309;

$L__BB0_320:
	add.s32 	%r560, %r554, 1;
	add.s32 	%r1242, %r560, %r556;
	mul.lo.s32 	%r1243, %r1242, %r46;
	sub.s32 	%r561, %r1243, %r663;
	@%p15 bra 	$L__BB0_325;

	not.pred 	%p192, %p11;
	@%p192 bra 	$L__BB0_323;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1687;
  cvt.f32.f16 %f310, low;}

	// end inline asm
	add.s32 	%r1245, %r561, %r391;
	mul.wide.s32 	%rd269, %r1245, 4;
	add.s64 	%rd270, %rd26, %rd269;
	st.global.f32 	[%rd270], %f310;

$L__BB0_323:
	not.pred 	%p193, %p13;
	@%p193 bra 	$L__BB0_325;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1687;
  cvt.f32.f16 %f311, high;}

	// end inline asm
	add.s32 	%r1247, %r561, %r392;
	mul.wide.s32 	%rd271, %r1247, 4;
	add.s64 	%rd272, %rd26, %rd271;
	st.global.f32 	[%rd272], %f311;

$L__BB0_325:
	@%p15 bra 	$L__BB0_330;

	not.pred 	%p195, %p12;
	@%p195 bra 	$L__BB0_328;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1686;
  cvt.f32.f16 %f312, low;}

	// end inline asm
	add.s32 	%r1249, %r561, %r393;
	mul.wide.s32 	%rd273, %r1249, 4;
	add.s64 	%rd274, %rd26, %rd273;
	st.global.f32 	[%rd274], %f312;

$L__BB0_328:
	not.pred 	%p196, %p14;
	@%p196 bra 	$L__BB0_330;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1686;
  cvt.f32.f16 %f313, high;}

	// end inline asm
	add.s32 	%r1251, %r561, %r394;
	mul.wide.s32 	%rd275, %r1251, 4;
	add.s64 	%rd276, %rd26, %rd275;
	st.global.f32 	[%rd276], %f313;

$L__BB0_330:
	add.s32 	%r562, %r508, %r425;
	add.s32 	%r1252, %r562, %r555;
	mul.lo.s32 	%r563, %r1252, %r45;
	add.s32 	%r564, %r509, %r426;
	add.s32 	%r1253, %r564, %r563;
	mul.lo.s32 	%r1254, %r1253, %r46;
	sub.s32 	%r565, %r1254, %r663;
	@%p15 bra 	$L__BB0_335;

	not.pred 	%p198, %p11;
	@%p198 bra 	$L__BB0_333;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1734;
  cvt.f32.f16 %f314, low;}

	// end inline asm
	add.s32 	%r1256, %r565, %r391;
	mul.wide.s32 	%rd277, %r1256, 4;
	add.s64 	%rd278, %rd26, %rd277;
	st.global.f32 	[%rd278], %f314;

$L__BB0_333:
	not.pred 	%p199, %p13;
	@%p199 bra 	$L__BB0_335;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1734;
  cvt.f32.f16 %f315, high;}

	// end inline asm
	add.s32 	%r1258, %r565, %r392;
	mul.wide.s32 	%rd279, %r1258, 4;
	add.s64 	%rd280, %rd26, %rd279;
	st.global.f32 	[%rd280], %f315;

$L__BB0_335:
	@%p15 bra 	$L__BB0_340;

	not.pred 	%p201, %p12;
	@%p201 bra 	$L__BB0_338;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1733;
  cvt.f32.f16 %f316, low;}

	// end inline asm
	add.s32 	%r1260, %r565, %r393;
	mul.wide.s32 	%rd281, %r1260, 4;
	add.s64 	%rd282, %rd26, %rd281;
	st.global.f32 	[%rd282], %f316;

$L__BB0_338:
	not.pred 	%p202, %p14;
	@%p202 bra 	$L__BB0_340;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1733;
  cvt.f32.f16 %f317, high;}

	// end inline asm
	add.s32 	%r1262, %r565, %r394;
	mul.wide.s32 	%rd283, %r1262, 4;
	add.s64 	%rd284, %rd26, %rd283;
	st.global.f32 	[%rd284], %f317;

$L__BB0_340:
	add.s32 	%r1522, %r509, %r426;
	add.s32 	%r1521, %r555, %r44;
	add.s32 	%r1263, %r562, %r1521;
	mul.lo.s32 	%r566, %r1263, %r45;
	add.s32 	%r1264, %r1522, %r566;
	mul.lo.s32 	%r1265, %r1264, %r46;
	sub.s32 	%r567, %r1265, %r663;
	@%p15 bra 	$L__BB0_345;

	not.pred 	%p204, %p11;
	@%p204 bra 	$L__BB0_343;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1685;
  cvt.f32.f16 %f318, low;}

	// end inline asm
	add.s32 	%r1267, %r567, %r391;
	mul.wide.s32 	%rd285, %r1267, 4;
	add.s64 	%rd286, %rd26, %rd285;
	st.global.f32 	[%rd286], %f318;

$L__BB0_343:
	not.pred 	%p205, %p13;
	@%p205 bra 	$L__BB0_345;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1685;
  cvt.f32.f16 %f319, high;}

	// end inline asm
	add.s32 	%r1269, %r567, %r392;
	mul.wide.s32 	%rd287, %r1269, 4;
	add.s64 	%rd288, %rd26, %rd287;
	st.global.f32 	[%rd288], %f319;

$L__BB0_345:
	@%p15 bra 	$L__BB0_350;

	not.pred 	%p207, %p12;
	@%p207 bra 	$L__BB0_348;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1684;
  cvt.f32.f16 %f320, low;}

	// end inline asm
	add.s32 	%r1271, %r567, %r393;
	mul.wide.s32 	%rd289, %r1271, 4;
	add.s64 	%rd290, %rd26, %rd289;
	st.global.f32 	[%rd290], %f320;

$L__BB0_348:
	not.pred 	%p208, %p14;
	@%p208 bra 	$L__BB0_350;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1684;
  cvt.f32.f16 %f321, high;}

	// end inline asm
	add.s32 	%r1273, %r567, %r394;
	mul.wide.s32 	%rd291, %r1273, 4;
	add.s64 	%rd292, %rd26, %rd291;
	st.global.f32 	[%rd292], %f321;

$L__BB0_350:
	add.s32 	%r1274, %r554, %r563;
	mul.lo.s32 	%r1275, %r1274, %r46;
	sub.s32 	%r568, %r1275, %r663;
	@%p15 bra 	$L__BB0_355;

	not.pred 	%p210, %p11;
	@%p210 bra 	$L__BB0_353;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r498;
  cvt.f32.f16 %f322, low;}

	// end inline asm
	add.s32 	%r1277, %r568, %r391;
	mul.wide.s32 	%rd293, %r1277, 4;
	add.s64 	%rd294, %rd26, %rd293;
	st.global.f32 	[%rd294], %f322;

$L__BB0_353:
	not.pred 	%p211, %p13;
	@%p211 bra 	$L__BB0_355;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r498;
  cvt.f32.f16 %f323, high;}

	// end inline asm
	add.s32 	%r1279, %r568, %r392;
	mul.wide.s32 	%rd295, %r1279, 4;
	add.s64 	%rd296, %rd26, %rd295;
	st.global.f32 	[%rd296], %f323;

$L__BB0_355:
	@%p15 bra 	$L__BB0_360;

	not.pred 	%p213, %p12;
	@%p213 bra 	$L__BB0_358;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r494;
  cvt.f32.f16 %f324, low;}

	// end inline asm
	add.s32 	%r1281, %r568, %r393;
	mul.wide.s32 	%rd297, %r1281, 4;
	add.s64 	%rd298, %rd26, %rd297;
	st.global.f32 	[%rd298], %f324;

$L__BB0_358:
	not.pred 	%p214, %p14;
	@%p214 bra 	$L__BB0_360;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r494;
  cvt.f32.f16 %f325, high;}

	// end inline asm
	add.s32 	%r1283, %r568, %r394;
	mul.wide.s32 	%rd299, %r1283, 4;
	add.s64 	%rd300, %rd26, %rd299;
	st.global.f32 	[%rd300], %f325;

$L__BB0_360:
	add.s32 	%r1284, %r554, %r566;
	mul.lo.s32 	%r1285, %r1284, %r46;
	sub.s32 	%r569, %r1285, %r663;
	@%p15 bra 	$L__BB0_365;

	not.pred 	%p216, %p11;
	@%p216 bra 	$L__BB0_363;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r497;
  cvt.f32.f16 %f326, low;}

	// end inline asm
	add.s32 	%r1287, %r569, %r391;
	mul.wide.s32 	%rd301, %r1287, 4;
	add.s64 	%rd302, %rd26, %rd301;
	st.global.f32 	[%rd302], %f326;

$L__BB0_363:
	not.pred 	%p217, %p13;
	@%p217 bra 	$L__BB0_365;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r497;
  cvt.f32.f16 %f327, high;}

	// end inline asm
	add.s32 	%r1289, %r569, %r392;
	mul.wide.s32 	%rd303, %r1289, 4;
	add.s64 	%rd304, %rd26, %rd303;
	st.global.f32 	[%rd304], %f327;

$L__BB0_365:
	@%p15 bra 	$L__BB0_370;

	not.pred 	%p219, %p12;
	@%p219 bra 	$L__BB0_368;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r493;
  cvt.f32.f16 %f328, low;}

	// end inline asm
	add.s32 	%r1291, %r569, %r393;
	mul.wide.s32 	%rd305, %r1291, 4;
	add.s64 	%rd306, %rd26, %rd305;
	st.global.f32 	[%rd306], %f328;

$L__BB0_368:
	not.pred 	%p220, %p14;
	@%p220 bra 	$L__BB0_370;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r493;
  cvt.f32.f16 %f329, high;}

	// end inline asm
	add.s32 	%r1293, %r569, %r394;
	mul.wide.s32 	%rd307, %r1293, 4;
	add.s64 	%rd308, %rd26, %rd307;
	st.global.f32 	[%rd308], %f329;

$L__BB0_370:
	add.s32 	%r1523, %r555, %r44;
	add.s32 	%r570, %r1523, %r44;
	add.s32 	%r1294, %r562, %r570;
	mul.lo.s32 	%r571, %r1294, %r45;
	add.s32 	%r1295, %r554, %r571;
	mul.lo.s32 	%r1296, %r1295, %r46;
	sub.s32 	%r572, %r1296, %r663;
	@%p15 bra 	$L__BB0_375;

	not.pred 	%p222, %p11;
	@%p222 bra 	$L__BB0_373;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1681;
  cvt.f32.f16 %f330, low;}

	// end inline asm
	add.s32 	%r1298, %r572, %r391;
	mul.wide.s32 	%rd309, %r1298, 4;
	add.s64 	%rd310, %rd26, %rd309;
	st.global.f32 	[%rd310], %f330;

$L__BB0_373:
	not.pred 	%p223, %p13;
	@%p223 bra 	$L__BB0_375;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1681;
  cvt.f32.f16 %f331, high;}

	// end inline asm
	add.s32 	%r1300, %r572, %r392;
	mul.wide.s32 	%rd311, %r1300, 4;
	add.s64 	%rd312, %rd26, %rd311;
	st.global.f32 	[%rd312], %f331;

$L__BB0_375:
	@%p15 bra 	$L__BB0_380;

	not.pred 	%p225, %p12;
	@%p225 bra 	$L__BB0_378;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1677;
  cvt.f32.f16 %f332, low;}

	// end inline asm
	add.s32 	%r1302, %r572, %r393;
	mul.wide.s32 	%rd313, %r1302, 4;
	add.s64 	%rd314, %rd26, %rd313;
	st.global.f32 	[%rd314], %f332;

$L__BB0_378:
	not.pred 	%p226, %p14;
	@%p226 bra 	$L__BB0_380;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1677;
  cvt.f32.f16 %f333, high;}

	// end inline asm
	add.s32 	%r1304, %r572, %r394;
	mul.wide.s32 	%rd315, %r1304, 4;
	add.s64 	%rd316, %rd26, %rd315;
	st.global.f32 	[%rd316], %f333;

$L__BB0_380:
	add.s32 	%r1507, %r554, 1;
	add.s32 	%r1305, %r1507, %r563;
	mul.lo.s32 	%r1306, %r1305, %r46;
	sub.s32 	%r573, %r1306, %r663;
	@%p15 bra 	$L__BB0_385;

	not.pred 	%p228, %p11;
	@%p228 bra 	$L__BB0_383;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r490;
  cvt.f32.f16 %f334, low;}

	// end inline asm
	add.s32 	%r1308, %r573, %r391;
	mul.wide.s32 	%rd317, %r1308, 4;
	add.s64 	%rd318, %rd26, %rd317;
	st.global.f32 	[%rd318], %f334;

$L__BB0_383:
	not.pred 	%p229, %p13;
	@%p229 bra 	$L__BB0_385;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r490;
  cvt.f32.f16 %f335, high;}

	// end inline asm
	add.s32 	%r1310, %r573, %r392;
	mul.wide.s32 	%rd319, %r1310, 4;
	add.s64 	%rd320, %rd26, %rd319;
	st.global.f32 	[%rd320], %f335;

$L__BB0_385:
	@%p15 bra 	$L__BB0_390;

	not.pred 	%p231, %p12;
	@%p231 bra 	$L__BB0_388;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r487;
  cvt.f32.f16 %f336, low;}

	// end inline asm
	add.s32 	%r1312, %r573, %r393;
	mul.wide.s32 	%rd321, %r1312, 4;
	add.s64 	%rd322, %rd26, %rd321;
	st.global.f32 	[%rd322], %f336;

$L__BB0_388:
	not.pred 	%p232, %p14;
	@%p232 bra 	$L__BB0_390;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r487;
  cvt.f32.f16 %f337, high;}

	// end inline asm
	add.s32 	%r1314, %r573, %r394;
	mul.wide.s32 	%rd323, %r1314, 4;
	add.s64 	%rd324, %rd26, %rd323;
	st.global.f32 	[%rd324], %f337;

$L__BB0_390:
	add.s32 	%r1508, %r554, 1;
	add.s32 	%r1315, %r1508, %r566;
	mul.lo.s32 	%r1316, %r1315, %r46;
	sub.s32 	%r574, %r1316, %r663;
	@%p15 bra 	$L__BB0_395;

	not.pred 	%p234, %p11;
	@%p234 bra 	$L__BB0_393;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1674;
  cvt.f32.f16 %f338, low;}

	// end inline asm
	add.s32 	%r1318, %r574, %r391;
	mul.wide.s32 	%rd325, %r1318, 4;
	add.s64 	%rd326, %rd26, %rd325;
	st.global.f32 	[%rd326], %f338;

$L__BB0_393:
	not.pred 	%p235, %p13;
	@%p235 bra 	$L__BB0_395;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1674;
  cvt.f32.f16 %f339, high;}

	// end inline asm
	add.s32 	%r1320, %r574, %r392;
	mul.wide.s32 	%rd327, %r1320, 4;
	add.s64 	%rd328, %rd26, %rd327;
	st.global.f32 	[%rd328], %f339;

$L__BB0_395:
	@%p15 bra 	$L__BB0_400;

	not.pred 	%p237, %p12;
	@%p237 bra 	$L__BB0_398;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1671;
  cvt.f32.f16 %f340, low;}

	// end inline asm
	add.s32 	%r1322, %r574, %r393;
	mul.wide.s32 	%rd329, %r1322, 4;
	add.s64 	%rd330, %rd26, %rd329;
	st.global.f32 	[%rd330], %f340;

$L__BB0_398:
	not.pred 	%p238, %p14;
	@%p238 bra 	$L__BB0_400;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1671;
  cvt.f32.f16 %f341, high;}

	// end inline asm
	add.s32 	%r1324, %r574, %r394;
	mul.wide.s32 	%rd331, %r1324, 4;
	add.s64 	%rd332, %rd26, %rd331;
	st.global.f32 	[%rd332], %f341;

$L__BB0_400:
	add.s32 	%r1509, %r554, 1;
	add.s32 	%r1325, %r1509, %r571;
	mul.lo.s32 	%r1326, %r1325, %r46;
	sub.s32 	%r575, %r1326, %r663;
	@%p15 bra 	$L__BB0_405;

	not.pred 	%p240, %p11;
	@%p240 bra 	$L__BB0_403;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1673;
  cvt.f32.f16 %f342, low;}

	// end inline asm
	add.s32 	%r1328, %r575, %r391;
	mul.wide.s32 	%rd333, %r1328, 4;
	add.s64 	%rd334, %rd26, %rd333;
	st.global.f32 	[%rd334], %f342;

$L__BB0_403:
	not.pred 	%p241, %p13;
	@%p241 bra 	$L__BB0_405;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1673;
  cvt.f32.f16 %f343, high;}

	// end inline asm
	add.s32 	%r1330, %r575, %r392;
	mul.wide.s32 	%rd335, %r1330, 4;
	add.s64 	%rd336, %rd26, %rd335;
	st.global.f32 	[%rd336], %f343;

$L__BB0_405:
	@%p15 bra 	$L__BB0_410;

	not.pred 	%p243, %p12;
	@%p243 bra 	$L__BB0_408;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1670;
  cvt.f32.f16 %f344, low;}

	// end inline asm
	add.s32 	%r1332, %r575, %r393;
	mul.wide.s32 	%rd337, %r1332, 4;
	add.s64 	%rd338, %rd26, %rd337;
	st.global.f32 	[%rd338], %f344;

$L__BB0_408:
	not.pred 	%p244, %p14;
	@%p244 bra 	$L__BB0_410;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1670;
  cvt.f32.f16 %f345, high;}

	// end inline asm
	add.s32 	%r1334, %r575, %r394;
	mul.wide.s32 	%rd339, %r1334, 4;
	add.s64 	%rd340, %rd26, %rd339;
	st.global.f32 	[%rd340], %f345;

$L__BB0_410:
	add.s32 	%r576, %r554, 2;
	add.s32 	%r1335, %r576, %r563;
	mul.lo.s32 	%r1336, %r1335, %r46;
	sub.s32 	%r577, %r1336, %r663;
	@%p15 bra 	$L__BB0_415;

	not.pred 	%p246, %p11;
	@%p246 bra 	$L__BB0_413;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1722;
  cvt.f32.f16 %f346, low;}

	// end inline asm
	add.s32 	%r1338, %r577, %r391;
	mul.wide.s32 	%rd341, %r1338, 4;
	add.s64 	%rd342, %rd26, %rd341;
	st.global.f32 	[%rd342], %f346;

$L__BB0_413:
	not.pred 	%p247, %p13;
	@%p247 bra 	$L__BB0_415;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1722;
  cvt.f32.f16 %f347, high;}

	// end inline asm
	add.s32 	%r1340, %r577, %r392;
	mul.wide.s32 	%rd343, %r1340, 4;
	add.s64 	%rd344, %rd26, %rd343;
	st.global.f32 	[%rd344], %f347;

$L__BB0_415:
	@%p15 bra 	$L__BB0_420;

	not.pred 	%p249, %p12;
	@%p249 bra 	$L__BB0_418;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1721;
  cvt.f32.f16 %f348, low;}

	// end inline asm
	add.s32 	%r1342, %r577, %r393;
	mul.wide.s32 	%rd345, %r1342, 4;
	add.s64 	%rd346, %rd26, %rd345;
	st.global.f32 	[%rd346], %f348;

$L__BB0_418:
	not.pred 	%p250, %p14;
	@%p250 bra 	$L__BB0_420;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1721;
  cvt.f32.f16 %f349, high;}

	// end inline asm
	add.s32 	%r1344, %r577, %r394;
	mul.wide.s32 	%rd347, %r1344, 4;
	add.s64 	%rd348, %rd26, %rd347;
	st.global.f32 	[%rd348], %f349;

$L__BB0_420:
	add.s32 	%r1510, %r509, %r426;
	mul.lo.s32 	%r578, %r1230, %r45;
	add.s32 	%r1346, %r1510, %r578;
	mul.lo.s32 	%r1347, %r1346, %r46;
	sub.s32 	%r579, %r1347, %r663;
	@%p15 bra 	$L__BB0_425;

	not.pred 	%p252, %p11;
	@%p252 bra 	$L__BB0_423;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r466;
  cvt.f32.f16 %f350, low;}

	// end inline asm
	add.s32 	%r1349, %r579, %r391;
	mul.wide.s32 	%rd349, %r1349, 4;
	add.s64 	%rd350, %rd26, %rd349;
	st.global.f32 	[%rd350], %f350;

$L__BB0_423:
	not.pred 	%p253, %p13;
	@%p253 bra 	$L__BB0_425;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r466;
  cvt.f32.f16 %f351, high;}

	// end inline asm
	add.s32 	%r1351, %r579, %r392;
	mul.wide.s32 	%rd351, %r1351, 4;
	add.s64 	%rd352, %rd26, %rd351;
	st.global.f32 	[%rd352], %f351;

$L__BB0_425:
	@%p15 bra 	$L__BB0_430;

	not.pred 	%p255, %p12;
	@%p255 bra 	$L__BB0_428;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r462;
  cvt.f32.f16 %f352, low;}

	// end inline asm
	add.s32 	%r1353, %r579, %r393;
	mul.wide.s32 	%rd353, %r1353, 4;
	add.s64 	%rd354, %rd26, %rd353;
	st.global.f32 	[%rd354], %f352;

$L__BB0_428:
	not.pred 	%p256, %p14;
	@%p256 bra 	$L__BB0_430;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r462;
  cvt.f32.f16 %f353, high;}

	// end inline asm
	add.s32 	%r1355, %r579, %r394;
	mul.wide.s32 	%rd355, %r1355, 4;
	add.s64 	%rd356, %rd26, %rd355;
	st.global.f32 	[%rd356], %f353;

$L__BB0_430:
	add.s32 	%r1513, %r555, %r44;
	add.s32 	%r1512, %r1513, %r44;
	add.s32 	%r1511, %r509, %r426;
	add.s32 	%r1356, %r553, %r1512;
	mul.lo.s32 	%r580, %r1356, %r45;
	add.s32 	%r1357, %r1511, %r580;
	mul.lo.s32 	%r1358, %r1357, %r46;
	sub.s32 	%r581, %r1358, %r663;
	@%p15 bra 	$L__BB0_435;

	not.pred 	%p258, %p11;
	@%p258 bra 	$L__BB0_433;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1731;
  cvt.f32.f16 %f354, low;}

	// end inline asm
	add.s32 	%r1360, %r581, %r391;
	mul.wide.s32 	%rd357, %r1360, 4;
	add.s64 	%rd358, %rd26, %rd357;
	st.global.f32 	[%rd358], %f354;

$L__BB0_433:
	not.pred 	%p259, %p13;
	@%p259 bra 	$L__BB0_435;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1731;
  cvt.f32.f16 %f355, high;}

	// end inline asm
	add.s32 	%r1362, %r581, %r392;
	mul.wide.s32 	%rd359, %r1362, 4;
	add.s64 	%rd360, %rd26, %rd359;
	st.global.f32 	[%rd360], %f355;

$L__BB0_435:
	@%p15 bra 	$L__BB0_440;

	not.pred 	%p261, %p12;
	@%p261 bra 	$L__BB0_438;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1729;
  cvt.f32.f16 %f356, low;}

	// end inline asm
	add.s32 	%r1364, %r581, %r393;
	mul.wide.s32 	%rd361, %r1364, 4;
	add.s64 	%rd362, %rd26, %rd361;
	st.global.f32 	[%rd362], %f356;

$L__BB0_438:
	not.pred 	%p262, %p14;
	@%p262 bra 	$L__BB0_440;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1729;
  cvt.f32.f16 %f357, high;}

	// end inline asm
	add.s32 	%r1366, %r581, %r394;
	mul.wide.s32 	%rd363, %r1366, 4;
	add.s64 	%rd364, %rd26, %rd363;
	st.global.f32 	[%rd364], %f357;

$L__BB0_440:
	mul.lo.s32 	%r582, %r1218, %r45;
	add.s32 	%r1368, %r554, %r582;
	mul.lo.s32 	%r1369, %r1368, %r46;
	sub.s32 	%r583, %r1369, %r663;
	@%p15 bra 	$L__BB0_445;

	not.pred 	%p264, %p11;
	@%p264 bra 	$L__BB0_443;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1683;
  cvt.f32.f16 %f358, low;}

	// end inline asm
	add.s32 	%r1371, %r583, %r391;
	mul.wide.s32 	%rd365, %r1371, 4;
	add.s64 	%rd366, %rd26, %rd365;
	st.global.f32 	[%rd366], %f358;

$L__BB0_443:
	not.pred 	%p265, %p13;
	@%p265 bra 	$L__BB0_445;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1683;
  cvt.f32.f16 %f359, high;}

	// end inline asm
	add.s32 	%r1373, %r583, %r392;
	mul.wide.s32 	%rd367, %r1373, 4;
	add.s64 	%rd368, %rd26, %rd367;
	st.global.f32 	[%rd368], %f359;

$L__BB0_445:
	@%p15 bra 	$L__BB0_450;

	not.pred 	%p267, %p12;
	@%p267 bra 	$L__BB0_448;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1679;
  cvt.f32.f16 %f360, low;}

	// end inline asm
	add.s32 	%r1375, %r583, %r393;
	mul.wide.s32 	%rd369, %r1375, 4;
	add.s64 	%rd370, %rd26, %rd369;
	st.global.f32 	[%rd370], %f360;

$L__BB0_448:
	not.pred 	%p268, %p14;
	@%p268 bra 	$L__BB0_450;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1679;
  cvt.f32.f16 %f361, high;}

	// end inline asm
	add.s32 	%r1377, %r583, %r394;
	mul.wide.s32 	%rd371, %r1377, 4;
	add.s64 	%rd372, %rd26, %rd371;
	st.global.f32 	[%rd372], %f361;

$L__BB0_450:
	add.s32 	%r1378, %r554, %r578;
	mul.lo.s32 	%r1379, %r1378, %r46;
	sub.s32 	%r584, %r1379, %r663;
	@%p15 bra 	$L__BB0_455;

	not.pred 	%p270, %p11;
	@%p270 bra 	$L__BB0_453;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1682;
  cvt.f32.f16 %f362, low;}

	// end inline asm
	add.s32 	%r1381, %r584, %r391;
	mul.wide.s32 	%rd373, %r1381, 4;
	add.s64 	%rd374, %rd26, %rd373;
	st.global.f32 	[%rd374], %f362;

$L__BB0_453:
	not.pred 	%p271, %p13;
	@%p271 bra 	$L__BB0_455;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1682;
  cvt.f32.f16 %f363, high;}

	// end inline asm
	add.s32 	%r1383, %r584, %r392;
	mul.wide.s32 	%rd375, %r1383, 4;
	add.s64 	%rd376, %rd26, %rd375;
	st.global.f32 	[%rd376], %f363;

$L__BB0_455:
	@%p15 bra 	$L__BB0_460;

	not.pred 	%p273, %p12;
	@%p273 bra 	$L__BB0_458;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1678;
  cvt.f32.f16 %f364, low;}

	// end inline asm
	add.s32 	%r1385, %r584, %r393;
	mul.wide.s32 	%rd377, %r1385, 4;
	add.s64 	%rd378, %rd26, %rd377;
	st.global.f32 	[%rd378], %f364;

$L__BB0_458:
	not.pred 	%p274, %p14;
	@%p274 bra 	$L__BB0_460;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1678;
  cvt.f32.f16 %f365, high;}

	// end inline asm
	add.s32 	%r1387, %r584, %r394;
	mul.wide.s32 	%rd379, %r1387, 4;
	add.s64 	%rd380, %rd26, %rd379;
	st.global.f32 	[%rd380], %f365;

$L__BB0_460:
	add.s32 	%r1388, %r554, %r580;
	mul.lo.s32 	%r1389, %r1388, %r46;
	sub.s32 	%r585, %r1389, %r663;
	@%p15 bra 	$L__BB0_465;

	not.pred 	%p276, %p11;
	@%p276 bra 	$L__BB0_463;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r481;
  cvt.f32.f16 %f366, low;}

	// end inline asm
	add.s32 	%r1391, %r585, %r391;
	mul.wide.s32 	%rd381, %r1391, 4;
	add.s64 	%rd382, %rd26, %rd381;
	st.global.f32 	[%rd382], %f366;

$L__BB0_463:
	not.pred 	%p277, %p13;
	@%p277 bra 	$L__BB0_465;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r481;
  cvt.f32.f16 %f367, high;}

	// end inline asm
	add.s32 	%r1393, %r585, %r392;
	mul.wide.s32 	%rd383, %r1393, 4;
	add.s64 	%rd384, %rd26, %rd383;
	st.global.f32 	[%rd384], %f367;

$L__BB0_465:
	@%p15 bra 	$L__BB0_470;

	not.pred 	%p279, %p12;
	@%p279 bra 	$L__BB0_468;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r476;
  cvt.f32.f16 %f368, low;}

	// end inline asm
	add.s32 	%r1395, %r585, %r393;
	mul.wide.s32 	%rd385, %r1395, 4;
	add.s64 	%rd386, %rd26, %rd385;
	st.global.f32 	[%rd386], %f368;

$L__BB0_468:
	not.pred 	%p280, %p14;
	@%p280 bra 	$L__BB0_470;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r476;
  cvt.f32.f16 %f369, high;}

	// end inline asm
	add.s32 	%r1397, %r585, %r394;
	mul.wide.s32 	%rd387, %r1397, 4;
	add.s64 	%rd388, %rd26, %rd387;
	st.global.f32 	[%rd388], %f369;

$L__BB0_470:
	add.s32 	%r1514, %r554, 1;
	add.s32 	%r1398, %r1514, %r582;
	mul.lo.s32 	%r1399, %r1398, %r46;
	sub.s32 	%r586, %r1399, %r663;
	@%p15 bra 	$L__BB0_475;

	not.pred 	%p282, %p11;
	@%p282 bra 	$L__BB0_473;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1675;
  cvt.f32.f16 %f370, low;}

	// end inline asm
	add.s32 	%r1401, %r586, %r391;
	mul.wide.s32 	%rd389, %r1401, 4;
	add.s64 	%rd390, %rd26, %rd389;
	st.global.f32 	[%rd390], %f370;

$L__BB0_473:
	not.pred 	%p283, %p13;
	@%p283 bra 	$L__BB0_475;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1675;
  cvt.f32.f16 %f371, high;}

	// end inline asm
	add.s32 	%r1403, %r586, %r392;
	mul.wide.s32 	%rd391, %r1403, 4;
	add.s64 	%rd392, %rd26, %rd391;
	st.global.f32 	[%rd392], %f371;

$L__BB0_475:
	@%p15 bra 	$L__BB0_480;

	not.pred 	%p285, %p12;
	@%p285 bra 	$L__BB0_478;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1672;
  cvt.f32.f16 %f372, low;}

	// end inline asm
	add.s32 	%r1405, %r586, %r393;
	mul.wide.s32 	%rd393, %r1405, 4;
	add.s64 	%rd394, %rd26, %rd393;
	st.global.f32 	[%rd394], %f372;

$L__BB0_478:
	not.pred 	%p286, %p14;
	@%p286 bra 	$L__BB0_480;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1672;
  cvt.f32.f16 %f373, high;}

	// end inline asm
	add.s32 	%r1407, %r586, %r394;
	mul.wide.s32 	%rd395, %r1407, 4;
	add.s64 	%rd396, %rd26, %rd395;
	st.global.f32 	[%rd396], %f373;

$L__BB0_480:
	add.s32 	%r1515, %r554, 1;
	add.s32 	%r1408, %r1515, %r578;
	mul.lo.s32 	%r1409, %r1408, %r46;
	sub.s32 	%r587, %r1409, %r663;
	@%p15 bra 	$L__BB0_485;

	not.pred 	%p288, %p11;
	@%p288 bra 	$L__BB0_483;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r451;
  cvt.f32.f16 %f374, low;}

	// end inline asm
	add.s32 	%r1411, %r587, %r391;
	mul.wide.s32 	%rd397, %r1411, 4;
	add.s64 	%rd398, %rd26, %rd397;
	st.global.f32 	[%rd398], %f374;

$L__BB0_483:
	not.pred 	%p289, %p13;
	@%p289 bra 	$L__BB0_485;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r451;
  cvt.f32.f16 %f375, high;}

	// end inline asm
	add.s32 	%r1413, %r587, %r392;
	mul.wide.s32 	%rd399, %r1413, 4;
	add.s64 	%rd400, %rd26, %rd399;
	st.global.f32 	[%rd400], %f375;

$L__BB0_485:
	@%p15 bra 	$L__BB0_490;

	not.pred 	%p291, %p12;
	@%p291 bra 	$L__BB0_488;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r443;
  cvt.f32.f16 %f376, low;}

	// end inline asm
	add.s32 	%r1415, %r587, %r393;
	mul.wide.s32 	%rd401, %r1415, 4;
	add.s64 	%rd402, %rd26, %rd401;
	st.global.f32 	[%rd402], %f376;

$L__BB0_488:
	not.pred 	%p292, %p14;
	@%p292 bra 	$L__BB0_490;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r443;
  cvt.f32.f16 %f377, high;}

	// end inline asm
	add.s32 	%r1417, %r587, %r394;
	mul.wide.s32 	%rd403, %r1417, 4;
	add.s64 	%rd404, %rd26, %rd403;
	st.global.f32 	[%rd404], %f377;

$L__BB0_490:
	add.s32 	%r1516, %r554, 1;
	add.s32 	%r1418, %r1516, %r580;
	mul.lo.s32 	%r1419, %r1418, %r46;
	sub.s32 	%r588, %r1419, %r663;
	@%p15 bra 	$L__BB0_495;

	not.pred 	%p294, %p11;
	@%p294 bra 	$L__BB0_493;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r472;
  cvt.f32.f16 %f378, low;}

	// end inline asm
	add.s32 	%r1421, %r588, %r391;
	mul.wide.s32 	%rd405, %r1421, 4;
	add.s64 	%rd406, %rd26, %rd405;
	st.global.f32 	[%rd406], %f378;

$L__BB0_493:
	not.pred 	%p295, %p13;
	@%p295 bra 	$L__BB0_495;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r472;
  cvt.f32.f16 %f379, high;}

	// end inline asm
	add.s32 	%r1423, %r588, %r392;
	mul.wide.s32 	%rd407, %r1423, 4;
	add.s64 	%rd408, %rd26, %rd407;
	st.global.f32 	[%rd408], %f379;

$L__BB0_495:
	@%p15 bra 	$L__BB0_500;

	not.pred 	%p297, %p12;
	@%p297 bra 	$L__BB0_498;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r470;
  cvt.f32.f16 %f380, low;}

	// end inline asm
	add.s32 	%r1425, %r588, %r393;
	mul.wide.s32 	%rd409, %r1425, 4;
	add.s64 	%rd410, %rd26, %rd409;
	st.global.f32 	[%rd410], %f380;

$L__BB0_498:
	not.pred 	%p298, %p14;
	@%p298 bra 	$L__BB0_500;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r470;
  cvt.f32.f16 %f381, high;}

	// end inline asm
	add.s32 	%r1427, %r588, %r394;
	mul.wide.s32 	%rd411, %r1427, 4;
	add.s64 	%rd412, %rd26, %rd411;
	st.global.f32 	[%rd412], %f381;

$L__BB0_500:
	add.s32 	%r1524, %r554, 2;
	add.s32 	%r1428, %r1524, %r580;
	mul.lo.s32 	%r1429, %r1428, %r46;
	sub.s32 	%r589, %r1429, %r663;
	@%p15 bra 	$L__BB0_505;

	not.pred 	%p300, %p11;
	@%p300 bra 	$L__BB0_503;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1714;
  cvt.f32.f16 %f382, low;}

	// end inline asm
	add.s32 	%r1431, %r589, %r391;
	mul.wide.s32 	%rd413, %r1431, 4;
	add.s64 	%rd414, %rd26, %rd413;
	st.global.f32 	[%rd414], %f382;

$L__BB0_503:
	not.pred 	%p301, %p13;
	@%p301 bra 	$L__BB0_505;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1714;
  cvt.f32.f16 %f383, high;}

	// end inline asm
	add.s32 	%r1433, %r589, %r392;
	mul.wide.s32 	%rd415, %r1433, 4;
	add.s64 	%rd416, %rd26, %rd415;
	st.global.f32 	[%rd416], %f383;

$L__BB0_505:
	@%p15 bra 	$L__BB0_510;

	not.pred 	%p303, %p12;
	@%p303 bra 	$L__BB0_508;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1713;
  cvt.f32.f16 %f384, low;}

	// end inline asm
	add.s32 	%r1435, %r589, %r393;
	mul.wide.s32 	%rd417, %r1435, 4;
	add.s64 	%rd418, %rd26, %rd417;
	st.global.f32 	[%rd418], %f384;

$L__BB0_508:
	not.pred 	%p304, %p14;
	@%p304 bra 	$L__BB0_510;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1713;
  cvt.f32.f16 %f385, high;}

	// end inline asm
	add.s32 	%r1437, %r589, %r394;
	mul.wide.s32 	%rd419, %r1437, 4;
	add.s64 	%rd420, %rd26, %rd419;
	st.global.f32 	[%rd420], %f385;

$L__BB0_510:
	add.s32 	%r1517, %r555, %r44;
	add.s32 	%r590, %r553, 1;
	add.s32 	%r1438, %r590, %r1517;
	mad.lo.s32 	%r1439, %r1438, %r45, %r554;
	mul.lo.s32 	%r1440, %r1439, %r46;
	sub.s32 	%r591, %r1440, %r663;
	@%p15 bra 	$L__BB0_515;

	not.pred 	%p306, %p11;
	@%p306 bra 	$L__BB0_513;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1667;
  cvt.f32.f16 %f386, low;}

	// end inline asm
	add.s32 	%r1442, %r591, %r391;
	mul.wide.s32 	%rd421, %r1442, 4;
	add.s64 	%rd422, %rd26, %rd421;
	st.global.f32 	[%rd422], %f386;

$L__BB0_513:
	not.pred 	%p307, %p13;
	@%p307 bra 	$L__BB0_515;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1667;
  cvt.f32.f16 %f387, high;}

	// end inline asm
	add.s32 	%r1444, %r591, %r392;
	mul.wide.s32 	%rd423, %r1444, 4;
	add.s64 	%rd424, %rd26, %rd423;
	st.global.f32 	[%rd424], %f387;

$L__BB0_515:
	@%p15 bra 	$L__BB0_520;

	not.pred 	%p309, %p12;
	@%p309 bra 	$L__BB0_518;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1662;
  cvt.f32.f16 %f388, low;}

	// end inline asm
	add.s32 	%r1446, %r591, %r393;
	mul.wide.s32 	%rd425, %r1446, 4;
	add.s64 	%rd426, %rd26, %rd425;
	st.global.f32 	[%rd426], %f388;

$L__BB0_518:
	not.pred 	%p310, %p14;
	@%p310 bra 	$L__BB0_520;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1662;
  cvt.f32.f16 %f389, high;}

	// end inline asm
	add.s32 	%r1448, %r591, %r394;
	mul.wide.s32 	%rd427, %r1448, 4;
	add.s64 	%rd428, %rd26, %rd427;
	st.global.f32 	[%rd428], %f389;

$L__BB0_520:
	add.s32 	%r1519, %r555, %r44;
	add.s32 	%r1518, %r1519, %r44;
	add.s32 	%r1449, %r590, %r1518;
	mul.lo.s32 	%r592, %r1449, %r45;
	add.s32 	%r1450, %r554, %r592;
	mul.lo.s32 	%r1451, %r1450, %r46;
	sub.s32 	%r593, %r1451, %r663;
	@%p15 bra 	$L__BB0_525;

	not.pred 	%p312, %p11;
	@%p312 bra 	$L__BB0_523;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1666;
  cvt.f32.f16 %f390, low;}

	// end inline asm
	add.s32 	%r1453, %r593, %r391;
	mul.wide.s32 	%rd429, %r1453, 4;
	add.s64 	%rd430, %rd26, %rd429;
	st.global.f32 	[%rd430], %f390;

$L__BB0_523:
	not.pred 	%p313, %p13;
	@%p313 bra 	$L__BB0_525;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1666;
  cvt.f32.f16 %f391, high;}

	// end inline asm
	add.s32 	%r1455, %r593, %r392;
	mul.wide.s32 	%rd431, %r1455, 4;
	add.s64 	%rd432, %rd26, %rd431;
	st.global.f32 	[%rd432], %f391;

$L__BB0_525:
	@%p15 bra 	$L__BB0_530;

	not.pred 	%p315, %p12;
	@%p315 bra 	$L__BB0_528;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1661;
  cvt.f32.f16 %f392, low;}

	// end inline asm
	add.s32 	%r1457, %r593, %r393;
	mul.wide.s32 	%rd433, %r1457, 4;
	add.s64 	%rd434, %rd26, %rd433;
	st.global.f32 	[%rd434], %f392;

$L__BB0_528:
	not.pred 	%p316, %p14;
	@%p316 bra 	$L__BB0_530;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1661;
  cvt.f32.f16 %f393, high;}

	// end inline asm
	add.s32 	%r1459, %r593, %r394;
	mul.wide.s32 	%rd435, %r1459, 4;
	add.s64 	%rd436, %rd26, %rd435;
	st.global.f32 	[%rd436], %f393;

$L__BB0_530:
	add.s32 	%r1520, %r554, 1;
	add.s32 	%r1460, %r1520, %r592;
	mul.lo.s32 	%r1461, %r1460, %r46;
	sub.s32 	%r594, %r1461, %r663;
	@%p15 bra 	$L__BB0_535;

	not.pred 	%p318, %p11;
	@%p318 bra 	$L__BB0_533;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1657;
  cvt.f32.f16 %f394, low;}

	// end inline asm
	add.s32 	%r1463, %r594, %r391;
	mul.wide.s32 	%rd437, %r1463, 4;
	add.s64 	%rd438, %rd26, %rd437;
	st.global.f32 	[%rd438], %f394;

$L__BB0_533:
	not.pred 	%p319, %p13;
	@%p319 bra 	$L__BB0_535;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1657;
  cvt.f32.f16 %f395, high;}

	// end inline asm
	add.s32 	%r1465, %r594, %r392;
	mul.wide.s32 	%rd439, %r1465, 4;
	add.s64 	%rd440, %rd26, %rd439;
	st.global.f32 	[%rd440], %f395;

$L__BB0_535:
	@%p15 bra 	$L__BB0_540;

	not.pred 	%p321, %p12;
	@%p321 bra 	$L__BB0_538;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1655;
  cvt.f32.f16 %f396, low;}

	// end inline asm
	add.s32 	%r1467, %r594, %r393;
	mul.wide.s32 	%rd441, %r1467, 4;
	add.s64 	%rd442, %rd26, %rd441;
	st.global.f32 	[%rd442], %f396;

$L__BB0_538:
	not.pred 	%p322, %p14;
	@%p322 bra 	$L__BB0_540;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1655;
  cvt.f32.f16 %f397, high;}

	// end inline asm
	add.s32 	%r1469, %r594, %r394;
	mul.wide.s32 	%rd443, %r1469, 4;
	add.s64 	%rd444, %rd26, %rd443;
	st.global.f32 	[%rd444], %f397;

$L__BB0_540:
	setp.eq.s32 	%p323, %r29, %r374;
	@%p323 bra 	$L__BB0_542;

	st.shared.v4.u32 	[%r414], {%r1734, %r1733, %r1731, %r1729};
	st.shared.v4.u32 	[%r414+768], {%r1691, %r1689, %r1681, %r1677};
	add.s32 	%r1506, %r1158, 768;
	st.shared.v2.u32 	[%r1506], {%r1685, %r1684};

$L__BB0_542:
	setp.eq.s32 	%p324, %r30, %r377;
	@%p324 bra 	$L__BB0_546;

	st.shared.v4.u32 	[%r417], {%r1687, %r1686, %r1673, %r1670};
	st.shared.v4.u32 	[%r417+768], {%r1722, %r1721, %r1714, %r1713};
	@%p323 bra 	$L__BB0_545;

	st.shared.v2.u32 	[%r419], {%r1690, %r1688};

$L__BB0_545:
	st.shared.v2.u32 	[%r419+768], {%r1674, %r1671};

$L__BB0_546:
	bar.sync 	0;
	mov.u32 	%r1628, %r443;
	mov.u32 	%r1629, %r1672;
	mov.u32 	%r1636, %r451;
	mov.u32 	%r1637, %r1675;
	mov.u32 	%r1635, %r1657;
	mov.u32 	%r1627, %r1655;
	@%p164 bra 	$L__BB0_548;

	shl.b32 	%r1470, %r413, 4;
	add.s32 	%r1471, %r418, %r1470;
	ld.shared.v4.u32 	{%r1637, %r1629, %r1635, %r1627}, [%r1471];
	ld.shared.v4.u32 	{%r1722, %r1721, %r1714, %r1713}, [%r1471+768];
	shl.b32 	%r1480, %r415, 3;
	add.s32 	%r1481, %r418, %r1480;
	ld.shared.v2.u32 	{%r1636, %r1628}, [%r1481];

$L__BB0_548:
	setp.eq.s32 	%p337, %r30, 0;
	mov.u32 	%r1723, %r1666;
	mov.u32 	%r1724, %r1667;
	mov.u32 	%r1725, %r1662;
	mov.u32 	%r1726, %r1661;
	mov.u32 	%r1727, %r1679;
	mov.u32 	%r1728, %r1683;
	mov.u32 	%r1730, %r462;
	mov.u32 	%r1732, %r466;
	@%p337 bra 	$L__BB0_551;

	shl.b32 	%r1484, %r413, 4;
	add.s32 	%r1485, %r420, %r1484;
	ld.shared.v4.u32 	{%r1734, %r1733, %r1731, %r1729}, [%r1485];
	ld.shared.v4.u32 	{%r1728, %r1727, %r1723, %r1726}, [%r1485+768];
	shl.b32 	%r1494, %r415, 3;
	add.s32 	%r624, %r420, %r1494;
	ld.shared.v2.u32 	{%r1732, %r1730}, [%r624];
	mov.u32 	%r1724, %r1667;
	mov.u32 	%r1725, %r1662;
	@%p164 bra 	$L__BB0_551;

	ld.shared.v2.u32 	{%r1724, %r1725}, [%r624+768];

$L__BB0_551:
	bar.sync 	0;
	@%p323 bra 	$L__BB0_554;

	setp.ne.s32 	%p330, %r30, %r377;
	st.shared.v4.u32 	[%r422], {%r1710, %r1708, %r1615, %r1614};
	st.shared.v4.u32 	[%r422+512], {%r1648, %r1644, %r1664, %r1659};
	@%p330 bra 	$L__BB0_554;

	st.shared.v4.u32 	[%r422+1024], {%r1665, %r1660, %r1680, %r1676};

$L__BB0_554:
	@%p324 bra 	$L__BB0_556;

	st.shared.v4.u32 	[%r423], {%r1665, %r1660, %r1680, %r1676};
	st.shared.v4.u32 	[%r423+512], {%r1656, %r1654, %r1634, %r1626};
	st.shared.v4.u32 	[%r423+1024], {%r1632, %r1624, %r1694, %r1693};

$L__BB0_556:
	rem.s32 	%r1499, %r1692, %r649;
	setp.eq.s32 	%p332, %r1499, 0;
	@%p332 bra 	$L__BB0_558;

	bar.sync 	0;
	bra.uni 	$L__BB0_565;

$L__BB0_558:
	@%p150 bra 	$L__BB0_560;

	// begin inline asm
	trap;
	// end inline asm

$L__BB0_560:
	bar.sync 	0;
	@%p151 bra 	$L__BB0_564;

	membar.gl;
	// begin inline asm
	atom.add.release.gpu.u32 %r1500,[%rd25],%r424;
	// end inline asm

$L__BB0_562:
	ld.volatile.u32 	%r1502, [%rd25];
	xor.b32  	%r1503, %r1502, %r1500;
	setp.gt.s32 	%p335, %r1503, -1;
	@%p335 bra 	$L__BB0_562;

	// begin inline asm
	ld.acquire.gpu.u32 %r1504,[%rd25];
	// end inline asm

$L__BB0_564:
	bar.sync 	0;

$L__BB0_565:
	add.s32 	%r1692, %r1692, 1;
	setp.lt.s32 	%p336, %r1692, %r38;
	mov.u32 	%r1614, %r1701;
	mov.u32 	%r1615, %r1702;
	mov.u32 	%r1624, %r1695;
	mov.u32 	%r1626, %r1699;
	mov.u32 	%r1632, %r1696;
	mov.u32 	%r1634, %r1697;
	mov.u32 	%r1644, %r1707;
	mov.u32 	%r1648, %r1709;
	mov.u32 	%r1654, %r440;
	mov.u32 	%r1656, %r448;
	mov.u32 	%r1659, %r453;
	mov.u32 	%r1660, %r455;
	mov.u32 	%r1664, %r434;
	mov.u32 	%r1665, %r457;
	mov.u32 	%r1670, %r470;
	mov.u32 	%r1671, %r443;
	mov.u32 	%r1673, %r472;
	mov.u32 	%r1674, %r451;
	mov.u32 	%r1676, %r473;
	mov.u32 	%r1677, %r476;
	mov.u32 	%r1680, %r478;
	mov.u32 	%r1681, %r481;
	mov.u32 	%r1684, %r462;
	mov.u32 	%r1685, %r466;
	mov.u32 	%r1686, %r487;
	mov.u32 	%r1687, %r490;
	mov.u32 	%r1688, %r493;
	mov.u32 	%r1689, %r494;
	mov.u32 	%r1690, %r497;
	mov.u32 	%r1691, %r498;
	@%p336 bra 	$L__BB0_293;

$L__BB0_566:
	ret;

}

