//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31833905
// Cuda compilation tools, release 11.8, V11.8.89
// Based on NVVM 7.0.1
//

.version 7.8
.target sm_75
.address_size 64

	// .globl	_ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE
.global .align 4 .b8 _ZZN4cuda3std3__48__detail21__stronger_order_cudaEiiE7__xform[16] = {3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE[24] = {254, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllJE[20] = {254, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllKE[8] = {0, 0, 0, 0, 1, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond6AllEhcE[12] = {0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond6AllXyzE[12] = {0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.extern .shared .align 16 .b8 _ZN6kernel5shmemE[];

.visible .entry _ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE(
	.param .align 8 .b8 _ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0[168]
)
{
	.reg .pred 	%p<373>;
	.reg .f32 	%f<412>;
	.reg .b32 	%r<1828>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<458>;


	mov.b64 	%rd31, _ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0;
	mov.u64 	%rd1, %rd31;
	ld.param.v2.u32 	{%r645, %r646}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0];
	ld.param.v2.u32 	{%r647, %r648}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+8];
	ld.param.v2.u32 	{%r649, %r650}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+16];
	ld.param.v2.u32 	{%r651, %r652}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+24];
	ld.param.v2.u32 	{%r653, %r654}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+32];
	ld.param.v2.u32 	{%r655, %r656}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+40];
	ld.param.v2.u32 	{%r657, %r658}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+48];
	ld.param.v2.u32 	{%r659, %r660}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+56];
	ld.param.v2.u32 	{%r661, %r662}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+64];
	ld.param.v2.u32 	{%r663, %r664}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+72];
	mov.u32 	%r29, %tid.y;
	mov.u32 	%r30, %tid.z;
	mov.u32 	%r31, %ctaid.y;
	mov.u32 	%r32, %ctaid.z;
	mov.u32 	%r665, 32;
	sub.s32 	%r33, %r665, %r652;
	mov.u32 	%r34, %tid.x;
	setp.le.s32 	%p17, %r33, %r34;
	add.s32 	%r666, %r658, -1;
	add.s32 	%r667, %r656, %r650;
	add.s32 	%r668, %r667, %r651;
	add.s32 	%r669, %r668, 1;
	mad.lo.s32 	%r670, %r666, %r657, %r669;
	mul.lo.s32 	%r671, %r645, %r647;
	shl.b32 	%r35, %r671, 1;
	shl.b32 	%r36, %r671, 2;
	div.s32 	%r672, %r670, %r36;
	add.s32 	%r673, %r672, 1;
	mul.lo.s32 	%r674, %r673, %r651;
	mul.lo.s32 	%r675, %r646, %r648;
	shl.b32 	%r37, %r675, 1;
	div.s32 	%r676, %r674, %r37;
	add.s32 	%r677, %r676, 1;
	mul.lo.s32 	%r38, %r677, %r650;
	ld.param.u64 	%rd32, [%rd1+160];
	cvta.to.global.u64 	%rd2, %rd32;
	mad.lo.s32 	%r680, %r647, %r32, %r31;
	mad.lo.s32 	%r681, %r680, %r646, %r30;
	mad.lo.s32 	%r682, %r681, %r645, %r29;
	shl.b32 	%r39, %r682, 5;
	add.s32 	%r1626, %r39, %r34;
	mul.lo.s32 	%r683, %r675, %r671;
	shl.b32 	%r43, %r683, 5;
	sub.s32 	%r44, %r660, %r659;
	mul.lo.s32 	%r684, %r658, %r44;
	sub.s32 	%r45, %r662, %r661;
	mul.lo.s32 	%r685, %r684, %r45;
	sub.s32 	%r46, %r664, %r663;
	mul.lo.s32 	%r686, %r685, %r46;
	mul.lo.s32 	%r47, %r686, 3;
	setp.ge.s32 	%p18, %r1626, %r47;
	@%p18 bra 	$L__BB0_9;

	not.b32 	%r687, %r34;
	add.s32 	%r688, %r47, %r687;
	sub.s32 	%r689, %r688, %r39;
	mul.lo.s32 	%r690, %r675, %r645;
	mul.lo.s32 	%r691, %r690, %r647;
	shl.b32 	%r692, %r691, 5;
	div.u32 	%r48, %r689, %r692;
	add.s32 	%r693, %r48, 1;
	and.b32  	%r1623, %r693, 3;
	setp.eq.s32 	%p19, %r1623, 0;
	mov.u32 	%r1624, %r1626;
	@%p19 bra 	$L__BB0_6;

	mov.u32 	%r1624, %r1626;

$L__BB0_5:
	.pragma "nounroll";
	mul.wide.s32 	%rd33, %r1624, 4;
	add.s64 	%rd34, %rd2, %rd33;
	mov.u32 	%r694, 0;
	st.global.u32 	[%rd34], %r694;
	add.s32 	%r1624, %r1624, %r43;
	add.s32 	%r1623, %r1623, -1;
	setp.ne.s32 	%p20, %r1623, 0;
	@%p20 bra 	$L__BB0_5;

$L__BB0_6:
	setp.lt.u32 	%p21, %r48, 3;
	@%p21 bra 	$L__BB0_9;

	mul.wide.s32 	%rd37, %r43, 4;

$L__BB0_8:
	mul.wide.s32 	%rd35, %r1624, 4;
	add.s64 	%rd36, %rd2, %rd35;
	mov.u32 	%r695, 0;
	st.global.u32 	[%rd36], %r695;
	add.s64 	%rd38, %rd36, %rd37;
	st.global.u32 	[%rd38], %r695;
	add.s32 	%r696, %r1624, %r43;
	add.s32 	%r697, %r696, %r43;
	add.s64 	%rd39, %rd38, %rd37;
	st.global.u32 	[%rd39], %r695;
	add.s32 	%r698, %r697, %r43;
	add.s64 	%rd40, %rd39, %rd37;
	st.global.u32 	[%rd40], %r695;
	add.s32 	%r1624, %r698, %r43;
	setp.lt.s32 	%p22, %r1624, %r47;
	@%p22 bra 	$L__BB0_8;

$L__BB0_9:
	ld.param.u64 	%rd41, [%rd1+80];
	cvta.to.global.u64 	%rd3, %rd41;
	sub.s32 	%r699, %r651, %r35;
	div.s32 	%r700, %r699, %r37;
	mul.lo.s32 	%r701, %r700, %r650;
	sub.s32 	%r702, %r701, %r35;
	sub.s32 	%r703, %r650, %r37;
	mul.lo.s32 	%r704, %r703, %r647;
	mul.lo.s32 	%r57, %r645, 384;
	add.s32 	%r705, %r57, %r57;
	add.s32 	%r706, %r705, 128;
	mul.lo.s32 	%r708, %r675, 768;
	mul.lo.s32 	%r709, %r704, %r706;
	mad.lo.s32 	%r58, %r708, %r702, %r709;
	bra.uni 	$L__BB0_10;

$L__BB0_581:
	mov.f32 	%f411, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f411;
  cvt.rn.f16.f32 high, %f411;
  mov.b32 %r1594, {low,high};}

	// end inline asm
	mul.wide.s32 	%rd451, %r1626, 4;
	add.s64 	%rd452, %rd3, %rd451;
	st.global.u32 	[%rd452], %r1594;
	add.s32 	%r1626, %r1626, %r43;

$L__BB0_10:
	setp.lt.s32 	%p23, %r1626, %r58;
	@%p23 bra 	$L__BB0_581;

	ld.param.u64 	%rd42, [%rd1+120];
	cvta.to.global.u64 	%rd5, %rd42;
	ld.param.u64 	%rd43, [%rd1+88];
	cvta.to.global.u64 	%rd6, %rd43;
	mad.lo.s32 	%r1664, %r645, %r31, %r29;
	mul.lo.s32 	%r63, %r646, %r32;
	add.s32 	%r64, %r63, %r30;
	setp.ge.s32 	%p24, %r1664, %r650;
	@%p24 bra 	$L__BB0_49;

	setp.gt.s32 	%p25, %r33, %r34;
	add.s32 	%r65, %r650, -4;
	add.s32 	%r66, %r651, -4;
	mov.u32 	%r710, 31;
	sub.s32 	%r711, %r710, %r34;
	selp.b32 	%r712, %r34, %r711, %p25;
	shl.b32 	%r713, %r712, 2;
	mov.u32 	%r714, 2;
	sub.s32 	%r67, %r713, %r653;
	shl.b32 	%r715, %r652, 2;
	mov.u32 	%r716, 128;
	sub.s32 	%r68, %r716, %r715;
	add.s32 	%r69, %r660, -1;
	add.s32 	%r70, %r662, -1;
	add.s32 	%r71, %r664, -1;
	sub.s32 	%r717, %r714, %r653;
	add.s32 	%r72, %r717, %r713;
	mul.lo.s32 	%r718, %r651, %r650;
	shl.b32 	%r73, %r718, 6;
	add.s32 	%r74, %r650, -1;
	shl.b32 	%r75, %r34, 1;
	or.b32  	%r76, %r75, 1;
	add.s32 	%r77, %r67, 1;
	add.s32 	%r78, %r72, 1;
	shr.u32 	%r719, %r76, 31;
	add.s32 	%r720, %r76, %r719;
	shr.s32 	%r80, %r720, 1;
	and.b32  	%r721, %r720, -2;
	sub.s32 	%r722, %r76, %r721;
	add.s32 	%r79, %r722, %r73;
	mov.u32 	%r1627, %r1664;

$L__BB0_13:
	setp.ge.s32 	%p26, %r64, %r651;
	@%p26 bra 	$L__BB0_48;

	setp.lt.s32 	%p27, %r1627, 4;
	setp.ge.s32 	%p28, %r1627, %r65;
	or.pred  	%p1, %p27, %p28;
	setp.gt.s32 	%p29, %r660, %r1627;
	selp.b32 	%r723, %r1627, %r69, %p29;
	setp.gt.s32 	%p30, %r659, %r1627;
	selp.b32 	%r724, %r659, %r723, %p30;
	sub.s32 	%r725, %r724, %r659;
	add.s32 	%r82, %r74, %r1627;
	mul.lo.s32 	%r83, %r725, %r45;
	add.s32 	%r726, %r725, %r44;
	mul.lo.s32 	%r84, %r726, %r45;
	add.s32 	%r727, %r726, %r44;
	mul.lo.s32 	%r85, %r727, %r45;
	mov.u32 	%r1628, %r64;

$L__BB0_15:
	setp.lt.s32 	%p31, %r1628, 4;
	or.pred  	%p32, %p1, %p31;
	setp.ge.s32 	%p33, %r1628, %r66;
	or.pred  	%p2, %p33, %p32;
	setp.gt.s32 	%p34, %r662, %r1628;
	selp.b32 	%r728, %r1628, %r70, %p34;
	setp.gt.s32 	%p35, %r661, %r1628;
	selp.b32 	%r729, %r661, %r728, %p35;
	mul.lo.s32 	%r87, %r1628, %r650;
	add.s32 	%r88, %r87, %r1627;
	shl.b32 	%r89, %r88, 6;
	sub.s32 	%r90, %r729, %r661;
	shl.b32 	%r730, %r88, 5;
	add.s32 	%r731, %r730, %r34;
	shl.b32 	%r732, %r731, 2;
	add.s32 	%r733, %r73, %r732;
	mul.wide.s32 	%rd44, %r733, 4;
	add.s64 	%rd7, %rd6, %rd44;
	@%p2 bra 	$L__BB0_19;
	bra.uni 	$L__BB0_16;

$L__BB0_19:
	mov.f32 	%f43, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f43;
  cvt.rn.f16.f32 high, %f43;
  mov.b32 %r751, {low,high};}

	// end inline asm
	st.global.u32 	[%rd7], %r751;
	bra.uni 	$L__BB0_20;

$L__BB0_16:
	@%p25 bra 	$L__BB0_18;
	bra.uni 	$L__BB0_17;

$L__BB0_18:
	rem.s32 	%r736, %r67, %r68;
	add.s32 	%r737, %r736, %r68;
	rem.s32 	%r738, %r737, %r68;
	rem.s32 	%r739, %r72, %r68;
	add.s32 	%r740, %r739, %r68;
	rem.s32 	%r741, %r740, %r68;
	add.s32 	%r742, %r90, %r83;
	mul.lo.s32 	%r743, %r742, %r46;
	sub.s32 	%r744, %r743, %r663;
	setp.gt.s32 	%p37, %r664, %r738;
	selp.b32 	%r745, %r738, %r71, %p37;
	setp.gt.s32 	%p38, %r663, %r738;
	selp.b32 	%r746, %r663, %r745, %p38;
	add.s32 	%r747, %r744, %r746;
	mul.wide.s32 	%rd45, %r747, 4;
	add.s64 	%rd46, %rd5, %rd45;
	ld.global.f32 	%f40, [%rd46];
	setp.gt.s32 	%p39, %r664, %r741;
	selp.b32 	%r748, %r741, %r71, %p39;
	setp.gt.s32 	%p40, %r663, %r741;
	selp.b32 	%r749, %r663, %r748, %p40;
	add.s32 	%r750, %r744, %r749;
	mul.wide.s32 	%rd47, %r750, 4;
	add.s64 	%rd48, %rd5, %rd47;
	ld.global.f32 	%f41, [%rd48];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f40;
  cvt.rn.f16.f32 high, %f41;
  mov.b32 %r735, {low,high};}

	// end inline asm
	st.global.u32 	[%rd7], %r735;
	bra.uni 	$L__BB0_20;

$L__BB0_17:
	mov.f32 	%f39, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f39;
  cvt.rn.f16.f32 high, %f39;
  mov.b32 %r734, {low,high};}

	// end inline asm
	st.global.u32 	[%rd7], %r734;

$L__BB0_20:
	add.s32 	%r752, %r75, %r89;
	mul.wide.s32 	%rd49, %r752, 4;
	add.s64 	%rd8, %rd6, %rd49;
	@%p2 bra 	$L__BB0_24;
	bra.uni 	$L__BB0_21;

$L__BB0_24:
	mov.f32 	%f49, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f49;
  cvt.rn.f16.f32 high, %f49;
  mov.b32 %r770, {low,high};}

	// end inline asm
	st.global.u32 	[%rd8], %r770;
	bra.uni 	$L__BB0_25;

$L__BB0_21:
	@%p25 bra 	$L__BB0_23;
	bra.uni 	$L__BB0_22;

$L__BB0_23:
	rem.s32 	%r755, %r67, %r68;
	add.s32 	%r756, %r755, %r68;
	rem.s32 	%r757, %r756, %r68;
	rem.s32 	%r758, %r72, %r68;
	add.s32 	%r759, %r758, %r68;
	rem.s32 	%r760, %r759, %r68;
	add.s32 	%r761, %r90, %r84;
	mul.lo.s32 	%r762, %r761, %r46;
	sub.s32 	%r763, %r762, %r663;
	setp.gt.s32 	%p42, %r664, %r757;
	selp.b32 	%r764, %r757, %r71, %p42;
	setp.gt.s32 	%p43, %r663, %r757;
	selp.b32 	%r765, %r663, %r764, %p43;
	add.s32 	%r766, %r763, %r765;
	mul.wide.s32 	%rd50, %r766, 4;
	add.s64 	%rd51, %rd5, %rd50;
	ld.global.f32 	%f46, [%rd51];
	setp.gt.s32 	%p44, %r664, %r760;
	selp.b32 	%r767, %r760, %r71, %p44;
	setp.gt.s32 	%p45, %r663, %r760;
	selp.b32 	%r768, %r663, %r767, %p45;
	add.s32 	%r769, %r763, %r768;
	mul.wide.s32 	%rd52, %r769, 4;
	add.s64 	%rd53, %rd5, %rd52;
	ld.global.f32 	%f47, [%rd53];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f46;
  cvt.rn.f16.f32 high, %f47;
  mov.b32 %r754, {low,high};}

	// end inline asm
	st.global.u32 	[%rd8], %r754;
	bra.uni 	$L__BB0_25;

$L__BB0_22:
	mov.f32 	%f45, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f45;
  cvt.rn.f16.f32 high, %f45;
  mov.b32 %r753, {low,high};}

	// end inline asm
	st.global.u32 	[%rd8], %r753;

$L__BB0_25:
	@%p2 bra 	$L__BB0_30;
	bra.uni 	$L__BB0_26;

$L__BB0_30:
	mov.f32 	%f55, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f55;
  cvt.rn.f16.f32 high, %f55;
  mov.b32 %r795, {low,high};}

	// end inline asm
	rem.s32 	%r796, %r82, %r650;
	add.s32 	%r797, %r796, %r87;
	shl.b32 	%r798, %r797, 5;
	add.s32 	%r799, %r798, %r34;
	shl.b32 	%r800, %r799, 2;
	add.s32 	%r801, %r73, %r800;
	add.s32 	%r802, %r801, 2;
	mul.wide.s32 	%rd60, %r802, 4;
	add.s64 	%rd61, %rd6, %rd60;
	st.global.u32 	[%rd61], %r795;
	bra.uni 	$L__BB0_31;

$L__BB0_26:
	@%p25 bra 	$L__BB0_28;
	bra.uni 	$L__BB0_27;

$L__BB0_28:
	rem.s32 	%r773, %r67, %r68;
	add.s32 	%r774, %r773, %r68;
	rem.s32 	%r775, %r774, %r68;
	rem.s32 	%r776, %r72, %r68;
	add.s32 	%r777, %r776, %r68;
	rem.s32 	%r778, %r777, %r68;
	add.s32 	%r779, %r90, %r85;
	mul.lo.s32 	%r780, %r779, %r46;
	sub.s32 	%r781, %r780, %r663;
	setp.gt.s32 	%p47, %r664, %r775;
	selp.b32 	%r782, %r775, %r71, %p47;
	setp.gt.s32 	%p48, %r663, %r775;
	selp.b32 	%r783, %r663, %r782, %p48;
	add.s32 	%r784, %r781, %r783;
	mul.wide.s32 	%rd54, %r784, 4;
	add.s64 	%rd55, %rd5, %rd54;
	ld.global.f32 	%f52, [%rd55];
	setp.gt.s32 	%p49, %r664, %r778;
	selp.b32 	%r785, %r778, %r71, %p49;
	setp.gt.s32 	%p50, %r663, %r778;
	selp.b32 	%r786, %r663, %r785, %p50;
	add.s32 	%r787, %r781, %r786;
	mul.wide.s32 	%rd56, %r787, 4;
	add.s64 	%rd57, %rd5, %rd56;
	ld.global.f32 	%f53, [%rd57];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f52;
  cvt.rn.f16.f32 high, %f53;
  mov.b32 %r1629, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_29;

$L__BB0_27:
	mov.f32 	%f51, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f51;
  cvt.rn.f16.f32 high, %f51;
  mov.b32 %r1629, {low,high};}

	// end inline asm

$L__BB0_29:
	rem.s32 	%r788, %r82, %r650;
	add.s32 	%r789, %r788, %r87;
	shl.b32 	%r790, %r789, 5;
	add.s32 	%r791, %r790, %r34;
	shl.b32 	%r792, %r791, 2;
	add.s32 	%r793, %r73, %r792;
	add.s32 	%r794, %r793, 2;
	mul.wide.s32 	%rd58, %r794, 4;
	add.s64 	%rd59, %rd6, %rd58;
	st.global.u32 	[%rd59], %r1629;

$L__BB0_31:
	add.s32 	%r804, %r730, %r80;
	shl.b32 	%r805, %r804, 2;
	add.s32 	%r806, %r79, %r805;
	mul.wide.s32 	%rd62, %r806, 4;
	add.s64 	%rd9, %rd6, %rd62;
	@%p2 bra 	$L__BB0_35;
	bra.uni 	$L__BB0_32;

$L__BB0_35:
	mov.f32 	%f61, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f61;
  cvt.rn.f16.f32 high, %f61;
  mov.b32 %r824, {low,high};}

	// end inline asm
	st.global.u32 	[%rd9], %r824;
	bra.uni 	$L__BB0_36;

$L__BB0_32:
	@%p25 bra 	$L__BB0_34;
	bra.uni 	$L__BB0_33;

$L__BB0_34:
	rem.s32 	%r809, %r77, %r68;
	add.s32 	%r810, %r809, %r68;
	rem.s32 	%r811, %r810, %r68;
	rem.s32 	%r812, %r78, %r68;
	add.s32 	%r813, %r812, %r68;
	rem.s32 	%r814, %r813, %r68;
	add.s32 	%r815, %r90, %r83;
	mul.lo.s32 	%r816, %r815, %r46;
	sub.s32 	%r817, %r816, %r663;
	setp.gt.s32 	%p52, %r664, %r811;
	selp.b32 	%r818, %r811, %r71, %p52;
	setp.gt.s32 	%p53, %r663, %r811;
	selp.b32 	%r819, %r663, %r818, %p53;
	add.s32 	%r820, %r817, %r819;
	mul.wide.s32 	%rd63, %r820, 4;
	add.s64 	%rd64, %rd5, %rd63;
	ld.global.f32 	%f58, [%rd64];
	setp.gt.s32 	%p54, %r664, %r814;
	selp.b32 	%r821, %r814, %r71, %p54;
	setp.gt.s32 	%p55, %r663, %r814;
	selp.b32 	%r822, %r663, %r821, %p55;
	add.s32 	%r823, %r817, %r822;
	mul.wide.s32 	%rd65, %r823, 4;
	add.s64 	%rd66, %rd5, %rd65;
	ld.global.f32 	%f59, [%rd66];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f58;
  cvt.rn.f16.f32 high, %f59;
  mov.b32 %r808, {low,high};}

	// end inline asm
	st.global.u32 	[%rd9], %r808;
	bra.uni 	$L__BB0_36;

$L__BB0_33:
	mov.f32 	%f57, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f57;
  cvt.rn.f16.f32 high, %f57;
  mov.b32 %r807, {low,high};}

	// end inline asm
	st.global.u32 	[%rd9], %r807;

$L__BB0_36:
	add.s32 	%r825, %r76, %r89;
	mul.wide.s32 	%rd67, %r825, 4;
	add.s64 	%rd10, %rd6, %rd67;
	@%p2 bra 	$L__BB0_40;
	bra.uni 	$L__BB0_37;

$L__BB0_40:
	mov.f32 	%f67, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f67;
  cvt.rn.f16.f32 high, %f67;
  mov.b32 %r843, {low,high};}

	// end inline asm
	st.global.u32 	[%rd10], %r843;
	bra.uni 	$L__BB0_41;

$L__BB0_37:
	@%p25 bra 	$L__BB0_39;
	bra.uni 	$L__BB0_38;

$L__BB0_39:
	rem.s32 	%r828, %r77, %r68;
	add.s32 	%r829, %r828, %r68;
	rem.s32 	%r830, %r829, %r68;
	rem.s32 	%r831, %r78, %r68;
	add.s32 	%r832, %r831, %r68;
	rem.s32 	%r833, %r832, %r68;
	add.s32 	%r834, %r90, %r84;
	mul.lo.s32 	%r835, %r834, %r46;
	sub.s32 	%r836, %r835, %r663;
	setp.gt.s32 	%p57, %r664, %r830;
	selp.b32 	%r837, %r830, %r71, %p57;
	setp.gt.s32 	%p58, %r663, %r830;
	selp.b32 	%r838, %r663, %r837, %p58;
	add.s32 	%r839, %r836, %r838;
	mul.wide.s32 	%rd68, %r839, 4;
	add.s64 	%rd69, %rd5, %rd68;
	ld.global.f32 	%f64, [%rd69];
	setp.gt.s32 	%p59, %r664, %r833;
	selp.b32 	%r840, %r833, %r71, %p59;
	setp.gt.s32 	%p60, %r663, %r833;
	selp.b32 	%r841, %r663, %r840, %p60;
	add.s32 	%r842, %r836, %r841;
	mul.wide.s32 	%rd70, %r842, 4;
	add.s64 	%rd71, %rd5, %rd70;
	ld.global.f32 	%f65, [%rd71];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f64;
  cvt.rn.f16.f32 high, %f65;
  mov.b32 %r827, {low,high};}

	// end inline asm
	st.global.u32 	[%rd10], %r827;
	bra.uni 	$L__BB0_41;

$L__BB0_38:
	mov.f32 	%f63, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f63;
  cvt.rn.f16.f32 high, %f63;
  mov.b32 %r826, {low,high};}

	// end inline asm
	st.global.u32 	[%rd10], %r826;

$L__BB0_41:
	@%p2 bra 	$L__BB0_46;
	bra.uni 	$L__BB0_42;

$L__BB0_46:
	mov.f32 	%f73, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f73;
  cvt.rn.f16.f32 high, %f73;
  mov.b32 %r868, {low,high};}

	// end inline asm
	rem.s32 	%r869, %r82, %r650;
	add.s32 	%r870, %r869, %r87;
	shl.b32 	%r871, %r870, 5;
	add.s32 	%r872, %r871, %r80;
	shl.b32 	%r873, %r872, 2;
	add.s32 	%r874, %r79, %r873;
	add.s32 	%r875, %r874, 2;
	mul.wide.s32 	%rd78, %r875, 4;
	add.s64 	%rd79, %rd6, %rd78;
	st.global.u32 	[%rd79], %r868;
	bra.uni 	$L__BB0_47;

$L__BB0_42:
	@%p25 bra 	$L__BB0_44;
	bra.uni 	$L__BB0_43;

$L__BB0_44:
	rem.s32 	%r846, %r77, %r68;
	add.s32 	%r847, %r846, %r68;
	rem.s32 	%r848, %r847, %r68;
	rem.s32 	%r849, %r78, %r68;
	add.s32 	%r850, %r849, %r68;
	rem.s32 	%r851, %r850, %r68;
	add.s32 	%r852, %r90, %r85;
	mul.lo.s32 	%r853, %r852, %r46;
	sub.s32 	%r854, %r853, %r663;
	setp.gt.s32 	%p62, %r664, %r848;
	selp.b32 	%r855, %r848, %r71, %p62;
	setp.gt.s32 	%p63, %r663, %r848;
	selp.b32 	%r856, %r663, %r855, %p63;
	add.s32 	%r857, %r854, %r856;
	mul.wide.s32 	%rd72, %r857, 4;
	add.s64 	%rd73, %rd5, %rd72;
	ld.global.f32 	%f70, [%rd73];
	setp.gt.s32 	%p64, %r664, %r851;
	selp.b32 	%r858, %r851, %r71, %p64;
	setp.gt.s32 	%p65, %r663, %r851;
	selp.b32 	%r859, %r663, %r858, %p65;
	add.s32 	%r860, %r854, %r859;
	mul.wide.s32 	%rd74, %r860, 4;
	add.s64 	%rd75, %rd5, %rd74;
	ld.global.f32 	%f71, [%rd75];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f70;
  cvt.rn.f16.f32 high, %f71;
  mov.b32 %r1630, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_45;

$L__BB0_43:
	mov.f32 	%f69, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f69;
  cvt.rn.f16.f32 high, %f69;
  mov.b32 %r1630, {low,high};}

	// end inline asm

$L__BB0_45:
	rem.s32 	%r861, %r82, %r650;
	add.s32 	%r862, %r861, %r87;
	shl.b32 	%r863, %r862, 5;
	add.s32 	%r864, %r863, %r80;
	shl.b32 	%r865, %r864, 2;
	add.s32 	%r866, %r79, %r865;
	add.s32 	%r867, %r866, 2;
	mul.wide.s32 	%rd76, %r867, 4;
	add.s64 	%rd77, %rd6, %rd76;
	st.global.u32 	[%rd77], %r1630;

$L__BB0_47:
	add.s32 	%r1628, %r1628, %r675;
	setp.lt.s32 	%p66, %r1628, %r651;
	@%p66 bra 	$L__BB0_15;

$L__BB0_48:
	add.s32 	%r1627, %r1627, %r671;
	setp.lt.s32 	%p67, %r1627, %r650;
	@%p67 bra 	$L__BB0_13;

$L__BB0_49:
	ld.param.u64 	%rd80, [%rd1+128];
	cvta.to.global.u64 	%rd11, %rd80;
	ld.param.u64 	%rd81, [%rd1+96];
	cvta.to.global.u64 	%rd12, %rd81;
	@%p24 bra 	$L__BB0_133;

	shl.b32 	%r111, %r64, 1;
	mov.u64 	%rd82, _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE;
	mov.u32 	%r1631, %r1664;

$L__BB0_51:
	setp.ge.s32 	%p69, %r111, %r651;
	@%p69 bra 	$L__BB0_132;

	mov.u32 	%r1632, %r111;

$L__BB0_53:
	setp.ne.s32 	%p70, %r34, 0;
	@%p70 bra 	$L__BB0_131;

	shr.u32 	%r877, %r1632, 31;
	add.s32 	%r878, %r1632, %r877;
	shr.s32 	%r879, %r878, 1;
	mad.lo.s32 	%r880, %r879, %r650, %r1631;
	shl.b32 	%r115, %r880, 5;
	add.s32 	%r116, %r1632, -2;
	mul.lo.s32 	%r117, %r116, %r650;
	add.s32 	%r881, %r651, %r116;
	mul.lo.s32 	%r118, %r881, %r650;
	add.s32 	%r882, %r881, %r651;
	mul.lo.s32 	%r119, %r882, %r650;
	add.s32 	%r120, %r117, %r650;
	add.s32 	%r121, %r1632, -1;
	add.s32 	%r883, %r651, %r121;
	mul.lo.s32 	%r122, %r883, %r650;
	add.s32 	%r884, %r883, %r651;
	mul.lo.s32 	%r123, %r884, %r650;
	add.s32 	%r885, %r651, %r1632;
	mul.lo.s32 	%r124, %r885, %r650;
	add.s32 	%r886, %r885, %r651;
	mul.lo.s32 	%r125, %r886, %r650;
	mul.lo.s32 	%r126, %r1632, %r650;
	add.s32 	%r127, %r126, %r650;
	add.s32 	%r128, %r1632, 1;
	add.s32 	%r887, %r651, %r128;
	mul.lo.s32 	%r129, %r887, %r650;
	add.s32 	%r888, %r887, %r651;
	mul.lo.s32 	%r130, %r888, %r650;
	add.s32 	%r131, %r127, %r650;
	add.s32 	%r132, %r1632, 2;
	add.s32 	%r889, %r651, %r132;
	mul.lo.s32 	%r133, %r889, %r650;
	add.s32 	%r890, %r889, %r651;
	mul.lo.s32 	%r134, %r890, %r650;
	mov.u32 	%r1635, 0;
	mov.u64 	%rd455, %rd82;

$L__BB0_55:
	ld.global.nc.u32 	%r891, [%rd455];
	cvt.rn.f64.s32 	%fd1, %r891;
	add.f64 	%fd3, %fd1, 0d3FE0000000000000;
	add.s32 	%r136, %r891, %r1631;
	setp.lt.s32 	%p71, %r136, %r650;
	or.b32  	%r892, %r116, %r136;
	setp.gt.s32 	%p72, %r892, -1;
	and.pred  	%p73, %p71, %p72;
	setp.lt.s32 	%p74, %r116, %r651;
	and.pred  	%p3, %p74, %p73;
	cvt.rn.f32.f64 	%f74, %fd3;
	add.f32 	%f75, %f74, 0f3E800000;
	abs.f32 	%f1, %f75;
	add.f32 	%f76, %f1, 0f40200000;
	setp.geu.f32 	%p75, %f76, 0f40000000;
	@%p75 bra 	$L__BB0_60;

	@%p3 bra 	$L__BB0_58;
	bra.uni 	$L__BB0_57;

$L__BB0_58:
	add.s32 	%r895, %r117, %r136;
	mul.wide.s32 	%rd83, %r895, 4;
	add.s64 	%rd84, %rd11, %rd83;
	ld.global.f32 	%f79, [%rd84];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f79;
  mov.b32 %r1634, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_59;

$L__BB0_57:
	mov.f32 	%f78, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f78;
  cvt.rn.f16.f32 high, %f78;
  mov.b32 %r1634, {low,high};}

	// end inline asm

$L__BB0_59:
	add.s32 	%r896, %r1635, %r115;
	mul.wide.s32 	%rd85, %r896, 4;
	add.s64 	%rd86, %rd12, %rd85;
	st.global.u32 	[%rd86], %r1634;
	add.s32 	%r1635, %r1635, 1;

$L__BB0_60:
	cvt.rn.f32.f64 	%f80, %fd1;
	add.f32 	%f81, %f80, 0f3E800000;
	abs.f32 	%f2, %f81;
	add.f32 	%f3, %f2, 0f40000000;
	setp.geu.f32 	%p76, %f3, 0f40000000;
	@%p76 bra 	$L__BB0_65;

	@%p3 bra 	$L__BB0_63;
	bra.uni 	$L__BB0_62;

$L__BB0_63:
	add.s32 	%r899, %r118, %r136;
	mul.wide.s32 	%rd87, %r899, 4;
	add.s64 	%rd88, %rd11, %rd87;
	ld.global.f32 	%f84, [%rd88];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f84;
  mov.b32 %r1636, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_64;

$L__BB0_62:
	mov.f32 	%f83, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f83;
  cvt.rn.f16.f32 high, %f83;
  mov.b32 %r1636, {low,high};}

	// end inline asm

$L__BB0_64:
	add.s32 	%r900, %r1635, %r115;
	mul.wide.s32 	%rd89, %r900, 4;
	add.s64 	%rd90, %rd12, %rd89;
	st.global.u32 	[%rd90], %r1636;
	add.s32 	%r1635, %r1635, 1;

$L__BB0_65:
	add.f32 	%f85, %f2, 0f40200000;
	setp.geu.f32 	%p77, %f85, 0f40000000;
	@%p77 bra 	$L__BB0_70;

	@%p3 bra 	$L__BB0_68;
	bra.uni 	$L__BB0_67;

$L__BB0_68:
	add.s32 	%r903, %r119, %r136;
	mul.wide.s32 	%rd91, %r903, 4;
	add.s64 	%rd92, %rd11, %rd91;
	ld.global.f32 	%f88, [%rd92];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f88;
  mov.b32 %r1638, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_69;

$L__BB0_67:
	mov.f32 	%f87, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f87;
  cvt.rn.f16.f32 high, %f87;
  mov.b32 %r1638, {low,high};}

	// end inline asm

$L__BB0_69:
	add.s32 	%r904, %r1635, %r115;
	mul.wide.s32 	%rd93, %r904, 4;
	add.s64 	%rd94, %rd12, %rd93;
	st.global.u32 	[%rd94], %r1638;
	add.s32 	%r1635, %r1635, 1;

$L__BB0_70:
	or.b32  	%r905, %r121, %r136;
	setp.gt.s32 	%p78, %r905, -1;
	and.pred  	%p80, %p71, %p78;
	setp.le.s32 	%p81, %r1632, %r651;
	and.pred  	%p4, %p81, %p80;
	add.f32 	%f4, %f1, 0f3FC00000;
	setp.geu.f32 	%p82, %f4, 0f40000000;
	@%p82 bra 	$L__BB0_75;

	@%p4 bra 	$L__BB0_73;
	bra.uni 	$L__BB0_72;

$L__BB0_73:
	add.s32 	%r908, %r120, %r136;
	mul.wide.s32 	%rd95, %r908, 4;
	add.s64 	%rd96, %rd11, %rd95;
	ld.global.f32 	%f91, [%rd96];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f91;
  mov.b32 %r1640, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_74;

$L__BB0_72:
	mov.f32 	%f90, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f90;
  cvt.rn.f16.f32 high, %f90;
  mov.b32 %r1640, {low,high};}

	// end inline asm

$L__BB0_74:
	add.s32 	%r909, %r1635, %r115;
	mul.wide.s32 	%rd97, %r909, 4;
	add.s64 	%rd98, %rd12, %rd97;
	st.global.u32 	[%rd98], %r1640;
	add.s32 	%r1635, %r1635, 1;

$L__BB0_75:
	add.f32 	%f5, %f2, 0f3F800000;
	setp.geu.f32 	%p83, %f5, 0f40000000;
	@%p83 bra 	$L__BB0_80;

	@%p4 bra 	$L__BB0_78;
	bra.uni 	$L__BB0_77;

$L__BB0_78:
	add.s32 	%r912, %r122, %r136;
	mul.wide.s32 	%rd99, %r912, 4;
	add.s64 	%rd100, %rd11, %rd99;
	ld.global.f32 	%f94, [%rd100];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f94;
  mov.b32 %r1642, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_79;

$L__BB0_77:
	mov.f32 	%f93, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f93;
  cvt.rn.f16.f32 high, %f93;
  mov.b32 %r1642, {low,high};}

	// end inline asm

$L__BB0_79:
	add.s32 	%r913, %r1635, %r115;
	mul.wide.s32 	%rd101, %r913, 4;
	add.s64 	%rd102, %rd12, %rd101;
	st.global.u32 	[%rd102], %r1642;
	add.s32 	%r1635, %r1635, 1;

$L__BB0_80:
	add.f32 	%f6, %f2, 0f3FC00000;
	setp.geu.f32 	%p84, %f6, 0f40000000;
	@%p84 bra 	$L__BB0_85;

	@%p4 bra 	$L__BB0_83;
	bra.uni 	$L__BB0_82;

$L__BB0_83:
	add.s32 	%r916, %r123, %r136;
	mul.wide.s32 	%rd103, %r916, 4;
	add.s64 	%rd104, %rd11, %rd103;
	ld.global.f32 	%f97, [%rd104];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f97;
  mov.b32 %r1644, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_84;

$L__BB0_82:
	mov.f32 	%f96, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f96;
  cvt.rn.f16.f32 high, %f96;
  mov.b32 %r1644, {low,high};}

	// end inline asm

$L__BB0_84:
	add.s32 	%r917, %r1635, %r115;
	mul.wide.s32 	%rd105, %r917, 4;
	add.s64 	%rd106, %rd12, %rd105;
	st.global.u32 	[%rd106], %r1644;
	add.s32 	%r1635, %r1635, 1;

$L__BB0_85:
	or.b32  	%r918, %r1632, %r136;
	setp.gt.s32 	%p85, %r918, -1;
	and.pred  	%p87, %p71, %p85;
	setp.lt.s32 	%p88, %r1632, %r651;
	and.pred  	%p5, %p88, %p87;
	add.f32 	%f7, %f1, 0f3F000000;
	setp.geu.f32 	%p89, %f7, 0f40000000;
	@%p89 bra 	$L__BB0_90;

	@%p5 bra 	$L__BB0_88;
	bra.uni 	$L__BB0_87;

$L__BB0_88:
	add.s32 	%r921, %r126, %r136;
	mul.wide.s32 	%rd107, %r921, 4;
	add.s64 	%rd108, %rd11, %rd107;
	ld.global.f32 	%f100, [%rd108];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f100;
  mov.b32 %r1646, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_89;

$L__BB0_87:
	mov.f32 	%f99, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f99;
  cvt.rn.f16.f32 high, %f99;
  mov.b32 %r1646, {low,high};}

	// end inline asm

$L__BB0_89:
	add.s32 	%r922, %r1635, %r115;
	mul.wide.s32 	%rd109, %r922, 4;
	add.s64 	%rd110, %rd12, %rd109;
	st.global.u32 	[%rd110], %r1646;
	add.s32 	%r1635, %r1635, 1;

$L__BB0_90:
	add.f32 	%f101, %f2, 0f00000000;
	setp.geu.f32 	%p90, %f101, 0f40000000;
	@%p90 bra 	$L__BB0_95;

	@%p5 bra 	$L__BB0_93;
	bra.uni 	$L__BB0_92;

$L__BB0_93:
	add.s32 	%r925, %r124, %r136;
	mul.wide.s32 	%rd111, %r925, 4;
	add.s64 	%rd112, %rd11, %rd111;
	ld.global.f32 	%f104, [%rd112];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f104;
  mov.b32 %r1648, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_94;

$L__BB0_92:
	mov.f32 	%f103, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f103;
  cvt.rn.f16.f32 high, %f103;
  mov.b32 %r1648, {low,high};}

	// end inline asm

$L__BB0_94:
	add.s32 	%r926, %r1635, %r115;
	mul.wide.s32 	%rd113, %r926, 4;
	add.s64 	%rd114, %rd12, %rd113;
	st.global.u32 	[%rd114], %r1648;
	add.s32 	%r1635, %r1635, 1;

$L__BB0_95:
	add.f32 	%f8, %f2, 0f3F000000;
	setp.geu.f32 	%p91, %f8, 0f40000000;
	@%p91 bra 	$L__BB0_100;

	@%p5 bra 	$L__BB0_98;
	bra.uni 	$L__BB0_97;

$L__BB0_98:
	add.s32 	%r929, %r125, %r136;
	mul.wide.s32 	%rd115, %r929, 4;
	add.s64 	%rd116, %rd11, %rd115;
	ld.global.f32 	%f107, [%rd116];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f107;
  mov.b32 %r1650, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_99;

$L__BB0_97:
	mov.f32 	%f106, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f106;
  cvt.rn.f16.f32 high, %f106;
  mov.b32 %r1650, {low,high};}

	// end inline asm

$L__BB0_99:
	add.s32 	%r930, %r1635, %r115;
	mul.wide.s32 	%rd117, %r930, 4;
	add.s64 	%rd118, %rd12, %rd117;
	st.global.u32 	[%rd118], %r1650;
	add.s32 	%r1635, %r1635, 1;

$L__BB0_100:
	or.b32  	%r931, %r128, %r136;
	setp.gt.s32 	%p92, %r931, -1;
	and.pred  	%p94, %p71, %p92;
	setp.lt.s32 	%p95, %r128, %r651;
	and.pred  	%p6, %p95, %p94;
	@%p89 bra 	$L__BB0_105;

	@%p6 bra 	$L__BB0_103;
	bra.uni 	$L__BB0_102;

$L__BB0_103:
	add.s32 	%r934, %r127, %r136;
	mul.wide.s32 	%rd119, %r934, 4;
	add.s64 	%rd120, %rd11, %rd119;
	ld.global.f32 	%f110, [%rd120];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f110;
  mov.b32 %r1652, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_104;

$L__BB0_102:
	mov.f32 	%f109, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f109;
  cvt.rn.f16.f32 high, %f109;
  mov.b32 %r1652, {low,high};}

	// end inline asm

$L__BB0_104:
	add.s32 	%r935, %r1635, %r115;
	mul.wide.s32 	%rd121, %r935, 4;
	add.s64 	%rd122, %rd12, %rd121;
	st.global.u32 	[%rd122], %r1652;
	add.s32 	%r1635, %r1635, 1;

$L__BB0_105:
	@%p83 bra 	$L__BB0_110;

	@%p6 bra 	$L__BB0_108;
	bra.uni 	$L__BB0_107;

$L__BB0_108:
	add.s32 	%r938, %r129, %r136;
	mul.wide.s32 	%rd123, %r938, 4;
	add.s64 	%rd124, %rd11, %rd123;
	ld.global.f32 	%f113, [%rd124];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f113;
  mov.b32 %r1654, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_109;

$L__BB0_107:
	mov.f32 	%f112, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f112;
  cvt.rn.f16.f32 high, %f112;
  mov.b32 %r1654, {low,high};}

	// end inline asm

$L__BB0_109:
	add.s32 	%r939, %r1635, %r115;
	mul.wide.s32 	%rd125, %r939, 4;
	add.s64 	%rd126, %rd12, %rd125;
	st.global.u32 	[%rd126], %r1654;
	add.s32 	%r1635, %r1635, 1;

$L__BB0_110:
	@%p91 bra 	$L__BB0_115;

	@%p6 bra 	$L__BB0_113;
	bra.uni 	$L__BB0_112;

$L__BB0_113:
	add.s32 	%r942, %r130, %r136;
	mul.wide.s32 	%rd127, %r942, 4;
	add.s64 	%rd128, %rd11, %rd127;
	ld.global.f32 	%f116, [%rd128];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f116;
  mov.b32 %r1656, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_114;

$L__BB0_112:
	mov.f32 	%f115, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f115;
  cvt.rn.f16.f32 high, %f115;
  mov.b32 %r1656, {low,high};}

	// end inline asm

$L__BB0_114:
	add.s32 	%r943, %r1635, %r115;
	mul.wide.s32 	%rd129, %r943, 4;
	add.s64 	%rd130, %rd12, %rd129;
	st.global.u32 	[%rd130], %r1656;
	add.s32 	%r1635, %r1635, 1;

$L__BB0_115:
	or.b32  	%r944, %r132, %r136;
	setp.gt.s32 	%p99, %r944, -1;
	and.pred  	%p101, %p71, %p99;
	setp.lt.s32 	%p102, %r132, %r651;
	and.pred  	%p7, %p102, %p101;
	@%p82 bra 	$L__BB0_120;

	@%p7 bra 	$L__BB0_118;
	bra.uni 	$L__BB0_117;

$L__BB0_118:
	add.s32 	%r947, %r131, %r136;
	mul.wide.s32 	%rd131, %r947, 4;
	add.s64 	%rd132, %rd11, %rd131;
	ld.global.f32 	%f119, [%rd132];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f119;
  mov.b32 %r1658, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_119;

$L__BB0_117:
	mov.f32 	%f118, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f118;
  cvt.rn.f16.f32 high, %f118;
  mov.b32 %r1658, {low,high};}

	// end inline asm

$L__BB0_119:
	add.s32 	%r948, %r1635, %r115;
	mul.wide.s32 	%rd133, %r948, 4;
	add.s64 	%rd134, %rd12, %rd133;
	st.global.u32 	[%rd134], %r1658;
	add.s32 	%r1635, %r1635, 1;

$L__BB0_120:
	@%p76 bra 	$L__BB0_125;

	@%p7 bra 	$L__BB0_123;
	bra.uni 	$L__BB0_122;

$L__BB0_123:
	add.s32 	%r951, %r133, %r136;
	mul.wide.s32 	%rd135, %r951, 4;
	add.s64 	%rd136, %rd11, %rd135;
	ld.global.f32 	%f122, [%rd136];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f122;
  mov.b32 %r1660, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_124;

$L__BB0_122:
	mov.f32 	%f121, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f121;
  cvt.rn.f16.f32 high, %f121;
  mov.b32 %r1660, {low,high};}

	// end inline asm

$L__BB0_124:
	add.s32 	%r952, %r1635, %r115;
	mul.wide.s32 	%rd137, %r952, 4;
	add.s64 	%rd138, %rd12, %rd137;
	st.global.u32 	[%rd138], %r1660;
	add.s32 	%r1635, %r1635, 1;

$L__BB0_125:
	@%p84 bra 	$L__BB0_130;

	@%p7 bra 	$L__BB0_128;
	bra.uni 	$L__BB0_127;

$L__BB0_128:
	add.s32 	%r955, %r134, %r136;
	mul.wide.s32 	%rd139, %r955, 4;
	add.s64 	%rd140, %rd11, %rd139;
	ld.global.f32 	%f125, [%rd140];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f125;
  mov.b32 %r1662, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_129;

$L__BB0_127:
	mov.f32 	%f124, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f124;
  cvt.rn.f16.f32 high, %f124;
  mov.b32 %r1662, {low,high};}

	// end inline asm

$L__BB0_129:
	add.s32 	%r956, %r1635, %r115;
	mul.wide.s32 	%rd141, %r956, 4;
	add.s64 	%rd142, %rd12, %rd141;
	st.global.u32 	[%rd142], %r1662;
	add.s32 	%r1635, %r1635, 1;

$L__BB0_130:
	add.s64 	%rd455, %rd455, 4;
	mov.u64 	%rd143, _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE;
	add.s64 	%rd144, %rd143, 24;
	setp.ne.s64 	%p106, %rd455, %rd144;
	@%p106 bra 	$L__BB0_55;

$L__BB0_131:
	add.s32 	%r1632, %r1632, %r37;
	setp.lt.s32 	%p107, %r1632, %r651;
	@%p107 bra 	$L__BB0_53;

$L__BB0_132:
	add.s32 	%r1631, %r1631, %r671;
	setp.lt.s32 	%p108, %r1631, %r650;
	@%p108 bra 	$L__BB0_51;

$L__BB0_133:
	setp.eq.s32 	%p109, %r654, 1;
	ld.param.u64 	%rd145, [%rd1+136];
	cvta.to.global.u64 	%rd15, %rd145;
	ld.param.u64 	%rd146, [%rd1+104];
	cvta.to.global.u64 	%rd16, %rd146;
	@%p109 bra 	$L__BB0_151;
	bra.uni 	$L__BB0_134;

$L__BB0_151:
	@%p24 bra 	$L__BB0_280;

	shl.b32 	%r240, %r64, 1;
	shr.u32 	%r1004, %r655, 31;
	add.s32 	%r1005, %r655, %r1004;
	shr.u32 	%r1006, %r1005, 1;
	and.b32  	%r241, %r1006, 1;
	mov.u64 	%rd166, _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE;

$L__BB0_153:
	setp.ge.s32 	%p119, %r240, %r651;
	@%p119 bra 	$L__BB0_279;

	mov.u32 	%r1670, %r240;

$L__BB0_155:
	setp.ne.s32 	%p120, %r34, 0;
	@%p120 bra 	$L__BB0_278;

	shr.u32 	%r1008, %r1670, 31;
	add.s32 	%r1009, %r1670, %r1008;
	shr.s32 	%r1010, %r1009, 1;
	mad.lo.s32 	%r1011, %r1010, %r650, %r1664;
	shl.b32 	%r245, %r1011, 5;
	add.s32 	%r246, %r1670, -2;
	mul.lo.s32 	%r247, %r246, %r650;
	add.s32 	%r1012, %r651, %r246;
	mul.lo.s32 	%r248, %r1012, %r650;
	add.s32 	%r249, %r247, %r650;
	add.s32 	%r250, %r1670, -1;
	add.s32 	%r1013, %r651, %r250;
	mul.lo.s32 	%r251, %r1013, %r650;
	add.s32 	%r1014, %r651, %r1670;
	mul.lo.s32 	%r252, %r1014, %r650;
	mul.lo.s32 	%r253, %r1670, %r650;
	add.s32 	%r254, %r253, %r650;
	add.s32 	%r255, %r1670, 1;
	add.s32 	%r1015, %r651, %r255;
	mul.lo.s32 	%r256, %r1015, %r650;
	add.s32 	%r257, %r254, %r650;
	add.s32 	%r258, %r1670, 2;
	add.s32 	%r1016, %r651, %r258;
	mul.lo.s32 	%r259, %r1016, %r650;
	mov.u32 	%r1674, 0;
	mov.u64 	%rd456, 24;
	mov.u64 	%rd457, %rd166;

$L__BB0_157:
	ld.global.nc.u32 	%r1017, [%rd457];
	cvt.rn.f64.s32 	%fd2, %r1017;
	add.f64 	%fd4, %fd2, 0d3FE0000000000000;
	add.s32 	%r261, %r1017, %r1664;
	setp.lt.s32 	%p121, %r261, %r650;
	or.b32  	%r1018, %r246, %r261;
	setp.gt.s32 	%p122, %r1018, -1;
	and.pred  	%p123, %p121, %p122;
	setp.lt.s32 	%p124, %r246, %r651;
	and.pred  	%p8, %p124, %p123;
	cvt.rn.f32.f64 	%f142, %fd4;
	add.f32 	%f143, %f142, 0f3E800000;
	abs.f32 	%f9, %f143;
	add.f32 	%f144, %f9, 0f40200000;
	setp.geu.f32 	%p125, %f144, 0f40000000;
	@%p125 bra 	$L__BB0_169;

	@%p8 bra 	$L__BB0_160;
	bra.uni 	$L__BB0_159;

$L__BB0_160:
	setp.eq.s32 	%p126, %r241, 0;
	add.s32 	%r1020, %r247, %r261;
	shl.b32 	%r1021, %r1020, 1;
	mul.wide.s32 	%rd167, %r1021, 4;
	add.s64 	%rd168, %rd15, %rd167;
	ld.global.f32 	%f10, [%rd168];
	@%p126 bra 	$L__BB0_162;
	bra.uni 	$L__BB0_161;

$L__BB0_162:
	mov.f32 	%f150, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f10;
  cvt.rn.f16.f32 high, %f150;
  mov.b32 %r1672, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_163;

$L__BB0_159:
	mov.f32 	%f146, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f146;
  cvt.rn.f16.f32 high, %f146;
  mov.b32 %r1672, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_163;

$L__BB0_161:
	mov.f32 	%f147, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f147;
  cvt.rn.f16.f32 high, %f10;
  mov.b32 %r1672, {low,high};}

	// end inline asm

$L__BB0_163:
	add.s32 	%r266, %r1674, %r245;
	mul.wide.s32 	%rd169, %r266, 4;
	add.s64 	%rd170, %rd16, %rd169;
	st.global.u32 	[%rd170], %r1672;
	@%p8 bra 	$L__BB0_165;
	bra.uni 	$L__BB0_164;

$L__BB0_165:
	setp.eq.s32 	%p127, %r241, 0;
	add.s32 	%r1025, %r248, %r261;
	shl.b32 	%r1026, %r1025, 1;
	mul.wide.s32 	%rd171, %r1026, 4;
	add.s64 	%rd172, %rd15, %rd171;
	ld.global.f32 	%f11, [%rd172];
	@%p127 bra 	$L__BB0_167;
	bra.uni 	$L__BB0_166;

$L__BB0_167:
	mov.f32 	%f156, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f11;
  cvt.rn.f16.f32 high, %f156;
  mov.b32 %r1673, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_168;

$L__BB0_164:
	mov.f32 	%f152, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f152;
  cvt.rn.f16.f32 high, %f152;
  mov.b32 %r1673, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_168;

$L__BB0_166:
	mov.f32 	%f153, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f153;
  cvt.rn.f16.f32 high, %f11;
  mov.b32 %r1673, {low,high};}

	// end inline asm

$L__BB0_168:
	add.s32 	%r1029, %r266, 1;
	mul.wide.s32 	%rd173, %r1029, 4;
	add.s64 	%rd174, %rd16, %rd173;
	st.global.u32 	[%rd174], %r1673;
	add.s32 	%r1674, %r1674, 2;

$L__BB0_169:
	cvt.rn.f32.f64 	%f157, %fd2;
	add.f32 	%f158, %f157, 0f3E800000;
	abs.f32 	%f12, %f158;
	add.f32 	%f13, %f12, 0f40000000;
	setp.geu.f32 	%p128, %f13, 0f40000000;
	@%p128 bra 	$L__BB0_181;

	@%p8 bra 	$L__BB0_172;
	bra.uni 	$L__BB0_171;

$L__BB0_172:
	setp.eq.s32 	%p129, %r241, 0;
	add.s32 	%r1031, %r247, %r261;
	shl.b32 	%r1032, %r1031, 1;
	or.b32  	%r1033, %r1032, 1;
	mul.wide.s32 	%rd175, %r1033, 4;
	add.s64 	%rd176, %rd15, %rd175;
	ld.global.f32 	%f14, [%rd176];
	@%p129 bra 	$L__BB0_174;
	bra.uni 	$L__BB0_173;

$L__BB0_174:
	mov.f32 	%f164, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f14;
  cvt.rn.f16.f32 high, %f164;
  mov.b32 %r1675, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_175;

$L__BB0_171:
	mov.f32 	%f160, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f160;
  cvt.rn.f16.f32 high, %f160;
  mov.b32 %r1675, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_175;

$L__BB0_173:
	mov.f32 	%f161, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f161;
  cvt.rn.f16.f32 high, %f14;
  mov.b32 %r1675, {low,high};}

	// end inline asm

$L__BB0_175:
	add.s32 	%r277, %r1674, %r245;
	mul.wide.s32 	%rd177, %r277, 4;
	add.s64 	%rd178, %rd16, %rd177;
	st.global.u32 	[%rd178], %r1675;
	@%p8 bra 	$L__BB0_177;
	bra.uni 	$L__BB0_176;

$L__BB0_177:
	setp.eq.s32 	%p130, %r241, 0;
	add.s32 	%r1037, %r248, %r261;
	shl.b32 	%r1038, %r1037, 1;
	or.b32  	%r1039, %r1038, 1;
	mul.wide.s32 	%rd179, %r1039, 4;
	add.s64 	%rd180, %rd15, %rd179;
	ld.global.f32 	%f15, [%rd180];
	@%p130 bra 	$L__BB0_179;
	bra.uni 	$L__BB0_178;

$L__BB0_179:
	mov.f32 	%f170, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f15;
  cvt.rn.f16.f32 high, %f170;
  mov.b32 %r1676, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_180;

$L__BB0_176:
	mov.f32 	%f166, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f166;
  cvt.rn.f16.f32 high, %f166;
  mov.b32 %r1676, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_180;

$L__BB0_178:
	mov.f32 	%f167, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f167;
  cvt.rn.f16.f32 high, %f15;
  mov.b32 %r1676, {low,high};}

	// end inline asm

$L__BB0_180:
	add.s32 	%r1042, %r277, 1;
	mul.wide.s32 	%rd181, %r1042, 4;
	add.s64 	%rd182, %rd16, %rd181;
	st.global.u32 	[%rd182], %r1676;
	add.s32 	%r1674, %r1674, 2;

$L__BB0_181:
	or.b32  	%r1043, %r250, %r261;
	setp.gt.s32 	%p131, %r1043, -1;
	and.pred  	%p133, %p121, %p131;
	setp.le.s32 	%p134, %r1670, %r651;
	and.pred  	%p9, %p134, %p133;
	add.f32 	%f16, %f9, 0f3FC00000;
	setp.geu.f32 	%p135, %f16, 0f40000000;
	@%p135 bra 	$L__BB0_193;

	@%p9 bra 	$L__BB0_184;
	bra.uni 	$L__BB0_183;

$L__BB0_184:
	setp.eq.s32 	%p136, %r241, 0;
	add.s32 	%r1045, %r249, %r261;
	shl.b32 	%r1046, %r1045, 1;
	mul.wide.s32 	%rd183, %r1046, 4;
	add.s64 	%rd184, %rd15, %rd183;
	ld.global.f32 	%f17, [%rd184];
	@%p136 bra 	$L__BB0_186;
	bra.uni 	$L__BB0_185;

$L__BB0_186:
	mov.f32 	%f176, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f17;
  cvt.rn.f16.f32 high, %f176;
  mov.b32 %r1678, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_187;

$L__BB0_183:
	mov.f32 	%f172, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f172;
  cvt.rn.f16.f32 high, %f172;
  mov.b32 %r1678, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_187;

$L__BB0_185:
	mov.f32 	%f173, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f173;
  cvt.rn.f16.f32 high, %f17;
  mov.b32 %r1678, {low,high};}

	// end inline asm

$L__BB0_187:
	add.s32 	%r288, %r1674, %r245;
	mul.wide.s32 	%rd185, %r288, 4;
	add.s64 	%rd186, %rd16, %rd185;
	st.global.u32 	[%rd186], %r1678;
	@%p9 bra 	$L__BB0_189;
	bra.uni 	$L__BB0_188;

$L__BB0_189:
	setp.eq.s32 	%p137, %r241, 0;
	add.s32 	%r1050, %r251, %r261;
	shl.b32 	%r1051, %r1050, 1;
	mul.wide.s32 	%rd187, %r1051, 4;
	add.s64 	%rd188, %rd15, %rd187;
	ld.global.f32 	%f18, [%rd188];
	@%p137 bra 	$L__BB0_191;
	bra.uni 	$L__BB0_190;

$L__BB0_191:
	mov.f32 	%f182, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f18;
  cvt.rn.f16.f32 high, %f182;
  mov.b32 %r1679, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_192;

$L__BB0_188:
	mov.f32 	%f178, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f178;
  cvt.rn.f16.f32 high, %f178;
  mov.b32 %r1679, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_192;

$L__BB0_190:
	mov.f32 	%f179, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f179;
  cvt.rn.f16.f32 high, %f18;
  mov.b32 %r1679, {low,high};}

	// end inline asm

$L__BB0_192:
	add.s32 	%r1054, %r288, 1;
	mul.wide.s32 	%rd189, %r1054, 4;
	add.s64 	%rd190, %rd16, %rd189;
	st.global.u32 	[%rd190], %r1679;
	add.s32 	%r1674, %r1674, 2;

$L__BB0_193:
	add.f32 	%f19, %f12, 0f3F800000;
	setp.geu.f32 	%p138, %f19, 0f40000000;
	@%p138 bra 	$L__BB0_205;

	@%p9 bra 	$L__BB0_196;
	bra.uni 	$L__BB0_195;

$L__BB0_196:
	setp.eq.s32 	%p139, %r241, 0;
	add.s32 	%r1056, %r249, %r261;
	shl.b32 	%r1057, %r1056, 1;
	or.b32  	%r1058, %r1057, 1;
	mul.wide.s32 	%rd191, %r1058, 4;
	add.s64 	%rd192, %rd15, %rd191;
	ld.global.f32 	%f20, [%rd192];
	@%p139 bra 	$L__BB0_198;
	bra.uni 	$L__BB0_197;

$L__BB0_198:
	mov.f32 	%f188, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f20;
  cvt.rn.f16.f32 high, %f188;
  mov.b32 %r1681, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_199;

$L__BB0_195:
	mov.f32 	%f184, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f184;
  cvt.rn.f16.f32 high, %f184;
  mov.b32 %r1681, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_199;

$L__BB0_197:
	mov.f32 	%f185, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f185;
  cvt.rn.f16.f32 high, %f20;
  mov.b32 %r1681, {low,high};}

	// end inline asm

$L__BB0_199:
	add.s32 	%r299, %r1674, %r245;
	mul.wide.s32 	%rd193, %r299, 4;
	add.s64 	%rd194, %rd16, %rd193;
	st.global.u32 	[%rd194], %r1681;
	@%p9 bra 	$L__BB0_201;
	bra.uni 	$L__BB0_200;

$L__BB0_201:
	setp.eq.s32 	%p140, %r241, 0;
	add.s32 	%r1062, %r251, %r261;
	shl.b32 	%r1063, %r1062, 1;
	or.b32  	%r1064, %r1063, 1;
	mul.wide.s32 	%rd195, %r1064, 4;
	add.s64 	%rd196, %rd15, %rd195;
	ld.global.f32 	%f21, [%rd196];
	@%p140 bra 	$L__BB0_203;
	bra.uni 	$L__BB0_202;

$L__BB0_203:
	mov.f32 	%f194, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f21;
  cvt.rn.f16.f32 high, %f194;
  mov.b32 %r1682, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_204;

$L__BB0_200:
	mov.f32 	%f190, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f190;
  cvt.rn.f16.f32 high, %f190;
  mov.b32 %r1682, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_204;

$L__BB0_202:
	mov.f32 	%f191, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f191;
  cvt.rn.f16.f32 high, %f21;
  mov.b32 %r1682, {low,high};}

	// end inline asm

$L__BB0_204:
	add.s32 	%r1067, %r299, 1;
	mul.wide.s32 	%rd197, %r1067, 4;
	add.s64 	%rd198, %rd16, %rd197;
	st.global.u32 	[%rd198], %r1682;
	add.s32 	%r1674, %r1674, 2;

$L__BB0_205:
	or.b32  	%r1068, %r1670, %r261;
	setp.gt.s32 	%p141, %r1068, -1;
	and.pred  	%p143, %p121, %p141;
	setp.lt.s32 	%p144, %r1670, %r651;
	and.pred  	%p10, %p144, %p143;
	add.f32 	%f22, %f9, 0f3F000000;
	setp.geu.f32 	%p145, %f22, 0f40000000;
	@%p145 bra 	$L__BB0_217;

	@%p10 bra 	$L__BB0_208;
	bra.uni 	$L__BB0_207;

$L__BB0_208:
	setp.eq.s32 	%p146, %r241, 0;
	add.s32 	%r1070, %r253, %r261;
	shl.b32 	%r1071, %r1070, 1;
	mul.wide.s32 	%rd199, %r1071, 4;
	add.s64 	%rd200, %rd15, %rd199;
	ld.global.f32 	%f23, [%rd200];
	@%p146 bra 	$L__BB0_210;
	bra.uni 	$L__BB0_209;

$L__BB0_210:
	mov.f32 	%f200, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f23;
  cvt.rn.f16.f32 high, %f200;
  mov.b32 %r1684, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_211;

$L__BB0_207:
	mov.f32 	%f196, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f196;
  cvt.rn.f16.f32 high, %f196;
  mov.b32 %r1684, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_211;

$L__BB0_209:
	mov.f32 	%f197, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f197;
  cvt.rn.f16.f32 high, %f23;
  mov.b32 %r1684, {low,high};}

	// end inline asm

$L__BB0_211:
	add.s32 	%r310, %r1674, %r245;
	mul.wide.s32 	%rd201, %r310, 4;
	add.s64 	%rd202, %rd16, %rd201;
	st.global.u32 	[%rd202], %r1684;
	@%p10 bra 	$L__BB0_213;
	bra.uni 	$L__BB0_212;

$L__BB0_213:
	setp.eq.s32 	%p147, %r241, 0;
	add.s32 	%r1075, %r252, %r261;
	shl.b32 	%r1076, %r1075, 1;
	mul.wide.s32 	%rd203, %r1076, 4;
	add.s64 	%rd204, %rd15, %rd203;
	ld.global.f32 	%f24, [%rd204];
	@%p147 bra 	$L__BB0_215;
	bra.uni 	$L__BB0_214;

$L__BB0_215:
	mov.f32 	%f206, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f24;
  cvt.rn.f16.f32 high, %f206;
  mov.b32 %r1685, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_216;

$L__BB0_212:
	mov.f32 	%f202, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f202;
  cvt.rn.f16.f32 high, %f202;
  mov.b32 %r1685, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_216;

$L__BB0_214:
	mov.f32 	%f203, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f203;
  cvt.rn.f16.f32 high, %f24;
  mov.b32 %r1685, {low,high};}

	// end inline asm

$L__BB0_216:
	add.s32 	%r1079, %r310, 1;
	mul.wide.s32 	%rd205, %r1079, 4;
	add.s64 	%rd206, %rd16, %rd205;
	st.global.u32 	[%rd206], %r1685;
	add.s32 	%r1674, %r1674, 2;

$L__BB0_217:
	add.f32 	%f207, %f12, 0f00000000;
	setp.geu.f32 	%p148, %f207, 0f40000000;
	@%p148 bra 	$L__BB0_229;

	@%p10 bra 	$L__BB0_220;
	bra.uni 	$L__BB0_219;

$L__BB0_220:
	setp.eq.s32 	%p149, %r241, 0;
	add.s32 	%r1081, %r253, %r261;
	shl.b32 	%r1082, %r1081, 1;
	or.b32  	%r1083, %r1082, 1;
	mul.wide.s32 	%rd207, %r1083, 4;
	add.s64 	%rd208, %rd15, %rd207;
	ld.global.f32 	%f25, [%rd208];
	@%p149 bra 	$L__BB0_222;
	bra.uni 	$L__BB0_221;

$L__BB0_222:
	mov.f32 	%f213, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f25;
  cvt.rn.f16.f32 high, %f213;
  mov.b32 %r1687, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_223;

$L__BB0_219:
	mov.f32 	%f209, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f209;
  cvt.rn.f16.f32 high, %f209;
  mov.b32 %r1687, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_223;

$L__BB0_221:
	mov.f32 	%f210, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f210;
  cvt.rn.f16.f32 high, %f25;
  mov.b32 %r1687, {low,high};}

	// end inline asm

$L__BB0_223:
	add.s32 	%r321, %r1674, %r245;
	mul.wide.s32 	%rd209, %r321, 4;
	add.s64 	%rd210, %rd16, %rd209;
	st.global.u32 	[%rd210], %r1687;
	@%p10 bra 	$L__BB0_225;
	bra.uni 	$L__BB0_224;

$L__BB0_225:
	setp.eq.s32 	%p150, %r241, 0;
	add.s32 	%r1087, %r252, %r261;
	shl.b32 	%r1088, %r1087, 1;
	or.b32  	%r1089, %r1088, 1;
	mul.wide.s32 	%rd211, %r1089, 4;
	add.s64 	%rd212, %rd15, %rd211;
	ld.global.f32 	%f26, [%rd212];
	@%p150 bra 	$L__BB0_227;
	bra.uni 	$L__BB0_226;

$L__BB0_227:
	mov.f32 	%f219, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f26;
  cvt.rn.f16.f32 high, %f219;
  mov.b32 %r1688, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_228;

$L__BB0_224:
	mov.f32 	%f215, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f215;
  cvt.rn.f16.f32 high, %f215;
  mov.b32 %r1688, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_228;

$L__BB0_226:
	mov.f32 	%f216, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f216;
  cvt.rn.f16.f32 high, %f26;
  mov.b32 %r1688, {low,high};}

	// end inline asm

$L__BB0_228:
	add.s32 	%r1092, %r321, 1;
	mul.wide.s32 	%rd213, %r1092, 4;
	add.s64 	%rd214, %rd16, %rd213;
	st.global.u32 	[%rd214], %r1688;
	add.s32 	%r1674, %r1674, 2;

$L__BB0_229:
	or.b32  	%r1093, %r255, %r261;
	setp.gt.s32 	%p151, %r1093, -1;
	and.pred  	%p153, %p121, %p151;
	setp.lt.s32 	%p154, %r255, %r651;
	and.pred  	%p11, %p154, %p153;
	@%p145 bra 	$L__BB0_241;

	@%p11 bra 	$L__BB0_232;
	bra.uni 	$L__BB0_231;

$L__BB0_232:
	setp.eq.s32 	%p156, %r241, 0;
	add.s32 	%r1095, %r254, %r261;
	shl.b32 	%r1096, %r1095, 1;
	mul.wide.s32 	%rd215, %r1096, 4;
	add.s64 	%rd216, %rd15, %rd215;
	ld.global.f32 	%f27, [%rd216];
	@%p156 bra 	$L__BB0_234;
	bra.uni 	$L__BB0_233;

$L__BB0_234:
	mov.f32 	%f225, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f27;
  cvt.rn.f16.f32 high, %f225;
  mov.b32 %r1690, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_235;

$L__BB0_231:
	mov.f32 	%f221, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f221;
  cvt.rn.f16.f32 high, %f221;
  mov.b32 %r1690, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_235;

$L__BB0_233:
	mov.f32 	%f222, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f222;
  cvt.rn.f16.f32 high, %f27;
  mov.b32 %r1690, {low,high};}

	// end inline asm

$L__BB0_235:
	add.s32 	%r332, %r1674, %r245;
	mul.wide.s32 	%rd217, %r332, 4;
	add.s64 	%rd218, %rd16, %rd217;
	st.global.u32 	[%rd218], %r1690;
	@%p11 bra 	$L__BB0_237;
	bra.uni 	$L__BB0_236;

$L__BB0_237:
	setp.eq.s32 	%p157, %r241, 0;
	add.s32 	%r1100, %r256, %r261;
	shl.b32 	%r1101, %r1100, 1;
	mul.wide.s32 	%rd219, %r1101, 4;
	add.s64 	%rd220, %rd15, %rd219;
	ld.global.f32 	%f28, [%rd220];
	@%p157 bra 	$L__BB0_239;
	bra.uni 	$L__BB0_238;

$L__BB0_239:
	mov.f32 	%f231, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f28;
  cvt.rn.f16.f32 high, %f231;
  mov.b32 %r1691, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_240;

$L__BB0_236:
	mov.f32 	%f227, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f227;
  cvt.rn.f16.f32 high, %f227;
  mov.b32 %r1691, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_240;

$L__BB0_238:
	mov.f32 	%f228, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f228;
  cvt.rn.f16.f32 high, %f28;
  mov.b32 %r1691, {low,high};}

	// end inline asm

$L__BB0_240:
	add.s32 	%r1104, %r332, 1;
	mul.wide.s32 	%rd221, %r1104, 4;
	add.s64 	%rd222, %rd16, %rd221;
	st.global.u32 	[%rd222], %r1691;
	add.s32 	%r1674, %r1674, 2;

$L__BB0_241:
	@%p138 bra 	$L__BB0_253;

	@%p11 bra 	$L__BB0_244;
	bra.uni 	$L__BB0_243;

$L__BB0_244:
	setp.eq.s32 	%p159, %r241, 0;
	add.s32 	%r1106, %r254, %r261;
	shl.b32 	%r1107, %r1106, 1;
	or.b32  	%r1108, %r1107, 1;
	mul.wide.s32 	%rd223, %r1108, 4;
	add.s64 	%rd224, %rd15, %rd223;
	ld.global.f32 	%f29, [%rd224];
	@%p159 bra 	$L__BB0_246;
	bra.uni 	$L__BB0_245;

$L__BB0_246:
	mov.f32 	%f237, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f29;
  cvt.rn.f16.f32 high, %f237;
  mov.b32 %r1693, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_247;

$L__BB0_243:
	mov.f32 	%f233, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f233;
  cvt.rn.f16.f32 high, %f233;
  mov.b32 %r1693, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_247;

$L__BB0_245:
	mov.f32 	%f234, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f234;
  cvt.rn.f16.f32 high, %f29;
  mov.b32 %r1693, {low,high};}

	// end inline asm

$L__BB0_247:
	add.s32 	%r343, %r1674, %r245;
	mul.wide.s32 	%rd225, %r343, 4;
	add.s64 	%rd226, %rd16, %rd225;
	st.global.u32 	[%rd226], %r1693;
	@%p11 bra 	$L__BB0_249;
	bra.uni 	$L__BB0_248;

$L__BB0_249:
	setp.eq.s32 	%p160, %r241, 0;
	add.s32 	%r1112, %r256, %r261;
	shl.b32 	%r1113, %r1112, 1;
	or.b32  	%r1114, %r1113, 1;
	mul.wide.s32 	%rd227, %r1114, 4;
	add.s64 	%rd228, %rd15, %rd227;
	ld.global.f32 	%f30, [%rd228];
	@%p160 bra 	$L__BB0_251;
	bra.uni 	$L__BB0_250;

$L__BB0_251:
	mov.f32 	%f243, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f30;
  cvt.rn.f16.f32 high, %f243;
  mov.b32 %r1694, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_252;

$L__BB0_248:
	mov.f32 	%f239, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f239;
  cvt.rn.f16.f32 high, %f239;
  mov.b32 %r1694, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_252;

$L__BB0_250:
	mov.f32 	%f240, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f240;
  cvt.rn.f16.f32 high, %f30;
  mov.b32 %r1694, {low,high};}

	// end inline asm

$L__BB0_252:
	add.s32 	%r1117, %r343, 1;
	mul.wide.s32 	%rd229, %r1117, 4;
	add.s64 	%rd230, %rd16, %rd229;
	st.global.u32 	[%rd230], %r1694;
	add.s32 	%r1674, %r1674, 2;

$L__BB0_253:
	or.b32  	%r1118, %r258, %r261;
	setp.gt.s32 	%p161, %r1118, -1;
	and.pred  	%p163, %p121, %p161;
	setp.lt.s32 	%p164, %r258, %r651;
	and.pred  	%p12, %p164, %p163;
	@%p135 bra 	$L__BB0_265;

	@%p12 bra 	$L__BB0_256;
	bra.uni 	$L__BB0_255;

$L__BB0_256:
	setp.eq.s32 	%p166, %r241, 0;
	add.s32 	%r1120, %r257, %r261;
	shl.b32 	%r1121, %r1120, 1;
	mul.wide.s32 	%rd231, %r1121, 4;
	add.s64 	%rd232, %rd15, %rd231;
	ld.global.f32 	%f31, [%rd232];
	@%p166 bra 	$L__BB0_258;
	bra.uni 	$L__BB0_257;

$L__BB0_258:
	mov.f32 	%f249, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f31;
  cvt.rn.f16.f32 high, %f249;
  mov.b32 %r1696, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_259;

$L__BB0_255:
	mov.f32 	%f245, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f245;
  cvt.rn.f16.f32 high, %f245;
  mov.b32 %r1696, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_259;

$L__BB0_257:
	mov.f32 	%f246, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f246;
  cvt.rn.f16.f32 high, %f31;
  mov.b32 %r1696, {low,high};}

	// end inline asm

$L__BB0_259:
	add.s32 	%r354, %r1674, %r245;
	mul.wide.s32 	%rd233, %r354, 4;
	add.s64 	%rd234, %rd16, %rd233;
	st.global.u32 	[%rd234], %r1696;
	@%p12 bra 	$L__BB0_261;
	bra.uni 	$L__BB0_260;

$L__BB0_261:
	setp.eq.s32 	%p167, %r241, 0;
	add.s32 	%r1125, %r259, %r261;
	shl.b32 	%r1126, %r1125, 1;
	mul.wide.s32 	%rd235, %r1126, 4;
	add.s64 	%rd236, %rd15, %rd235;
	ld.global.f32 	%f32, [%rd236];
	@%p167 bra 	$L__BB0_263;
	bra.uni 	$L__BB0_262;

$L__BB0_263:
	mov.f32 	%f255, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f32;
  cvt.rn.f16.f32 high, %f255;
  mov.b32 %r1697, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_264;

$L__BB0_260:
	mov.f32 	%f251, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f251;
  cvt.rn.f16.f32 high, %f251;
  mov.b32 %r1697, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_264;

$L__BB0_262:
	mov.f32 	%f252, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f252;
  cvt.rn.f16.f32 high, %f32;
  mov.b32 %r1697, {low,high};}

	// end inline asm

$L__BB0_264:
	add.s32 	%r1129, %r354, 1;
	mul.wide.s32 	%rd237, %r1129, 4;
	add.s64 	%rd238, %rd16, %rd237;
	st.global.u32 	[%rd238], %r1697;
	add.s32 	%r1674, %r1674, 2;

$L__BB0_265:
	@%p128 bra 	$L__BB0_277;

	@%p12 bra 	$L__BB0_268;
	bra.uni 	$L__BB0_267;

$L__BB0_268:
	setp.eq.s32 	%p169, %r241, 0;
	add.s32 	%r1131, %r257, %r261;
	shl.b32 	%r1132, %r1131, 1;
	or.b32  	%r1133, %r1132, 1;
	mul.wide.s32 	%rd239, %r1133, 4;
	add.s64 	%rd240, %rd15, %rd239;
	ld.global.f32 	%f33, [%rd240];
	@%p169 bra 	$L__BB0_270;
	bra.uni 	$L__BB0_269;

$L__BB0_270:
	mov.f32 	%f261, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f33;
  cvt.rn.f16.f32 high, %f261;
  mov.b32 %r1699, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_271;

$L__BB0_267:
	mov.f32 	%f257, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f257;
  cvt.rn.f16.f32 high, %f257;
  mov.b32 %r1699, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_271;

$L__BB0_269:
	mov.f32 	%f258, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f258;
  cvt.rn.f16.f32 high, %f33;
  mov.b32 %r1699, {low,high};}

	// end inline asm

$L__BB0_271:
	add.s32 	%r365, %r1674, %r245;
	mul.wide.s32 	%rd241, %r365, 4;
	add.s64 	%rd242, %rd16, %rd241;
	st.global.u32 	[%rd242], %r1699;
	@%p12 bra 	$L__BB0_273;
	bra.uni 	$L__BB0_272;

$L__BB0_273:
	setp.eq.s32 	%p170, %r241, 0;
	add.s32 	%r1137, %r259, %r261;
	shl.b32 	%r1138, %r1137, 1;
	or.b32  	%r1139, %r1138, 1;
	mul.wide.s32 	%rd243, %r1139, 4;
	add.s64 	%rd244, %rd15, %rd243;
	ld.global.f32 	%f34, [%rd244];
	@%p170 bra 	$L__BB0_275;
	bra.uni 	$L__BB0_274;

$L__BB0_275:
	mov.f32 	%f267, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f34;
  cvt.rn.f16.f32 high, %f267;
  mov.b32 %r1700, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_276;

$L__BB0_272:
	mov.f32 	%f263, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f263;
  cvt.rn.f16.f32 high, %f263;
  mov.b32 %r1700, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_276;

$L__BB0_274:
	mov.f32 	%f264, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f264;
  cvt.rn.f16.f32 high, %f34;
  mov.b32 %r1700, {low,high};}

	// end inline asm

$L__BB0_276:
	add.s32 	%r1142, %r365, 1;
	mul.wide.s32 	%rd245, %r1142, 4;
	add.s64 	%rd246, %rd16, %rd245;
	st.global.u32 	[%rd246], %r1700;
	add.s32 	%r1674, %r1674, 2;

$L__BB0_277:
	add.s64 	%rd457, %rd457, 4;
	add.s64 	%rd456, %rd456, -4;
	setp.ne.s64 	%p171, %rd456, 0;
	@%p171 bra 	$L__BB0_157;

$L__BB0_278:
	add.s32 	%r1670, %r1670, %r37;
	setp.lt.s32 	%p172, %r1670, %r651;
	@%p172 bra 	$L__BB0_155;

$L__BB0_279:
	add.s32 	%r1664, %r1664, %r671;
	setp.lt.s32 	%p173, %r1664, %r650;
	@%p173 bra 	$L__BB0_153;
	bra.uni 	$L__BB0_280;

$L__BB0_134:
	@%p24 bra 	$L__BB0_280;

	neg.s32 	%r214, %r63;
	mov.u32 	%r957, 31;
	sub.s32 	%r958, %r957, %r34;
	setp.gt.s32 	%p111, %r33, %r34;
	selp.b32 	%r959, %r34, %r958, %p111;
	shl.b32 	%r960, %r959, 2;
	mov.u32 	%r961, 2;
	sub.s32 	%r215, %r960, %r653;
	shl.b32 	%r962, %r652, 2;
	mov.u32 	%r963, 128;
	sub.s32 	%r216, %r963, %r962;
	sub.s32 	%r964, %r961, %r653;
	add.s32 	%r217, %r964, %r960;
	add.s32 	%r218, %r650, -1;
	add.s32 	%r219, %r215, 1;
	add.s32 	%r220, %r217, 1;
	rem.s32 	%r989, %r219, %r216;
	add.s32 	%r990, %r989, %r216;
	rem.s32 	%r231, %r990, %r216;
	rem.s32 	%r991, %r220, %r216;
	add.s32 	%r992, %r991, %r216;
	rem.s32 	%r232, %r992, %r216;

$L__BB0_136:
	setp.ne.s32 	%p112, %r30, %r214;
	@%p112 bra 	$L__BB0_150;

	shl.b32 	%r222, %r1664, 1;
	rem.s32 	%r965, %r215, %r216;
	add.s32 	%r966, %r965, %r216;
	rem.s32 	%r223, %r966, %r216;
	rem.s32 	%r967, %r217, %r216;
	add.s32 	%r968, %r967, %r216;
	rem.s32 	%r224, %r968, %r216;
	@%p111 bra 	$L__BB0_139;
	bra.uni 	$L__BB0_138;

$L__BB0_139:
	mul.lo.s32 	%r971, %r222, %r216;
	add.s32 	%r972, %r971, %r223;
	mul.wide.s32 	%rd147, %r972, 4;
	add.s64 	%rd148, %rd15, %rd147;
	ld.global.f32 	%f128, [%rd148];
	add.s32 	%r973, %r971, %r224;
	mul.wide.s32 	%rd149, %r973, 4;
	add.s64 	%rd150, %rd15, %rd149;
	ld.global.f32 	%f129, [%rd150];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f128;
  cvt.rn.f16.f32 high, %f129;
  mov.b32 %r1665, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_140;

$L__BB0_138:
	mov.f32 	%f127, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f127;
  cvt.rn.f16.f32 high, %f127;
  mov.b32 %r1665, {low,high};}

	// end inline asm

$L__BB0_140:
	shl.b32 	%r974, %r1664, 5;
	add.s32 	%r975, %r974, %r34;
	shl.b32 	%r976, %r975, 2;
	mul.wide.s32 	%rd151, %r976, 4;
	add.s64 	%rd17, %rd16, %rd151;
	st.global.u32 	[%rd17], %r1665;
	@%p111 bra 	$L__BB0_142;
	bra.uni 	$L__BB0_141;

$L__BB0_142:
	add.s32 	%r979, %r222, 1;
	mul.lo.s32 	%r980, %r979, %r216;
	add.s32 	%r981, %r980, %r223;
	mul.wide.s32 	%rd152, %r981, 4;
	add.s64 	%rd153, %rd15, %rd152;
	ld.global.f32 	%f132, [%rd153];
	add.s32 	%r982, %r980, %r224;
	mul.wide.s32 	%rd154, %r982, 4;
	add.s64 	%rd155, %rd15, %rd154;
	ld.global.f32 	%f133, [%rd155];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f132;
  cvt.rn.f16.f32 high, %f133;
  mov.b32 %r1666, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_143;

$L__BB0_141:
	mov.f32 	%f131, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f131;
  cvt.rn.f16.f32 high, %f131;
  mov.b32 %r1666, {low,high};}

	// end inline asm

$L__BB0_143:
	add.s32 	%r983, %r218, %r1664;
	rem.s32 	%r984, %r983, %r650;
	shl.b32 	%r985, %r984, 5;
	add.s32 	%r986, %r985, %r34;
	shl.b32 	%r987, %r986, 2;
	or.b32  	%r988, %r987, 2;
	mul.wide.s32 	%rd156, %r988, 4;
	add.s64 	%rd18, %rd16, %rd156;
	st.global.u32 	[%rd18], %r1666;
	@%p111 bra 	$L__BB0_145;
	bra.uni 	$L__BB0_144;

$L__BB0_145:
	mul.lo.s32 	%r995, %r222, %r216;
	add.s32 	%r996, %r995, %r231;
	mul.wide.s32 	%rd157, %r996, 4;
	add.s64 	%rd158, %rd15, %rd157;
	ld.global.f32 	%f136, [%rd158];
	add.s32 	%r997, %r995, %r232;
	mul.wide.s32 	%rd159, %r997, 4;
	add.s64 	%rd160, %rd15, %rd159;
	ld.global.f32 	%f137, [%rd160];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f136;
  cvt.rn.f16.f32 high, %f137;
  mov.b32 %r1667, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_146;

$L__BB0_144:
	mov.f32 	%f135, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f135;
  cvt.rn.f16.f32 high, %f135;
  mov.b32 %r1667, {low,high};}

	// end inline asm

$L__BB0_146:
	st.global.u32 	[%rd17+4], %r1667;
	@%p111 bra 	$L__BB0_148;
	bra.uni 	$L__BB0_147;

$L__BB0_148:
	add.s32 	%r1000, %r222, 1;
	mul.lo.s32 	%r1001, %r1000, %r216;
	add.s32 	%r1002, %r1001, %r231;
	mul.wide.s32 	%rd161, %r1002, 4;
	add.s64 	%rd162, %rd15, %rd161;
	ld.global.f32 	%f140, [%rd162];
	add.s32 	%r1003, %r1001, %r232;
	mul.wide.s32 	%rd163, %r1003, 4;
	add.s64 	%rd164, %rd15, %rd163;
	ld.global.f32 	%f141, [%rd164];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f140;
  cvt.rn.f16.f32 high, %f141;
  mov.b32 %r1668, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_149;

$L__BB0_147:
	mov.f32 	%f139, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f139;
  cvt.rn.f16.f32 high, %f139;
  mov.b32 %r1668, {low,high};}

	// end inline asm

$L__BB0_149:
	st.global.u32 	[%rd18+4], %r1668;

$L__BB0_150:
	add.s32 	%r1664, %r1664, %r671;
	setp.lt.s32 	%p117, %r1664, %r650;
	@%p117 bra 	$L__BB0_136;

$L__BB0_280:
	add.s32 	%r374, %r645, -1;
	mad.lo.s32 	%r1144, %r646, 576, 128;
	mul.lo.s32 	%r375, %r1144, %r374;
	add.s32 	%r376, %r57, -64;
	add.s32 	%r1145, %r376, %r57;
	add.s32 	%r377, %r646, -1;
	mad.lo.s32 	%r1146, %r1145, %r377, %r375;
	mul.lo.s32 	%r1147, %r374, %r646;
	mul.lo.s32 	%r378, %r1147, 320;
	mul.lo.s32 	%r379, %r376, %r377;
	add.s32 	%r1148, %r379, %r378;
	add.s32 	%r380, %r1148, %r1146;
	setp.lt.s32 	%p174, %r380, 1;
	mov.f32 	%f269, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f269;
  cvt.rn.f16.f32 high, %f269;
  mov.b32 %r1703, {low,high};}

	// end inline asm
	@%p174 bra 	$L__BB0_283;

	mov.u32 	%r1704, 0;
	mov.u32 	%r1702, _ZN6kernel5shmemE;

$L__BB0_282:
	st.shared.u32 	[%r1702], %r1703;
	mov.f32 	%f277, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f277;
  cvt.rn.f16.f32 high, %f277;
  mov.b32 %r1151, {low,high};}

	// end inline asm
	st.shared.u32 	[%r1702+4], %r1151;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f277;
  cvt.rn.f16.f32 high, %f277;
  mov.b32 %r1152, {low,high};}

	// end inline asm
	st.shared.u32 	[%r1702+8], %r1152;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f277;
  cvt.rn.f16.f32 high, %f277;
  mov.b32 %r1153, {low,high};}

	// end inline asm
	st.shared.u32 	[%r1702+12], %r1153;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f277;
  cvt.rn.f16.f32 high, %f277;
  mov.b32 %r1703, {low,high};}

	// end inline asm
	add.s32 	%r1702, %r1702, 16;
	add.s32 	%r1704, %r1704, 4;
	setp.lt.s32 	%p175, %r1704, %r380;
	@%p175 bra 	$L__BB0_282;

$L__BB0_283:
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f269;
  cvt.rn.f16.f32 high, %f269;
  mov.b32 %r1816, {low,high};}

	// end inline asm
	mov.u32 	%r1157, 31;
	sub.s32 	%r1158, %r1157, %r34;
	setp.gt.s32 	%p177, %r33, %r34;
	selp.b32 	%r1159, %r34, %r1158, %p177;
	shl.b32 	%r1160, %r1159, 2;
	sub.s32 	%r389, %r1160, %r653;
	shl.b32 	%r1161, %r652, 2;
	mov.u32 	%r1162, 128;
	sub.s32 	%r390, %r1162, %r1161;
	rem.s32 	%r1163, %r389, %r390;
	add.s32 	%r1164, %r1163, %r390;
	rem.s32 	%r391, %r1164, %r390;
	add.s32 	%r1165, %r389, 2;
	rem.s32 	%r1166, %r1165, %r390;
	add.s32 	%r1167, %r1166, %r390;
	rem.s32 	%r392, %r1167, %r390;
	add.s32 	%r1178, %r389, 1;
	rem.s32 	%r1179, %r1178, %r390;
	add.s32 	%r1180, %r1179, %r390;
	rem.s32 	%r393, %r1180, %r390;
	add.s32 	%r1181, %r389, 3;
	rem.s32 	%r1182, %r1181, %r390;
	add.s32 	%r1183, %r1182, %r390;
	rem.s32 	%r394, %r1183, %r390;
	// begin inline asm
	mov.u32 %r1194, %envreg2;
	// end inline asm
	cvt.u64.u32 	%rd252, %r1194;
	// begin inline asm
	mov.u32 %r1195, %envreg1;
	// end inline asm
	cvt.u64.u32 	%rd253, %r1195;
	bfi.b64 	%rd28, %rd253, %rd252, 32, 32;
	setp.ne.s64 	%p185, %rd28, 0;
	@%p185 bra 	$L__BB0_301;

	// begin inline asm
	trap;
	// end inline asm

$L__BB0_301:
	add.s64 	%rd29, %rd28, 4;
	mov.u32 	%r1196, %nctaid.y;
	mov.u32 	%r1197, %nctaid.x;
	mul.lo.s32 	%r1198, %r1197, %r1196;
	mov.u32 	%r1199, %nctaid.z;
	mul.lo.s32 	%r395, %r1198, %r1199;
	neg.s32 	%r396, %r30;
	add.s32 	%r397, %r34, %r29;
	setp.ne.s32 	%p186, %r397, %r396;
	mov.u32 	%r1200, %ctaid.x;
	add.s32 	%r398, %r1200, %r31;
	neg.s32 	%r399, %r32;
	bar.sync 	0;
	@%p186 bra 	$L__BB0_305;

	setp.eq.s32 	%p187, %r398, %r399;
	mov.u32 	%r1203, -2147483647;
	sub.s32 	%r1204, %r1203, %r395;
	selp.b32 	%r1202, %r1204, 1, %p187;
	membar.gl;
	// begin inline asm
	atom.add.release.gpu.u32 %r1201,[%rd29],%r1202;
	// end inline asm

$L__BB0_303:
	ld.volatile.u32 	%r1205, [%rd29];
	xor.b32  	%r1206, %r1205, %r1201;
	setp.gt.s32 	%p188, %r1206, -1;
	@%p188 bra 	$L__BB0_303;

	// begin inline asm
	ld.acquire.gpu.u32 %r1207,[%rd29];
	// end inline asm

$L__BB0_305:
	bar.sync 	0;
	setp.lt.s32 	%p189, %r38, 1;
	@%p189 bra 	$L__BB0_580;

	setp.eq.s32 	%p190, %r398, %r399;
	not.b32 	%r1209, %r31;
	add.s32 	%r1210, %r647, %r1209;
	not.b32 	%r1211, %r32;
	add.s32 	%r1212, %r648, %r1211;
	not.b32 	%r1213, %r29;
	add.s32 	%r1214, %r645, %r1213;
	not.b32 	%r1215, %r30;
	add.s32 	%r1216, %r646, %r1215;
	mad.lo.s32 	%r1217, %r1210, %r645, %r1214;
	mad.lo.s32 	%r1218, %r1212, %r646, %r1216;
	add.s32 	%r1219, %r1217, %r1218;
	sub.s32 	%r1220, %r1217, %r1218;
	shl.b32 	%r1221, %r1219, 1;
	shl.b32 	%r1222, %r1220, 1;
	add.s32 	%r1223, %r1210, %r1212;
	mul.lo.s32 	%r401, %r1223, %r649;
	add.s32 	%r402, %r1222, %r651;
	add.s32 	%r1224, %r401, %r650;
	add.s32 	%r403, %r1224, %r1221;
	sub.s32 	%r404, %r37, %r650;
	sub.s32 	%r405, %r36, %r651;
	shl.b32 	%r1225, %r646, 8;
	or.b32  	%r1226, %r1225, 128;
	add.s32 	%r1227, %r29, -1;
	shl.b32 	%r1228, %r30, 8;
	mad.lo.s32 	%r1229, %r1226, %r1227, %r378;
	add.s32 	%r1230, %r1229, %r1228;
	shl.b32 	%r1231, %r1230, 2;
	mov.u32 	%r1232, _ZN6kernel5shmemE;
	add.s32 	%r1233, %r1232, %r1231;
	add.s32 	%r406, %r1233, -512;
	add.s32 	%r1234, %r30, -1;
	mul.lo.s32 	%r1235, %r1214, 384;
	mad.lo.s32 	%r1236, %r57, %r1234, %r1235;
	add.s32 	%r1237, %r1236, %r379;
	add.s32 	%r1238, %r1237, %r375;
	shl.b32 	%r1239, %r1238, 2;
	add.s32 	%r407, %r1232, %r1239;
	add.s32 	%r408, %r659, 2;
	add.s32 	%r409, %r660, -1;
	add.s32 	%r410, %r661, 2;
	add.s32 	%r411, %r662, -2;
	mad.lo.s32 	%r412, %r658, %r657, %r656;
	mul.lo.s32 	%r1240, %r646, %r29;
	add.s32 	%r1241, %r1240, %r30;
	mad.lo.s32 	%r1242, %r1241, 1280, %r1232;
	add.s32 	%r1243, %r1242, -256;
	add.s32 	%r413, %r34, 16;
	shl.b32 	%r1244, %r34, 4;
	add.s32 	%r1245, %r1244, 256;
	add.s32 	%r414, %r1243, %r1245;
	add.s32 	%r415, %r34, 96;
	shl.b32 	%r1246, %r34, 3;
	add.s32 	%r1247, %r1243, %r1246;
	mul.lo.s32 	%r1248, %r376, %r30;
	add.s32 	%r1249, %r375, %r1248;
	add.s32 	%r1250, %r1249, %r1235;
	shl.b32 	%r1251, %r1250, 2;
	add.s32 	%r1252, %r1232, %r1251;
	add.s32 	%r1253, %r1252, -256;
	add.s32 	%r417, %r1253, %r1245;
	sub.s32 	%r1254, %r1240, %r646;
	add.s32 	%r1255, %r1254, %r30;
	mad.lo.s32 	%r1256, %r1255, 1280, %r1232;
	add.s32 	%r418, %r1256, -256;
	add.s32 	%r419, %r1253, %r1246;
	sub.s32 	%r1257, %r1248, %r376;
	add.s32 	%r1258, %r375, %r1257;
	add.s32 	%r1259, %r1258, %r1235;
	shl.b32 	%r1260, %r1259, 2;
	add.s32 	%r1261, %r1232, %r1260;
	add.s32 	%r420, %r1261, -256;
	mad.lo.s32 	%r1262, %r1226, %r29, %r378;
	add.s32 	%r1263, %r1262, %r1228;
	shl.b32 	%r1264, %r1263, 2;
	add.s32 	%r1265, %r1232, %r1264;
	add.s32 	%r421, %r34, 32;
	add.s32 	%r422, %r1265, %r1244;
	mad.lo.s32 	%r1266, %r57, %r30, %r1235;
	add.s32 	%r1267, %r1266, %r379;
	add.s32 	%r1268, %r1267, %r375;
	shl.b32 	%r1269, %r1268, 2;
	add.s32 	%r1270, %r1232, %r1269;
	add.s32 	%r423, %r1270, %r1244;
	mov.u32 	%r1271, -2147483647;
	sub.s32 	%r1272, %r1271, %r395;
	selp.b32 	%r424, %r1272, 1, %p190;
	setp.lt.s32 	%p191, %r391, %r664;
	setp.ge.s32 	%p192, %r391, %r663;
	and.pred  	%p13, %p191, %p192;
	setp.lt.s32 	%p193, %r393, %r664;
	setp.ge.s32 	%p194, %r393, %r663;
	and.pred  	%p14, %p193, %p194;
	setp.lt.s32 	%p195, %r392, %r664;
	setp.ge.s32 	%p196, %r392, %r663;
	and.pred  	%p15, %p195, %p196;
	setp.lt.s32 	%p197, %r394, %r664;
	setp.ge.s32 	%p198, %r394, %r663;
	and.pred  	%p16, %p197, %p198;
	not.b32 	%r425, %r659;
	not.b32 	%r426, %r661;
	mov.u32 	%r1785, 0;
	mov.u32 	%r1817, %r1816;
	mov.u32 	%r1707, %r1816;
	mov.u32 	%r1708, %r1816;
	mov.u32 	%r1804, %r1816;
	mov.u32 	%r1786, %r1816;
	mov.u32 	%r1806, %r1816;
	mov.u32 	%r1796, %r1816;
	mov.u32 	%r1787, %r1816;
	mov.u32 	%r1807, %r1816;
	mov.u32 	%r1797, %r1816;
	mov.u32 	%r1818, %r1816;
	mov.u32 	%r1717, %r1816;
	mov.u32 	%r1718, %r1816;
	mov.u32 	%r1719, %r1816;
	mov.u32 	%r1720, %r1816;
	mov.u32 	%r1721, %r1816;
	mov.u32 	%r1722, %r1816;
	mov.u32 	%r1819, %r1816;
	mov.u32 	%r1805, %r1816;
	mov.u32 	%r1725, %r1816;
	mov.u32 	%r1726, %r1816;
	mov.u32 	%r1727, %r1816;
	mov.u32 	%r1728, %r1816;
	mov.u32 	%r1729, %r1816;
	mov.u32 	%r1730, %r1816;
	mov.u32 	%r1798, %r1816;
	mov.u32 	%r1799, %r1816;
	mov.u32 	%r1733, %r1816;
	mov.u32 	%r1820, %r1816;
	mov.u32 	%r1735, %r1816;
	mov.u32 	%r1821, %r1816;
	mov.u32 	%r1737, %r1816;
	mov.u32 	%r1801, %r1816;
	mov.u32 	%r1822, %r1816;
	mov.u32 	%r1823, %r1816;
	mov.u32 	%r1741, %r1816;
	mov.u32 	%r1803, %r1816;
	mov.u32 	%r1824, %r1816;
	mov.u32 	%r1825, %r1816;
	mov.u32 	%r1814, %r1816;
	mov.u32 	%r1815, %r1816;
	mov.u32 	%r1747, %r1816;
	mov.u32 	%r1748, %r1816;
	mov.u32 	%r1749, %r1816;
	mov.u32 	%r1750, %r1816;
	mov.u32 	%r1751, %r1816;
	mov.u32 	%r1752, %r1816;
	mov.u32 	%r1753, %r1816;
	mov.u32 	%r1754, %r1816;
	mov.u32 	%r1755, %r1816;
	mov.u32 	%r1756, %r1816;
	mov.u32 	%r1757, %r1816;
	mov.u32 	%r1758, %r1816;
	mov.u32 	%r1759, %r1816;
	mov.u32 	%r1760, %r1816;
	mov.u32 	%r1826, %r1816;
	mov.u32 	%r1827, %r1816;
	mov.u32 	%r1763, %r1816;
	mov.u32 	%r1764, %r1816;
	mov.u32 	%r1765, %r1816;
	mov.u32 	%r1766, %r1816;
	mov.u32 	%r1767, %r1816;
	mov.u32 	%r1768, %r1816;
	mov.u32 	%r1769, %r1816;
	mov.u32 	%r1770, %r1816;
	mov.u32 	%r1771, %r1816;
	mov.u32 	%r1772, %r1816;
	mov.u32 	%r1773, %r1816;
	mov.u32 	%r1774, %r1816;
	mov.u32 	%r1775, %r1816;
	mov.u32 	%r1776, %r1816;
	mov.u32 	%r1777, %r1816;
	mov.u32 	%r1778, %r1816;
	mov.u32 	%r1779, %r1816;
	mov.u32 	%r1780, %r1816;
	mov.u32 	%r1781, %r1816;
	mov.u32 	%r1782, %r1816;
	mov.u32 	%r1783, %r1816;
	mov.u32 	%r1784, %r1816;
	mov.u32 	%r1788, %r1717;
	mov.u32 	%r1789, %r1725;
	mov.u32 	%r1790, %r1727;
	mov.u32 	%r1792, %r1719;

$L__BB0_307:
	mov.u32 	%r498, %r1776;
	mov.u32 	%r497, %r1775;
	mov.u32 	%r494, %r1772;
	mov.u32 	%r493, %r1771;
	mov.u32 	%r490, %r1768;
	mov.u32 	%r487, %r1765;
	mov.u32 	%r1775, %r1760;
	mov.u32 	%r481, %r1759;
	mov.u32 	%r478, %r1756;
	mov.u32 	%r1771, %r1755;
	mov.u32 	%r476, %r1754;
	mov.u32 	%r473, %r1751;
	mov.u32 	%r472, %r1750;
	mov.u32 	%r470, %r1748;
	mov.u32 	%r466, %r1825;
	mov.u32 	%r462, %r1823;
	mov.u32 	%r1776, %r1821;
	mov.u32 	%r457, %r1735;
	mov.u32 	%r1772, %r1820;
	mov.u32 	%r455, %r1733;
	mov.u32 	%r1751, %r1799;
	mov.u32 	%r453, %r1798;
	mov.u32 	%r1768, %r1730;
	mov.u32 	%r451, %r1729;
	mov.u32 	%r1750, %r1728;
	mov.u32 	%r448, %r1726;
	mov.u32 	%r1733, %r1805;
	mov.u32 	%r1754, %r1819;
	mov.u32 	%r1765, %r1722;
	mov.u32 	%r443, %r1721;
	mov.u32 	%r1748, %r1720;
	mov.u32 	%r440, %r1718;
	mov.u32 	%r1755, %r1818;
	mov.u32 	%r1756, %r1797;
	mov.u32 	%r434, %r1796;
	mov.u32 	%r1735, %r1804;
	mov.u32 	%r1760, %r1817;
	mov.u32 	%r1759, %r1816;
	add.s32 	%r1273, %r403, %r1785;
	div.s32 	%r1274, %r1273, %r650;
	mul.lo.s32 	%r1275, %r1274, %r650;
	sub.s32 	%r508, %r1273, %r1275;
	mad.lo.s32 	%r1276, %r1274, %r37, %r402;
	add.s32 	%r1277, %r1785, %r401;
	mad.lo.s32 	%r1278, %r1274, %r404, %r1277;
	div.s32 	%r1279, %r1276, %r651;
	mul.lo.s32 	%r1280, %r1279, %r651;
	sub.s32 	%r509, %r1276, %r1280;
	mad.lo.s32 	%r510, %r1279, %r405, %r1278;
	setp.eq.s32 	%p199, %r29, 0;
	@%p199 bra 	$L__BB0_309;

	shl.b32 	%r1281, %r421, 4;
	add.s32 	%r1282, %r406, %r1281;
	ld.shared.v4.u32 	{%r1726, %r1718, %r1790, %r1792}, [%r1282];
	ld.shared.v4.u32 	{%r1789, %r1788, %r1787, %r1786}, [%r1282+512];

$L__BB0_309:
	setp.eq.s32 	%p200, %r30, 0;
	mov.u32 	%r1794, %r1707;
	mov.u32 	%r1795, %r1708;
	mov.u32 	%r1796, %r434;
	mov.u32 	%r1797, %r1756;
	mov.u32 	%r1798, %r453;
	mov.u32 	%r1799, %r1751;
	mov.u32 	%r1800, %r1737;
	mov.u32 	%r1802, %r1741;
	mov.u32 	%r1804, %r1735;
	mov.u32 	%r1805, %r1733;
	@%p200 bra 	$L__BB0_312;

	shl.b32 	%r1291, %r421, 4;
	add.s32 	%r527, %r407, %r1291;
	ld.shared.v4.u32 	{%r1803, %r1801, %r1795, %r1794}, [%r527];
	ld.shared.v4.u32 	{%r1802, %r1800, %r1796, %r1798}, [%r527+512];
	mov.u32 	%r1797, %r1756;
	mov.u32 	%r1799, %r1751;
	mov.u32 	%r1804, %r1735;
	mov.u32 	%r1805, %r1733;
	@%p199 bra 	$L__BB0_312;

	ld.shared.v4.u32 	{%r1804, %r1805, %r1797, %r1799}, [%r527+1024];

$L__BB0_312:
	mov.b64 	%rd454, _ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0;
	mov.u64 	%rd453, %rd454;
	bar.sync 	0;
	ld.param.u64 	%rd256, [%rd453+160];
	cvta.to.global.u64 	%rd30, %rd256;
	setp.ge.s32 	%p202, %r508, %r409;
	setp.lt.s32 	%p203, %r508, %r408;
	or.pred  	%p204, %p202, %p203;
	setp.lt.s32 	%p205, %r509, %r410;
	or.pred  	%p206, %p204, %p205;
	setp.ge.s32 	%p207, %r509, %r411;
	or.pred  	%p208, %p207, %p206;
	setp.lt.s32 	%p209, %r510, %r656;
	or.pred  	%p210, %p209, %p208;
	setp.ge.s32 	%p211, %r510, %r412;
	or.pred  	%p212, %p210, %p211;
	@%p212 bra 	$L__BB0_554;

	sub.s32 	%r552, %r510, %r656;
	rem.s32 	%r1304, %r552, %r657;
	setp.ne.s32 	%p213, %r1304, 0;
	@%p213 bra 	$L__BB0_554;

	div.s32 	%r1305, %r552, %r657;
	mul.lo.s32 	%r1306, %r1305, %r44;
	sub.s32 	%r553, %r508, %r659;
	sub.s32 	%r554, %r509, %r661;
	mul.lo.s32 	%r555, %r1306, 3;
	add.s32 	%r1307, %r553, %r555;
	add.s32 	%r1308, %r1307, -2;
	mul.lo.s32 	%r556, %r1308, %r45;
	add.s32 	%r1309, %r554, %r556;
	mul.lo.s32 	%r1310, %r1309, %r46;
	sub.s32 	%r557, %r1310, %r663;
	@%p17 bra 	$L__BB0_319;

	not.pred 	%p215, %p13;
	@%p215 bra 	$L__BB0_317;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1784;
  cvt.f32.f16 %f314, low;}

	// end inline asm
	add.s32 	%r1312, %r557, %r391;
	mul.wide.s32 	%rd257, %r1312, 4;
	add.s64 	%rd258, %rd30, %rd257;
	st.global.f32 	[%rd258], %f314;

$L__BB0_317:
	not.pred 	%p216, %p15;
	@%p216 bra 	$L__BB0_319;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1784;
  cvt.f32.f16 %f315, high;}

	// end inline asm
	add.s32 	%r1314, %r557, %r392;
	mul.wide.s32 	%rd259, %r1314, 4;
	add.s64 	%rd260, %rd30, %rd259;
	st.global.f32 	[%rd260], %f315;

$L__BB0_319:
	@%p17 bra 	$L__BB0_324;

	not.pred 	%p218, %p14;
	@%p218 bra 	$L__BB0_322;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1782;
  cvt.f32.f16 %f316, low;}

	// end inline asm
	add.s32 	%r1316, %r557, %r393;
	mul.wide.s32 	%rd261, %r1316, 4;
	add.s64 	%rd262, %rd30, %rd261;
	st.global.f32 	[%rd262], %f316;

$L__BB0_322:
	not.pred 	%p219, %p16;
	@%p219 bra 	$L__BB0_324;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1782;
  cvt.f32.f16 %f317, high;}

	// end inline asm
	add.s32 	%r1318, %r557, %r394;
	mul.wide.s32 	%rd263, %r1318, 4;
	add.s64 	%rd264, %rd30, %rd263;
	st.global.f32 	[%rd264], %f317;

$L__BB0_324:
	add.s32 	%r558, %r555, %r44;
	add.s32 	%r1319, %r553, %r558;
	add.s32 	%r1320, %r1319, -2;
	mad.lo.s32 	%r1321, %r1320, %r45, %r554;
	mul.lo.s32 	%r1322, %r1321, %r46;
	sub.s32 	%r559, %r1322, %r663;
	@%p17 bra 	$L__BB0_329;

	not.pred 	%p221, %p13;
	@%p221 bra 	$L__BB0_327;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1783;
  cvt.f32.f16 %f318, low;}

	// end inline asm
	add.s32 	%r1324, %r559, %r391;
	mul.wide.s32 	%rd265, %r1324, 4;
	add.s64 	%rd266, %rd30, %rd265;
	st.global.f32 	[%rd266], %f318;

$L__BB0_327:
	not.pred 	%p222, %p15;
	@%p222 bra 	$L__BB0_329;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1783;
  cvt.f32.f16 %f319, high;}

	// end inline asm
	add.s32 	%r1326, %r559, %r392;
	mul.wide.s32 	%rd267, %r1326, 4;
	add.s64 	%rd268, %rd30, %rd267;
	st.global.f32 	[%rd268], %f319;

$L__BB0_329:
	@%p17 bra 	$L__BB0_334;

	not.pred 	%p224, %p14;
	@%p224 bra 	$L__BB0_332;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1781;
  cvt.f32.f16 %f320, low;}

	// end inline asm
	add.s32 	%r1328, %r559, %r393;
	mul.wide.s32 	%rd269, %r1328, 4;
	add.s64 	%rd270, %rd30, %rd269;
	st.global.f32 	[%rd270], %f320;

$L__BB0_332:
	not.pred 	%p225, %p16;
	@%p225 bra 	$L__BB0_334;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1781;
  cvt.f32.f16 %f321, high;}

	// end inline asm
	add.s32 	%r1330, %r559, %r394;
	mul.wide.s32 	%rd271, %r1330, 4;
	add.s64 	%rd272, %rd30, %rd271;
	st.global.f32 	[%rd272], %f321;

$L__BB0_334:
	add.s32 	%r560, %r554, 1;
	add.s32 	%r1331, %r560, %r556;
	mul.lo.s32 	%r1332, %r1331, %r46;
	sub.s32 	%r561, %r1332, %r663;
	@%p17 bra 	$L__BB0_339;

	not.pred 	%p227, %p13;
	@%p227 bra 	$L__BB0_337;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1780;
  cvt.f32.f16 %f322, low;}

	// end inline asm
	add.s32 	%r1334, %r561, %r391;
	mul.wide.s32 	%rd273, %r1334, 4;
	add.s64 	%rd274, %rd30, %rd273;
	st.global.f32 	[%rd274], %f322;

$L__BB0_337:
	not.pred 	%p228, %p15;
	@%p228 bra 	$L__BB0_339;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1780;
  cvt.f32.f16 %f323, high;}

	// end inline asm
	add.s32 	%r1336, %r561, %r392;
	mul.wide.s32 	%rd275, %r1336, 4;
	add.s64 	%rd276, %rd30, %rd275;
	st.global.f32 	[%rd276], %f323;

$L__BB0_339:
	@%p17 bra 	$L__BB0_344;

	not.pred 	%p230, %p14;
	@%p230 bra 	$L__BB0_342;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1779;
  cvt.f32.f16 %f324, low;}

	// end inline asm
	add.s32 	%r1338, %r561, %r393;
	mul.wide.s32 	%rd277, %r1338, 4;
	add.s64 	%rd278, %rd30, %rd277;
	st.global.f32 	[%rd278], %f324;

$L__BB0_342:
	not.pred 	%p231, %p16;
	@%p231 bra 	$L__BB0_344;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1779;
  cvt.f32.f16 %f325, high;}

	// end inline asm
	add.s32 	%r1340, %r561, %r394;
	mul.wide.s32 	%rd279, %r1340, 4;
	add.s64 	%rd280, %rd30, %rd279;
	st.global.f32 	[%rd280], %f325;

$L__BB0_344:
	add.s32 	%r562, %r508, %r425;
	add.s32 	%r1341, %r562, %r555;
	mul.lo.s32 	%r563, %r1341, %r45;
	add.s32 	%r564, %r509, %r426;
	add.s32 	%r1342, %r564, %r563;
	mul.lo.s32 	%r1343, %r1342, %r46;
	sub.s32 	%r565, %r1343, %r663;
	@%p17 bra 	$L__BB0_349;

	not.pred 	%p233, %p13;
	@%p233 bra 	$L__BB0_347;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1827;
  cvt.f32.f16 %f326, low;}

	// end inline asm
	add.s32 	%r1345, %r565, %r391;
	mul.wide.s32 	%rd281, %r1345, 4;
	add.s64 	%rd282, %rd30, %rd281;
	st.global.f32 	[%rd282], %f326;

$L__BB0_347:
	not.pred 	%p234, %p15;
	@%p234 bra 	$L__BB0_349;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1827;
  cvt.f32.f16 %f327, high;}

	// end inline asm
	add.s32 	%r1347, %r565, %r392;
	mul.wide.s32 	%rd283, %r1347, 4;
	add.s64 	%rd284, %rd30, %rd283;
	st.global.f32 	[%rd284], %f327;

$L__BB0_349:
	@%p17 bra 	$L__BB0_354;

	not.pred 	%p236, %p14;
	@%p236 bra 	$L__BB0_352;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1826;
  cvt.f32.f16 %f328, low;}

	// end inline asm
	add.s32 	%r1349, %r565, %r393;
	mul.wide.s32 	%rd285, %r1349, 4;
	add.s64 	%rd286, %rd30, %rd285;
	st.global.f32 	[%rd286], %f328;

$L__BB0_352:
	not.pred 	%p237, %p16;
	@%p237 bra 	$L__BB0_354;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1826;
  cvt.f32.f16 %f329, high;}

	// end inline asm
	add.s32 	%r1351, %r565, %r394;
	mul.wide.s32 	%rd287, %r1351, 4;
	add.s64 	%rd288, %rd30, %rd287;
	st.global.f32 	[%rd288], %f329;

$L__BB0_354:
	add.s32 	%r1619, %r509, %r426;
	add.s32 	%r1618, %r555, %r44;
	add.s32 	%r1352, %r562, %r1618;
	mul.lo.s32 	%r566, %r1352, %r45;
	add.s32 	%r1353, %r1619, %r566;
	mul.lo.s32 	%r1354, %r1353, %r46;
	sub.s32 	%r567, %r1354, %r663;
	@%p17 bra 	$L__BB0_359;

	not.pred 	%p239, %p13;
	@%p239 bra 	$L__BB0_357;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1778;
  cvt.f32.f16 %f330, low;}

	// end inline asm
	add.s32 	%r1356, %r567, %r391;
	mul.wide.s32 	%rd289, %r1356, 4;
	add.s64 	%rd290, %rd30, %rd289;
	st.global.f32 	[%rd290], %f330;

$L__BB0_357:
	not.pred 	%p240, %p15;
	@%p240 bra 	$L__BB0_359;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1778;
  cvt.f32.f16 %f331, high;}

	// end inline asm
	add.s32 	%r1358, %r567, %r392;
	mul.wide.s32 	%rd291, %r1358, 4;
	add.s64 	%rd292, %rd30, %rd291;
	st.global.f32 	[%rd292], %f331;

$L__BB0_359:
	@%p17 bra 	$L__BB0_364;

	not.pred 	%p242, %p14;
	@%p242 bra 	$L__BB0_362;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1777;
  cvt.f32.f16 %f332, low;}

	// end inline asm
	add.s32 	%r1360, %r567, %r393;
	mul.wide.s32 	%rd293, %r1360, 4;
	add.s64 	%rd294, %rd30, %rd293;
	st.global.f32 	[%rd294], %f332;

$L__BB0_362:
	not.pred 	%p243, %p16;
	@%p243 bra 	$L__BB0_364;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1777;
  cvt.f32.f16 %f333, high;}

	// end inline asm
	add.s32 	%r1362, %r567, %r394;
	mul.wide.s32 	%rd295, %r1362, 4;
	add.s64 	%rd296, %rd30, %rd295;
	st.global.f32 	[%rd296], %f333;

$L__BB0_364:
	add.s32 	%r1363, %r554, %r563;
	mul.lo.s32 	%r1364, %r1363, %r46;
	sub.s32 	%r568, %r1364, %r663;
	@%p17 bra 	$L__BB0_369;

	not.pred 	%p245, %p13;
	@%p245 bra 	$L__BB0_367;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r498;
  cvt.f32.f16 %f334, low;}

	// end inline asm
	add.s32 	%r1366, %r568, %r391;
	mul.wide.s32 	%rd297, %r1366, 4;
	add.s64 	%rd298, %rd30, %rd297;
	st.global.f32 	[%rd298], %f334;

$L__BB0_367:
	not.pred 	%p246, %p15;
	@%p246 bra 	$L__BB0_369;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r498;
  cvt.f32.f16 %f335, high;}

	// end inline asm
	add.s32 	%r1368, %r568, %r392;
	mul.wide.s32 	%rd299, %r1368, 4;
	add.s64 	%rd300, %rd30, %rd299;
	st.global.f32 	[%rd300], %f335;

$L__BB0_369:
	@%p17 bra 	$L__BB0_374;

	not.pred 	%p248, %p14;
	@%p248 bra 	$L__BB0_372;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r494;
  cvt.f32.f16 %f336, low;}

	// end inline asm
	add.s32 	%r1370, %r568, %r393;
	mul.wide.s32 	%rd301, %r1370, 4;
	add.s64 	%rd302, %rd30, %rd301;
	st.global.f32 	[%rd302], %f336;

$L__BB0_372:
	not.pred 	%p249, %p16;
	@%p249 bra 	$L__BB0_374;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r494;
  cvt.f32.f16 %f337, high;}

	// end inline asm
	add.s32 	%r1372, %r568, %r394;
	mul.wide.s32 	%rd303, %r1372, 4;
	add.s64 	%rd304, %rd30, %rd303;
	st.global.f32 	[%rd304], %f337;

$L__BB0_374:
	add.s32 	%r1373, %r554, %r566;
	mul.lo.s32 	%r1374, %r1373, %r46;
	sub.s32 	%r569, %r1374, %r663;
	@%p17 bra 	$L__BB0_379;

	not.pred 	%p251, %p13;
	@%p251 bra 	$L__BB0_377;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r497;
  cvt.f32.f16 %f338, low;}

	// end inline asm
	add.s32 	%r1376, %r569, %r391;
	mul.wide.s32 	%rd305, %r1376, 4;
	add.s64 	%rd306, %rd30, %rd305;
	st.global.f32 	[%rd306], %f338;

$L__BB0_377:
	not.pred 	%p252, %p15;
	@%p252 bra 	$L__BB0_379;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r497;
  cvt.f32.f16 %f339, high;}

	// end inline asm
	add.s32 	%r1378, %r569, %r392;
	mul.wide.s32 	%rd307, %r1378, 4;
	add.s64 	%rd308, %rd30, %rd307;
	st.global.f32 	[%rd308], %f339;

$L__BB0_379:
	@%p17 bra 	$L__BB0_384;

	not.pred 	%p254, %p14;
	@%p254 bra 	$L__BB0_382;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r493;
  cvt.f32.f16 %f340, low;}

	// end inline asm
	add.s32 	%r1380, %r569, %r393;
	mul.wide.s32 	%rd309, %r1380, 4;
	add.s64 	%rd310, %rd30, %rd309;
	st.global.f32 	[%rd310], %f340;

$L__BB0_382:
	not.pred 	%p255, %p16;
	@%p255 bra 	$L__BB0_384;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r493;
  cvt.f32.f16 %f341, high;}

	// end inline asm
	add.s32 	%r1382, %r569, %r394;
	mul.wide.s32 	%rd311, %r1382, 4;
	add.s64 	%rd312, %rd30, %rd311;
	st.global.f32 	[%rd312], %f341;

$L__BB0_384:
	add.s32 	%r1620, %r555, %r44;
	add.s32 	%r570, %r1620, %r44;
	add.s32 	%r1383, %r562, %r570;
	mul.lo.s32 	%r571, %r1383, %r45;
	add.s32 	%r1384, %r554, %r571;
	mul.lo.s32 	%r1385, %r1384, %r46;
	sub.s32 	%r572, %r1385, %r663;
	@%p17 bra 	$L__BB0_389;

	not.pred 	%p257, %p13;
	@%p257 bra 	$L__BB0_387;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1774;
  cvt.f32.f16 %f342, low;}

	// end inline asm
	add.s32 	%r1387, %r572, %r391;
	mul.wide.s32 	%rd313, %r1387, 4;
	add.s64 	%rd314, %rd30, %rd313;
	st.global.f32 	[%rd314], %f342;

$L__BB0_387:
	not.pred 	%p258, %p15;
	@%p258 bra 	$L__BB0_389;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1774;
  cvt.f32.f16 %f343, high;}

	// end inline asm
	add.s32 	%r1389, %r572, %r392;
	mul.wide.s32 	%rd315, %r1389, 4;
	add.s64 	%rd316, %rd30, %rd315;
	st.global.f32 	[%rd316], %f343;

$L__BB0_389:
	@%p17 bra 	$L__BB0_394;

	not.pred 	%p260, %p14;
	@%p260 bra 	$L__BB0_392;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1770;
  cvt.f32.f16 %f344, low;}

	// end inline asm
	add.s32 	%r1391, %r572, %r393;
	mul.wide.s32 	%rd317, %r1391, 4;
	add.s64 	%rd318, %rd30, %rd317;
	st.global.f32 	[%rd318], %f344;

$L__BB0_392:
	not.pred 	%p261, %p16;
	@%p261 bra 	$L__BB0_394;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1770;
  cvt.f32.f16 %f345, high;}

	// end inline asm
	add.s32 	%r1393, %r572, %r394;
	mul.wide.s32 	%rd319, %r1393, 4;
	add.s64 	%rd320, %rd30, %rd319;
	st.global.f32 	[%rd320], %f345;

$L__BB0_394:
	add.s32 	%r1604, %r554, 1;
	add.s32 	%r1394, %r1604, %r563;
	mul.lo.s32 	%r1395, %r1394, %r46;
	sub.s32 	%r573, %r1395, %r663;
	@%p17 bra 	$L__BB0_399;

	not.pred 	%p263, %p13;
	@%p263 bra 	$L__BB0_397;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r490;
  cvt.f32.f16 %f346, low;}

	// end inline asm
	add.s32 	%r1397, %r573, %r391;
	mul.wide.s32 	%rd321, %r1397, 4;
	add.s64 	%rd322, %rd30, %rd321;
	st.global.f32 	[%rd322], %f346;

$L__BB0_397:
	not.pred 	%p264, %p15;
	@%p264 bra 	$L__BB0_399;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r490;
  cvt.f32.f16 %f347, high;}

	// end inline asm
	add.s32 	%r1399, %r573, %r392;
	mul.wide.s32 	%rd323, %r1399, 4;
	add.s64 	%rd324, %rd30, %rd323;
	st.global.f32 	[%rd324], %f347;

$L__BB0_399:
	@%p17 bra 	$L__BB0_404;

	not.pred 	%p266, %p14;
	@%p266 bra 	$L__BB0_402;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r487;
  cvt.f32.f16 %f348, low;}

	// end inline asm
	add.s32 	%r1401, %r573, %r393;
	mul.wide.s32 	%rd325, %r1401, 4;
	add.s64 	%rd326, %rd30, %rd325;
	st.global.f32 	[%rd326], %f348;

$L__BB0_402:
	not.pred 	%p267, %p16;
	@%p267 bra 	$L__BB0_404;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r487;
  cvt.f32.f16 %f349, high;}

	// end inline asm
	add.s32 	%r1403, %r573, %r394;
	mul.wide.s32 	%rd327, %r1403, 4;
	add.s64 	%rd328, %rd30, %rd327;
	st.global.f32 	[%rd328], %f349;

$L__BB0_404:
	add.s32 	%r1605, %r554, 1;
	add.s32 	%r1404, %r1605, %r566;
	mul.lo.s32 	%r1405, %r1404, %r46;
	sub.s32 	%r574, %r1405, %r663;
	@%p17 bra 	$L__BB0_409;

	not.pred 	%p269, %p13;
	@%p269 bra 	$L__BB0_407;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1767;
  cvt.f32.f16 %f350, low;}

	// end inline asm
	add.s32 	%r1407, %r574, %r391;
	mul.wide.s32 	%rd329, %r1407, 4;
	add.s64 	%rd330, %rd30, %rd329;
	st.global.f32 	[%rd330], %f350;

$L__BB0_407:
	not.pred 	%p270, %p15;
	@%p270 bra 	$L__BB0_409;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1767;
  cvt.f32.f16 %f351, high;}

	// end inline asm
	add.s32 	%r1409, %r574, %r392;
	mul.wide.s32 	%rd331, %r1409, 4;
	add.s64 	%rd332, %rd30, %rd331;
	st.global.f32 	[%rd332], %f351;

$L__BB0_409:
	@%p17 bra 	$L__BB0_414;

	not.pred 	%p272, %p14;
	@%p272 bra 	$L__BB0_412;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1764;
  cvt.f32.f16 %f352, low;}

	// end inline asm
	add.s32 	%r1411, %r574, %r393;
	mul.wide.s32 	%rd333, %r1411, 4;
	add.s64 	%rd334, %rd30, %rd333;
	st.global.f32 	[%rd334], %f352;

$L__BB0_412:
	not.pred 	%p273, %p16;
	@%p273 bra 	$L__BB0_414;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1764;
  cvt.f32.f16 %f353, high;}

	// end inline asm
	add.s32 	%r1413, %r574, %r394;
	mul.wide.s32 	%rd335, %r1413, 4;
	add.s64 	%rd336, %rd30, %rd335;
	st.global.f32 	[%rd336], %f353;

$L__BB0_414:
	add.s32 	%r1606, %r554, 1;
	add.s32 	%r1414, %r1606, %r571;
	mul.lo.s32 	%r1415, %r1414, %r46;
	sub.s32 	%r575, %r1415, %r663;
	@%p17 bra 	$L__BB0_419;

	not.pred 	%p275, %p13;
	@%p275 bra 	$L__BB0_417;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1766;
  cvt.f32.f16 %f354, low;}

	// end inline asm
	add.s32 	%r1417, %r575, %r391;
	mul.wide.s32 	%rd337, %r1417, 4;
	add.s64 	%rd338, %rd30, %rd337;
	st.global.f32 	[%rd338], %f354;

$L__BB0_417:
	not.pred 	%p276, %p15;
	@%p276 bra 	$L__BB0_419;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1766;
  cvt.f32.f16 %f355, high;}

	// end inline asm
	add.s32 	%r1419, %r575, %r392;
	mul.wide.s32 	%rd339, %r1419, 4;
	add.s64 	%rd340, %rd30, %rd339;
	st.global.f32 	[%rd340], %f355;

$L__BB0_419:
	@%p17 bra 	$L__BB0_424;

	not.pred 	%p278, %p14;
	@%p278 bra 	$L__BB0_422;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1763;
  cvt.f32.f16 %f356, low;}

	// end inline asm
	add.s32 	%r1421, %r575, %r393;
	mul.wide.s32 	%rd341, %r1421, 4;
	add.s64 	%rd342, %rd30, %rd341;
	st.global.f32 	[%rd342], %f356;

$L__BB0_422:
	not.pred 	%p279, %p16;
	@%p279 bra 	$L__BB0_424;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1763;
  cvt.f32.f16 %f357, high;}

	// end inline asm
	add.s32 	%r1423, %r575, %r394;
	mul.wide.s32 	%rd343, %r1423, 4;
	add.s64 	%rd344, %rd30, %rd343;
	st.global.f32 	[%rd344], %f357;

$L__BB0_424:
	add.s32 	%r576, %r554, 2;
	add.s32 	%r1424, %r576, %r563;
	mul.lo.s32 	%r1425, %r1424, %r46;
	sub.s32 	%r577, %r1425, %r663;
	@%p17 bra 	$L__BB0_429;

	not.pred 	%p281, %p13;
	@%p281 bra 	$L__BB0_427;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1815;
  cvt.f32.f16 %f358, low;}

	// end inline asm
	add.s32 	%r1427, %r577, %r391;
	mul.wide.s32 	%rd345, %r1427, 4;
	add.s64 	%rd346, %rd30, %rd345;
	st.global.f32 	[%rd346], %f358;

$L__BB0_427:
	not.pred 	%p282, %p15;
	@%p282 bra 	$L__BB0_429;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1815;
  cvt.f32.f16 %f359, high;}

	// end inline asm
	add.s32 	%r1429, %r577, %r392;
	mul.wide.s32 	%rd347, %r1429, 4;
	add.s64 	%rd348, %rd30, %rd347;
	st.global.f32 	[%rd348], %f359;

$L__BB0_429:
	@%p17 bra 	$L__BB0_434;

	not.pred 	%p284, %p14;
	@%p284 bra 	$L__BB0_432;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1814;
  cvt.f32.f16 %f360, low;}

	// end inline asm
	add.s32 	%r1431, %r577, %r393;
	mul.wide.s32 	%rd349, %r1431, 4;
	add.s64 	%rd350, %rd30, %rd349;
	st.global.f32 	[%rd350], %f360;

$L__BB0_432:
	not.pred 	%p285, %p16;
	@%p285 bra 	$L__BB0_434;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1814;
  cvt.f32.f16 %f361, high;}

	// end inline asm
	add.s32 	%r1433, %r577, %r394;
	mul.wide.s32 	%rd351, %r1433, 4;
	add.s64 	%rd352, %rd30, %rd351;
	st.global.f32 	[%rd352], %f361;

$L__BB0_434:
	add.s32 	%r1607, %r509, %r426;
	mul.lo.s32 	%r578, %r1319, %r45;
	add.s32 	%r1435, %r1607, %r578;
	mul.lo.s32 	%r1436, %r1435, %r46;
	sub.s32 	%r579, %r1436, %r663;
	@%p17 bra 	$L__BB0_439;

	not.pred 	%p287, %p13;
	@%p287 bra 	$L__BB0_437;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r466;
  cvt.f32.f16 %f362, low;}

	// end inline asm
	add.s32 	%r1438, %r579, %r391;
	mul.wide.s32 	%rd353, %r1438, 4;
	add.s64 	%rd354, %rd30, %rd353;
	st.global.f32 	[%rd354], %f362;

$L__BB0_437:
	not.pred 	%p288, %p15;
	@%p288 bra 	$L__BB0_439;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r466;
  cvt.f32.f16 %f363, high;}

	// end inline asm
	add.s32 	%r1440, %r579, %r392;
	mul.wide.s32 	%rd355, %r1440, 4;
	add.s64 	%rd356, %rd30, %rd355;
	st.global.f32 	[%rd356], %f363;

$L__BB0_439:
	@%p17 bra 	$L__BB0_444;

	not.pred 	%p290, %p14;
	@%p290 bra 	$L__BB0_442;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r462;
  cvt.f32.f16 %f364, low;}

	// end inline asm
	add.s32 	%r1442, %r579, %r393;
	mul.wide.s32 	%rd357, %r1442, 4;
	add.s64 	%rd358, %rd30, %rd357;
	st.global.f32 	[%rd358], %f364;

$L__BB0_442:
	not.pred 	%p291, %p16;
	@%p291 bra 	$L__BB0_444;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r462;
  cvt.f32.f16 %f365, high;}

	// end inline asm
	add.s32 	%r1444, %r579, %r394;
	mul.wide.s32 	%rd359, %r1444, 4;
	add.s64 	%rd360, %rd30, %rd359;
	st.global.f32 	[%rd360], %f365;

$L__BB0_444:
	add.s32 	%r1610, %r555, %r44;
	add.s32 	%r1609, %r1610, %r44;
	add.s32 	%r1608, %r509, %r426;
	add.s32 	%r1445, %r553, %r1609;
	mul.lo.s32 	%r580, %r1445, %r45;
	add.s32 	%r1446, %r1608, %r580;
	mul.lo.s32 	%r1447, %r1446, %r46;
	sub.s32 	%r581, %r1447, %r663;
	@%p17 bra 	$L__BB0_449;

	not.pred 	%p293, %p13;
	@%p293 bra 	$L__BB0_447;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1824;
  cvt.f32.f16 %f366, low;}

	// end inline asm
	add.s32 	%r1449, %r581, %r391;
	mul.wide.s32 	%rd361, %r1449, 4;
	add.s64 	%rd362, %rd30, %rd361;
	st.global.f32 	[%rd362], %f366;

$L__BB0_447:
	not.pred 	%p294, %p15;
	@%p294 bra 	$L__BB0_449;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1824;
  cvt.f32.f16 %f367, high;}

	// end inline asm
	add.s32 	%r1451, %r581, %r392;
	mul.wide.s32 	%rd363, %r1451, 4;
	add.s64 	%rd364, %rd30, %rd363;
	st.global.f32 	[%rd364], %f367;

$L__BB0_449:
	@%p17 bra 	$L__BB0_454;

	not.pred 	%p296, %p14;
	@%p296 bra 	$L__BB0_452;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1822;
  cvt.f32.f16 %f368, low;}

	// end inline asm
	add.s32 	%r1453, %r581, %r393;
	mul.wide.s32 	%rd365, %r1453, 4;
	add.s64 	%rd366, %rd30, %rd365;
	st.global.f32 	[%rd366], %f368;

$L__BB0_452:
	not.pred 	%p297, %p16;
	@%p297 bra 	$L__BB0_454;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1822;
  cvt.f32.f16 %f369, high;}

	// end inline asm
	add.s32 	%r1455, %r581, %r394;
	mul.wide.s32 	%rd367, %r1455, 4;
	add.s64 	%rd368, %rd30, %rd367;
	st.global.f32 	[%rd368], %f369;

$L__BB0_454:
	mul.lo.s32 	%r582, %r1307, %r45;
	add.s32 	%r1457, %r554, %r582;
	mul.lo.s32 	%r1458, %r1457, %r46;
	sub.s32 	%r583, %r1458, %r663;
	@%p17 bra 	$L__BB0_459;

	not.pred 	%p299, %p13;
	@%p299 bra 	$L__BB0_457;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1776;
  cvt.f32.f16 %f370, low;}

	// end inline asm
	add.s32 	%r1460, %r583, %r391;
	mul.wide.s32 	%rd369, %r1460, 4;
	add.s64 	%rd370, %rd30, %rd369;
	st.global.f32 	[%rd370], %f370;

$L__BB0_457:
	not.pred 	%p300, %p15;
	@%p300 bra 	$L__BB0_459;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1776;
  cvt.f32.f16 %f371, high;}

	// end inline asm
	add.s32 	%r1462, %r583, %r392;
	mul.wide.s32 	%rd371, %r1462, 4;
	add.s64 	%rd372, %rd30, %rd371;
	st.global.f32 	[%rd372], %f371;

$L__BB0_459:
	@%p17 bra 	$L__BB0_464;

	not.pred 	%p302, %p14;
	@%p302 bra 	$L__BB0_462;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1772;
  cvt.f32.f16 %f372, low;}

	// end inline asm
	add.s32 	%r1464, %r583, %r393;
	mul.wide.s32 	%rd373, %r1464, 4;
	add.s64 	%rd374, %rd30, %rd373;
	st.global.f32 	[%rd374], %f372;

$L__BB0_462:
	not.pred 	%p303, %p16;
	@%p303 bra 	$L__BB0_464;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1772;
  cvt.f32.f16 %f373, high;}

	// end inline asm
	add.s32 	%r1466, %r583, %r394;
	mul.wide.s32 	%rd375, %r1466, 4;
	add.s64 	%rd376, %rd30, %rd375;
	st.global.f32 	[%rd376], %f373;

$L__BB0_464:
	add.s32 	%r1467, %r554, %r578;
	mul.lo.s32 	%r1468, %r1467, %r46;
	sub.s32 	%r584, %r1468, %r663;
	@%p17 bra 	$L__BB0_469;

	not.pred 	%p305, %p13;
	@%p305 bra 	$L__BB0_467;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1775;
  cvt.f32.f16 %f374, low;}

	// end inline asm
	add.s32 	%r1470, %r584, %r391;
	mul.wide.s32 	%rd377, %r1470, 4;
	add.s64 	%rd378, %rd30, %rd377;
	st.global.f32 	[%rd378], %f374;

$L__BB0_467:
	not.pred 	%p306, %p15;
	@%p306 bra 	$L__BB0_469;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1775;
  cvt.f32.f16 %f375, high;}

	// end inline asm
	add.s32 	%r1472, %r584, %r392;
	mul.wide.s32 	%rd379, %r1472, 4;
	add.s64 	%rd380, %rd30, %rd379;
	st.global.f32 	[%rd380], %f375;

$L__BB0_469:
	@%p17 bra 	$L__BB0_474;

	not.pred 	%p308, %p14;
	@%p308 bra 	$L__BB0_472;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1771;
  cvt.f32.f16 %f376, low;}

	// end inline asm
	add.s32 	%r1474, %r584, %r393;
	mul.wide.s32 	%rd381, %r1474, 4;
	add.s64 	%rd382, %rd30, %rd381;
	st.global.f32 	[%rd382], %f376;

$L__BB0_472:
	not.pred 	%p309, %p16;
	@%p309 bra 	$L__BB0_474;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1771;
  cvt.f32.f16 %f377, high;}

	// end inline asm
	add.s32 	%r1476, %r584, %r394;
	mul.wide.s32 	%rd383, %r1476, 4;
	add.s64 	%rd384, %rd30, %rd383;
	st.global.f32 	[%rd384], %f377;

$L__BB0_474:
	add.s32 	%r1477, %r554, %r580;
	mul.lo.s32 	%r1478, %r1477, %r46;
	sub.s32 	%r585, %r1478, %r663;
	@%p17 bra 	$L__BB0_479;

	not.pred 	%p311, %p13;
	@%p311 bra 	$L__BB0_477;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r481;
  cvt.f32.f16 %f378, low;}

	// end inline asm
	add.s32 	%r1480, %r585, %r391;
	mul.wide.s32 	%rd385, %r1480, 4;
	add.s64 	%rd386, %rd30, %rd385;
	st.global.f32 	[%rd386], %f378;

$L__BB0_477:
	not.pred 	%p312, %p15;
	@%p312 bra 	$L__BB0_479;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r481;
  cvt.f32.f16 %f379, high;}

	// end inline asm
	add.s32 	%r1482, %r585, %r392;
	mul.wide.s32 	%rd387, %r1482, 4;
	add.s64 	%rd388, %rd30, %rd387;
	st.global.f32 	[%rd388], %f379;

$L__BB0_479:
	@%p17 bra 	$L__BB0_484;

	not.pred 	%p314, %p14;
	@%p314 bra 	$L__BB0_482;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r476;
  cvt.f32.f16 %f380, low;}

	// end inline asm
	add.s32 	%r1484, %r585, %r393;
	mul.wide.s32 	%rd389, %r1484, 4;
	add.s64 	%rd390, %rd30, %rd389;
	st.global.f32 	[%rd390], %f380;

$L__BB0_482:
	not.pred 	%p315, %p16;
	@%p315 bra 	$L__BB0_484;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r476;
  cvt.f32.f16 %f381, high;}

	// end inline asm
	add.s32 	%r1486, %r585, %r394;
	mul.wide.s32 	%rd391, %r1486, 4;
	add.s64 	%rd392, %rd30, %rd391;
	st.global.f32 	[%rd392], %f381;

$L__BB0_484:
	add.s32 	%r1611, %r554, 1;
	add.s32 	%r1487, %r1611, %r582;
	mul.lo.s32 	%r1488, %r1487, %r46;
	sub.s32 	%r586, %r1488, %r663;
	@%p17 bra 	$L__BB0_489;

	not.pred 	%p317, %p13;
	@%p317 bra 	$L__BB0_487;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1768;
  cvt.f32.f16 %f382, low;}

	// end inline asm
	add.s32 	%r1490, %r586, %r391;
	mul.wide.s32 	%rd393, %r1490, 4;
	add.s64 	%rd394, %rd30, %rd393;
	st.global.f32 	[%rd394], %f382;

$L__BB0_487:
	not.pred 	%p318, %p15;
	@%p318 bra 	$L__BB0_489;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1768;
  cvt.f32.f16 %f383, high;}

	// end inline asm
	add.s32 	%r1492, %r586, %r392;
	mul.wide.s32 	%rd395, %r1492, 4;
	add.s64 	%rd396, %rd30, %rd395;
	st.global.f32 	[%rd396], %f383;

$L__BB0_489:
	@%p17 bra 	$L__BB0_494;

	not.pred 	%p320, %p14;
	@%p320 bra 	$L__BB0_492;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1765;
  cvt.f32.f16 %f384, low;}

	// end inline asm
	add.s32 	%r1494, %r586, %r393;
	mul.wide.s32 	%rd397, %r1494, 4;
	add.s64 	%rd398, %rd30, %rd397;
	st.global.f32 	[%rd398], %f384;

$L__BB0_492:
	not.pred 	%p321, %p16;
	@%p321 bra 	$L__BB0_494;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1765;
  cvt.f32.f16 %f385, high;}

	// end inline asm
	add.s32 	%r1496, %r586, %r394;
	mul.wide.s32 	%rd399, %r1496, 4;
	add.s64 	%rd400, %rd30, %rd399;
	st.global.f32 	[%rd400], %f385;

$L__BB0_494:
	add.s32 	%r1612, %r554, 1;
	add.s32 	%r1497, %r1612, %r578;
	mul.lo.s32 	%r1498, %r1497, %r46;
	sub.s32 	%r587, %r1498, %r663;
	@%p17 bra 	$L__BB0_499;

	not.pred 	%p323, %p13;
	@%p323 bra 	$L__BB0_497;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r451;
  cvt.f32.f16 %f386, low;}

	// end inline asm
	add.s32 	%r1500, %r587, %r391;
	mul.wide.s32 	%rd401, %r1500, 4;
	add.s64 	%rd402, %rd30, %rd401;
	st.global.f32 	[%rd402], %f386;

$L__BB0_497:
	not.pred 	%p324, %p15;
	@%p324 bra 	$L__BB0_499;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r451;
  cvt.f32.f16 %f387, high;}

	// end inline asm
	add.s32 	%r1502, %r587, %r392;
	mul.wide.s32 	%rd403, %r1502, 4;
	add.s64 	%rd404, %rd30, %rd403;
	st.global.f32 	[%rd404], %f387;

$L__BB0_499:
	@%p17 bra 	$L__BB0_504;

	not.pred 	%p326, %p14;
	@%p326 bra 	$L__BB0_502;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r443;
  cvt.f32.f16 %f388, low;}

	// end inline asm
	add.s32 	%r1504, %r587, %r393;
	mul.wide.s32 	%rd405, %r1504, 4;
	add.s64 	%rd406, %rd30, %rd405;
	st.global.f32 	[%rd406], %f388;

$L__BB0_502:
	not.pred 	%p327, %p16;
	@%p327 bra 	$L__BB0_504;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r443;
  cvt.f32.f16 %f389, high;}

	// end inline asm
	add.s32 	%r1506, %r587, %r394;
	mul.wide.s32 	%rd407, %r1506, 4;
	add.s64 	%rd408, %rd30, %rd407;
	st.global.f32 	[%rd408], %f389;

$L__BB0_504:
	add.s32 	%r1613, %r554, 1;
	add.s32 	%r1507, %r1613, %r580;
	mul.lo.s32 	%r1508, %r1507, %r46;
	sub.s32 	%r588, %r1508, %r663;
	@%p17 bra 	$L__BB0_509;

	not.pred 	%p329, %p13;
	@%p329 bra 	$L__BB0_507;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r472;
  cvt.f32.f16 %f390, low;}

	// end inline asm
	add.s32 	%r1510, %r588, %r391;
	mul.wide.s32 	%rd409, %r1510, 4;
	add.s64 	%rd410, %rd30, %rd409;
	st.global.f32 	[%rd410], %f390;

$L__BB0_507:
	not.pred 	%p330, %p15;
	@%p330 bra 	$L__BB0_509;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r472;
  cvt.f32.f16 %f391, high;}

	// end inline asm
	add.s32 	%r1512, %r588, %r392;
	mul.wide.s32 	%rd411, %r1512, 4;
	add.s64 	%rd412, %rd30, %rd411;
	st.global.f32 	[%rd412], %f391;

$L__BB0_509:
	@%p17 bra 	$L__BB0_514;

	not.pred 	%p332, %p14;
	@%p332 bra 	$L__BB0_512;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r470;
  cvt.f32.f16 %f392, low;}

	// end inline asm
	add.s32 	%r1514, %r588, %r393;
	mul.wide.s32 	%rd413, %r1514, 4;
	add.s64 	%rd414, %rd30, %rd413;
	st.global.f32 	[%rd414], %f392;

$L__BB0_512:
	not.pred 	%p333, %p16;
	@%p333 bra 	$L__BB0_514;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r470;
  cvt.f32.f16 %f393, high;}

	// end inline asm
	add.s32 	%r1516, %r588, %r394;
	mul.wide.s32 	%rd415, %r1516, 4;
	add.s64 	%rd416, %rd30, %rd415;
	st.global.f32 	[%rd416], %f393;

$L__BB0_514:
	add.s32 	%r1621, %r554, 2;
	add.s32 	%r1517, %r1621, %r580;
	mul.lo.s32 	%r1518, %r1517, %r46;
	sub.s32 	%r589, %r1518, %r663;
	@%p17 bra 	$L__BB0_519;

	not.pred 	%p335, %p13;
	@%p335 bra 	$L__BB0_517;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1807;
  cvt.f32.f16 %f394, low;}

	// end inline asm
	add.s32 	%r1520, %r589, %r391;
	mul.wide.s32 	%rd417, %r1520, 4;
	add.s64 	%rd418, %rd30, %rd417;
	st.global.f32 	[%rd418], %f394;

$L__BB0_517:
	not.pred 	%p336, %p15;
	@%p336 bra 	$L__BB0_519;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1807;
  cvt.f32.f16 %f395, high;}

	// end inline asm
	add.s32 	%r1522, %r589, %r392;
	mul.wide.s32 	%rd419, %r1522, 4;
	add.s64 	%rd420, %rd30, %rd419;
	st.global.f32 	[%rd420], %f395;

$L__BB0_519:
	@%p17 bra 	$L__BB0_524;

	not.pred 	%p338, %p14;
	@%p338 bra 	$L__BB0_522;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1806;
  cvt.f32.f16 %f396, low;}

	// end inline asm
	add.s32 	%r1524, %r589, %r393;
	mul.wide.s32 	%rd421, %r1524, 4;
	add.s64 	%rd422, %rd30, %rd421;
	st.global.f32 	[%rd422], %f396;

$L__BB0_522:
	not.pred 	%p339, %p16;
	@%p339 bra 	$L__BB0_524;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1806;
  cvt.f32.f16 %f397, high;}

	// end inline asm
	add.s32 	%r1526, %r589, %r394;
	mul.wide.s32 	%rd423, %r1526, 4;
	add.s64 	%rd424, %rd30, %rd423;
	st.global.f32 	[%rd424], %f397;

$L__BB0_524:
	add.s32 	%r1614, %r555, %r44;
	add.s32 	%r590, %r553, 1;
	add.s32 	%r1527, %r590, %r1614;
	mad.lo.s32 	%r1528, %r1527, %r45, %r554;
	mul.lo.s32 	%r1529, %r1528, %r46;
	sub.s32 	%r591, %r1529, %r663;
	@%p17 bra 	$L__BB0_529;

	not.pred 	%p341, %p13;
	@%p341 bra 	$L__BB0_527;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1760;
  cvt.f32.f16 %f398, low;}

	// end inline asm
	add.s32 	%r1531, %r591, %r391;
	mul.wide.s32 	%rd425, %r1531, 4;
	add.s64 	%rd426, %rd30, %rd425;
	st.global.f32 	[%rd426], %f398;

$L__BB0_527:
	not.pred 	%p342, %p15;
	@%p342 bra 	$L__BB0_529;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1760;
  cvt.f32.f16 %f399, high;}

	// end inline asm
	add.s32 	%r1533, %r591, %r392;
	mul.wide.s32 	%rd427, %r1533, 4;
	add.s64 	%rd428, %rd30, %rd427;
	st.global.f32 	[%rd428], %f399;

$L__BB0_529:
	@%p17 bra 	$L__BB0_534;

	not.pred 	%p344, %p14;
	@%p344 bra 	$L__BB0_532;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1755;
  cvt.f32.f16 %f400, low;}

	// end inline asm
	add.s32 	%r1535, %r591, %r393;
	mul.wide.s32 	%rd429, %r1535, 4;
	add.s64 	%rd430, %rd30, %rd429;
	st.global.f32 	[%rd430], %f400;

$L__BB0_532:
	not.pred 	%p345, %p16;
	@%p345 bra 	$L__BB0_534;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1755;
  cvt.f32.f16 %f401, high;}

	// end inline asm
	add.s32 	%r1537, %r591, %r394;
	mul.wide.s32 	%rd431, %r1537, 4;
	add.s64 	%rd432, %rd30, %rd431;
	st.global.f32 	[%rd432], %f401;

$L__BB0_534:
	add.s32 	%r1616, %r555, %r44;
	add.s32 	%r1615, %r1616, %r44;
	add.s32 	%r1538, %r590, %r1615;
	mul.lo.s32 	%r592, %r1538, %r45;
	add.s32 	%r1539, %r554, %r592;
	mul.lo.s32 	%r1540, %r1539, %r46;
	sub.s32 	%r593, %r1540, %r663;
	@%p17 bra 	$L__BB0_539;

	not.pred 	%p347, %p13;
	@%p347 bra 	$L__BB0_537;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1759;
  cvt.f32.f16 %f402, low;}

	// end inline asm
	add.s32 	%r1542, %r593, %r391;
	mul.wide.s32 	%rd433, %r1542, 4;
	add.s64 	%rd434, %rd30, %rd433;
	st.global.f32 	[%rd434], %f402;

$L__BB0_537:
	not.pred 	%p348, %p15;
	@%p348 bra 	$L__BB0_539;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1759;
  cvt.f32.f16 %f403, high;}

	// end inline asm
	add.s32 	%r1544, %r593, %r392;
	mul.wide.s32 	%rd435, %r1544, 4;
	add.s64 	%rd436, %rd30, %rd435;
	st.global.f32 	[%rd436], %f403;

$L__BB0_539:
	@%p17 bra 	$L__BB0_544;

	not.pred 	%p350, %p14;
	@%p350 bra 	$L__BB0_542;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1754;
  cvt.f32.f16 %f404, low;}

	// end inline asm
	add.s32 	%r1546, %r593, %r393;
	mul.wide.s32 	%rd437, %r1546, 4;
	add.s64 	%rd438, %rd30, %rd437;
	st.global.f32 	[%rd438], %f404;

$L__BB0_542:
	not.pred 	%p351, %p16;
	@%p351 bra 	$L__BB0_544;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1754;
  cvt.f32.f16 %f405, high;}

	// end inline asm
	add.s32 	%r1548, %r593, %r394;
	mul.wide.s32 	%rd439, %r1548, 4;
	add.s64 	%rd440, %rd30, %rd439;
	st.global.f32 	[%rd440], %f405;

$L__BB0_544:
	add.s32 	%r1617, %r554, 1;
	add.s32 	%r1549, %r1617, %r592;
	mul.lo.s32 	%r1550, %r1549, %r46;
	sub.s32 	%r594, %r1550, %r663;
	@%p17 bra 	$L__BB0_549;

	not.pred 	%p353, %p13;
	@%p353 bra 	$L__BB0_547;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1750;
  cvt.f32.f16 %f406, low;}

	// end inline asm
	add.s32 	%r1552, %r594, %r391;
	mul.wide.s32 	%rd441, %r1552, 4;
	add.s64 	%rd442, %rd30, %rd441;
	st.global.f32 	[%rd442], %f406;

$L__BB0_547:
	not.pred 	%p354, %p15;
	@%p354 bra 	$L__BB0_549;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1750;
  cvt.f32.f16 %f407, high;}

	// end inline asm
	add.s32 	%r1554, %r594, %r392;
	mul.wide.s32 	%rd443, %r1554, 4;
	add.s64 	%rd444, %rd30, %rd443;
	st.global.f32 	[%rd444], %f407;

$L__BB0_549:
	@%p17 bra 	$L__BB0_554;

	not.pred 	%p356, %p14;
	@%p356 bra 	$L__BB0_552;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1748;
  cvt.f32.f16 %f408, low;}

	// end inline asm
	add.s32 	%r1556, %r594, %r393;
	mul.wide.s32 	%rd445, %r1556, 4;
	add.s64 	%rd446, %rd30, %rd445;
	st.global.f32 	[%rd446], %f408;

$L__BB0_552:
	not.pred 	%p357, %p16;
	@%p357 bra 	$L__BB0_554;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1748;
  cvt.f32.f16 %f409, high;}

	// end inline asm
	add.s32 	%r1558, %r594, %r394;
	mul.wide.s32 	%rd447, %r1558, 4;
	add.s64 	%rd448, %rd30, %rd447;
	st.global.f32 	[%rd448], %f409;

$L__BB0_554:
	setp.eq.s32 	%p358, %r29, %r374;
	@%p358 bra 	$L__BB0_556;

	st.shared.v4.u32 	[%r414], {%r1827, %r1826, %r1824, %r1822};
	st.shared.v4.u32 	[%r414+768], {%r1784, %r1782, %r1774, %r1770};
	add.s32 	%r1603, %r1247, 768;
	st.shared.v2.u32 	[%r1603], {%r1778, %r1777};

$L__BB0_556:
	setp.eq.s32 	%p359, %r30, %r377;
	@%p359 bra 	$L__BB0_560;

	st.shared.v4.u32 	[%r417], {%r1780, %r1779, %r1766, %r1763};
	st.shared.v4.u32 	[%r417+768], {%r1815, %r1814, %r1807, %r1806};
	@%p358 bra 	$L__BB0_559;

	st.shared.v2.u32 	[%r419], {%r1783, %r1781};

$L__BB0_559:
	st.shared.v2.u32 	[%r419+768], {%r1767, %r1764};

$L__BB0_560:
	bar.sync 	0;
	mov.u32 	%r1721, %r443;
	mov.u32 	%r1722, %r1765;
	mov.u32 	%r1729, %r451;
	mov.u32 	%r1730, %r1768;
	mov.u32 	%r1728, %r1750;
	mov.u32 	%r1720, %r1748;
	@%p199 bra 	$L__BB0_562;

	shl.b32 	%r1559, %r413, 4;
	add.s32 	%r1560, %r418, %r1559;
	ld.shared.v4.u32 	{%r1730, %r1722, %r1728, %r1720}, [%r1560];
	ld.shared.v4.u32 	{%r1815, %r1814, %r1807, %r1806}, [%r1560+768];
	shl.b32 	%r1569, %r415, 3;
	add.s32 	%r1570, %r418, %r1569;
	ld.shared.v2.u32 	{%r1729, %r1721}, [%r1570];

$L__BB0_562:
	setp.eq.s32 	%p372, %r30, 0;
	mov.u32 	%r1816, %r1759;
	mov.u32 	%r1817, %r1760;
	mov.u32 	%r1818, %r1755;
	mov.u32 	%r1819, %r1754;
	mov.u32 	%r1820, %r1772;
	mov.u32 	%r1821, %r1776;
	mov.u32 	%r1823, %r462;
	mov.u32 	%r1825, %r466;
	@%p372 bra 	$L__BB0_565;

	shl.b32 	%r1573, %r413, 4;
	add.s32 	%r1574, %r420, %r1573;
	ld.shared.v4.u32 	{%r1827, %r1826, %r1824, %r1822}, [%r1574];
	ld.shared.v4.u32 	{%r1821, %r1820, %r1816, %r1819}, [%r1574+768];
	shl.b32 	%r1583, %r415, 3;
	add.s32 	%r624, %r420, %r1583;
	ld.shared.v2.u32 	{%r1825, %r1823}, [%r624];
	mov.u32 	%r1817, %r1760;
	mov.u32 	%r1818, %r1755;
	@%p199 bra 	$L__BB0_565;

	ld.shared.v2.u32 	{%r1817, %r1818}, [%r624+768];

$L__BB0_565:
	bar.sync 	0;
	@%p358 bra 	$L__BB0_568;

	setp.ne.s32 	%p365, %r30, %r377;
	st.shared.v4.u32 	[%r422], {%r1803, %r1801, %r1708, %r1707};
	st.shared.v4.u32 	[%r422+512], {%r1741, %r1737, %r1757, %r1752};
	@%p365 bra 	$L__BB0_568;

	st.shared.v4.u32 	[%r422+1024], {%r1758, %r1753, %r1773, %r1769};

$L__BB0_568:
	@%p359 bra 	$L__BB0_570;

	st.shared.v4.u32 	[%r423], {%r1758, %r1753, %r1773, %r1769};
	st.shared.v4.u32 	[%r423+512], {%r1749, %r1747, %r1727, %r1719};
	st.shared.v4.u32 	[%r423+1024], {%r1725, %r1717, %r1787, %r1786};

$L__BB0_570:
	rem.s32 	%r1588, %r1785, %r649;
	setp.eq.s32 	%p367, %r1588, 0;
	@%p367 bra 	$L__BB0_572;

	bar.sync 	0;
	bra.uni 	$L__BB0_579;

$L__BB0_572:
	@%p185 bra 	$L__BB0_574;

	// begin inline asm
	trap;
	// end inline asm

$L__BB0_574:
	bar.sync 	0;
	@%p186 bra 	$L__BB0_578;

	membar.gl;
	// begin inline asm
	atom.add.release.gpu.u32 %r1589,[%rd29],%r424;
	// end inline asm

$L__BB0_576:
	ld.volatile.u32 	%r1591, [%rd29];
	xor.b32  	%r1592, %r1591, %r1589;
	setp.gt.s32 	%p370, %r1592, -1;
	@%p370 bra 	$L__BB0_576;

	// begin inline asm
	ld.acquire.gpu.u32 %r1593,[%rd29];
	// end inline asm

$L__BB0_578:
	bar.sync 	0;

$L__BB0_579:
	add.s32 	%r1785, %r1785, 1;
	setp.lt.s32 	%p371, %r1785, %r38;
	mov.u32 	%r1707, %r1794;
	mov.u32 	%r1708, %r1795;
	mov.u32 	%r1717, %r1788;
	mov.u32 	%r1719, %r1792;
	mov.u32 	%r1725, %r1789;
	mov.u32 	%r1727, %r1790;
	mov.u32 	%r1737, %r1800;
	mov.u32 	%r1741, %r1802;
	mov.u32 	%r1747, %r440;
	mov.u32 	%r1749, %r448;
	mov.u32 	%r1752, %r453;
	mov.u32 	%r1753, %r455;
	mov.u32 	%r1757, %r434;
	mov.u32 	%r1758, %r457;
	mov.u32 	%r1763, %r470;
	mov.u32 	%r1764, %r443;
	mov.u32 	%r1766, %r472;
	mov.u32 	%r1767, %r451;
	mov.u32 	%r1769, %r473;
	mov.u32 	%r1770, %r476;
	mov.u32 	%r1773, %r478;
	mov.u32 	%r1774, %r481;
	mov.u32 	%r1777, %r462;
	mov.u32 	%r1778, %r466;
	mov.u32 	%r1779, %r487;
	mov.u32 	%r1780, %r490;
	mov.u32 	%r1781, %r493;
	mov.u32 	%r1782, %r494;
	mov.u32 	%r1783, %r497;
	mov.u32 	%r1784, %r498;
	@%p371 bra 	$L__BB0_307;

$L__BB0_580:
	ret;

}

